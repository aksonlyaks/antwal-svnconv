<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7c97a50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7235418"/></to>
    </wire>
    <wire loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7c97a50"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0xb763bb68"/></to>
    </wire>
    <wire loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7c97a50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7668778"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7c97a50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7892198"/></to>
    </wire>
    <wire loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7c97a50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb76df608"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7c97a50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb76fb238"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7c97a50"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0xb7729188"/></to>
    </wire>
    <wire loc="34:TestFtspAppC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7c97a50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7b98178"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb7b98178"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7b04e68"/></to>
    </wire>
    <wire loc="35:TestFtspAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0xb7b99da0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0xb7c99800"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0xb7c99800"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0xb7ba1260"/></to>
    </wire>
    <wire loc="38:TestFtspAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0xb7497c60"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0xb7c99800"/></to>
    </wire>
    <wire loc="41:TestFtspAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0xb7495010"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb74892d0"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb74892d0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb7a77780"/></to>
    </wire>
    <wire loc="42:TestFtspAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb749ab80"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb74884c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:TestFtspAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb749aea0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb7489b20"/>
      <arguments>
        <value cst="I:137">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:TestFtspAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb7499588"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb7488dc0"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb7488dc0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb7a75250"/></to>
    </wire>
    <wire loc="45:TestFtspAppC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0xb7498998"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb74837e0"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb74837e0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb7a60108"/></to>
    </wire>
    <wire loc="49:TestFtspAppC.nc">
      <from><interface-ref name="GlobalTime" scoped="" ref="0xb749b2d0"/></from>
      <to><interface-ref name="GlobalTime" scoped="" ref="0xb7b90848"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="GlobalTime" scoped="" ref="0xb7b90848"/></from>
      <to><interface-ref name="GlobalTime" scoped="" ref="0xb7b02618"/></to>
    </wire>
    <wire loc="50:TestFtspAppC.nc">
      <from><interface-ref name="TimeSyncInfo" scoped="" ref="0xb749a320"/></from>
      <to><interface-ref name="TimeSyncInfo" scoped="" ref="0xb7b8a188"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="TimeSyncInfo" scoped="" ref="0xb7b8a188"/></from>
      <to><interface-ref name="TimeSyncInfo" scoped="" ref="0xb7b01668"/></to>
    </wire>
    <wire loc="51:TestFtspAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb7499c28"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb747c770"/></to>
    </wire>
    <wire loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb747c770"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb7478ae0"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0xb7ba15a8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0xb7d345c8"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0xb7d345c8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0xb7cc6400"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xb7ba1ad8"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xb75af7c8"/></to>
    </wire>
    <wire loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xb7ba1ad8"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xb763b6f8"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xb7ba1ad8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7c94010"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb7c94010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7c8cee8"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0xb7ba1e48"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0xb7c97a50"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xb7c8e890"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb78ca940"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0xb7c8e198"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0xb7bb1210"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0xb7c8b5e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7bb2ec0"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0xb7c8b278"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7464da8"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0xb7c8b278"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xb7c86340"/></to>
    </wire>
    <wire loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0xb7c86340"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0xb7c82010"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xb7c866a8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0xb7c8e890"/></to>
    </wire>
    <wire loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0xb7c7de30"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0xb7c75428"/></to>
    </wire>
    <wire loc="132:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0xb7c75428"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb7c2b170"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0xb7c81800"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0xb7c866a8"/></to>
    </wire>
    <wire loc="182:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0xb7c5ae78"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7bdc540"/></to>
    </wire>
    <wire loc="156:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0xb7c68010"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7c15968"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0xb7c15968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73ad8d8"/></to>
    </wire>
    <wire loc="167:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0xb7c62188"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7c0c330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0xb7c0c330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7377e50"/></to>
    </wire>
    <wire loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0xb7c5de78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7c04988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0xb7c04988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7343e50"/></to>
    </wire>
    <wire loc="134:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0xb7c747a8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb7c2a4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0xb7c2a4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb743f308"/></to>
    </wire>
    <wire loc="174:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0xb7c5fb00"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7c056b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0xb7c056b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73468d8"/></to>
    </wire>
    <wire loc="137:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0xb7c73af8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7c26228"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0xb7c26228"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7418da8"/></to>
    </wire>
    <wire loc="148:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0xb7c6db00"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7c1dba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0xb7c1dba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73df3b0"/></to>
    </wire>
    <wire loc="159:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0xb7c67cb8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb7c136b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0xb7c136b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73a8920"/></to>
    </wire>
    <wire loc="170:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0xb7c61e78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb7c09030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0xb7c09030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7370010"/></to>
    </wire>
    <wire loc="129:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0xb7c786c8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7c2e410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0xb7c2e410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7448ac8"/></to>
    </wire>
    <wire loc="140:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0xb7c71808"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7c25e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0xb7c25e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7411e50"/></to>
    </wire>
    <wire loc="151:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0xb7c6b808"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7c1b890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0xb7c1b890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73da490"/></to>
    </wire>
    <wire loc="162:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0xb7c659d8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7c11330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0xb7c11330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73a3ac8"/></to>
    </wire>
    <wire loc="179:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0xb7c5bb00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb7c026b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0xb7c026b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb733d010"/></to>
    </wire>
    <wire loc="185:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0xb7c58d98"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7bd4908"/></to>
    </wire>
    <wire loc="165:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0xb7c64d98"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7c0d010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0xb7c0d010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb737a8d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0xb7c2b170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7443c98"/></to>
    </wire>
    <wire loc="143:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0xb7c6f508"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb7c23ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0xb7c23ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb740b010"/></to>
    </wire>
    <wire loc="183:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0xb7c59aa0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7bd9c48"/></to>
    </wire>
    <wire loc="146:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0xb7c6e808"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7c1e870"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0xb7c1e870"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73e4da8"/></to>
    </wire>
    <wire loc="157:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0xb7c68980"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7c14330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0xb7c14330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73ab3b0"/></to>
    </wire>
    <wire loc="168:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0xb7c62af8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb7c0cc88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0xb7c0cc88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7375920"/></to>
    </wire>
    <wire loc="177:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0xb7c5c808"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb7c03330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0xb7c03330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7341920"/></to>
    </wire>
    <wire loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0xb7c73188"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7c2ae48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0xb7c2ae48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb743eda8"/></to>
    </wire>
    <wire loc="138:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0xb7c72508"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7c26b80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0xb7c26b80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb74148d8"/></to>
    </wire>
    <wire loc="149:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0xb7c6c508"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7c1c5d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0xb7c1c5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73dee50"/></to>
    </wire>
    <wire loc="160:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0xb7c666c8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7c12030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0xb7c12030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73a6490"/></to>
    </wire>
    <wire loc="171:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0xb7c60808"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7c09988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0xb7c09988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb736fac8"/></to>
    </wire>
    <wire loc="130:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0xb7c76068"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7c2ed68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0xb7c2ed68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7446650"/></to>
    </wire>
    <wire loc="141:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0xb7c70190"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb7c247d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0xb7c247d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb740f920"/></to>
    </wire>
    <wire loc="152:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0xb7c6a190"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb7c1a250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0xb7c1a250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73d8010"/></to>
    </wire>
    <wire loc="180:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0xb7c5a508"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7c01030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0xb7c01030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb733cac8"/></to>
    </wire>
    <wire loc="155:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0xb7c69508"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7c15010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0xb7c15010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73b1da8"/></to>
    </wire>
    <wire loc="166:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0xb7c637a8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7c0d968"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0xb7c0d968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73783b0"/></to>
    </wire>
    <wire loc="175:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0xb7c5d508"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7c04030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0xb7c04030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73443b0"/></to>
    </wire>
    <wire loc="186:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0xb7c577a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7bd0010"/></to>
    </wire>
    <wire loc="133:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0xb7c75d98"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7c2bac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0xb7c2bac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb74417f8"/></to>
    </wire>
    <wire loc="144:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0xb7c6fe78"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7c224f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0xb7c224f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb740aac8"/></to>
    </wire>
    <wire loc="173:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0xb7c5f190"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7c06ce0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0xb7c06ce0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb734ada8"/></to>
    </wire>
    <wire loc="147:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0xb7c6d190"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0xb7c1d250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0xb7c1d250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73e18d8"/></to>
    </wire>
    <wire loc="158:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0xb7c67348"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7c14c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0xb7c14c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73aae50"/></to>
    </wire>
    <wire loc="169:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0xb7c61508"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7c0a6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0xb7c0a6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7373490"/></to>
    </wire>
    <wire loc="178:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0xb7c5b190"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7c03c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0xb7c03c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb733f490"/></to>
    </wire>
    <wire loc="128:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0xb7c79c90"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7c2fa28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0xb7c2fa28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7449030"/></to>
    </wire>
    <wire loc="139:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0xb7c72e78"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0xb7c254f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0xb7c254f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb74123b0"/></to>
    </wire>
    <wire loc="150:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0xb7c6ce78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0xb7c1cf28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0xb7c1cf28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73dc920"/></to>
    </wire>
    <wire loc="161:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0xb7c65068"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0xb7c12988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0xb7c12988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73a4010"/></to>
    </wire>
    <wire loc="184:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0xb7c58428"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb7bd6308"/></to>
    </wire>
    <wire loc="164:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0xb7c64428"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0xb7c0e600"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0xb7c0e600"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb737dda8"/></to>
    </wire>
    <wire loc="153:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0xb7c6ab00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0xb7c1aba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0xb7c1aba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb73d7ac8"/></to>
    </wire>
    <wire loc="131:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0xb7c769d8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0xb7c2c790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0xb7c2c790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb74441b0"/></to>
    </wire>
    <wire loc="142:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0xb7c70b80"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0xb7c23170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0xb7c23170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0xb740d490"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0xb7d38268"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7cc6b98"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0xb7cc2568"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0xb7cb69b8"/></to>
    </wire>
    <wire loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0xb7cae3a0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0xb78248d8"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="TimeSyncMode" scoped="" ref="0xb7b8f040"/></from>
      <to><interface-ref name="TimeSyncMode" scoped="" ref="0xb7b01ec0"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="TimeSyncNotify" scoped="" ref="0xb7b842a0"/></from>
      <to><interface-ref name="TimeSyncNotify" scoped="" ref="0xb7b003c0"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0xb7b94ae0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0xb7b02190"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0xb7b007e8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0xb7b99da0"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0xb7b00b20"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb7ae3a78"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/TimeSyncMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb7ae3a78"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb7ac50d0"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb7aff290"/></from>
      <to><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0xb7acd678"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb7afd930"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb7ae22f0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="TimeSyncPacket" scoped="" ref="0xb7af9970"/></from>
      <to><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0xb7acceb8"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0xb7acceb8"/></from>
      <to><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0xb7abda00"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0xb7af8788"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb788f790"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0xb788f790"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb77af010"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb7afdcd8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb74b1e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0xb74b1e18"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb7697f00"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0xb7afbba8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0xb74aa8a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="sendMsg" scoped="" ref="0xb7af7010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7d38268"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="processMsg" scoped="" ref="0xb7af7448"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7d38268"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230TimeSyncMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb7ac50d0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb7a77780"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0xb7abda00"/></from>
      <to><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0xb7ab0730"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/TimeSyncMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb7ada520"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb7ac4228"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230TimeSyncMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb7ac4228"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb7ab2150"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/TimeSyncMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xb7ae28c8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xb7ac5ef8"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230TimeSyncMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xb7ac5ef8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xb7a76f18"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0xb7acd678"/></from>
      <to><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0xb7abe1e8"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0xb7abe1e8"/></from>
      <to><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0xb7ab59e0"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncAMSendRadio" scoped="" ref="0xb7ae0d40"/></from>
      <to><interface-ref name="TimeSyncAMSendRadio" scoped="" ref="0xb7ac38e0"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncAMSendRadio" scoped="" ref="0xb7ac38e0"/></from>
      <to><interface-ref name="TimeSyncAMSendRadio" scoped="" ref="0xb7ab7ee0"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/TimeSyncMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb7ae22f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb7ac5920"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230TimeSyncMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb7ac5920"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb7a76940"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncPacketRadio" scoped="" ref="0xb7acf570"/></from>
      <to><interface-ref name="TimeSyncPacketRadio" scoped="" ref="0xb7ac0160"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230TimeSyncMessageC.nc">
      <from><interface-ref name="TimeSyncPacketRadio" scoped="" ref="0xb7ac0160"/></from>
      <to><interface-ref name="TimeSyncPacketRadio" scoped="" ref="0xb7ab2968"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/TimeSyncMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb7ad1cb0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb7ac48d0"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230TimeSyncMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb7ac48d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb7a758f8"/></to>
    </wire>
    <wire loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb7a77780"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb775a790"/></to>
    </wire>
    <wire loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xb7a76f18"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xb7786178"/></to>
    </wire>
    <wire loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb7a76940"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb7788b88"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb7a758f8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb79e6320"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230TimeSyncMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb7aa6d48"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb7a76010"/></to>
    </wire>
    <wire loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb7a76010"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb7788258"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230TimeSyncMessageC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0xb7aae430"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb7a75250"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb7a75250"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb79e7ba0"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb7aa0308"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb7a63cc8"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb7a63cc8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb79dc248"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb7aad748"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb7a60108"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb7a60108"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb79db668"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230TimeSyncMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0xb7aa5ac0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb7943010"/></to>
    </wire>
    <wire loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0xb7943010"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb78a1860"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230TimeSyncMessageC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0xb7a9e390"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb7897d18"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0xb7897d18"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb788f790"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230TimeSyncMessageC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb7a99d68"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb79dff00"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb79dff00"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb79cec28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0xb775a790"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0xb7737e38"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0xb7a659b8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0xb79e29d8"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0xb79e29d8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0xb79d1718"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb79e7ba0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb79d5a98"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0xb7a6e750"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0xb79e3770"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0xb79e3770"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0xb79d24b0"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb7a678b8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb7744710"/></to>
    </wire>
    <wire>
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb7744710"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb77430b8"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb79dc248"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb79cb010"/></to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0xb7a724d0"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0xb79e54e8"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0xb79e54e8"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0xb79d4230"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7a6f690"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb79e6f10"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb79e6f10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb79d55b8"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb79e6320"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb7993ea0"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb79db668"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb79ca488"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="IEEE154Packet" scoped="" ref="0xb7a1b590"/></from>
      <to><interface-ref name="IEEE154Packet" scoped="" ref="0xb7994130"/></to>
    </wire>
    <wire loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <from><interface-ref name="IEEE154Packet" scoped="" ref="0xb7994130"/></from>
      <to><interface-ref name="IEEE154Packet" scoped="" ref="0xb798e200"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb7a333f8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb79e7ba0"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb7a15e88"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb77a9500"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb7785c28"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0xb7a32818"/></to>
    </wire>
    <wire loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb7785010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb7993ea0"/></to>
    </wire>
    <wire loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb7993ea0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb798c010"/></to>
    </wire>
    <wire loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb777f568"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb776eb20"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb776eb20"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb7769830"/></to>
    </wire>
    <wire loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb777fc38"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb776d238"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb776d238"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb7769ed0"/></to>
    </wire>
    <wire loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb776dbc8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb7702b28"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb7702b28"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb76fc700"/></to>
    </wire>
    <wire loc="106:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb776c348"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb77443f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0xb77443f8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb7735b08"/></to>
    </wire>
    <wire loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb7700268"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0xb7a46e90"/></to>
    </wire>
    <wire loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb77016b8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb775ad48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0xb775ad48"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb7735450"/></to>
    </wire>
    <wire loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0xb7737e38"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb77306c8"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb77306c8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0xb772ab60"/></to>
    </wire>
    <wire loc="113:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb7735450"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb7730c88"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0xb7730c88"/></from>
      <to><interface-ref name="Send" scoped="" ref="0xb77294a8"/></to>
    </wire>
    <wire loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb7735b08"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb772f3f8"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb772f3f8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb7729b48"/></to>
    </wire>
    <wire loc="121:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb772e720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb79e7ba0"/></to>
    </wire>
    <wire loc="122:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb772fe18"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb76c6a68"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb76c6a68"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb76bf010"/></to>
    </wire>
    <wire loc="123:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb772e320"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb7701240"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb7701240"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb76fcda8"/></to>
    </wire>
    <wire loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0xb772f770"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0xb76c5418"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0xb76c5418"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0xb76bf900"/></to>
    </wire>
    <wire loc="126:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb7701d90"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb76c5010"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb76c5010"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb76bf4f8"/></to>
    </wire>
    <wire loc="128:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb76c4b80"/></from>
      <to><interface-ref name="TrafficMonitorConfig" scoped="" ref="0xb7a3ee30"/></to>
    </wire>
    <wire loc="129:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb76c5b38"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb768c910"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb768c910"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb7686080"/></to>
    </wire>
    <wire loc="130:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb76c4070"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb768cdf8"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb768cdf8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb7686568"/></to>
    </wire>
    <wire loc="131:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0xb76c44a8"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0xb7642b58"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0xb7642b58"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0xb763be90"/></to>
    </wire>
    <wire loc="133:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb768bc08"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0xb7a39698"/></to>
    </wire>
    <wire loc="134:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb768b2b8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb76602f8"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb76602f8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb765bbe8"/></to>
    </wire>
    <wire loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb768b7d0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb76607e0"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb76607e0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb765a160"/></to>
    </wire>
    <wire loc="137:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb765f5c8"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0xb7a4a2c0"/></to>
    </wire>
    <wire loc="138:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb7660c60"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb764b7e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0xb764b7e8"/></from>
      <to><interface-ref name="SubRadioSend" scoped="" ref="0xb7648010"/></to>
    </wire>
    <wire loc="139:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb765f190"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb7641728"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb7641728"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb763aa38"/></to>
    </wire>
    <wire loc="141:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb7647e00"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0xb7a30078"/></to>
    </wire>
    <wire loc="142:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubRadioSend" scoped="" ref="0xb7648010"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb7641240"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb7641240"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb763a550"/></to>
    </wire>
    <wire loc="143:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0xb7648920"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0xb7641b30"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0xb7641b30"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0xb763ae40"/></to>
    </wire>
    <wire loc="145:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RF230Config" scoped="" ref="0xb7640010"/></from>
      <to><interface-ref name="RF230Config" scoped="" ref="0xb7a51380"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketSleepInterval" scoped="" ref="0xb79e1c68"/></from>
      <to><interface-ref name="PacketSleepInterval" scoped="" ref="0xb79cf9a8"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="IEEE154Packet" scoped="" ref="0xb79c8788"/></from>
      <to><interface-ref name="IEEE154Packet" scoped="" ref="0xb7994130"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0xb79c66a8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb7943010"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0xb79c5010"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb7897d18"/></to>
    </wire>
    <wire loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb798a010"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb794e690"/></to>
    </wire>
    <wire loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb78a01b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb7941d60"/></to>
    </wire>
    <wire loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0xb78a4de0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb793e088"/></to>
    </wire>
    <wire loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb793e088"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb78cde28"/></to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb78bfdf8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb792ea60"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb792ea60"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb7915ef8"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xb7926350"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xb7912cc8"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0xb7920888"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb7911930"/></to>
    </wire>
    <wire loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb791e340"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0xb790e530"/></to>
    </wire>
    <wire loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb791e340"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0xb790dcc8"/></to>
    </wire>
    <wire loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb791e340"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0xb790a490"/></to>
    </wire>
    <wire loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb78cad28"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb792ea60"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0xb7892830"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb77b7ad0"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb7892198"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7889278"/></to>
    </wire>
    <wire loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb7889278"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb787daa8"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0xb77b5b90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb77f2158"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb77dc130"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0xb7881990"/></to>
    </wire>
    <wire loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0xb7881990"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb787dee0"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0xb77af930"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0xb7887220"/></to>
    </wire>
    <wire loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0xb7887220"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb77f6730"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0xb77f6730"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0xb728f808"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0xb787daa8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7292b38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0xb787dee0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb7290010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0xb728e888"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb7835a40"/></to>
    </wire>
    <wire loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb7835a40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb782aa30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xb728b668"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xb7832890"/></to>
    </wire>
    <wire loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0xb7832890"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0xb78287b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0xb728a078"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb7831308"/></to>
    </wire>
    <wire loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0xb7831308"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb7826228"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0xb72897c8"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0xb782f9f0"/></to>
    </wire>
    <wire loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0xb782f9f0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0xb7824c38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0xb77db850"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7d38268"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0xb77b2a60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7d38268"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb77a9500"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb77a28b0"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb77a9e48"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb75cdc28"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb77a1128"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb77a9e48"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xb779aaf8"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xb7790cb8"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0xb776e560"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0xb776d5e0"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb7768868"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb776dbc8"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb7767010"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb776c348"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="IEEE154Packet" scoped="" ref="0xb7767338"/></from>
      <to><interface-ref name="IEEE154Packet" scoped="" ref="0xb7994130"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioCCA" scoped="" ref="0xb7738230"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0xb77379a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0xb7739230"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0xb77389b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0xb7738648"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb7735e40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb7739da0"/></from>
      <to><interface-ref name="SubRadioReceive" scoped="" ref="0xb7737588"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0xb77398c8"/></from>
      <to><interface-ref name="SubRadioSend" scoped="" ref="0xb7737090"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0xb7729ec0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0xb772f770"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xb7728588"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xb7790cb8"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0xb7728b50"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0xb772fe18"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb7727060"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0xb772e320"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0xb7727460"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0xb772e720"/></to>
    </wire>
    <wire loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0xb77224b8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7d38268"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0xb771d0d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7d38268"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="267:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0xb770db48"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7d38268"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0xb76f3870"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0xb76e3870"/></to>
    </wire>
    <wire loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0xb76e3870"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0xb76df930"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb76ef2e0"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb76c9d98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb76c9d98"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb76de288"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb76fb5d0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb77016b8"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb76fbca8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb7701d90"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0xb76fa160"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb7700268"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb76bea90"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb76c5b38"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb76bd010"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb76c4070"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0xb76bd448"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0xb76c44a8"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="TrafficMonitorConfig" scoped="" ref="0xb76be040"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb76c4b80"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0xb76bdba8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb76a0680"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0xb76a0680"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb7697f00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0xb76bba30"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0xb76e3870"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb76b9168"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb7691140"/></to>
    </wire>
    <wire>
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb7691140"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb76de288"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xb76b9728"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xb7790cb8"/></to>
    </wire>
    <wire loc="229:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <from><interface-ref name="startStopTimer" scoped="" ref="0xb76a4e38"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7d38268"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0xb7697f00"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0xb7892830"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb76869e8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb768b2b8"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0xb7681b98"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb768bc08"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb7686f00"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb768b7d0"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb7685320"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb77a9500"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0xb7681760"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xb766bdf8"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0xb766bdf8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0xb7667440"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0xb767f490"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7d38268"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0xb766b570"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0xb7668b90"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb7670c30"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7668778"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0xb765a5e0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb7660c60"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0xb765aaf8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb765f190"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="SoftwareAckConfig" scoped="" ref="0xb76595c8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb765f5c8"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb765af00"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb77a9500"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0xb7669648"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0xb7648db8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioCCA" scoped="" ref="0xb764a150"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0xb7648920"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0xb764b150"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0xb764a8d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0xb7669c00"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0xb7647410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb765c628"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb77430b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0xb764a568"/></from>
      <to><interface-ref name="Config" scoped="" ref="0xb7647e00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0xb764bcc0"/></from>
      <to><interface-ref name="SubRadioReceive" scoped="" ref="0xb7648508"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0xb765c310"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0xb7647ac8"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RF230Config" scoped="" ref="0xb7619c68"/></from>
      <to><interface-ref name="RF230Config" scoped="" ref="0xb7640010"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0xb7627620"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0xb79e54e8"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0xb7623890"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0xb79e3770"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0xb761fb00"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0xb79e29d8"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb761ee18"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb79dff00"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0xb761b128"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb79dc248"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0xb7619478"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0xb7943010"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0xb7618aa8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0xb77a9500"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0xb75cdc28"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb74f0850"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0xb76392f8"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0xb75d0d78"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0xb75d0d78"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0xb7c73af8"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0xb762f4a8"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0xb75cf7b0"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0xb75cf7b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb7596bd8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0xb762d420"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0xb75cfe50"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0xb75cfe50"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0xb759b178"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="HplRF230" scoped="" ref="0xb7629228"/></from>
      <to><interface-ref name="HplRF230" scoped="" ref="0xb75cb3b8"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="HplRF230" scoped="" ref="0xb75cb3b8"/></from>
      <to><interface-ref name="HplRF230" scoped="" ref="0xb75afaf0"/></to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0xb76298f8"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0xb75ce1c8"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0xb75ce1c8"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0xb7c6fe78"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0xb7638348"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0xb75ceb38"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0xb75ceb38"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0xb7c747a8"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0xb7624cd0"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0xb75cd508"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0xb75cd508"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0xb75af1d8"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0xb76184e0"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0xb7790cb8"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0xb7621b50"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0xb74c92a0"/></to>
    </wire>
    <wire loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0xb759b178"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0xb7593e38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0xb74f0850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0xb7216c78"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0xb75add70"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0xb7c65068"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0xb75ac7a8"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0xb7c67cb8"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0xb75ae360"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0xb7920888"/></to>
    </wire>
    <wire loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0xb7596520"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0xb75921a0"/></to>
    </wire>
    <wire loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb759cda0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb7593b18"/></to>
    </wire>
    <wire loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0xb7596bd8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb7592838"/></to>
    </wire>
    <wire loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0xb758fb20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb752e680"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0xb752e680"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0xb722b828"/></to>
    </wire>
    <wire loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb75817c0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb752d230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0xb752d230"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0xb722a418"/></to>
    </wire>
    <wire loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0xb7590010"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0xb7561d48"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0xb7561d48"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0xb755b538"/></to>
    </wire>
    <wire loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0xb7581bc8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0xb7cb2750"/></to>
    </wire>
    <wire loc="207:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0xb7576398"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7d38268"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0xb7553068"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0xb7cb2750"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0xb7554918"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0xb7c73af8"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0xb7558348"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0xb7c72508"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0xb7558cb8"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0xb7c72e78"/></to>
    </wire>
    <wire loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0xb75576c8"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0xb7c71808"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0xb752edc0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0xb722a010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0xb722a8d8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0xb752d6e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0xb722ad00"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0xb7235750"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0xb7229350"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0xb7d38268"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0xb7214458"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0xb792ea60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0xb7211320"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0xb791e340"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0xb7489b20"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0xb7a76010"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0xb7488aa0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0xb7a76f18"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0xb7486658"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0xb7a678b8"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0xb74884c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0xb7a76940"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7486168"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7a6f690"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0xb74874e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0xb7a758f8"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0xb74853b0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb7a63cc8"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0xb7464da8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0xb74787c0"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0xb74767e8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0xb74650a8"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0xb74650a8"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0xb7c76068"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0xb7475188"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0xb7465a38"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0xb7465a38"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0xb7c786c8"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0xb7475af8"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0xb7464448"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0xb7464448"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0xb7c79c90"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
        <short>                                                                     &#10;&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     &#10;&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;&#10;  downloading, copying, installing or using the software you agree to&#10;&#10;  this license.  If you do not agree to this license, do not download,&#10;&#10;  install, copy or use the software.&#10;&#10;&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;&#10;  All rights reserved.&#10;&#10;&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;&#10;  documentation for any purpose, without fee, and without written&#10;&#10;  agreement is hereby granted, provided that the above copyright&#10;&#10;  notice, the (updated) modification history and the author appear in&#10;&#10;  all copies of this source code.&#10;&#10;&#10;&#10;  Permission is also granted to distribute this software under the&#10;&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
        <short>                                                                     &#10;&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     &#10;&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;&#10;  downloading, copying, installing or using the software you agree to&#10;&#10;  this license.  If you do not agree to this license, do not download,&#10;&#10;  install, copy or use the software.&#10;&#10;&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;&#10;  All rights reserved.&#10;&#10;&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;&#10;  documentation for any purpose, without fee, and without written&#10;&#10;  agreement is hereby granted, provided that the above copyright&#10;&#10;  notice, the (updated) modification history and the author appear in&#10;&#10;  all copies of this source code.&#10;&#10;&#10;&#10;  Permission is also granted to distribute this software under the&#10;&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
        <short>                                                                     &#10;&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     &#10;&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;&#10;  downloading, copying, installing or using the software you agree to&#10;&#10;  this license.  If you do not agree to this license, do not download,&#10;&#10;  install, copy or use the software.&#10;&#10;&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;&#10;  All rights reserved.&#10;&#10;&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;&#10;  documentation for any purpose, without fee, and without written&#10;&#10;  agreement is hereby granted, provided that the above copyright&#10;&#10;  notice, the (updated) modification history and the author appear in&#10;&#10;  all copies of this source code.&#10;&#10;&#10;&#10;  Permission is also granted to distribute this software under the&#10;&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;&#10;</long>
      </documentation>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="MotePlatformC" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10;&#10; The porttion of a mica-family initialisation that is mote-specific.&#10;&#10; &#10;&#10;</short>
        <long>&#10;&#10; The porttion of a mica-family initialisation that is mote-specific.&#10;&#10; &#10;&#10; @author David Gay&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <documentation loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10;&#10; The micaZ portion of a mica-family initialisation that is&#10;&#10; mote-specific.&#10;&#10; &#10;&#10;</short>
        <long>&#10;&#10; The micaZ portion of a mica-family initialisation that is&#10;&#10; mote-specific.&#10;&#10; &#10;&#10; @author David Gay&#10;&#10;</long>
      </documentation>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10;&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortA):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10;&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortB):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10;&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10;&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortD):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10;&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortE):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10;&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortF):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10;&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="MeasureClockC" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10;&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10;&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10;&#10; interface so that other components can adjust their calibration as&#10;&#10; needed.&#10;&#10;&#10;&#10; @author David Gay&#10;&#10; @author Janos Sallai&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
        <short>&#10;&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10;&#10;&#10; @author Philip Levis&#10;&#10; @date   January 17 2005&#10;&#10;</long>
      </documentation>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="TinySchedulerC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
        <short>&#10;&#10; The TinyOS scheduler.</short>
        <long>&#10;&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10;&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10;&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10;&#10; FIFO, parameter-free). For details and information on how to&#10;&#10; replace the scheduler, refer to TEP 106.&#10;&#10;&#10;&#10; @author  Phil Levis&#10;&#10; @date    August 7 2005&#10;&#10; @see     TEP 106: Tasks and Schedulers&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="McuSleepC" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10;&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10;&#10; the Atmega128.</short>
        <long>&#10;&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10;&#10; the Atmega128. Power state calculation code copied from Rob&#10;&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10;&#10;&#10; &#60;pre>&#10;&#10;  $Id: McuSleepC.nc,v 1.3 2008/07/07 19:52:52 sallai Exp $&#10;&#10; &#60;/pre>&#10;&#10;&#10;&#10; @author Philip Levis&#10;&#10; @author Robert Szewczyk&#10;&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10; @date   October 30, 2007&#10;&#10;</long>
      </documentation>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="TimeSyncC" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncC.nc">
      <configuration/>
    </component>
    <component qname="TimeSyncC.TimeSyncP" loc="26(TimeSyncC.TimeSyncP):/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncP.nc">
      <instance number="0">
        <component-ref qname="TimeSyncP"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cebc58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7cebe28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimeSyncMessageC" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/TimeSyncMessageC.nc">
      <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/TimeSyncMessageC.nc">
        <short>&#10;&#10; The number of alarm ticks per one microsecond (0.9216)&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230TimeSyncMessageC" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230TimeSyncMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230TimeSyncMessageP" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230TimeSyncMessageP.nc">
      <module/>
    </component>
    <component qname="RF230ActiveMessageC" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageP" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <module/>
    </component>
    <component qname="RF230PacketC" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <configuration/>
    </component>
    <component qname="RF230PacketP" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <module/>
    </component>
    <component qname="IEEE154PacketC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <configuration/>
    </component>
    <component qname="IEEE154PacketP" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketP.nc">
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
      <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
        <short>&#10;&#10; Component that stores the node's active message address and group ID.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Component that stores the node's active message address and group ID.&#10;&#10;&#10;&#10; @author Philip Levis&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="LocalTimeMicroC" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10;&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10;&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10;&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10;&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10;&#10; command to figure out the exact frequency.&#10;&#10;&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10;&#10; HPL interface to Atmega1281 timer 1.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; HPL interface to Atmega1281 timer 1.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10;&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10;</long>
      </documentation>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="InitOneP.InitOne" loc="35(InitOneP.InitOne):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="35(InitOneP.InitOne):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10;&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10;&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10;&#10; used at boot time.&#10;&#10; @param timer_size Integer type of the timer&#10;&#10; @param prescaler Desired prescaler value&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="CounterOne16C.NCounter" loc="33(CounterOne16C.NCounter):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="33(CounterOne16C.NCounter):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10;&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10;&#10;</short>
        <long>&#10;&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10;&#10; @param frequency_tag The frequency tag for this Counter&#10;&#10; @param timer_size The width of this Counter&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cea410"/>
            <typename><typedef-ref name="TOne" ref="0xb7cc84a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="43(LocalTimeMicroC.TransformCounterC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="43(LocalTimeMicroC.TransformCounterC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10;&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10;&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10;&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;&#10;   Counter.&#10;&#10; @param to_size_type The type for the width of the transformed Counter.&#10;&#10; @param from_precision_tag A type indicating the precision of the original&#10;&#10;   Counter.&#10;&#10; @param from_size_type The type for the width of the original Counter.&#10;&#10; @param bit_shift_right Original time units will be 2 to the power &#10;&#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @param upper_count_type A type large enough to store the upper bits --&#10;&#10;   those needed above from_size_type after its shift right to fill&#10;&#10;   to_size_type.&#10;&#10;&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cea410"/>
            <typename><typedef-ref name="TMicro" ref="0xb7cea5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cea410"/>
            <typename><typedef-ref name="TMicro" ref="0xb7cea5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="35(LocalTimeMicroC.CounterToLocalTimeC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="35(LocalTimeMicroC.CounterToLocalTimeC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10;&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10;&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10;&#10; Counter being converted.&#10;&#10;&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cea410"/>
            <typename><typedef-ref name="TMicro" ref="0xb7cea5e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
      <documentation loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
        <short>&#10;&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10;&#10;&#10; @author David Gay&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10;&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10;&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10;&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10;&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10;&#10; timer. </short>
        <long>&#10;&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10;&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10;&#10; there is only one compare register for timer 0, which is used to&#10;&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10;&#10; AlarmMilliC or CounterMillIC component.&#10;&#10; &#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="47(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="47(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10;&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10;&#10; in asynchronous mode.</short>
        <long>&#10;&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10;&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10;&#10; component and the generic timer components runs into problems&#10;&#10; apparently related to letting timer 2 overflow.&#10;&#10; &#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10;&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10;&#10; and never lets timer 2 overflow.&#10;&#10;&#10;&#10; @author David Gay&#10;&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cebc58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7cebe28"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="47(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="47(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10;&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10;&#10; in asynchronous mode.</short>
        <long>&#10;&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10;&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10;&#10; component and the generic timer components runs into problems&#10;&#10; apparently related to letting timer 2 overflow.&#10;&#10;&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10;&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10;&#10; and never lets timer 2 overflow.&#10;&#10;&#10;&#10; @author David Gay&#10;&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xb787cd18"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10;&#10; Simple wrapper around the actual timer implementation that automatically&#10;&#10; wires it to McuSleepC for low-power calculations..&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Simple wrapper around the actual timer implementation that automatically&#10;&#10; wires it to McuSleepC for low-power calculations..&#10;&#10;&#10;&#10; @author Philip Levis&#10;&#10; @author David Gay&#10;&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10;&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10;&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10;&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10;&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10;&#10; interrupt) of that mode.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10;</long>
      </documentation>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="35(HilTimerMilliC.AlarmToTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10;&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10;&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Alarm and&#10;&#10; Timer being converted.&#10;&#10;&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cebc58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7cebe28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10;&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10;&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10;&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;&#10;   virtualized.&#10;&#10; @param max_timers Number of virtual timers to create.&#10;&#10;&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cebc58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7cebe28"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10;&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10;&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10;&#10; Counter being converted.&#10;&#10;&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cebc58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7cebe28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="RadioAlarmC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmP.nc">
      <module/>
    </component>
    <component qname="TaskletC" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TaskletC.nc">
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <module/>
    </component>
    <component qname="IEEE154NetworkLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <configuration/>
    </component>
    <component qname="IEEE154NetworkLayerP" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <module/>
    </component>
    <component qname="RF230ActiveMessageC.LowPowerListeningLayerC" loc="24(RF230ActiveMessageC.LowPowerListeningLayerC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DummyLayerP" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerP.nc">
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="UniqueLayerC.NeighborhoodFlagC" loc="24(UniqueLayerC.NeighborhoodFlagC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TrafficMonitorLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <configuration/>
    </component>
    <component qname="TrafficMonitorLayerP" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <module/>
    </component>
    <component qname="TrafficMonitorLayerC.UpdateTimerC" loc="36(TrafficMonitorLayerC.UpdateTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(TrafficMonitorLayerC.UpdateTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10;&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10;&#10; The virtualized millisecond timer abstraction. Instantiating this &#10;&#10; component gives an independent millisecond granularity timer.&#10;&#10;&#10;&#10; @author Philip Levis&#10;&#10; @date   January 16 2006&#10;&#10; @see    TEP 102: Timers&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
      <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
        <short>&#10;&#10; Components should never wire to this component.</short>
        <long>&#10;&#10; Components should never wire to this component. This is the&#10;&#10; underlying configuration of virtualized millisecond timers. &#10;&#10; It auto-wires wires the timer&#10;&#10; implementation (TimerC) to the boot sequence and exports the&#10;&#10; various Timer interfaces.&#10;&#10;&#10;&#10; @author Philip Levis&#10;&#10; @author Cory Sharp&#10;&#10; @date   May 16 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TrafficMonitorLayerC.NeighborhoodFlagC" loc="24(TrafficMonitorLayerC.NeighborhoodFlagC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlagC.nc">
      <instance number="1">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <module/>
    </component>
    <component qname="RandomC" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
        <short>&#10;&#10; The standard TinyOS random number generator.</short>
        <long>&#10;&#10; The standard TinyOS random number generator. If your system requires a &#10;&#10; specific random number generator, it should wire to that component&#10;&#10; directly. &#10;&#10;&#10;&#10; @author  Barbara Hohlt &#10;&#10; @author  Phil Levis &#10;&#10; @date    March 1 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;&#10;  Generator for pseudo-random numbers. </short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;&#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;&#10;  linear congruential generator, &#10;&#10;&#10;&#10;		S' = (A x S) mod (2^31 - 1) &#10;&#10;&#10;&#10;  for A = 16807.&#10;&#10;&#10;&#10;&#10;&#10; @author Barbara Hohlt &#10;&#10; @date   March 1 2005&#10;&#10;</long>
      </documentation>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="SoftwareAckLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <configuration/>
    </component>
    <component qname="SoftwareAckLayerP" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <module/>
    </component>
    <component qname="RF230ActiveMessageC.CsmaLayerC" loc="24(RF230ActiveMessageC.CsmaLayerC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230LayerC" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230LayerP" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10;&#10; The HAL of the SPI bus on the atm128.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; The HAL of the SPI bus on the atm128.&#10;&#10;&#10;&#10; &#60;pre>&#10;&#10;  $Id: Atm128SpiC.nc,v 1.5 2008/04/24 22:31:25 mmaroti Exp $&#10;&#10; &#60;/pre>&#10;&#10;&#10;&#10;&#10;&#10; @author Philip Levis&#10;&#10; @author Martin Turon&#10;&#10; @author Joe Polastre&#10;&#10; @date   September 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10;&#10; Primitives for accessing the SPI module on ATmega128&#10;&#10; microcontroller. </short>
        <long>&#10;&#10; Primitives for accessing the SPI module on ATmega128&#10;&#10; microcontroller.  This module assumes the bus has been reserved and&#10;&#10; checks that the bus owner is in fact the person using the bus.&#10;&#10; SpiPacket provides an asynchronous send interface where the&#10;&#10; transmit data length is equal to the receive data length, while&#10;&#10; SpiByte provides an interface for sending a single byte&#10;&#10; synchronously. SpiByte allows a component to send a few bytes&#10;&#10; in a simple fashion: if more than a handful need to be sent,&#10;&#10; SpiPacket should be used.&#10;&#10;&#10;&#10;&#10;&#10; &#60;pre>&#10;&#10;  $Id: Atm128SpiP.nc,v 1.9 2008/06/23 20:25:15 regehr Exp $&#10;&#10; &#60;/pre>&#10;&#10;&#10;&#10; @author Philip Levis&#10;&#10; @author Joe Polastre&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;&#10;&#10;</long>
      </documentation>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128SpiC" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10;&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10;&#10;&#10; &#60;pre>&#10;&#10; $Id: HplAtm128SpiC.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10;&#10; &#60;/pre>&#10;&#10;&#10;&#10; @author Philip Levis&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10;&#10; Implementation of the SPI bus abstraction for the atm128&#10;&#10; microcontroller.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Implementation of the SPI bus abstraction for the atm128&#10;&#10; microcontroller.&#10;&#10;&#10;&#10; @author Philip Levis&#10;&#10; @author Martin Turon&#10;&#10;</long>
      </documentation>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="73(Atm128SpiC.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="73(Atm128SpiC.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10;&#10; Please refer to TEP 108 for more information about this component and its&#10;&#10; intended use.&#60;br>&#60;br>&#10;&#10;&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10;&#10; Controller interfaces and uses the ResourceConfigure interface as&#10;&#10; described in TEP 108. </short>
        <long>&#10;&#10; Please refer to TEP 108 for more information about this component and its&#10;&#10; intended use.&#60;br>&#60;br>&#10;&#10;&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10;&#10; Controller interfaces and uses the ResourceConfigure interface as&#10;&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10;&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10;&#10; in requests for the resource.  Upon the release of the resource by one&#10;&#10; of these users, the array is checked and the next user (in FCFS order)&#10;&#10; that has a pending request will ge granted control of the resource.  If&#10;&#10; there are no pending requests, then the resource becomes idle and any&#10;&#10; user can put in a request and immediately receive access to the&#10;&#10; Resource.&#10;&#10;&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; &#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;&#10; @author Philip Levis&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="32(Atm128SpiC.Arbiter.Queue):/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10;&#10; Please refer to TEP 108 for more information about this component and its&#10;&#10; intended use.&#60;br>&#60;br>&#10;&#10;&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10;&#10; interfaces and uses the ResourceConfigure interface as&#10;&#10; described in TEP 108. </short>
        <long>&#10;&#10; Please refer to TEP 108 for more information about this component and its&#10;&#10; intended use.&#60;br>&#60;br>&#10;&#10;&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10;&#10; interfaces and uses the ResourceConfigure interface as&#10;&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; An queue is used to keep track of which users have put&#10;&#10; in requests for the resource.  Upon the release of the resource by one&#10;&#10; of these users, the queue is checked and the next user&#10;&#10; that has a pending request will ge granted control of the resource.  If&#10;&#10; there are no pending requests, then the resource becomes idle and any&#10;&#10; user can put in a request and immediately receive access to the&#10;&#10; Resource.&#10;&#10; &#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;&#10; @author Philip Levis&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="28(HplRF230C.AlarmC):/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10;&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10;&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10;&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10;&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10;&#10; command to figure out the exact frequency.&#10;&#10; &#60;p>&#10;&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10;&#10; a radically different frequency.&#10;&#10; &#60;p>&#10;&#10; Upto three of these alarms can be created (one per hardware compare&#10;&#10; register).&#10;&#10;&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="42(HplRF230C.AlarmC.NAlarm):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="42(HplRF230C.AlarmC.NAlarm):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10;&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10;&#10; compare registers.&#10;&#10;</short>
        <long>&#10;&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10;&#10; compare registers.&#10;&#10; @param frequency_tag The frequency tag for this Alarm&#10;&#10; @param timer_size The width of this Alarm&#10;&#10; @param mindt The shortest time in the future this Alarm can be set&#10;&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;&#10;   register one above the current counter value is unreliable. Has to be&#10;&#10;   large enough that the Alarm time does not pass between the computation&#10;&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;&#10;   assembly code...&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cea410"/>
            <typename><typedef-ref name="TOne" ref="0xb7cc84a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="BusyWaitMicroC" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="TimeSyncC.TimerC" loc="36(TimeSyncC.TimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(TimeSyncC.TimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10;&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10;&#10; The virtualized millisecond timer abstraction. Instantiating this &#10;&#10; component gives an independent millisecond granularity timer.&#10;&#10;&#10;&#10; @author Philip Levis&#10;&#10; @date   January 16 2006&#10;&#10; @see    TEP 102: Timers&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="NoLedsC" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoLedsC.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoLedsC.nc">
        <short>&#10;&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10;&#10; A null operation replacement for the LedsC component. As many&#10;&#10; components might concurrently signal information through LEDs,&#10;&#10; using LedsC and NoLedsC allows an application builder to select&#10;&#10; which components control the LEDs.&#10;&#10;&#10;&#10; @author Philip Levis&#10;&#10; @date   March 19, 2005&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestFtspC" loc="28:TestFtspC.nc">
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="LedsC" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
        <short>&#10;&#10;&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10;&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10;&#10;&#10; @author Phil Buonadonna&#10;&#10; @author David Gay&#10;&#10; @author Philip Levis&#10;&#10; @author Joe Polastre&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
        <short>&#10;&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10;&#10;&#10; @author Joe Polastre&#10;&#10; @author Philip Levis&#10;&#10;&#10;&#10; @date   March 21, 2005&#10;&#10;</long>
      </documentation>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
        <short>                                                                     &#10;&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     &#10;&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;&#10;  downloading, copying, installing or using the software you agree to&#10;&#10;  this license.  If you do not agree to this license, do not download,&#10;&#10;  install, copy or use the software.&#10;&#10;&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;&#10;  All rights reserved.&#10;&#10;&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;&#10;  documentation for any purpose, without fee, and without written&#10;&#10;  agreement is hereby granted, provided that the above copyright&#10;&#10;  notice, the (updated) modification history and the author appear in&#10;&#10;  all copies of this source code.&#10;&#10;&#10;&#10;  Permission is also granted to distribute this software under the&#10;&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10;&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xb7c51398" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xb7c51528" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xb7c516b8" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates).</short>
        <long>&#10;&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10;&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xb7c47088" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xb7c47228" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xb7c473c8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0xb7c47560" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10;&#10; Generic pin access for pins not mapped into I/O space (for which the&#10;&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0xb7bfbf20" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0xb7bfa0d8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0xb7bfa278" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0xb7bfa410" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="TimeSyncP" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0xb7b83d40" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncP.nc">
          <component-ref qname="TimeSyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb7b83d40"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10;&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10;&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10;&#10; used at boot time.&#10;&#10; @param timer_size Integer type of the timer&#10;&#10; @param prescaler Desired prescaler value&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0xb78c8a40" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb78c8a40"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0xb78c8bd0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="Atm128CounterC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10;&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10;&#10;</short>
        <long>&#10;&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10;&#10; @param frequency_tag The frequency tag for this Counter&#10;&#10; @param timer_size The width of this Counter&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0xb78be3e8" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0xb78be3e8"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0xb78be6a0" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb78be6a0"/></type-var>
        </typedef>
      </parameters>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="TransformCounterC" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc" abstract="">
      <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10;&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10;&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10;&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;&#10;   Counter.&#10;&#10; @param to_size_type The type for the width of the transformed Counter.&#10;&#10; @param from_precision_tag A type indicating the precision of the original&#10;&#10;   Counter.&#10;&#10; @param from_size_type The type for the width of the original Counter.&#10;&#10; @param bit_shift_right Original time units will be 2 to the power &#10;&#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @param upper_count_type A type large enough to store the upper bits --&#10;&#10;   those needed above from_size_type after its shift right to fill&#10;&#10;   to_size_type.&#10;&#10;&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0xb78b1ad8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0xb78b1ad8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0xb78b1d90" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0xb78b1d90"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0xb78af010" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0xb78af010"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0xb78af2c8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0xb78af2c8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0xb78af468" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0xb78af728" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0xb78af728"/></type-var>
        </typedef>
      </parameters>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc" abstract="">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10;&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10;&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10;&#10; Counter being converted.&#10;&#10;&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb789fde0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb789fde0"/></type-var>
        </typedef>
      </parameters>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10;&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10;&#10; in asynchronous mode.</short>
        <long>&#10;&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10;&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10;&#10; component and the generic timer components runs into problems&#10;&#10; apparently related to letting timer 2 overflow.&#10;&#10; &#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10;&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10;&#10; and never lets timer 2 overflow.&#10;&#10;&#10;&#10; @author David Gay&#10;&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0xb787cd18" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xb787cd18"/></type-var>
        </typedef>
        <constant name="divider" ref="0xb787ce98" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="">
      <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10;&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10;&#10; in asynchronous mode.</short>
        <long>&#10;&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10;&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10;&#10; component and the generic timer components runs into problems&#10;&#10; apparently related to letting timer 2 overflow.&#10;&#10;&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10;&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10;&#10; and never lets timer 2 overflow.&#10;&#10;&#10;&#10; @author David Gay&#10;&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0xb7874960" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xb7874960"/></type-var>
        </typedef>
        <constant name="divider" ref="0xb7874ae0" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="AlarmToTimerC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc" abstract="">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10;&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10;&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Alarm and&#10;&#10; Timer being converted.&#10;&#10;&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb77f16f8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb77f16f8"/></type-var>
        </typedef>
      </parameters>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc" abstract="">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10;&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10;&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10;&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;&#10;   virtualized.&#10;&#10; @param max_timers Number of virtual timers to create.&#10;&#10;&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb77d78e0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb77d78e0"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0xb77d7a68" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="DummyLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="NeighborhoodFlagC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimerMilliC" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10;&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10;&#10; The virtualized millisecond timer abstraction. Instantiating this &#10;&#10; component gives an independent millisecond granularity timer.&#10;&#10;&#10;&#10; @author Philip Levis&#10;&#10; @date   January 16 2006&#10;&#10; @see    TEP 102: Timers&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10;&#10; Please refer to TEP 108 for more information about this component and its&#10;&#10; intended use.&#60;br>&#60;br>&#10;&#10;&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10;&#10; Controller interfaces and uses the ResourceConfigure interface as&#10;&#10; described in TEP 108. </short>
        <long>&#10;&#10; Please refer to TEP 108 for more information about this component and its&#10;&#10; intended use.&#60;br>&#60;br>&#10;&#10;&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10;&#10; Controller interfaces and uses the ResourceConfigure interface as&#10;&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10;&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10;&#10; in requests for the resource.  Upon the release of the resource by one&#10;&#10; of these users, the array is checked and the next user (in FCFS order)&#10;&#10; that has a pending request will ge granted control of the resource.  If&#10;&#10; there are no pending requests, then the resource becomes idle and any&#10;&#10; user can put in a request and immediately receive access to the&#10;&#10; Resource.&#10;&#10;&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; &#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;&#10; @author Philip Levis&#10;&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0xb752c7e8" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc" abstract="">
      <parameters>
        <constant name="size" ref="0xb7521d90" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc" abstract="">
      <documentation loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10;&#10; Please refer to TEP 108 for more information about this component and its&#10;&#10; intended use.&#60;br>&#60;br>&#10;&#10;&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10;&#10; interfaces and uses the ResourceConfigure interface as&#10;&#10; described in TEP 108. </short>
        <long>&#10;&#10; Please refer to TEP 108 for more information about this component and its&#10;&#10; intended use.&#60;br>&#60;br>&#10;&#10;&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10;&#10; interfaces and uses the ResourceConfigure interface as&#10;&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; An queue is used to keep track of which users have put&#10;&#10; in requests for the resource.  Upon the release of the resource by one&#10;&#10; of these users, the queue is checked and the next user&#10;&#10; that has a pending request will ge granted control of the resource.  If&#10;&#10; there are no pending requests, then the resource becomes idle and any&#10;&#10; user can put in a request and immediately receive access to the&#10;&#10; Resource.&#10;&#10; &#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;&#10; @author Philip Levis&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10;&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10;&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10;&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10;&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10;&#10; command to figure out the exact frequency.&#10;&#10; &#60;p>&#10;&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10;&#10; a radically different frequency.&#10;&#10; &#60;p>&#10;&#10; Upto three of these alarms can be created (one per hardware compare&#10;&#10; register).&#10;&#10;&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmC" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="">
      <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10;&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10;&#10; compare registers.&#10;&#10;</short>
        <long>&#10;&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10;&#10; compare registers.&#10;&#10; @param frequency_tag The frequency tag for this Alarm&#10;&#10; @param timer_size The width of this Alarm&#10;&#10; @param mindt The shortest time in the future this Alarm can be set&#10;&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;&#10;   register one above the current counter value is unreliable. Has to be&#10;&#10;   large enough that the Alarm time does not pass between the computation&#10;&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;&#10;   assembly code...&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0xb74e8038" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0xb74e8038"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0xb74e82f0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb74e82f0"/></type-var>
        </typedef>
        <constant name="mindt" ref="0xb74e8480" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
      <attribute-value>
        <attribute-ref name="safe" ref="0xb7d3c060"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="safe" ref="0xb7d3c060"/></type-tag>
        </value-structured>
      </attribute-value>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0xb7c97a50" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xb7c97a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7c97c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0xb7c99800" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xb7c99800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xb7c999d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0xb7c8e890" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0xb7c8e890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7c8ea68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7c94010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7c94010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7c941e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0xb7c8e198" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0xb7c8e198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0xb7c8e370"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0xb7c8e450"/>
        <function-ref name="calibrateMicro" scoped="" ref="0xb7c8e530"/>
        <function-ref name="actualMicro" scoped="" ref="0xb7c8e610"/>
        <function-ref name="adcPrescaler" scoped="" ref="0xb7c8e6f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0xb7c8b278" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0xb7c8b278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7c8b450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7c8cee8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7c8cee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7c8b0e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0xb7c8b5e8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0xb7c8b5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7c8b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0xb7c866a8" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0xb7c866a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7c86880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xb7c86340" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb7c86340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7c86518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0xb7c81800" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0xb7c81800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7c819d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0xb7c7de30" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0xb7c7de30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c81050"/>
        <function-ref name="isInput" scoped="" ref="0xb7c81130"/>
        <function-ref name="toggle" scoped="" ref="0xb7c81210"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c812f0"/>
        <function-ref name="get" scoped="" ref="0xb7c813d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c814b0"/>
        <function-ref name="set" scoped="" ref="0xb7c81590"/>
        <function-ref name="clr" scoped="" ref="0xb7c81670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xb7c82010" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb7c82010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7c821e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0xb7c5ae78" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0xb7c5ae78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c59308"/>
        <function-ref name="isInput" scoped="" ref="0xb7c593e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7c594c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c595a8"/>
        <function-ref name="get" scoped="" ref="0xb7c59688"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c59768"/>
        <function-ref name="set" scoped="" ref="0xb7c59848"/>
        <function-ref name="clr" scoped="" ref="0xb7c59928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0xb7c68010" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0xb7c68010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c681e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7c682c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7c683a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c68488"/>
        <function-ref name="get" scoped="" ref="0xb7c68568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c68648"/>
        <function-ref name="set" scoped="" ref="0xb7c68728"/>
        <function-ref name="clr" scoped="" ref="0xb7c68808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0xb7c62188" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0xb7c62188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c62360"/>
        <function-ref name="isInput" scoped="" ref="0xb7c62440"/>
        <function-ref name="toggle" scoped="" ref="0xb7c62520"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c62600"/>
        <function-ref name="get" scoped="" ref="0xb7c626e0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c627c0"/>
        <function-ref name="set" scoped="" ref="0xb7c628a0"/>
        <function-ref name="clr" scoped="" ref="0xb7c62980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0xb7c5de78" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0xb7c5de78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c5c070"/>
        <function-ref name="isInput" scoped="" ref="0xb7c5c150"/>
        <function-ref name="toggle" scoped="" ref="0xb7c5c230"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c5c310"/>
        <function-ref name="get" scoped="" ref="0xb7c5c3f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c5c4d0"/>
        <function-ref name="set" scoped="" ref="0xb7c5c5b0"/>
        <function-ref name="clr" scoped="" ref="0xb7c5c690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0xb7c747a8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0xb7c747a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c74980"/>
        <function-ref name="isInput" scoped="" ref="0xb7c74a60"/>
        <function-ref name="toggle" scoped="" ref="0xb7c74b40"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c74c20"/>
        <function-ref name="get" scoped="" ref="0xb7c74d00"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c74de0"/>
        <function-ref name="set" scoped="" ref="0xb7c74ec0"/>
        <function-ref name="clr" scoped="" ref="0xb7c73010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0xb7c5fb00" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0xb7c5fb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c5fcd8"/>
        <function-ref name="isInput" scoped="" ref="0xb7c5fdb8"/>
        <function-ref name="toggle" scoped="" ref="0xb7c5fe98"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c5d010"/>
        <function-ref name="get" scoped="" ref="0xb7c5d0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c5d1d0"/>
        <function-ref name="set" scoped="" ref="0xb7c5d2b0"/>
        <function-ref name="clr" scoped="" ref="0xb7c5d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0xb7c73af8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0xb7c73af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c73cd0"/>
        <function-ref name="isInput" scoped="" ref="0xb7c73db0"/>
        <function-ref name="toggle" scoped="" ref="0xb7c73e90"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c72010"/>
        <function-ref name="get" scoped="" ref="0xb7c720f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c721d0"/>
        <function-ref name="set" scoped="" ref="0xb7c722b0"/>
        <function-ref name="clr" scoped="" ref="0xb7c72390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0xb7c6db00" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0xb7c6db00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c6dcd8"/>
        <function-ref name="isInput" scoped="" ref="0xb7c6ddb8"/>
        <function-ref name="toggle" scoped="" ref="0xb7c6de98"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c6c010"/>
        <function-ref name="get" scoped="" ref="0xb7c6c0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c6c1d0"/>
        <function-ref name="set" scoped="" ref="0xb7c6c2b0"/>
        <function-ref name="clr" scoped="" ref="0xb7c6c390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0xb7c67cb8" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0xb7c67cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c67e90"/>
        <function-ref name="isInput" scoped="" ref="0xb7c66010"/>
        <function-ref name="toggle" scoped="" ref="0xb7c660f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c661d0"/>
        <function-ref name="get" scoped="" ref="0xb7c662b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c66390"/>
        <function-ref name="set" scoped="" ref="0xb7c66470"/>
        <function-ref name="clr" scoped="" ref="0xb7c66550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0xb7c61e78" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0xb7c61e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c60070"/>
        <function-ref name="isInput" scoped="" ref="0xb7c60150"/>
        <function-ref name="toggle" scoped="" ref="0xb7c60230"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c60310"/>
        <function-ref name="get" scoped="" ref="0xb7c603f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c604d0"/>
        <function-ref name="set" scoped="" ref="0xb7c605b0"/>
        <function-ref name="clr" scoped="" ref="0xb7c60690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0xb7c786c8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0xb7c786c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c788a0"/>
        <function-ref name="isInput" scoped="" ref="0xb7c78980"/>
        <function-ref name="toggle" scoped="" ref="0xb7c78a60"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c78b40"/>
        <function-ref name="get" scoped="" ref="0xb7c78c20"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c78d00"/>
        <function-ref name="set" scoped="" ref="0xb7c78de0"/>
        <function-ref name="clr" scoped="" ref="0xb7c78ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0xb7c71808" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0xb7c71808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c719e0"/>
        <function-ref name="isInput" scoped="" ref="0xb7c71ac0"/>
        <function-ref name="toggle" scoped="" ref="0xb7c71ba0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c71c80"/>
        <function-ref name="get" scoped="" ref="0xb7c71d60"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c71e40"/>
        <function-ref name="set" scoped="" ref="0xb7c71f20"/>
        <function-ref name="clr" scoped="" ref="0xb7c70018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0xb7c6b808" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0xb7c6b808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c6b9e0"/>
        <function-ref name="isInput" scoped="" ref="0xb7c6bac0"/>
        <function-ref name="toggle" scoped="" ref="0xb7c6bba0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c6bc80"/>
        <function-ref name="get" scoped="" ref="0xb7c6bd60"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c6be40"/>
        <function-ref name="set" scoped="" ref="0xb7c6bf20"/>
        <function-ref name="clr" scoped="" ref="0xb7c6a018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0xb7c659d8" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0xb7c659d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c65bb0"/>
        <function-ref name="isInput" scoped="" ref="0xb7c65c90"/>
        <function-ref name="toggle" scoped="" ref="0xb7c65d70"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c65e50"/>
        <function-ref name="get" scoped="" ref="0xb7c64010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c640f0"/>
        <function-ref name="set" scoped="" ref="0xb7c641d0"/>
        <function-ref name="clr" scoped="" ref="0xb7c642b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0xb7c5bb00" loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0xb7c5bb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c5bcd8"/>
        <function-ref name="isInput" scoped="" ref="0xb7c5bdb8"/>
        <function-ref name="toggle" scoped="" ref="0xb7c5be98"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c5a010"/>
        <function-ref name="get" scoped="" ref="0xb7c5a0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c5a1d0"/>
        <function-ref name="set" scoped="" ref="0xb7c5a2b0"/>
        <function-ref name="clr" scoped="" ref="0xb7c5a390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0xb7c58d98" loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0xb7c58d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c57010"/>
        <function-ref name="isInput" scoped="" ref="0xb7c570f0"/>
        <function-ref name="toggle" scoped="" ref="0xb7c571d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c572b0"/>
        <function-ref name="get" scoped="" ref="0xb7c57390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c57470"/>
        <function-ref name="set" scoped="" ref="0xb7c57550"/>
        <function-ref name="clr" scoped="" ref="0xb7c57630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0xb7c64d98" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0xb7c64d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c63010"/>
        <function-ref name="isInput" scoped="" ref="0xb7c630f0"/>
        <function-ref name="toggle" scoped="" ref="0xb7c631d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c632b0"/>
        <function-ref name="get" scoped="" ref="0xb7c63390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c63470"/>
        <function-ref name="set" scoped="" ref="0xb7c63550"/>
        <function-ref name="clr" scoped="" ref="0xb7c63630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0xb7c75428" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0xb7c75428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c75600"/>
        <function-ref name="isInput" scoped="" ref="0xb7c756e0"/>
        <function-ref name="toggle" scoped="" ref="0xb7c757c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c758a0"/>
        <function-ref name="get" scoped="" ref="0xb7c75980"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c75a60"/>
        <function-ref name="set" scoped="" ref="0xb7c75b40"/>
        <function-ref name="clr" scoped="" ref="0xb7c75c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0xb7c6f508" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0xb7c6f508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c6f6e0"/>
        <function-ref name="isInput" scoped="" ref="0xb7c6f7c0"/>
        <function-ref name="toggle" scoped="" ref="0xb7c6f8a0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c6f980"/>
        <function-ref name="get" scoped="" ref="0xb7c6fa60"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c6fb40"/>
        <function-ref name="set" scoped="" ref="0xb7c6fc20"/>
        <function-ref name="clr" scoped="" ref="0xb7c6fd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0xb7c59aa0" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0xb7c59aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c59c78"/>
        <function-ref name="isInput" scoped="" ref="0xb7c59d58"/>
        <function-ref name="toggle" scoped="" ref="0xb7c59e38"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c59f18"/>
        <function-ref name="get" scoped="" ref="0xb7c58010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c580f0"/>
        <function-ref name="set" scoped="" ref="0xb7c581d0"/>
        <function-ref name="clr" scoped="" ref="0xb7c582b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0xb7c6e808" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0xb7c6e808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c6e9e0"/>
        <function-ref name="isInput" scoped="" ref="0xb7c6eac0"/>
        <function-ref name="toggle" scoped="" ref="0xb7c6eba0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c6ec80"/>
        <function-ref name="get" scoped="" ref="0xb7c6ed60"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c6ee40"/>
        <function-ref name="set" scoped="" ref="0xb7c6ef20"/>
        <function-ref name="clr" scoped="" ref="0xb7c6d018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0xb7c68980" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0xb7c68980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c68b58"/>
        <function-ref name="isInput" scoped="" ref="0xb7c68c38"/>
        <function-ref name="toggle" scoped="" ref="0xb7c68d18"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c68df8"/>
        <function-ref name="get" scoped="" ref="0xb7c68ed8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c67010"/>
        <function-ref name="set" scoped="" ref="0xb7c670f0"/>
        <function-ref name="clr" scoped="" ref="0xb7c671d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0xb7c62af8" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0xb7c62af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c62cd0"/>
        <function-ref name="isInput" scoped="" ref="0xb7c62db0"/>
        <function-ref name="toggle" scoped="" ref="0xb7c62e90"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c61010"/>
        <function-ref name="get" scoped="" ref="0xb7c610f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c611d0"/>
        <function-ref name="set" scoped="" ref="0xb7c612b0"/>
        <function-ref name="clr" scoped="" ref="0xb7c61390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0xb7c5c808" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0xb7c5c808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c5c9e0"/>
        <function-ref name="isInput" scoped="" ref="0xb7c5cac0"/>
        <function-ref name="toggle" scoped="" ref="0xb7c5cba0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c5cc80"/>
        <function-ref name="get" scoped="" ref="0xb7c5cd60"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c5ce40"/>
        <function-ref name="set" scoped="" ref="0xb7c5cf20"/>
        <function-ref name="clr" scoped="" ref="0xb7c5b018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0xb7c73188" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0xb7c73188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c73360"/>
        <function-ref name="isInput" scoped="" ref="0xb7c73440"/>
        <function-ref name="toggle" scoped="" ref="0xb7c73520"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c73600"/>
        <function-ref name="get" scoped="" ref="0xb7c736e0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c737c0"/>
        <function-ref name="set" scoped="" ref="0xb7c738a0"/>
        <function-ref name="clr" scoped="" ref="0xb7c73980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0xb7c72508" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0xb7c72508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c726e0"/>
        <function-ref name="isInput" scoped="" ref="0xb7c727c0"/>
        <function-ref name="toggle" scoped="" ref="0xb7c728a0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c72980"/>
        <function-ref name="get" scoped="" ref="0xb7c72a60"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c72b40"/>
        <function-ref name="set" scoped="" ref="0xb7c72c20"/>
        <function-ref name="clr" scoped="" ref="0xb7c72d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0xb7c6c508" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0xb7c6c508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c6c6e0"/>
        <function-ref name="isInput" scoped="" ref="0xb7c6c7c0"/>
        <function-ref name="toggle" scoped="" ref="0xb7c6c8a0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c6c980"/>
        <function-ref name="get" scoped="" ref="0xb7c6ca60"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c6cb40"/>
        <function-ref name="set" scoped="" ref="0xb7c6cc20"/>
        <function-ref name="clr" scoped="" ref="0xb7c6cd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0xb7c666c8" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0xb7c666c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c668a0"/>
        <function-ref name="isInput" scoped="" ref="0xb7c66980"/>
        <function-ref name="toggle" scoped="" ref="0xb7c66a60"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c66b40"/>
        <function-ref name="get" scoped="" ref="0xb7c66c20"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c66d00"/>
        <function-ref name="set" scoped="" ref="0xb7c66de0"/>
        <function-ref name="clr" scoped="" ref="0xb7c66ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0xb7c60808" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0xb7c60808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c609e0"/>
        <function-ref name="isInput" scoped="" ref="0xb7c60ac0"/>
        <function-ref name="toggle" scoped="" ref="0xb7c60ba0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c60c80"/>
        <function-ref name="get" scoped="" ref="0xb7c60d60"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c60e40"/>
        <function-ref name="set" scoped="" ref="0xb7c60f20"/>
        <function-ref name="clr" scoped="" ref="0xb7c5f018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0xb7c76068" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0xb7c76068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c76240"/>
        <function-ref name="isInput" scoped="" ref="0xb7c76320"/>
        <function-ref name="toggle" scoped="" ref="0xb7c76400"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c764e0"/>
        <function-ref name="get" scoped="" ref="0xb7c765c0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c766a0"/>
        <function-ref name="set" scoped="" ref="0xb7c76780"/>
        <function-ref name="clr" scoped="" ref="0xb7c76860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0xb7c70190" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0xb7c70190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c703e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7c704c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7c705a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c70688"/>
        <function-ref name="get" scoped="" ref="0xb7c70768"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c70848"/>
        <function-ref name="set" scoped="" ref="0xb7c70928"/>
        <function-ref name="clr" scoped="" ref="0xb7c70a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0xb7c6a190" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0xb7c6a190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c6a368"/>
        <function-ref name="isInput" scoped="" ref="0xb7c6a448"/>
        <function-ref name="toggle" scoped="" ref="0xb7c6a528"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c6a608"/>
        <function-ref name="get" scoped="" ref="0xb7c6a6e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c6a7c8"/>
        <function-ref name="set" scoped="" ref="0xb7c6a8a8"/>
        <function-ref name="clr" scoped="" ref="0xb7c6a988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0xb7c5a508" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0xb7c5a508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c5a6e0"/>
        <function-ref name="isInput" scoped="" ref="0xb7c5a7c0"/>
        <function-ref name="toggle" scoped="" ref="0xb7c5a8a0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c5a980"/>
        <function-ref name="get" scoped="" ref="0xb7c5aa60"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c5ab40"/>
        <function-ref name="set" scoped="" ref="0xb7c5ac20"/>
        <function-ref name="clr" scoped="" ref="0xb7c5ad00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0xb7c69508" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0xb7c69508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c697e0"/>
        <function-ref name="isInput" scoped="" ref="0xb7c698c0"/>
        <function-ref name="toggle" scoped="" ref="0xb7c699a0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c69a80"/>
        <function-ref name="get" scoped="" ref="0xb7c69b60"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c69c40"/>
        <function-ref name="set" scoped="" ref="0xb7c69d20"/>
        <function-ref name="clr" scoped="" ref="0xb7c69e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0xb7c637a8" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0xb7c637a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c63980"/>
        <function-ref name="isInput" scoped="" ref="0xb7c63a60"/>
        <function-ref name="toggle" scoped="" ref="0xb7c63b40"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c63c20"/>
        <function-ref name="get" scoped="" ref="0xb7c63d00"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c63de0"/>
        <function-ref name="set" scoped="" ref="0xb7c63ec0"/>
        <function-ref name="clr" scoped="" ref="0xb7c62010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0xb7c5d508" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0xb7c5d508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c5d6e0"/>
        <function-ref name="isInput" scoped="" ref="0xb7c5d7c0"/>
        <function-ref name="toggle" scoped="" ref="0xb7c5d8a0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c5d980"/>
        <function-ref name="get" scoped="" ref="0xb7c5da60"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c5db40"/>
        <function-ref name="set" scoped="" ref="0xb7c5dc20"/>
        <function-ref name="clr" scoped="" ref="0xb7c5dd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0xb7c577a8" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0xb7c577a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c57980"/>
        <function-ref name="isInput" scoped="" ref="0xb7c57a60"/>
        <function-ref name="toggle" scoped="" ref="0xb7c57b40"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c57c20"/>
        <function-ref name="get" scoped="" ref="0xb7c57d00"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c57de0"/>
        <function-ref name="set" scoped="" ref="0xb7c57ec0"/>
        <function-ref name="clr" scoped="" ref="0xb7c56010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0xb7c75d98" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0xb7c75d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c74010"/>
        <function-ref name="isInput" scoped="" ref="0xb7c740f0"/>
        <function-ref name="toggle" scoped="" ref="0xb7c741d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c742b0"/>
        <function-ref name="get" scoped="" ref="0xb7c74390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c74470"/>
        <function-ref name="set" scoped="" ref="0xb7c74550"/>
        <function-ref name="clr" scoped="" ref="0xb7c74630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0xb7c6fe78" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0xb7c6fe78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c6e070"/>
        <function-ref name="isInput" scoped="" ref="0xb7c6e150"/>
        <function-ref name="toggle" scoped="" ref="0xb7c6e230"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c6e310"/>
        <function-ref name="get" scoped="" ref="0xb7c6e3f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c6e4d0"/>
        <function-ref name="set" scoped="" ref="0xb7c6e5b0"/>
        <function-ref name="clr" scoped="" ref="0xb7c6e690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0xb7c5f190" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0xb7c5f190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c5f368"/>
        <function-ref name="isInput" scoped="" ref="0xb7c5f448"/>
        <function-ref name="toggle" scoped="" ref="0xb7c5f528"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c5f608"/>
        <function-ref name="get" scoped="" ref="0xb7c5f6e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c5f7c8"/>
        <function-ref name="set" scoped="" ref="0xb7c5f8a8"/>
        <function-ref name="clr" scoped="" ref="0xb7c5f988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0xb7c6d190" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0xb7c6d190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c6d368"/>
        <function-ref name="isInput" scoped="" ref="0xb7c6d448"/>
        <function-ref name="toggle" scoped="" ref="0xb7c6d528"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c6d608"/>
        <function-ref name="get" scoped="" ref="0xb7c6d6e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c6d7c8"/>
        <function-ref name="set" scoped="" ref="0xb7c6d8a8"/>
        <function-ref name="clr" scoped="" ref="0xb7c6d988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0xb7c67348" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0xb7c67348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c67520"/>
        <function-ref name="isInput" scoped="" ref="0xb7c67600"/>
        <function-ref name="toggle" scoped="" ref="0xb7c676e0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c677c0"/>
        <function-ref name="get" scoped="" ref="0xb7c678a0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c67980"/>
        <function-ref name="set" scoped="" ref="0xb7c67a60"/>
        <function-ref name="clr" scoped="" ref="0xb7c67b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0xb7c61508" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0xb7c61508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c616e0"/>
        <function-ref name="isInput" scoped="" ref="0xb7c617c0"/>
        <function-ref name="toggle" scoped="" ref="0xb7c618a0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c61980"/>
        <function-ref name="get" scoped="" ref="0xb7c61a60"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c61b40"/>
        <function-ref name="set" scoped="" ref="0xb7c61c20"/>
        <function-ref name="clr" scoped="" ref="0xb7c61d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0xb7c5b190" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0xb7c5b190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c5b368"/>
        <function-ref name="isInput" scoped="" ref="0xb7c5b448"/>
        <function-ref name="toggle" scoped="" ref="0xb7c5b528"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c5b608"/>
        <function-ref name="get" scoped="" ref="0xb7c5b6e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c5b7c8"/>
        <function-ref name="set" scoped="" ref="0xb7c5b8a8"/>
        <function-ref name="clr" scoped="" ref="0xb7c5b988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0xb7c79c90" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0xb7c79c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c79e68"/>
        <function-ref name="isInput" scoped="" ref="0xb7c78010"/>
        <function-ref name="toggle" scoped="" ref="0xb7c780f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c781d0"/>
        <function-ref name="get" scoped="" ref="0xb7c782b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c78390"/>
        <function-ref name="set" scoped="" ref="0xb7c78470"/>
        <function-ref name="clr" scoped="" ref="0xb7c78550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0xb7c72e78" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0xb7c72e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c71070"/>
        <function-ref name="isInput" scoped="" ref="0xb7c71150"/>
        <function-ref name="toggle" scoped="" ref="0xb7c71230"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c71310"/>
        <function-ref name="get" scoped="" ref="0xb7c713f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c714d0"/>
        <function-ref name="set" scoped="" ref="0xb7c715b0"/>
        <function-ref name="clr" scoped="" ref="0xb7c71690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0xb7c6ce78" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0xb7c6ce78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c6b070"/>
        <function-ref name="isInput" scoped="" ref="0xb7c6b150"/>
        <function-ref name="toggle" scoped="" ref="0xb7c6b230"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c6b310"/>
        <function-ref name="get" scoped="" ref="0xb7c6b3f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c6b4d0"/>
        <function-ref name="set" scoped="" ref="0xb7c6b5b0"/>
        <function-ref name="clr" scoped="" ref="0xb7c6b690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0xb7c65068" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0xb7c65068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c65240"/>
        <function-ref name="isInput" scoped="" ref="0xb7c65320"/>
        <function-ref name="toggle" scoped="" ref="0xb7c65400"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c654e0"/>
        <function-ref name="get" scoped="" ref="0xb7c655c0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c656a0"/>
        <function-ref name="set" scoped="" ref="0xb7c65780"/>
        <function-ref name="clr" scoped="" ref="0xb7c65860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0xb7c58428" loc="93:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0xb7c58428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c58600"/>
        <function-ref name="isInput" scoped="" ref="0xb7c586e0"/>
        <function-ref name="toggle" scoped="" ref="0xb7c587c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c588a0"/>
        <function-ref name="get" scoped="" ref="0xb7c58980"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c58a60"/>
        <function-ref name="set" scoped="" ref="0xb7c58b40"/>
        <function-ref name="clr" scoped="" ref="0xb7c58c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0xb7c64428" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0xb7c64428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c64600"/>
        <function-ref name="isInput" scoped="" ref="0xb7c646e0"/>
        <function-ref name="toggle" scoped="" ref="0xb7c647c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c648a0"/>
        <function-ref name="get" scoped="" ref="0xb7c64980"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c64a60"/>
        <function-ref name="set" scoped="" ref="0xb7c64b40"/>
        <function-ref name="clr" scoped="" ref="0xb7c64c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0xb7c6ab00" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0xb7c6ab00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c6acd8"/>
        <function-ref name="isInput" scoped="" ref="0xb7c6adb8"/>
        <function-ref name="toggle" scoped="" ref="0xb7c6ae98"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c69010"/>
        <function-ref name="get" scoped="" ref="0xb7c690f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c691d0"/>
        <function-ref name="set" scoped="" ref="0xb7c692b0"/>
        <function-ref name="clr" scoped="" ref="0xb7c69390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0xb7c769d8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0xb7c769d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c76bb0"/>
        <function-ref name="isInput" scoped="" ref="0xb7c76c90"/>
        <function-ref name="toggle" scoped="" ref="0xb7c76d70"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c76e50"/>
        <function-ref name="get" scoped="" ref="0xb7c75010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c750f0"/>
        <function-ref name="set" scoped="" ref="0xb7c751d0"/>
        <function-ref name="clr" scoped="" ref="0xb7c752b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0xb7c70b80" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0xb7c70b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c70d58"/>
        <function-ref name="isInput" scoped="" ref="0xb7c70e38"/>
        <function-ref name="toggle" scoped="" ref="0xb7c70f18"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c6f010"/>
        <function-ref name="get" scoped="" ref="0xb7c6f0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c6f1d0"/>
        <function-ref name="set" scoped="" ref="0xb7c6f2b0"/>
        <function-ref name="clr" scoped="" ref="0xb7c6f390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7c2ed68" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7c2ed68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c2c010"/>
        <function-ref name="isInput" scoped="" ref="0xb7c2c0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb7c2c1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c2c2b0"/>
        <function-ref name="get" scoped="" ref="0xb7c2c390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c2c470"/>
        <function-ref name="set" scoped="" ref="0xb7c2c550"/>
        <function-ref name="clr" scoped="" ref="0xb7c2c630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7c2bac8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7c2bac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c2bca0"/>
        <function-ref name="isInput" scoped="" ref="0xb7c2bd80"/>
        <function-ref name="toggle" scoped="" ref="0xb7c2be60"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c2a010"/>
        <function-ref name="get" scoped="" ref="0xb7c2a0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c2a1d0"/>
        <function-ref name="set" scoped="" ref="0xb7c2a2b0"/>
        <function-ref name="clr" scoped="" ref="0xb7c2a390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7c2fa28" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7c2fa28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c2fc00"/>
        <function-ref name="isInput" scoped="" ref="0xb7c2fce0"/>
        <function-ref name="toggle" scoped="" ref="0xb7c2fdc0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c2fea0"/>
        <function-ref name="get" scoped="" ref="0xb7c2e010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c2e0f0"/>
        <function-ref name="set" scoped="" ref="0xb7c2e1d0"/>
        <function-ref name="clr" scoped="" ref="0xb7c2e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7c2c790" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7c2c790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c2c968"/>
        <function-ref name="isInput" scoped="" ref="0xb7c2ca48"/>
        <function-ref name="toggle" scoped="" ref="0xb7c2cb28"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c2cc08"/>
        <function-ref name="get" scoped="" ref="0xb7c2cce8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c2cdc8"/>
        <function-ref name="set" scoped="" ref="0xb7c2cea8"/>
        <function-ref name="clr" scoped="" ref="0xb7c2b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb7c2a4f0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb7c2a4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c2a6c8"/>
        <function-ref name="isInput" scoped="" ref="0xb7c2a7a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7c2a888"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c2a968"/>
        <function-ref name="get" scoped="" ref="0xb7c2aa48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c2ab28"/>
        <function-ref name="set" scoped="" ref="0xb7c2ac08"/>
        <function-ref name="clr" scoped="" ref="0xb7c2ace8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7c2e410" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7c2e410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c2e5e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7c2e6c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7c2e7a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c2e888"/>
        <function-ref name="get" scoped="" ref="0xb7c2e968"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c2ea48"/>
        <function-ref name="set" scoped="" ref="0xb7c2eb28"/>
        <function-ref name="clr" scoped="" ref="0xb7c2ec08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb7c2b170" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb7c2b170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c2b348"/>
        <function-ref name="isInput" scoped="" ref="0xb7c2b428"/>
        <function-ref name="toggle" scoped="" ref="0xb7c2b508"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c2b5e8"/>
        <function-ref name="get" scoped="" ref="0xb7c2b6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c2b7a8"/>
        <function-ref name="set" scoped="" ref="0xb7c2b888"/>
        <function-ref name="clr" scoped="" ref="0xb7c2b968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7c2ae48" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7c2ae48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c29050"/>
        <function-ref name="isInput" scoped="" ref="0xb7c29130"/>
        <function-ref name="toggle" scoped="" ref="0xb7c29210"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c292f0"/>
        <function-ref name="get" scoped="" ref="0xb7c293d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c294b0"/>
        <function-ref name="set" scoped="" ref="0xb7c29590"/>
        <function-ref name="clr" scoped="" ref="0xb7c29670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7449030" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7449030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7449208"/>
        <function-ref name="isInput" scoped="" ref="0xb74492e8"/>
        <function-ref name="toggle" scoped="" ref="0xb74493c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb74494a8"/>
        <function-ref name="get" scoped="" ref="0xb7449588"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7449668"/>
        <function-ref name="set" scoped="" ref="0xb7449748"/>
        <function-ref name="clr" scoped="" ref="0xb7449828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7448ac8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7448ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7448ca0"/>
        <function-ref name="isInput" scoped="" ref="0xb7448d80"/>
        <function-ref name="toggle" scoped="" ref="0xb7448e60"/>
        <function-ref name="isOutput" scoped="" ref="0xb7447010"/>
        <function-ref name="get" scoped="" ref="0xb74470f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb74471d0"/>
        <function-ref name="set" scoped="" ref="0xb74472b0"/>
        <function-ref name="clr" scoped="" ref="0xb7447390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7446650" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7446650"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7446828"/>
        <function-ref name="isInput" scoped="" ref="0xb7446908"/>
        <function-ref name="toggle" scoped="" ref="0xb74469e8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7446ac8"/>
        <function-ref name="get" scoped="" ref="0xb7446ba8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7446c88"/>
        <function-ref name="set" scoped="" ref="0xb7446d68"/>
        <function-ref name="clr" scoped="" ref="0xb7446e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb74441b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb74441b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7444388"/>
        <function-ref name="isInput" scoped="" ref="0xb7444468"/>
        <function-ref name="toggle" scoped="" ref="0xb7444548"/>
        <function-ref name="isOutput" scoped="" ref="0xb7444628"/>
        <function-ref name="get" scoped="" ref="0xb7444708"/>
        <function-ref name="makeOutput" scoped="" ref="0xb74447e8"/>
        <function-ref name="set" scoped="" ref="0xb74448c8"/>
        <function-ref name="clr" scoped="" ref="0xb74449a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7443c98" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7443c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7443e70"/>
        <function-ref name="isInput" scoped="" ref="0xb7442010"/>
        <function-ref name="toggle" scoped="" ref="0xb74420f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb74421d0"/>
        <function-ref name="get" scoped="" ref="0xb74422b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7442390"/>
        <function-ref name="set" scoped="" ref="0xb7442470"/>
        <function-ref name="clr" scoped="" ref="0xb7442550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb74417f8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb74417f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb74419d0"/>
        <function-ref name="isInput" scoped="" ref="0xb7441ab0"/>
        <function-ref name="toggle" scoped="" ref="0xb7441b90"/>
        <function-ref name="isOutput" scoped="" ref="0xb7441c70"/>
        <function-ref name="get" scoped="" ref="0xb7441d50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7441e30"/>
        <function-ref name="set" scoped="" ref="0xb7441f10"/>
        <function-ref name="clr" scoped="" ref="0xb7440010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb743f308" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb743f308"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb743f4e0"/>
        <function-ref name="isInput" scoped="" ref="0xb743f5c0"/>
        <function-ref name="toggle" scoped="" ref="0xb743f6a0"/>
        <function-ref name="isOutput" scoped="" ref="0xb743f780"/>
        <function-ref name="get" scoped="" ref="0xb743f860"/>
        <function-ref name="makeOutput" scoped="" ref="0xb743f940"/>
        <function-ref name="set" scoped="" ref="0xb743fa20"/>
        <function-ref name="clr" scoped="" ref="0xb743fb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb743eda8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb743eda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb743d010"/>
        <function-ref name="isInput" scoped="" ref="0xb743d0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb743d1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb743d2b0"/>
        <function-ref name="get" scoped="" ref="0xb743d390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb743d470"/>
        <function-ref name="set" scoped="" ref="0xb743d550"/>
        <function-ref name="clr" scoped="" ref="0xb743d630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7c254f0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7c254f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c256c8"/>
        <function-ref name="isInput" scoped="" ref="0xb7c257a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7c25888"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c25968"/>
        <function-ref name="get" scoped="" ref="0xb7c25a48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c25b28"/>
        <function-ref name="set" scoped="" ref="0xb7c25c08"/>
        <function-ref name="clr" scoped="" ref="0xb7c25ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7c23170" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7c23170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c23348"/>
        <function-ref name="isInput" scoped="" ref="0xb7c23428"/>
        <function-ref name="toggle" scoped="" ref="0xb7c23508"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c235e8"/>
        <function-ref name="get" scoped="" ref="0xb7c236c8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c237a8"/>
        <function-ref name="set" scoped="" ref="0xb7c23888"/>
        <function-ref name="clr" scoped="" ref="0xb7c23968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7c26228" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7c26228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c26400"/>
        <function-ref name="isInput" scoped="" ref="0xb7c264e0"/>
        <function-ref name="toggle" scoped="" ref="0xb7c265c0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c266a0"/>
        <function-ref name="get" scoped="" ref="0xb7c26780"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c26860"/>
        <function-ref name="set" scoped="" ref="0xb7c26940"/>
        <function-ref name="clr" scoped="" ref="0xb7c26a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7c25e48" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7c25e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c24050"/>
        <function-ref name="isInput" scoped="" ref="0xb7c24130"/>
        <function-ref name="toggle" scoped="" ref="0xb7c24210"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c242f0"/>
        <function-ref name="get" scoped="" ref="0xb7c243d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c244b0"/>
        <function-ref name="set" scoped="" ref="0xb7c24590"/>
        <function-ref name="clr" scoped="" ref="0xb7c24670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb7c23ac8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb7c23ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c23ca0"/>
        <function-ref name="isInput" scoped="" ref="0xb7c23d80"/>
        <function-ref name="toggle" scoped="" ref="0xb7c23e60"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c22010"/>
        <function-ref name="get" scoped="" ref="0xb7c220f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c221d0"/>
        <function-ref name="set" scoped="" ref="0xb7c222b0"/>
        <function-ref name="clr" scoped="" ref="0xb7c22390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7c26b80" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7c26b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c26d58"/>
        <function-ref name="isInput" scoped="" ref="0xb7c26e38"/>
        <function-ref name="toggle" scoped="" ref="0xb7c26f18"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c25010"/>
        <function-ref name="get" scoped="" ref="0xb7c250f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c251d0"/>
        <function-ref name="set" scoped="" ref="0xb7c252b0"/>
        <function-ref name="clr" scoped="" ref="0xb7c25390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb7c247d0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb7c247d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c249a8"/>
        <function-ref name="isInput" scoped="" ref="0xb7c24a88"/>
        <function-ref name="toggle" scoped="" ref="0xb7c24b68"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c24c48"/>
        <function-ref name="get" scoped="" ref="0xb7c24d28"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c24e08"/>
        <function-ref name="set" scoped="" ref="0xb7c24ee8"/>
        <function-ref name="clr" scoped="" ref="0xb7c23010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7c224f0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7c224f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c226c8"/>
        <function-ref name="isInput" scoped="" ref="0xb7c227a8"/>
        <function-ref name="toggle" scoped="" ref="0xb7c22888"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c22968"/>
        <function-ref name="get" scoped="" ref="0xb7c22a48"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c22b28"/>
        <function-ref name="set" scoped="" ref="0xb7c22c08"/>
        <function-ref name="clr" scoped="" ref="0xb7c22ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7418da8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7418da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7415010"/>
        <function-ref name="isInput" scoped="" ref="0xb74150f0"/>
        <function-ref name="toggle" scoped="" ref="0xb74151d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb74152b0"/>
        <function-ref name="get" scoped="" ref="0xb7415390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7415470"/>
        <function-ref name="set" scoped="" ref="0xb7415550"/>
        <function-ref name="clr" scoped="" ref="0xb7415630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb74148d8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb74148d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7414ab0"/>
        <function-ref name="isInput" scoped="" ref="0xb7414b90"/>
        <function-ref name="toggle" scoped="" ref="0xb7414c70"/>
        <function-ref name="isOutput" scoped="" ref="0xb7414d50"/>
        <function-ref name="get" scoped="" ref="0xb7414e30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7414f10"/>
        <function-ref name="set" scoped="" ref="0xb7413010"/>
        <function-ref name="clr" scoped="" ref="0xb74130f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb74123b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb74123b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7412588"/>
        <function-ref name="isInput" scoped="" ref="0xb7412668"/>
        <function-ref name="toggle" scoped="" ref="0xb7412748"/>
        <function-ref name="isOutput" scoped="" ref="0xb7412828"/>
        <function-ref name="get" scoped="" ref="0xb7412908"/>
        <function-ref name="makeOutput" scoped="" ref="0xb74129e8"/>
        <function-ref name="set" scoped="" ref="0xb7412ac8"/>
        <function-ref name="clr" scoped="" ref="0xb7412ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7411e50" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7411e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7410050"/>
        <function-ref name="isInput" scoped="" ref="0xb7410130"/>
        <function-ref name="toggle" scoped="" ref="0xb7410210"/>
        <function-ref name="isOutput" scoped="" ref="0xb74102f0"/>
        <function-ref name="get" scoped="" ref="0xb74103d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb74104b0"/>
        <function-ref name="set" scoped="" ref="0xb7410590"/>
        <function-ref name="clr" scoped="" ref="0xb7410670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb740f920" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb740f920"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb740faf8"/>
        <function-ref name="isInput" scoped="" ref="0xb740fbd8"/>
        <function-ref name="toggle" scoped="" ref="0xb740fcb8"/>
        <function-ref name="isOutput" scoped="" ref="0xb740fd98"/>
        <function-ref name="get" scoped="" ref="0xb740fe78"/>
        <function-ref name="makeOutput" scoped="" ref="0xb740e010"/>
        <function-ref name="set" scoped="" ref="0xb740e0f0"/>
        <function-ref name="clr" scoped="" ref="0xb740e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb740d490" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb740d490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb740d668"/>
        <function-ref name="isInput" scoped="" ref="0xb740d748"/>
        <function-ref name="toggle" scoped="" ref="0xb740d828"/>
        <function-ref name="isOutput" scoped="" ref="0xb740d908"/>
        <function-ref name="get" scoped="" ref="0xb740d9e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb740dac8"/>
        <function-ref name="set" scoped="" ref="0xb740dba8"/>
        <function-ref name="clr" scoped="" ref="0xb740dc88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb740b010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb740b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb740b1e8"/>
        <function-ref name="isInput" scoped="" ref="0xb740b2c8"/>
        <function-ref name="toggle" scoped="" ref="0xb740b3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb740b488"/>
        <function-ref name="get" scoped="" ref="0xb740b568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb740b648"/>
        <function-ref name="set" scoped="" ref="0xb740b728"/>
        <function-ref name="clr" scoped="" ref="0xb740b808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb740aac8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb740aac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb740aca0"/>
        <function-ref name="isInput" scoped="" ref="0xb740ad80"/>
        <function-ref name="toggle" scoped="" ref="0xb740ae60"/>
        <function-ref name="isOutput" scoped="" ref="0xb7409010"/>
        <function-ref name="get" scoped="" ref="0xb74090f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb74091d0"/>
        <function-ref name="set" scoped="" ref="0xb74092b0"/>
        <function-ref name="clr" scoped="" ref="0xb7409390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7c1dba8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7c1dba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c1dd80"/>
        <function-ref name="isInput" scoped="" ref="0xb7c1de60"/>
        <function-ref name="toggle" scoped="" ref="0xb7c1c010"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c1c0f0"/>
        <function-ref name="get" scoped="" ref="0xb7c1c1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c1c2b0"/>
        <function-ref name="set" scoped="" ref="0xb7c1c390"/>
        <function-ref name="clr" scoped="" ref="0xb7c1c470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7c1b890" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7c1b890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c1ba68"/>
        <function-ref name="isInput" scoped="" ref="0xb7c1bb48"/>
        <function-ref name="toggle" scoped="" ref="0xb7c1bc28"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c1bd08"/>
        <function-ref name="get" scoped="" ref="0xb7c1bde8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c1bec8"/>
        <function-ref name="set" scoped="" ref="0xb7c1a010"/>
        <function-ref name="clr" scoped="" ref="0xb7c1a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7c1e870" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7c1e870"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c1ea48"/>
        <function-ref name="isInput" scoped="" ref="0xb7c1eb28"/>
        <function-ref name="toggle" scoped="" ref="0xb7c1ec08"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c1ece8"/>
        <function-ref name="get" scoped="" ref="0xb7c1edc8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c1eea8"/>
        <function-ref name="set" scoped="" ref="0xb7c1d010"/>
        <function-ref name="clr" scoped="" ref="0xb7c1d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7c1c5d0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7c1c5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c1c7a8"/>
        <function-ref name="isInput" scoped="" ref="0xb7c1c888"/>
        <function-ref name="toggle" scoped="" ref="0xb7c1c968"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c1ca48"/>
        <function-ref name="get" scoped="" ref="0xb7c1cb28"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c1cc08"/>
        <function-ref name="set" scoped="" ref="0xb7c1cce8"/>
        <function-ref name="clr" scoped="" ref="0xb7c1cdc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb7c1a250" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb7c1a250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c1a428"/>
        <function-ref name="isInput" scoped="" ref="0xb7c1a508"/>
        <function-ref name="toggle" scoped="" ref="0xb7c1a5e8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c1a6c8"/>
        <function-ref name="get" scoped="" ref="0xb7c1a7a8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c1a888"/>
        <function-ref name="set" scoped="" ref="0xb7c1a968"/>
        <function-ref name="clr" scoped="" ref="0xb7c1aa48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7c1d250" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7c1d250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c1d428"/>
        <function-ref name="isInput" scoped="" ref="0xb7c1d508"/>
        <function-ref name="toggle" scoped="" ref="0xb7c1d5e8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c1d6c8"/>
        <function-ref name="get" scoped="" ref="0xb7c1d7a8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c1d888"/>
        <function-ref name="set" scoped="" ref="0xb7c1d968"/>
        <function-ref name="clr" scoped="" ref="0xb7c1da48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb7c1cf28" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb7c1cf28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c1b110"/>
        <function-ref name="isInput" scoped="" ref="0xb7c1b1f0"/>
        <function-ref name="toggle" scoped="" ref="0xb7c1b2d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c1b3b0"/>
        <function-ref name="get" scoped="" ref="0xb7c1b490"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c1b570"/>
        <function-ref name="set" scoped="" ref="0xb7c1b650"/>
        <function-ref name="clr" scoped="" ref="0xb7c1b730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7c1aba8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7c1aba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c1ad80"/>
        <function-ref name="isInput" scoped="" ref="0xb7c1ae60"/>
        <function-ref name="toggle" scoped="" ref="0xb7c19010"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c190f0"/>
        <function-ref name="get" scoped="" ref="0xb7c191d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c192b0"/>
        <function-ref name="set" scoped="" ref="0xb7c19390"/>
        <function-ref name="clr" scoped="" ref="0xb7c19470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73e4da8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73e4da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73e2010"/>
        <function-ref name="isInput" scoped="" ref="0xb73e20f0"/>
        <function-ref name="toggle" scoped="" ref="0xb73e21d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb73e22b0"/>
        <function-ref name="get" scoped="" ref="0xb73e2390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73e2470"/>
        <function-ref name="set" scoped="" ref="0xb73e2550"/>
        <function-ref name="clr" scoped="" ref="0xb73e2630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73e18d8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73e18d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73e1ab0"/>
        <function-ref name="isInput" scoped="" ref="0xb73e1b90"/>
        <function-ref name="toggle" scoped="" ref="0xb73e1c70"/>
        <function-ref name="isOutput" scoped="" ref="0xb73e1d50"/>
        <function-ref name="get" scoped="" ref="0xb73e1e30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73e1f10"/>
        <function-ref name="set" scoped="" ref="0xb73e0010"/>
        <function-ref name="clr" scoped="" ref="0xb73e00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73df3b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73df3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73df588"/>
        <function-ref name="isInput" scoped="" ref="0xb73df668"/>
        <function-ref name="toggle" scoped="" ref="0xb73df748"/>
        <function-ref name="isOutput" scoped="" ref="0xb73df828"/>
        <function-ref name="get" scoped="" ref="0xb73df908"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73df9e8"/>
        <function-ref name="set" scoped="" ref="0xb73dfac8"/>
        <function-ref name="clr" scoped="" ref="0xb73dfba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73dee50" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73dee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73dd050"/>
        <function-ref name="isInput" scoped="" ref="0xb73dd130"/>
        <function-ref name="toggle" scoped="" ref="0xb73dd210"/>
        <function-ref name="isOutput" scoped="" ref="0xb73dd2f0"/>
        <function-ref name="get" scoped="" ref="0xb73dd3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73dd4b0"/>
        <function-ref name="set" scoped="" ref="0xb73dd590"/>
        <function-ref name="clr" scoped="" ref="0xb73dd670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73dc920" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73dc920"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73dcaf8"/>
        <function-ref name="isInput" scoped="" ref="0xb73dcbd8"/>
        <function-ref name="toggle" scoped="" ref="0xb73dccb8"/>
        <function-ref name="isOutput" scoped="" ref="0xb73dcd98"/>
        <function-ref name="get" scoped="" ref="0xb73dce78"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73db010"/>
        <function-ref name="set" scoped="" ref="0xb73db0f0"/>
        <function-ref name="clr" scoped="" ref="0xb73db1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73da490" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73da490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73da668"/>
        <function-ref name="isInput" scoped="" ref="0xb73da748"/>
        <function-ref name="toggle" scoped="" ref="0xb73da828"/>
        <function-ref name="isOutput" scoped="" ref="0xb73da908"/>
        <function-ref name="get" scoped="" ref="0xb73da9e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73daac8"/>
        <function-ref name="set" scoped="" ref="0xb73daba8"/>
        <function-ref name="clr" scoped="" ref="0xb73dac88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73d8010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73d8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73d81e8"/>
        <function-ref name="isInput" scoped="" ref="0xb73d82c8"/>
        <function-ref name="toggle" scoped="" ref="0xb73d83a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb73d8488"/>
        <function-ref name="get" scoped="" ref="0xb73d8568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73d8648"/>
        <function-ref name="set" scoped="" ref="0xb73d8728"/>
        <function-ref name="clr" scoped="" ref="0xb73d8808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73d7ac8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73d7ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73d7ca0"/>
        <function-ref name="isInput" scoped="" ref="0xb73d7d80"/>
        <function-ref name="toggle" scoped="" ref="0xb73d7e60"/>
        <function-ref name="isOutput" scoped="" ref="0xb73d5010"/>
        <function-ref name="get" scoped="" ref="0xb73d50f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73d51d0"/>
        <function-ref name="set" scoped="" ref="0xb73d52b0"/>
        <function-ref name="clr" scoped="" ref="0xb73d5390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7c14330" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7c14330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c14508"/>
        <function-ref name="isInput" scoped="" ref="0xb7c145e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7c146c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c147a8"/>
        <function-ref name="get" scoped="" ref="0xb7c14888"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c14968"/>
        <function-ref name="set" scoped="" ref="0xb7c14a48"/>
        <function-ref name="clr" scoped="" ref="0xb7c14b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7c12030" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7c12030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c12208"/>
        <function-ref name="isInput" scoped="" ref="0xb7c122e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7c123c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c124a8"/>
        <function-ref name="get" scoped="" ref="0xb7c12588"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c12668"/>
        <function-ref name="set" scoped="" ref="0xb7c12748"/>
        <function-ref name="clr" scoped="" ref="0xb7c12828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7c15010" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7c15010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c151e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7c152c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7c153a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c15488"/>
        <function-ref name="get" scoped="" ref="0xb7c15568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c15648"/>
        <function-ref name="set" scoped="" ref="0xb7c15728"/>
        <function-ref name="clr" scoped="" ref="0xb7c15808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7c14c88" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7c14c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c14e60"/>
        <function-ref name="isInput" scoped="" ref="0xb7c13010"/>
        <function-ref name="toggle" scoped="" ref="0xb7c130f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c131d0"/>
        <function-ref name="get" scoped="" ref="0xb7c132b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c13390"/>
        <function-ref name="set" scoped="" ref="0xb7c13470"/>
        <function-ref name="clr" scoped="" ref="0xb7c13550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb7c12988" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb7c12988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c12b60"/>
        <function-ref name="isInput" scoped="" ref="0xb7c12c40"/>
        <function-ref name="toggle" scoped="" ref="0xb7c12d20"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c12e00"/>
        <function-ref name="get" scoped="" ref="0xb7c12ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c11010"/>
        <function-ref name="set" scoped="" ref="0xb7c110f0"/>
        <function-ref name="clr" scoped="" ref="0xb7c111d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7c15968" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7c15968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c15b40"/>
        <function-ref name="isInput" scoped="" ref="0xb7c15c20"/>
        <function-ref name="toggle" scoped="" ref="0xb7c15d00"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c15de0"/>
        <function-ref name="get" scoped="" ref="0xb7c15ec0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c14010"/>
        <function-ref name="set" scoped="" ref="0xb7c140f0"/>
        <function-ref name="clr" scoped="" ref="0xb7c141d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb7c136b0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb7c136b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c13888"/>
        <function-ref name="isInput" scoped="" ref="0xb7c13968"/>
        <function-ref name="toggle" scoped="" ref="0xb7c13a48"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c13b28"/>
        <function-ref name="get" scoped="" ref="0xb7c13c08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c13ce8"/>
        <function-ref name="set" scoped="" ref="0xb7c13dc8"/>
        <function-ref name="clr" scoped="" ref="0xb7c13ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7c11330" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7c11330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c11508"/>
        <function-ref name="isInput" scoped="" ref="0xb7c115e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7c116c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c117a8"/>
        <function-ref name="get" scoped="" ref="0xb7c11888"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c11968"/>
        <function-ref name="set" scoped="" ref="0xb7c11a48"/>
        <function-ref name="clr" scoped="" ref="0xb7c11b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73b1da8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73b1da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73ae010"/>
        <function-ref name="isInput" scoped="" ref="0xb73ae0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb73ae1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb73ae2b0"/>
        <function-ref name="get" scoped="" ref="0xb73ae390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73ae470"/>
        <function-ref name="set" scoped="" ref="0xb73ae550"/>
        <function-ref name="clr" scoped="" ref="0xb73ae630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73ad8d8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73ad8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73adab0"/>
        <function-ref name="isInput" scoped="" ref="0xb73adb90"/>
        <function-ref name="toggle" scoped="" ref="0xb73adc70"/>
        <function-ref name="isOutput" scoped="" ref="0xb73add50"/>
        <function-ref name="get" scoped="" ref="0xb73ade30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73adf10"/>
        <function-ref name="set" scoped="" ref="0xb73ac010"/>
        <function-ref name="clr" scoped="" ref="0xb73ac0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73ab3b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73ab3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73ab588"/>
        <function-ref name="isInput" scoped="" ref="0xb73ab668"/>
        <function-ref name="toggle" scoped="" ref="0xb73ab748"/>
        <function-ref name="isOutput" scoped="" ref="0xb73ab828"/>
        <function-ref name="get" scoped="" ref="0xb73ab908"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73ab9e8"/>
        <function-ref name="set" scoped="" ref="0xb73abac8"/>
        <function-ref name="clr" scoped="" ref="0xb73abba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73aae50" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73aae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73a9050"/>
        <function-ref name="isInput" scoped="" ref="0xb73a9130"/>
        <function-ref name="toggle" scoped="" ref="0xb73a9210"/>
        <function-ref name="isOutput" scoped="" ref="0xb73a92f0"/>
        <function-ref name="get" scoped="" ref="0xb73a93d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73a94b0"/>
        <function-ref name="set" scoped="" ref="0xb73a9590"/>
        <function-ref name="clr" scoped="" ref="0xb73a9670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73a8920" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73a8920"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73a8af8"/>
        <function-ref name="isInput" scoped="" ref="0xb73a8bd8"/>
        <function-ref name="toggle" scoped="" ref="0xb73a8cb8"/>
        <function-ref name="isOutput" scoped="" ref="0xb73a8d98"/>
        <function-ref name="get" scoped="" ref="0xb73a8e78"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73a7010"/>
        <function-ref name="set" scoped="" ref="0xb73a70f0"/>
        <function-ref name="clr" scoped="" ref="0xb73a71d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73a6490" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73a6490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73a6668"/>
        <function-ref name="isInput" scoped="" ref="0xb73a6748"/>
        <function-ref name="toggle" scoped="" ref="0xb73a6828"/>
        <function-ref name="isOutput" scoped="" ref="0xb73a6908"/>
        <function-ref name="get" scoped="" ref="0xb73a69e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73a6ac8"/>
        <function-ref name="set" scoped="" ref="0xb73a6ba8"/>
        <function-ref name="clr" scoped="" ref="0xb73a6c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73a4010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73a4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73a41e8"/>
        <function-ref name="isInput" scoped="" ref="0xb73a42c8"/>
        <function-ref name="toggle" scoped="" ref="0xb73a43a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb73a4488"/>
        <function-ref name="get" scoped="" ref="0xb73a4568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73a4648"/>
        <function-ref name="set" scoped="" ref="0xb73a4728"/>
        <function-ref name="clr" scoped="" ref="0xb73a4808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73a3ac8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73a3ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73a3ca0"/>
        <function-ref name="isInput" scoped="" ref="0xb73a3d80"/>
        <function-ref name="toggle" scoped="" ref="0xb73a3e60"/>
        <function-ref name="isOutput" scoped="" ref="0xb73a2010"/>
        <function-ref name="get" scoped="" ref="0xb73a20f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73a21d0"/>
        <function-ref name="set" scoped="" ref="0xb73a22b0"/>
        <function-ref name="clr" scoped="" ref="0xb73a2390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7c0d968" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7c0d968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c0db40"/>
        <function-ref name="isInput" scoped="" ref="0xb7c0dc20"/>
        <function-ref name="toggle" scoped="" ref="0xb7c0dd00"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c0dde0"/>
        <function-ref name="get" scoped="" ref="0xb7c0dec0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c0c010"/>
        <function-ref name="set" scoped="" ref="0xb7c0c0f0"/>
        <function-ref name="clr" scoped="" ref="0xb7c0c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7c0a6b0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7c0a6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c0a888"/>
        <function-ref name="isInput" scoped="" ref="0xb7c0a968"/>
        <function-ref name="toggle" scoped="" ref="0xb7c0aa48"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c0ab28"/>
        <function-ref name="get" scoped="" ref="0xb7c0ac08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c0ace8"/>
        <function-ref name="set" scoped="" ref="0xb7c0adc8"/>
        <function-ref name="clr" scoped="" ref="0xb7c0aea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7c0e600" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7c0e600"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c0e7d8"/>
        <function-ref name="isInput" scoped="" ref="0xb7c0e8b8"/>
        <function-ref name="toggle" scoped="" ref="0xb7c0e998"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c0ea78"/>
        <function-ref name="get" scoped="" ref="0xb7c0eb58"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c0ec38"/>
        <function-ref name="set" scoped="" ref="0xb7c0ed18"/>
        <function-ref name="clr" scoped="" ref="0xb7c0edf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7c0c330" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7c0c330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c0c508"/>
        <function-ref name="isInput" scoped="" ref="0xb7c0c5e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7c0c6c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c0c7a8"/>
        <function-ref name="get" scoped="" ref="0xb7c0c888"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c0c968"/>
        <function-ref name="set" scoped="" ref="0xb7c0ca48"/>
        <function-ref name="clr" scoped="" ref="0xb7c0cb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb7c09030" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb7c09030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c09208"/>
        <function-ref name="isInput" scoped="" ref="0xb7c092e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7c093c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c094a8"/>
        <function-ref name="get" scoped="" ref="0xb7c09588"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c09668"/>
        <function-ref name="set" scoped="" ref="0xb7c09748"/>
        <function-ref name="clr" scoped="" ref="0xb7c09828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7c0d010" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7c0d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c0d1e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7c0d2c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7c0d3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c0d488"/>
        <function-ref name="get" scoped="" ref="0xb7c0d568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c0d648"/>
        <function-ref name="set" scoped="" ref="0xb7c0d728"/>
        <function-ref name="clr" scoped="" ref="0xb7c0d808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb7c0cc88" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb7c0cc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c0ce60"/>
        <function-ref name="isInput" scoped="" ref="0xb7c0a010"/>
        <function-ref name="toggle" scoped="" ref="0xb7c0a0f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c0a1d0"/>
        <function-ref name="get" scoped="" ref="0xb7c0a2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c0a390"/>
        <function-ref name="set" scoped="" ref="0xb7c0a470"/>
        <function-ref name="clr" scoped="" ref="0xb7c0a550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7c09988" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7c09988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c09b60"/>
        <function-ref name="isInput" scoped="" ref="0xb7c09c40"/>
        <function-ref name="toggle" scoped="" ref="0xb7c09d20"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c09e00"/>
        <function-ref name="get" scoped="" ref="0xb7c09ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c08010"/>
        <function-ref name="set" scoped="" ref="0xb7c080f0"/>
        <function-ref name="clr" scoped="" ref="0xb7c081d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb737dda8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb737dda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb737b010"/>
        <function-ref name="isInput" scoped="" ref="0xb737b0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb737b1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb737b2b0"/>
        <function-ref name="get" scoped="" ref="0xb737b390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb737b470"/>
        <function-ref name="set" scoped="" ref="0xb737b550"/>
        <function-ref name="clr" scoped="" ref="0xb737b630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb737a8d8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb737a8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb737aab0"/>
        <function-ref name="isInput" scoped="" ref="0xb737ab90"/>
        <function-ref name="toggle" scoped="" ref="0xb737ac70"/>
        <function-ref name="isOutput" scoped="" ref="0xb737ad50"/>
        <function-ref name="get" scoped="" ref="0xb737ae30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb737af10"/>
        <function-ref name="set" scoped="" ref="0xb7379010"/>
        <function-ref name="clr" scoped="" ref="0xb73790f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73783b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73783b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7378588"/>
        <function-ref name="isInput" scoped="" ref="0xb7378668"/>
        <function-ref name="toggle" scoped="" ref="0xb7378748"/>
        <function-ref name="isOutput" scoped="" ref="0xb7378828"/>
        <function-ref name="get" scoped="" ref="0xb7378908"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73789e8"/>
        <function-ref name="set" scoped="" ref="0xb7378ac8"/>
        <function-ref name="clr" scoped="" ref="0xb7378ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7377e50" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7377e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7376050"/>
        <function-ref name="isInput" scoped="" ref="0xb7376130"/>
        <function-ref name="toggle" scoped="" ref="0xb7376210"/>
        <function-ref name="isOutput" scoped="" ref="0xb73762f0"/>
        <function-ref name="get" scoped="" ref="0xb73763d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73764b0"/>
        <function-ref name="set" scoped="" ref="0xb7376590"/>
        <function-ref name="clr" scoped="" ref="0xb7376670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7375920" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7375920"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7375af8"/>
        <function-ref name="isInput" scoped="" ref="0xb7375bd8"/>
        <function-ref name="toggle" scoped="" ref="0xb7375cb8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7375d98"/>
        <function-ref name="get" scoped="" ref="0xb7375e78"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7374010"/>
        <function-ref name="set" scoped="" ref="0xb73740f0"/>
        <function-ref name="clr" scoped="" ref="0xb73741d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7373490" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7373490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7373668"/>
        <function-ref name="isInput" scoped="" ref="0xb7373748"/>
        <function-ref name="toggle" scoped="" ref="0xb7373828"/>
        <function-ref name="isOutput" scoped="" ref="0xb7373908"/>
        <function-ref name="get" scoped="" ref="0xb73739e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7373ac8"/>
        <function-ref name="set" scoped="" ref="0xb7373ba8"/>
        <function-ref name="clr" scoped="" ref="0xb7373c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7370010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7370010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb73701e8"/>
        <function-ref name="isInput" scoped="" ref="0xb73702c8"/>
        <function-ref name="toggle" scoped="" ref="0xb73703a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7370488"/>
        <function-ref name="get" scoped="" ref="0xb7370568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7370648"/>
        <function-ref name="set" scoped="" ref="0xb7370728"/>
        <function-ref name="clr" scoped="" ref="0xb7370808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb736fac8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb736fac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb736fca0"/>
        <function-ref name="isInput" scoped="" ref="0xb736fd80"/>
        <function-ref name="toggle" scoped="" ref="0xb736fe60"/>
        <function-ref name="isOutput" scoped="" ref="0xb736e010"/>
        <function-ref name="get" scoped="" ref="0xb736e0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb736e1d0"/>
        <function-ref name="set" scoped="" ref="0xb736e2b0"/>
        <function-ref name="clr" scoped="" ref="0xb736e390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0xb7c04030" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0xb7c04030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c04208"/>
        <function-ref name="isInput" scoped="" ref="0xb7c042e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7c043c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c044a8"/>
        <function-ref name="get" scoped="" ref="0xb7c04588"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c04668"/>
        <function-ref name="set" scoped="" ref="0xb7c04748"/>
        <function-ref name="clr" scoped="" ref="0xb7c04828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0xb7c03c88" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0xb7c03c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c03e60"/>
        <function-ref name="isInput" scoped="" ref="0xb7c02010"/>
        <function-ref name="toggle" scoped="" ref="0xb7c020f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c021d0"/>
        <function-ref name="get" scoped="" ref="0xb7c022b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c02390"/>
        <function-ref name="set" scoped="" ref="0xb7c02470"/>
        <function-ref name="clr" scoped="" ref="0xb7c02550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0xb7c06ce0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0xb7c06ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c06eb8"/>
        <function-ref name="isInput" scoped="" ref="0xb7c05010"/>
        <function-ref name="toggle" scoped="" ref="0xb7c050f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c051d0"/>
        <function-ref name="get" scoped="" ref="0xb7c052b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c05390"/>
        <function-ref name="set" scoped="" ref="0xb7c05470"/>
        <function-ref name="clr" scoped="" ref="0xb7c05550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0xb7c04988" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0xb7c04988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c04b60"/>
        <function-ref name="isInput" scoped="" ref="0xb7c04c40"/>
        <function-ref name="toggle" scoped="" ref="0xb7c04d20"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c04e00"/>
        <function-ref name="get" scoped="" ref="0xb7c04ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c03010"/>
        <function-ref name="set" scoped="" ref="0xb7c030f0"/>
        <function-ref name="clr" scoped="" ref="0xb7c031d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0xb7c026b0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0xb7c026b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c02888"/>
        <function-ref name="isInput" scoped="" ref="0xb7c02968"/>
        <function-ref name="toggle" scoped="" ref="0xb7c02a48"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c02b28"/>
        <function-ref name="get" scoped="" ref="0xb7c02c08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c02ce8"/>
        <function-ref name="set" scoped="" ref="0xb7c02dc8"/>
        <function-ref name="clr" scoped="" ref="0xb7c02ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0xb7c056b0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0xb7c056b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c05888"/>
        <function-ref name="isInput" scoped="" ref="0xb7c05968"/>
        <function-ref name="toggle" scoped="" ref="0xb7c05a48"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c05b28"/>
        <function-ref name="get" scoped="" ref="0xb7c05c08"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c05ce8"/>
        <function-ref name="set" scoped="" ref="0xb7c05dc8"/>
        <function-ref name="clr" scoped="" ref="0xb7c05ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0xb7c03330" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0xb7c03330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c03508"/>
        <function-ref name="isInput" scoped="" ref="0xb7c035e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7c036c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c037a8"/>
        <function-ref name="get" scoped="" ref="0xb7c03888"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c03968"/>
        <function-ref name="set" scoped="" ref="0xb7c03a48"/>
        <function-ref name="clr" scoped="" ref="0xb7c03b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0xb7c01030" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0xb7c01030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7c01208"/>
        <function-ref name="isInput" scoped="" ref="0xb7c012e8"/>
        <function-ref name="toggle" scoped="" ref="0xb7c013c8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7c014a8"/>
        <function-ref name="get" scoped="" ref="0xb7c01588"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7c01668"/>
        <function-ref name="set" scoped="" ref="0xb7c01748"/>
        <function-ref name="clr" scoped="" ref="0xb7c01828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb734ada8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb734ada8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7347010"/>
        <function-ref name="isInput" scoped="" ref="0xb73470f0"/>
        <function-ref name="toggle" scoped="" ref="0xb73471d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb73472b0"/>
        <function-ref name="get" scoped="" ref="0xb7347390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7347470"/>
        <function-ref name="set" scoped="" ref="0xb7347550"/>
        <function-ref name="clr" scoped="" ref="0xb7347630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73468d8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73468d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7346ab0"/>
        <function-ref name="isInput" scoped="" ref="0xb7346b90"/>
        <function-ref name="toggle" scoped="" ref="0xb7346c70"/>
        <function-ref name="isOutput" scoped="" ref="0xb7346d50"/>
        <function-ref name="get" scoped="" ref="0xb7346e30"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7346f10"/>
        <function-ref name="set" scoped="" ref="0xb7345010"/>
        <function-ref name="clr" scoped="" ref="0xb73450f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb73443b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb73443b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7344588"/>
        <function-ref name="isInput" scoped="" ref="0xb7344668"/>
        <function-ref name="toggle" scoped="" ref="0xb7344748"/>
        <function-ref name="isOutput" scoped="" ref="0xb7344828"/>
        <function-ref name="get" scoped="" ref="0xb7344908"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73449e8"/>
        <function-ref name="set" scoped="" ref="0xb7344ac8"/>
        <function-ref name="clr" scoped="" ref="0xb7344ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7343e50" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7343e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7342050"/>
        <function-ref name="isInput" scoped="" ref="0xb7342130"/>
        <function-ref name="toggle" scoped="" ref="0xb7342210"/>
        <function-ref name="isOutput" scoped="" ref="0xb73422f0"/>
        <function-ref name="get" scoped="" ref="0xb73423d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb73424b0"/>
        <function-ref name="set" scoped="" ref="0xb7342590"/>
        <function-ref name="clr" scoped="" ref="0xb7342670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7341920" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7341920"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7341af8"/>
        <function-ref name="isInput" scoped="" ref="0xb7341bd8"/>
        <function-ref name="toggle" scoped="" ref="0xb7341cb8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7341d98"/>
        <function-ref name="get" scoped="" ref="0xb7341e78"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7340010"/>
        <function-ref name="set" scoped="" ref="0xb73400f0"/>
        <function-ref name="clr" scoped="" ref="0xb73401d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb733f490" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb733f490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb733f668"/>
        <function-ref name="isInput" scoped="" ref="0xb733f748"/>
        <function-ref name="toggle" scoped="" ref="0xb733f828"/>
        <function-ref name="isOutput" scoped="" ref="0xb733f908"/>
        <function-ref name="get" scoped="" ref="0xb733f9e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb733fac8"/>
        <function-ref name="set" scoped="" ref="0xb733fba8"/>
        <function-ref name="clr" scoped="" ref="0xb733fc88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb733d010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb733d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb733d1e8"/>
        <function-ref name="isInput" scoped="" ref="0xb733d2c8"/>
        <function-ref name="toggle" scoped="" ref="0xb733d3a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb733d488"/>
        <function-ref name="get" scoped="" ref="0xb733d568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb733d648"/>
        <function-ref name="set" scoped="" ref="0xb733d728"/>
        <function-ref name="clr" scoped="" ref="0xb733d808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb733cac8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb733cac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb733cca0"/>
        <function-ref name="isInput" scoped="" ref="0xb733cd80"/>
        <function-ref name="toggle" scoped="" ref="0xb733ce60"/>
        <function-ref name="isOutput" scoped="" ref="0xb733b010"/>
        <function-ref name="get" scoped="" ref="0xb733b0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb733b1d0"/>
        <function-ref name="set" scoped="" ref="0xb733b2b0"/>
        <function-ref name="clr" scoped="" ref="0xb733b390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7bfc0c0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7bfc0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bfc298"/>
        <function-ref name="isInput" scoped="" ref="0xb7bfc378"/>
        <function-ref name="toggle" scoped="" ref="0xb7bfc458"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bfc538"/>
        <function-ref name="get" scoped="" ref="0xb7bfc618"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bfc6f8"/>
        <function-ref name="set" scoped="" ref="0xb7bfc7d8"/>
        <function-ref name="clr" scoped="" ref="0xb7bfc8b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7bef7a0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7bef7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bef978"/>
        <function-ref name="isInput" scoped="" ref="0xb7befa58"/>
        <function-ref name="toggle" scoped="" ref="0xb7befb38"/>
        <function-ref name="isOutput" scoped="" ref="0xb7befc18"/>
        <function-ref name="get" scoped="" ref="0xb7befcf8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7befdd8"/>
        <function-ref name="set" scoped="" ref="0xb7befeb8"/>
        <function-ref name="clr" scoped="" ref="0xb7bee010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7bede18" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7bede18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bec010"/>
        <function-ref name="isInput" scoped="" ref="0xb7bec0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb7bec1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bec2b0"/>
        <function-ref name="get" scoped="" ref="0xb7bec390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bec470"/>
        <function-ref name="set" scoped="" ref="0xb7bec550"/>
        <function-ref name="clr" scoped="" ref="0xb7bec630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7bea490" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7bea490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bea668"/>
        <function-ref name="isInput" scoped="" ref="0xb7bea748"/>
        <function-ref name="toggle" scoped="" ref="0xb7bea828"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bea908"/>
        <function-ref name="get" scoped="" ref="0xb7bea9e8"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7beaac8"/>
        <function-ref name="set" scoped="" ref="0xb7beaba8"/>
        <function-ref name="clr" scoped="" ref="0xb7beac88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7be7ac8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7be7ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7be7ca0"/>
        <function-ref name="isInput" scoped="" ref="0xb7be7d80"/>
        <function-ref name="toggle" scoped="" ref="0xb7be7e60"/>
        <function-ref name="isOutput" scoped="" ref="0xb7be6010"/>
        <function-ref name="get" scoped="" ref="0xb7be60f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7be61d0"/>
        <function-ref name="set" scoped="" ref="0xb7be62b0"/>
        <function-ref name="clr" scoped="" ref="0xb7be6390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7be41f8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7be41f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7be43d0"/>
        <function-ref name="isInput" scoped="" ref="0xb7be44b0"/>
        <function-ref name="toggle" scoped="" ref="0xb7be4590"/>
        <function-ref name="isOutput" scoped="" ref="0xb7be4670"/>
        <function-ref name="get" scoped="" ref="0xb7be4750"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7be4830"/>
        <function-ref name="set" scoped="" ref="0xb7be4910"/>
        <function-ref name="clr" scoped="" ref="0xb7be49f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7be2898" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7be2898"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7be2a70"/>
        <function-ref name="isInput" scoped="" ref="0xb7be2b50"/>
        <function-ref name="toggle" scoped="" ref="0xb7be2c30"/>
        <function-ref name="isOutput" scoped="" ref="0xb7be2d10"/>
        <function-ref name="get" scoped="" ref="0xb7be2df0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7be2ed0"/>
        <function-ref name="set" scoped="" ref="0xb7be0010"/>
        <function-ref name="clr" scoped="" ref="0xb7be00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7bdfef8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7bdfef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bde0e0"/>
        <function-ref name="isInput" scoped="" ref="0xb7bde1c0"/>
        <function-ref name="toggle" scoped="" ref="0xb7bde2a0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bde380"/>
        <function-ref name="get" scoped="" ref="0xb7bde460"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bde540"/>
        <function-ref name="set" scoped="" ref="0xb7bde620"/>
        <function-ref name="clr" scoped="" ref="0xb7bde700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7bdc540" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7bdc540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bdc718"/>
        <function-ref name="isInput" scoped="" ref="0xb7bdc7f8"/>
        <function-ref name="toggle" scoped="" ref="0xb7bdc8d8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bdc9b8"/>
        <function-ref name="get" scoped="" ref="0xb7bdca98"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bdcb78"/>
        <function-ref name="set" scoped="" ref="0xb7bdcc58"/>
        <function-ref name="clr" scoped="" ref="0xb7bdcd38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7bd9c48" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7bd9c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bd9e20"/>
        <function-ref name="isInput" scoped="" ref="0xb7bd9f00"/>
        <function-ref name="toggle" scoped="" ref="0xb7bd8010"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bd80f0"/>
        <function-ref name="get" scoped="" ref="0xb7bd81d0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bd82b0"/>
        <function-ref name="set" scoped="" ref="0xb7bd8390"/>
        <function-ref name="clr" scoped="" ref="0xb7bd8470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7bd6308" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7bd6308"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bd64e0"/>
        <function-ref name="isInput" scoped="" ref="0xb7bd65c0"/>
        <function-ref name="toggle" scoped="" ref="0xb7bd66a0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bd6780"/>
        <function-ref name="get" scoped="" ref="0xb7bd6860"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bd6940"/>
        <function-ref name="set" scoped="" ref="0xb7bd6a20"/>
        <function-ref name="clr" scoped="" ref="0xb7bd6b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7bd4908" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7bd4908"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bd4ae0"/>
        <function-ref name="isInput" scoped="" ref="0xb7bd4bc0"/>
        <function-ref name="toggle" scoped="" ref="0xb7bd4ca0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bd4d80"/>
        <function-ref name="get" scoped="" ref="0xb7bd4e60"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bd3010"/>
        <function-ref name="set" scoped="" ref="0xb7bd30f0"/>
        <function-ref name="clr" scoped="" ref="0xb7bd31d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0xb7bd0010" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0xb7bd0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7bd01e8"/>
        <function-ref name="isInput" scoped="" ref="0xb7bd02c8"/>
        <function-ref name="toggle" scoped="" ref="0xb7bd03a8"/>
        <function-ref name="isOutput" scoped="" ref="0xb7bd0488"/>
        <function-ref name="get" scoped="" ref="0xb7bd0568"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7bd0648"/>
        <function-ref name="set" scoped="" ref="0xb7bd0728"/>
        <function-ref name="clr" scoped="" ref="0xb7bd0808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7bb2ec0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7bb2ec0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0xb7d3b5c0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0xb7d3b5c0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7bb10c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0xb7bb1210" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0xb7bb1210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0xb7bb13e8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0xb7bb14c8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0xb7bb15a8"/>
        <function-ref name="actualMicro" scoped="" ref="0xb7bb1688"/>
        <function-ref name="adcPrescaler" scoped="" ref="0xb7bb1768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0xb7ba1e48" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xb7ba1e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7ba0050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0xb7ba1260" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xb7ba1260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xb7ba1438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0xb7ba1ad8" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb7ba1ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7ba1cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0xb7ba15a8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0xb7ba15a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7ba1780"/>
        <function-ref name="taskLoop" scoped="" ref="0xb7ba1860"/>
        <function-ref name="runNextTask" scoped="" ref="0xb7ba1940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0xb7d38268" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0xb7d38268"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7d38440"/>
        <function-ref name="runTask" scoped="" ref="0xb7d38520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0xb7d345c8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0xb7d345c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7d347a0"/>
        <function-ref name="taskLoop" scoped="" ref="0xb7d34880"/>
        <function-ref name="runNextTask" scoped="" ref="0xb7d34960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0xb7cc6b98" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0xb7cc6b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7cc6d70"/>
        <function-ref name="runTask" scoped="" ref="0xb7cc6e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0xb7cc2568" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0xb7cc2568"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0xb7cc2740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0xb7cc6400" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0xb7cc6400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7cc65d8"/>
        <function-ref name="taskLoop" scoped="" ref="0xb7cc66b8"/>
        <function-ref name="runNextTask" scoped="" ref="0xb7cc6798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0xb7cae3a0" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0xb7cae3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0xb7cae578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0xb7cb69b8" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0xb7cb69b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0xb7cb6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0xb7cb2750" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0xb7cb2750"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xb7cb2928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0xb7b99da0" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncC.nc">
      <component-ref qname="TimeSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xb7b99da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xb7b98010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GlobalTime" ref="0xb7b90848" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncC.nc">
      <component-ref qname="TimeSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GlobalTime" scoped="" ref="0xb7b90848"/></type-interface>
      <instance>
        <interfacedef-ref qname="GlobalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cebc58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7cebe28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getLocalTime" scoped="" ref="0xb7b90e90"/>
        <function-ref name="global2Local" scoped="" ref="0xb7b96628"/>
        <function-ref name="getGlobalTime" scoped="" ref="0xb7b960a8"/>
        <function-ref name="local2Global" scoped="" ref="0xb7b96368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncInfo" ref="0xb7b8a188" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncC.nc">
      <component-ref qname="TimeSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncInfo" scoped="" ref="0xb7b8a188"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getSyncPoint" scoped="" ref="0xb7b8a360"/>
        <function-ref name="getRootID" scoped="" ref="0xb7b8a440"/>
        <function-ref name="getSeqNum" scoped="" ref="0xb7b8a520"/>
        <function-ref name="getOffset" scoped="" ref="0xb7b8a600"/>
        <function-ref name="getNumEntries" scoped="" ref="0xb7b8a6e0"/>
        <function-ref name="getHeartBeats" scoped="" ref="0xb7b8a7c0"/>
        <function-ref name="getSkew" scoped="" ref="0xb7b8a8a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7b98178" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncC.nc">
      <component-ref qname="TimeSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7b98178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7b98350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncMode" ref="0xb7b8f040" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncC.nc">
      <component-ref qname="TimeSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncMode" scoped="" ref="0xb7b8f040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncMode"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7b8f218"/>
        <function-ref name="getMode" scoped="" ref="0xb7b8f2f8"/>
        <function-ref name="setMode" scoped="" ref="0xb7b8f3d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncNotify" ref="0xb7b842a0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncC.nc">
      <component-ref qname="TimeSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncNotify" scoped="" ref="0xb7b842a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncNotify"/>
      </instance>
      <interface-functions>
        <function-ref name="msg_received" scoped="" ref="0xb7b84478"/>
        <function-ref name="msg_sent" scoped="" ref="0xb7b84558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb7b94ae0" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncC.nc">
      <component-ref qname="TimeSyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xb7b94ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb7b94cb8"/>
        <function-ref name="stop" scoped="" ref="0xb7b94d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0xb7b007e8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xb7b007e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xb7b009c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GlobalTime" ref="0xb7b02618" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GlobalTime" scoped="" ref="0xb7b02618"/></type-interface>
      <instance>
        <interfacedef-ref qname="GlobalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cebc58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7cebe28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getLocalTime" scoped="" ref="0xb7b02c60"/>
        <function-ref name="global2Local" scoped="" ref="0xb7b01410"/>
        <function-ref name="getGlobalTime" scoped="" ref="0xb7b02e60"/>
        <function-ref name="local2Global" scoped="" ref="0xb7b01150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0xb7af8788" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb7af8788"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cebc58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7cebe28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7af8dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0xb7b00b20" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0xb7b00b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb7b00cf8"/>
        <function-ref name="stopDone" scoped="" ref="0xb7b00dd8"/>
        <function-ref name="start" scoped="" ref="0xb7b00eb8"/>
        <function-ref name="stop" scoped="" ref="0xb7aff010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0xb7aff290" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb7aff290"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cebc58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7cebe28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7aff9c0"/>
        <function-ref name="getPayload" scoped="" ref="0xb7afd618"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7afd438"/>
        <function-ref name="cancel" scoped="" ref="0xb7affe40"/>
        <function-ref name="sendDone" scoped="" ref="0xb7afd0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncInfo" ref="0xb7b01668" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncInfo" scoped="" ref="0xb7b01668"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getSyncPoint" scoped="" ref="0xb7b01840"/>
        <function-ref name="getRootID" scoped="" ref="0xb7b01920"/>
        <function-ref name="getSeqNum" scoped="" ref="0xb7b01a00"/>
        <function-ref name="getOffset" scoped="" ref="0xb7b01ae0"/>
        <function-ref name="getNumEntries" scoped="" ref="0xb7b01bc0"/>
        <function-ref name="getHeartBeats" scoped="" ref="0xb7b01ca0"/>
        <function-ref name="getSkew" scoped="" ref="0xb7b01d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7b04e68" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7b04e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7b02050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0xb7afd930" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb7afd930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7afdb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncMode" ref="0xb7b01ec0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncMode" scoped="" ref="0xb7b01ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncMode"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7b000c0"/>
        <function-ref name="getMode" scoped="" ref="0xb7b001a0"/>
        <function-ref name="setMode" scoped="" ref="0xb7b00280"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendMsg" ref="0xb7af7010" loc="320:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendMsg" scoped="" ref="0xb7af7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7af71e8"/>
        <function-ref name="runTask" scoped="" ref="0xb7af72c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="processMsg" ref="0xb7af7448" loc="266:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="processMsg" scoped="" ref="0xb7af7448"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7af7620"/>
        <function-ref name="runTask" scoped="" ref="0xb7af7700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb7afbba8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb7afbba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb7afbd80"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb7afbe60"/>
        <function-ref name="led1On" scoped="" ref="0xb7af9010"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb7af90f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb7af91d0"/>
        <function-ref name="get" scoped="" ref="0xb7af92b0"/>
        <function-ref name="led1Off" scoped="" ref="0xb7af9390"/>
        <function-ref name="led2On" scoped="" ref="0xb7af9710"/>
        <function-ref name="set" scoped="" ref="0xb7af9550"/>
        <function-ref name="led2Off" scoped="" ref="0xb7af9470"/>
        <function-ref name="led0On" scoped="" ref="0xb7af9630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncNotify" ref="0xb7b003c0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncNotify" scoped="" ref="0xb7b003c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncNotify"/>
      </instance>
      <interface-functions>
        <function-ref name="msg_received" scoped="" ref="0xb7b00598"/>
        <function-ref name="msg_sent" scoped="" ref="0xb7b00678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0xb7b02190" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0xb7b02190"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb7b02368"/>
        <function-ref name="stop" scoped="" ref="0xb7b02448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb7afdcd8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb7afdcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cebc58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7cebe28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7afb650"/>
        <function-ref name="fired" scoped="" ref="0xb7afca30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb7afb010"/>
        <function-ref name="isOneShot" scoped="" ref="0xb7afcdf0"/>
        <function-ref name="getdt" scoped="" ref="0xb7afba10"/>
        <function-ref name="gett0" scoped="" ref="0xb7afb830"/>
        <function-ref name="isRunning" scoped="" ref="0xb7afcc10"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb7afc350"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb7afb330"/>
        <function-ref name="startOneShot" scoped="" ref="0xb7afc5d0"/>
        <function-ref name="stop" scoped="" ref="0xb7afc850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncPacket" ref="0xb7af9970" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncP.nc">
      <component-ref qname="TimeSyncC.TimeSyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncPacket" scoped="" ref="0xb7af9970"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cebc58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7cebe28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0xb7af81e0"/>
        <function-ref name="eventTime" scoped="" ref="0xb7af8480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb7ae3a78" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb7ae3a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb7ae3c50"/>
        <function-ref name="stopDone" scoped="" ref="0xb7ae3d30"/>
        <function-ref name="start" scoped="" ref="0xb7ae3e10"/>
        <function-ref name="stop" scoped="" ref="0xb7ae3ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacketMilli" ref="0xb7acceb8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0xb7acceb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cebc58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7cebe28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0xb7aca608"/>
        <function-ref name="eventTime" scoped="" ref="0xb7aca8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb7ada520" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb7ada520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7ada6f8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb7ada7d8"/>
        <function-ref name="getPayload" scoped="" ref="0xb7ada8b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7ada998"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb7adaa78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb7ae28c8" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb7ae28c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7b6d1d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7ae2aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSendMilli" ref="0xb7acd678" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0xb7acd678"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cebc58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7cebe28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7b6d1d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7acdda8"/>
        <function-ref name="getPayload" scoped="" ref="0xb7acca20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7acc840"/>
        <function-ref name="cancel" scoped="" ref="0xb7acc260"/>
        <function-ref name="sendDone" scoped="" ref="0xb7acc500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSendRadio" ref="0xb7ae0d40" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncAMSendRadio" scoped="" ref="0xb7ae0d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cea410"/>
            <typename><typedef-ref name="TRF230" ref="0xb7ae3060"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7b6d1d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7adf488"/>
        <function-ref name="getPayload" scoped="" ref="0xb7acf0d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7adfee8"/>
        <function-ref name="cancel" scoped="" ref="0xb7adf908"/>
        <function-ref name="sendDone" scoped="" ref="0xb7adfba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb7ae22f0" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb7ae22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7ae24c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacketRadio" ref="0xb7acf570" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncPacketRadio" scoped="" ref="0xb7acf570"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cea410"/>
            <typename><typedef-ref name="TRF230" ref="0xb7ae3060"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0xb7acfca0"/>
        <function-ref name="eventTime" scoped="" ref="0xb7acd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb7ad1cb0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/TimeSyncMessageC.nc">
      <component-ref qname="TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb7ad1cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb7ad1e88"/>
        <function-ref name="source" scoped="" ref="0xb7ae0010"/>
        <function-ref name="address" scoped="" ref="0xb7ae00f0"/>
        <function-ref name="destination" scoped="" ref="0xb7ae01d0"/>
        <function-ref name="setSource" scoped="" ref="0xb7ae02b0"/>
        <function-ref name="setDestination" scoped="" ref="0xb7ae0390"/>
        <function-ref name="type" scoped="" ref="0xb7ae0470"/>
        <function-ref name="setType" scoped="" ref="0xb7ae0550"/>
        <function-ref name="isForMe" scoped="" ref="0xb7ae0630"/>
        <function-ref name="setGroup" scoped="" ref="0xb7ae0710"/>
        <function-ref name="localGroup" scoped="" ref="0xb7ae07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb7ac50d0" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230TimeSyncMessageC.nc">
      <component-ref qname="RF230TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb7ac50d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb7ac52a8"/>
        <function-ref name="stopDone" scoped="" ref="0xb7ac5388"/>
        <function-ref name="start" scoped="" ref="0xb7ac5468"/>
        <function-ref name="stop" scoped="" ref="0xb7ac5548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacketMilli" ref="0xb7abda00" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230TimeSyncMessageC.nc">
      <component-ref qname="RF230TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0xb7abda00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cebc58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7cebe28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0xb7abc1e0"/>
        <function-ref name="eventTime" scoped="" ref="0xb7abc480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb7ac4228" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230TimeSyncMessageC.nc">
      <component-ref qname="RF230TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb7ac4228"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7ac4400"/>
        <function-ref name="payloadLength" scoped="" ref="0xb7ac44e0"/>
        <function-ref name="getPayload" scoped="" ref="0xb7ac45c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7ac46a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb7ac4780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb7ac5ef8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230TimeSyncMessageC.nc">
      <component-ref qname="RF230TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb7ac5ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7b6d1d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7ac40e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSendMilli" ref="0xb7abe1e8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230TimeSyncMessageC.nc">
      <component-ref qname="RF230TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0xb7abe1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cebc58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7cebe28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7b6d1d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7abe918"/>
        <function-ref name="getPayload" scoped="" ref="0xb7abd568"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7abd388"/>
        <function-ref name="cancel" scoped="" ref="0xb7abed98"/>
        <function-ref name="sendDone" scoped="" ref="0xb7abd048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSendRadio" ref="0xb7ac38e0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230TimeSyncMessageC.nc">
      <component-ref qname="RF230TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncAMSendRadio" scoped="" ref="0xb7ac38e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cea410"/>
            <typename><typedef-ref name="TRF230" ref="0xb7ae3060"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7b6d1d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7ac2048"/>
        <function-ref name="getPayload" scoped="" ref="0xb7ac2c88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7ac2aa8"/>
        <function-ref name="cancel" scoped="" ref="0xb7ac24c8"/>
        <function-ref name="sendDone" scoped="" ref="0xb7ac2768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb7ac5920" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230TimeSyncMessageC.nc">
      <component-ref qname="RF230TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb7ac5920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7ac5af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacketRadio" ref="0xb7ac0160" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230TimeSyncMessageC.nc">
      <component-ref qname="RF230TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncPacketRadio" scoped="" ref="0xb7ac0160"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cea410"/>
            <typename><typedef-ref name="TRF230" ref="0xb7ae3060"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0xb7ac0890"/>
        <function-ref name="eventTime" scoped="" ref="0xb7ac0b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb7ac48d0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230TimeSyncMessageC.nc">
      <component-ref qname="RF230TimeSyncMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb7ac48d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb7ac4aa8"/>
        <function-ref name="source" scoped="" ref="0xb7ac4b88"/>
        <function-ref name="address" scoped="" ref="0xb7ac4c68"/>
        <function-ref name="destination" scoped="" ref="0xb7ac4d48"/>
        <function-ref name="setSource" scoped="" ref="0xb7ac4e28"/>
        <function-ref name="setDestination" scoped="" ref="0xb7ac4f08"/>
        <function-ref name="type" scoped="" ref="0xb7ac3010"/>
        <function-ref name="setType" scoped="" ref="0xb7ac30f0"/>
        <function-ref name="isForMe" scoped="" ref="0xb7ac31d0"/>
        <function-ref name="setGroup" scoped="" ref="0xb7ac32b0"/>
        <function-ref name="localGroup" scoped="" ref="0xb7ac3390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb7aa6d48" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230TimeSyncMessageP.nc">
      <component-ref qname="RF230TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb7aa6d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7aa6f20"/>
        <function-ref name="getPayload" scoped="" ref="0xb7aae018"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7aae0f8"/>
        <function-ref name="cancel" scoped="" ref="0xb7aae1d8"/>
        <function-ref name="sendDone" scoped="" ref="0xb7aae2b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacketMilli" ref="0xb7ab0730" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230TimeSyncMessageP.nc">
      <component-ref qname="RF230TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncPacketMilli" scoped="" ref="0xb7ab0730"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cebc58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7cebe28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0xb7ab0e60"/>
        <function-ref name="eventTime" scoped="" ref="0xb7aaf130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSendMilli" ref="0xb7ab59e0" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230TimeSyncMessageP.nc">
      <component-ref qname="RF230TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncAMSendMilli" scoped="" ref="0xb7ab59e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cebc58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7cebe28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7ab31e0"/>
        <function-ref name="getPayload" scoped="" ref="0xb7ab3e20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7ab3c40"/>
        <function-ref name="cancel" scoped="" ref="0xb7ab3660"/>
        <function-ref name="sendDone" scoped="" ref="0xb7ab3900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb7ab2150" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230TimeSyncMessageP.nc">
      <component-ref qname="RF230TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb7ab2150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7ab2328"/>
        <function-ref name="payloadLength" scoped="" ref="0xb7ab2408"/>
        <function-ref name="getPayload" scoped="" ref="0xb7ab24e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7ab25c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb7ab26a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0xb7aae430" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230TimeSyncMessageP.nc">
      <component-ref qname="RF230TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0xb7aae430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7aae608"/>
        <function-ref name="payloadLength" scoped="" ref="0xb7aae6e8"/>
        <function-ref name="getPayload" scoped="" ref="0xb7aae7c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7aae8a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb7aae988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncAMSendRadio" ref="0xb7ab7ee0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230TimeSyncMessageP.nc">
      <component-ref qname="RF230TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncAMSendRadio" scoped="" ref="0xb7ab7ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cea410"/>
            <typename><typedef-ref name="TRF230" ref="0xb7ae3060"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7ab6660"/>
        <function-ref name="getPayload" scoped="" ref="0xb7ab52b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7ab50d8"/>
        <function-ref name="cancel" scoped="" ref="0xb7ab6ae0"/>
        <function-ref name="sendDone" scoped="" ref="0xb7ab6d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeSyncPacketRadio" ref="0xb7ab2968" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230TimeSyncMessageP.nc">
      <component-ref qname="RF230TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncPacketRadio" scoped="" ref="0xb7ab2968"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cea410"/>
            <typename><typedef-ref name="TRF230" ref="0xb7ae3060"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="isValid" scoped="" ref="0xb7ab00b8"/>
        <function-ref name="eventTime" scoped="" ref="0xb7ab0358"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStampRadio" ref="0xb7aa0308" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230TimeSyncMessageP.nc">
      <component-ref qname="RF230TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb7aa0308"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cea410"/>
            <typename><typedef-ref name="TRF230" ref="0xb7ae3060"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb7aa0d18"/>
        <function-ref name="clear" scoped="" ref="0xb7aad010"/>
        <function-ref name="isValid" scoped="" ref="0xb7aa0a58"/>
        <function-ref name="set" scoped="" ref="0xb7aad2d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0xb7aa5ac0" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230TimeSyncMessageP.nc">
      <component-ref qname="RF230TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0xb7aa5ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cea410"/>
            <typename><typedef-ref name="TRF230" ref="0xb7ae3060"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7a9e120"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0xb7a99d68" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230TimeSyncMessageP.nc">
      <component-ref qname="RF230TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb7a99d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7a9d960"/>
        <function-ref name="get" scoped="" ref="0xb7a9d6a0"/>
        <function-ref name="isSet" scoped="" ref="0xb7a9d3e0"/>
        <function-ref name="set" scoped="" ref="0xb7a9dc20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0xb7a9e390" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230TimeSyncMessageP.nc">
      <component-ref qname="RF230TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0xb7a9e390"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cebc58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7cebe28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7a9e9d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStampMilli" ref="0xb7aad748" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230TimeSyncMessageP.nc">
      <component-ref qname="RF230TimeSyncMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb7aad748"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cebc58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7cebe28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb7aa5170"/>
        <function-ref name="clear" scoped="" ref="0xb7aa5430"/>
        <function-ref name="isValid" scoped="" ref="0xb7aade98"/>
        <function-ref name="set" scoped="" ref="0xb7aa56f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb7a77780" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb7a77780"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb7a77958"/>
        <function-ref name="stopDone" scoped="" ref="0xb7a77a38"/>
        <function-ref name="start" scoped="" ref="0xb7a77b18"/>
        <function-ref name="stop" scoped="" ref="0xb7a77bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0xb7a659b8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0xb7a659b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7a63590"/>
        <function-ref name="get" scoped="" ref="0xb7a632d0"/>
        <function-ref name="isSet" scoped="" ref="0xb7a63010"/>
        <function-ref name="set" scoped="" ref="0xb7a63850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb7a75250" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb7a75250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7a75428"/>
        <function-ref name="payloadLength" scoped="" ref="0xb7a75508"/>
        <function-ref name="getPayload" scoped="" ref="0xb7a755e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7a756c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb7a757a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb7a76010" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb7a76010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7b6d1d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7a761e8"/>
        <function-ref name="getPayload" scoped="" ref="0xb7a762c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7a763a8"/>
        <function-ref name="cancel" scoped="" ref="0xb7a76488"/>
        <function-ref name="sendDone" scoped="" ref="0xb7a76568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb7a76f18" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb7a76f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7b6d1d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7a75108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0xb7a6e750" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0xb7a6e750"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7a65328"/>
        <function-ref name="get" scoped="" ref="0xb7a65068"/>
        <function-ref name="isSet" scoped="" ref="0xb7a6ed98"/>
        <function-ref name="set" scoped="" ref="0xb7a655e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb7a678b8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb7a678b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0xb7a67a90"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0xb7a67b70"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0xb7a67c50"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0xb7a67d30"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0xb7a67e10"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0xb7a67ef0"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0xb7a72010"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0xb7a720f0"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0xb7a721d0"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0xb7a722b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb7a76940" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb7a76940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7b6d1d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7a76b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0xb7a63cc8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb7a63cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cea410"/>
            <typename><typedef-ref name="TRF230" ref="0xb7ae3060"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb7a626f8"/>
        <function-ref name="clear" scoped="" ref="0xb7a629b8"/>
        <function-ref name="isValid" scoped="" ref="0xb7a62438"/>
        <function-ref name="set" scoped="" ref="0xb7a62c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0xb7a724d0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0xb7a724d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7a6e0b8"/>
        <function-ref name="get" scoped="" ref="0xb7a72dd8"/>
        <function-ref name="isSet" scoped="" ref="0xb7a72b18"/>
        <function-ref name="set" scoped="" ref="0xb7a6e378"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb7a6f690" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7a6f690"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb7a6f868"/>
        <function-ref name="noAck" scoped="" ref="0xb7a6f948"/>
        <function-ref name="wasAcked" scoped="" ref="0xb7a6fa28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb7a758f8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb7a758f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb7a75ad0"/>
        <function-ref name="source" scoped="" ref="0xb7a75bb0"/>
        <function-ref name="address" scoped="" ref="0xb7a75c90"/>
        <function-ref name="destination" scoped="" ref="0xb7a75d70"/>
        <function-ref name="setSource" scoped="" ref="0xb7a75e50"/>
        <function-ref name="setDestination" scoped="" ref="0xb7a74010"/>
        <function-ref name="type" scoped="" ref="0xb7a740f0"/>
        <function-ref name="setType" scoped="" ref="0xb7a741d0"/>
        <function-ref name="isForMe" scoped="" ref="0xb7a742b0"/>
        <function-ref name="setGroup" scoped="" ref="0xb7a74390"/>
        <function-ref name="localGroup" scoped="" ref="0xb7a74470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb7a60108" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb7a60108"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cebc58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7cebe28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb7a60b98"/>
        <function-ref name="clear" scoped="" ref="0xb7a60e58"/>
        <function-ref name="isValid" scoped="" ref="0xb7a608d8"/>
        <function-ref name="set" scoped="" ref="0xb7a5f150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0xb7a3ee30" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0xb7a3ee30"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getReceiveAverage" scoped="" ref="0xb7a45750"/>
        <function-ref name="channelError" scoped="" ref="0xb7a45130"/>
        <function-ref name="getUpdatePeriod" scoped="" ref="0xb7a45210"/>
        <function-ref name="getChannelTime" scoped="" ref="0xb7a452f0"/>
        <function-ref name="getErrorAverage" scoped="" ref="0xb7a453d0"/>
        <function-ref name="getTransmitAverage" scoped="" ref="0xb7a454b0"/>
        <function-ref name="timerTick" scoped="" ref="0xb7a45590"/>
        <function-ref name="getSender" scoped="" ref="0xb7a45670"/>
        <function-ref name="getNeighborAverage" scoped="" ref="0xb7a45050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0xb7a34790" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0xb7a34790"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0xb7a34968"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0xb7a34a48"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0xb7a34b28"/>
        <function-ref name="timerTick" scoped="" ref="0xb7a34c08"/>
        <function-ref name="getTransmitTime" scoped="" ref="0xb7a34ce8"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0xb7a34dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0xb7a32818" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0xb7a32818"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="checkPacket" scoped="" ref="0xb7a329f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0xb7a30078" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0xb7a30078"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xb7a30250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0xb7a44b30" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0xb7a44b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0xb7a44d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0xb7a4a2c0" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0xb7a4a2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0xb7a4a498"/>
        <function-ref name="createAckPacket" scoped="" ref="0xb7a4a578"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb7a4a658"/>
        <function-ref name="isAckPacket" scoped="" ref="0xb7a4a738"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0xb7a4a818"/>
        <function-ref name="getAckTimeout" scoped="" ref="0xb7a4a8f8"/>
        <function-ref name="setAckReceived" scoped="" ref="0xb7a4a9d8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb7a4aab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEE154Packet" ref="0xb7a1b590" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEE154Packet" scoped="" ref="0xb7a1b590"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0xb7a1b768"/>
        <function-ref name="getDSN" scoped="" ref="0xb7a1b848"/>
        <function-ref name="setFCF" scoped="" ref="0xb7a1b928"/>
        <function-ref name="isAckFrame" scoped="" ref="0xb7a1ba08"/>
        <function-ref name="set6LowPan" scoped="" ref="0xb7a1bae8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0xb7a1bbc8"/>
        <function-ref name="createDataFrame" scoped="" ref="0xb7a1bca8"/>
        <function-ref name="setDSN" scoped="" ref="0xb7a1bd88"/>
        <function-ref name="createAckReply" scoped="" ref="0xb7a1be68"/>
        <function-ref name="getHeader" scoped="" ref="0xb7a38010"/>
        <function-ref name="getSrcAddr" scoped="" ref="0xb7a380f0"/>
        <function-ref name="isDataFrame" scoped="" ref="0xb7a381d0"/>
        <function-ref name="setType" scoped="" ref="0xb7a382b0"/>
        <function-ref name="getAckRequired" scoped="" ref="0xb7a38410"/>
        <function-ref name="verifyAckReply" scoped="" ref="0xb7a384f0"/>
        <function-ref name="setLength" scoped="" ref="0xb7a385d0"/>
        <function-ref name="get6LowPan" scoped="" ref="0xb7a386b0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb7a38790"/>
        <function-ref name="setDestAddr" scoped="" ref="0xb7a38870"/>
        <function-ref name="createAckFrame" scoped="" ref="0xb7a38950"/>
        <function-ref name="setFramePending" scoped="" ref="0xb7a38a30"/>
        <function-ref name="getLength" scoped="" ref="0xb7a38b10"/>
        <function-ref name="setDestPan" scoped="" ref="0xb7a38bf0"/>
        <function-ref name="setAckRequired" scoped="" ref="0xb7a38cd0"/>
        <function-ref name="getFCF" scoped="" ref="0xb7a38db0"/>
        <function-ref name="getType" scoped="" ref="0xb7a33010"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb7a330f0"/>
        <function-ref name="getDestAddr" scoped="" ref="0xb7a331d0"/>
        <function-ref name="getFramePending" scoped="" ref="0xb7a332b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0xb7a333f8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb7a333f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7a335d0"/>
        <function-ref name="payloadLength" scoped="" ref="0xb7a336b0"/>
        <function-ref name="getPayload" scoped="" ref="0xb7a33790"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7a33870"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb7a33950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xb7a15e88" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb7a15e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb7a1a070"/>
        <function-ref name="wait" scoped="" ref="0xb7a1a150"/>
        <function-ref name="cancel" scoped="" ref="0xb7a1a230"/>
        <function-ref name="isFree" scoped="" ref="0xb7a1a310"/>
        <function-ref name="getNow" scoped="" ref="0xb7a1a3f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0xb7a46e90" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0xb7a46e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0xb7a5a080"/>
        <function-ref name="reportChannelError" scoped="" ref="0xb7a5a160"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0xb7a5a240"/>
        <function-ref name="getSender" scoped="" ref="0xb7a5a320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0xb7a39698" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0xb7a39698"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0xb7a39870"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0xb7a39950"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0xb7a39a30"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0xb7a39b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230Config" ref="0xb7a51380" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Config" scoped="" ref="0xb7a51380"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230Config"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeaderLength" scoped="" ref="0xb7a51558"/>
        <function-ref name="getDefaultChannel" scoped="" ref="0xb7a51a98"/>
        <function-ref name="getPayload" scoped="" ref="0xb7a51718"/>
        <function-ref name="setLength" scoped="" ref="0xb7a517f8"/>
        <function-ref name="getLength" scoped="" ref="0xb7a518d8"/>
        <function-ref name="getMaxLength" scoped="" ref="0xb7a519b8"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0xb7a51638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0xb79e29d8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0xb79e29d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb79e15c8"/>
        <function-ref name="get" scoped="" ref="0xb79e1308"/>
        <function-ref name="isSet" scoped="" ref="0xb79e1048"/>
        <function-ref name="set" scoped="" ref="0xb79e1888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb79e7ba0" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb79e7ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb79e7d78"/>
        <function-ref name="payloadLength" scoped="" ref="0xb79e7e58"/>
        <function-ref name="getPayload" scoped="" ref="0xb79e6010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb79e60f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb79e61d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0xb79e3770" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0xb79e3770"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb79e2348"/>
        <function-ref name="get" scoped="" ref="0xb79e2088"/>
        <function-ref name="isSet" scoped="" ref="0xb79e3db8"/>
        <function-ref name="set" scoped="" ref="0xb79e2608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSleepInterval" ref="0xb79e1c68" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSleepInterval" scoped="" ref="0xb79e1c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb79df868"/>
        <function-ref name="get" scoped="" ref="0xb79df5a8"/>
        <function-ref name="isSet" scoped="" ref="0xb79df2e8"/>
        <function-ref name="set" scoped="" ref="0xb79dfb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0xb79dff00" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb79dff00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb79ddaf8"/>
        <function-ref name="get" scoped="" ref="0xb79dd838"/>
        <function-ref name="isSet" scoped="" ref="0xb79dd578"/>
        <function-ref name="set" scoped="" ref="0xb79dddb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0xb79dc248" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb79dc248"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cea410"/>
            <typename><typedef-ref name="TRF230" ref="0xb7ae3060"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb79dcc58"/>
        <function-ref name="clear" scoped="" ref="0xb79dcf18"/>
        <function-ref name="isValid" scoped="" ref="0xb79dc998"/>
        <function-ref name="set" scoped="" ref="0xb79db1f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb79e6f10" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb79e6f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb79e5108"/>
        <function-ref name="noAck" scoped="" ref="0xb79e51e8"/>
        <function-ref name="wasAcked" scoped="" ref="0xb79e52c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0xb79e54e8" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0xb79e54e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb79e30d8"/>
        <function-ref name="get" scoped="" ref="0xb79e5df0"/>
        <function-ref name="isSet" scoped="" ref="0xb79e5b30"/>
        <function-ref name="set" scoped="" ref="0xb79e3398"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb79e6320" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb79e6320"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb79e64f8"/>
        <function-ref name="source" scoped="" ref="0xb79e65d8"/>
        <function-ref name="address" scoped="" ref="0xb79e66b8"/>
        <function-ref name="destination" scoped="" ref="0xb79e6798"/>
        <function-ref name="setSource" scoped="" ref="0xb79e6878"/>
        <function-ref name="setDestination" scoped="" ref="0xb79e6958"/>
        <function-ref name="type" scoped="" ref="0xb79e6a38"/>
        <function-ref name="setType" scoped="" ref="0xb79e6b18"/>
        <function-ref name="isForMe" scoped="" ref="0xb79e6bf8"/>
        <function-ref name="setGroup" scoped="" ref="0xb79e6cd8"/>
        <function-ref name="localGroup" scoped="" ref="0xb79e6db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb79db668" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb79db668"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cebc58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7cebe28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb79d9088"/>
        <function-ref name="clear" scoped="" ref="0xb79d9348"/>
        <function-ref name="isValid" scoped="" ref="0xb79dbdb8"/>
        <function-ref name="set" scoped="" ref="0xb79d9608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0xb79d1718" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0xb79d1718"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb79cf308"/>
        <function-ref name="get" scoped="" ref="0xb79cf048"/>
        <function-ref name="isSet" scoped="" ref="0xb79d1d60"/>
        <function-ref name="set" scoped="" ref="0xb79cf5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb79d5a98" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb79d5a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb79d5c70"/>
        <function-ref name="payloadLength" scoped="" ref="0xb79d5d50"/>
        <function-ref name="getPayload" scoped="" ref="0xb79d5e30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb79d5f10"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb79d4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0xb79d24b0" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0xb79d24b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb79d1088"/>
        <function-ref name="get" scoped="" ref="0xb79d2db8"/>
        <function-ref name="isSet" scoped="" ref="0xb79d2af8"/>
        <function-ref name="set" scoped="" ref="0xb79d1348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSleepInterval" ref="0xb79cf9a8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSleepInterval" scoped="" ref="0xb79cf9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb79ce590"/>
        <function-ref name="get" scoped="" ref="0xb79ce2d0"/>
        <function-ref name="isSet" scoped="" ref="0xb79ce010"/>
        <function-ref name="set" scoped="" ref="0xb79ce850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEE154Packet" ref="0xb79c8788" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEE154Packet" scoped="" ref="0xb79c8788"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0xb79c8960"/>
        <function-ref name="getDSN" scoped="" ref="0xb79c8a40"/>
        <function-ref name="setFCF" scoped="" ref="0xb79c8b20"/>
        <function-ref name="isAckFrame" scoped="" ref="0xb79c8c00"/>
        <function-ref name="set6LowPan" scoped="" ref="0xb79c8ce0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0xb79c8dc0"/>
        <function-ref name="createDataFrame" scoped="" ref="0xb79c8ea0"/>
        <function-ref name="setDSN" scoped="" ref="0xb79c7010"/>
        <function-ref name="createAckReply" scoped="" ref="0xb79c70f0"/>
        <function-ref name="getHeader" scoped="" ref="0xb79c71d0"/>
        <function-ref name="getSrcAddr" scoped="" ref="0xb79c72b0"/>
        <function-ref name="isDataFrame" scoped="" ref="0xb79c7390"/>
        <function-ref name="setType" scoped="" ref="0xb79c7470"/>
        <function-ref name="getAckRequired" scoped="" ref="0xb79c75d0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0xb79c76b0"/>
        <function-ref name="setLength" scoped="" ref="0xb79c7790"/>
        <function-ref name="get6LowPan" scoped="" ref="0xb79c7870"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb79c7950"/>
        <function-ref name="setDestAddr" scoped="" ref="0xb79c7a30"/>
        <function-ref name="createAckFrame" scoped="" ref="0xb79c7b10"/>
        <function-ref name="setFramePending" scoped="" ref="0xb79c7bf0"/>
        <function-ref name="getLength" scoped="" ref="0xb79c7cd0"/>
        <function-ref name="setDestPan" scoped="" ref="0xb79c7db0"/>
        <function-ref name="setAckRequired" scoped="" ref="0xb79c7e90"/>
        <function-ref name="getFCF" scoped="" ref="0xb79c6010"/>
        <function-ref name="getType" scoped="" ref="0xb79c61f0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb79c62d0"/>
        <function-ref name="getDestAddr" scoped="" ref="0xb79c63b0"/>
        <function-ref name="getFramePending" scoped="" ref="0xb79c6490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0xb79cec28" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb79cec28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb79cd818"/>
        <function-ref name="get" scoped="" ref="0xb79cd558"/>
        <function-ref name="isSet" scoped="" ref="0xb79cd298"/>
        <function-ref name="set" scoped="" ref="0xb79cdad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0xb79cb010" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0xb79cb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cea410"/>
            <typename><typedef-ref name="TRF230" ref="0xb7ae3060"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb79cba20"/>
        <function-ref name="clear" scoped="" ref="0xb79cbce0"/>
        <function-ref name="isValid" scoped="" ref="0xb79cb760"/>
        <function-ref name="set" scoped="" ref="0xb79ca010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0xb79c66a8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0xb79c66a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cea410"/>
            <typename><typedef-ref name="TRF230" ref="0xb7ae3060"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb79c6cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb79d55b8" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb79d55b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb79d5790"/>
        <function-ref name="noAck" scoped="" ref="0xb79d5870"/>
        <function-ref name="wasAcked" scoped="" ref="0xb79d5950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0xb79d4230" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0xb79d4230"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb79d4df8"/>
        <function-ref name="get" scoped="" ref="0xb79d4b38"/>
        <function-ref name="isSet" scoped="" ref="0xb79d4878"/>
        <function-ref name="set" scoped="" ref="0xb79d20d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0xb79c5010" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0xb79c5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cebc58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7cebe28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb79c5658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb79ca488" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb79ca488"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cebc58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7cebe28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb79cae98"/>
        <function-ref name="clear" scoped="" ref="0xb79c8170"/>
        <function-ref name="isValid" scoped="" ref="0xb79cabd8"/>
        <function-ref name="set" scoped="" ref="0xb79c8430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEE154Packet" ref="0xb7994130" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <component-ref qname="IEEE154PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEE154Packet" scoped="" ref="0xb7994130"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0xb7994308"/>
        <function-ref name="getDSN" scoped="" ref="0xb79943e8"/>
        <function-ref name="setFCF" scoped="" ref="0xb79944c8"/>
        <function-ref name="isAckFrame" scoped="" ref="0xb79945a8"/>
        <function-ref name="set6LowPan" scoped="" ref="0xb7994688"/>
        <function-ref name="setSrcAddr" scoped="" ref="0xb7994768"/>
        <function-ref name="createDataFrame" scoped="" ref="0xb7994848"/>
        <function-ref name="setDSN" scoped="" ref="0xb7994928"/>
        <function-ref name="createAckReply" scoped="" ref="0xb7994a08"/>
        <function-ref name="getHeader" scoped="" ref="0xb7994ae8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0xb7994bc8"/>
        <function-ref name="isDataFrame" scoped="" ref="0xb7994ca8"/>
        <function-ref name="setType" scoped="" ref="0xb7994d88"/>
        <function-ref name="getAckRequired" scoped="" ref="0xb7994ee8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0xb7993010"/>
        <function-ref name="setLength" scoped="" ref="0xb79930f0"/>
        <function-ref name="get6LowPan" scoped="" ref="0xb79931d0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb79932b0"/>
        <function-ref name="setDestAddr" scoped="" ref="0xb7993390"/>
        <function-ref name="createAckFrame" scoped="" ref="0xb7993470"/>
        <function-ref name="setFramePending" scoped="" ref="0xb7993550"/>
        <function-ref name="getLength" scoped="" ref="0xb7993630"/>
        <function-ref name="setDestPan" scoped="" ref="0xb7993710"/>
        <function-ref name="setAckRequired" scoped="" ref="0xb79937f0"/>
        <function-ref name="getFCF" scoped="" ref="0xb79938d0"/>
        <function-ref name="getType" scoped="" ref="0xb7993ab0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb7993b90"/>
        <function-ref name="getDestAddr" scoped="" ref="0xb7993c70"/>
        <function-ref name="getFramePending" scoped="" ref="0xb7993d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb7993ea0" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <component-ref qname="IEEE154PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb7993ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb79920c0"/>
        <function-ref name="source" scoped="" ref="0xb79921a0"/>
        <function-ref name="address" scoped="" ref="0xb7992280"/>
        <function-ref name="destination" scoped="" ref="0xb7992360"/>
        <function-ref name="setSource" scoped="" ref="0xb7992440"/>
        <function-ref name="setDestination" scoped="" ref="0xb7992520"/>
        <function-ref name="type" scoped="" ref="0xb7992600"/>
        <function-ref name="setType" scoped="" ref="0xb79926e0"/>
        <function-ref name="isForMe" scoped="" ref="0xb79927c0"/>
        <function-ref name="setGroup" scoped="" ref="0xb79928a0"/>
        <function-ref name="localGroup" scoped="" ref="0xb7992980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEE154Packet" ref="0xb798e200" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketP.nc">
      <component-ref qname="IEEE154PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEE154Packet" scoped="" ref="0xb798e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0xb798e3d8"/>
        <function-ref name="getDSN" scoped="" ref="0xb798e4b8"/>
        <function-ref name="setFCF" scoped="" ref="0xb798e598"/>
        <function-ref name="isAckFrame" scoped="" ref="0xb798e678"/>
        <function-ref name="set6LowPan" scoped="" ref="0xb798e758"/>
        <function-ref name="setSrcAddr" scoped="" ref="0xb798e838"/>
        <function-ref name="createDataFrame" scoped="" ref="0xb798e918"/>
        <function-ref name="setDSN" scoped="" ref="0xb798e9f8"/>
        <function-ref name="createAckReply" scoped="" ref="0xb798ead8"/>
        <function-ref name="getHeader" scoped="" ref="0xb798ebb8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0xb798ec98"/>
        <function-ref name="isDataFrame" scoped="" ref="0xb798ed78"/>
        <function-ref name="setType" scoped="" ref="0xb798ee58"/>
        <function-ref name="getAckRequired" scoped="" ref="0xb798d010"/>
        <function-ref name="verifyAckReply" scoped="" ref="0xb798d0f0"/>
        <function-ref name="setLength" scoped="" ref="0xb798d1d0"/>
        <function-ref name="get6LowPan" scoped="" ref="0xb798d2b0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb798d390"/>
        <function-ref name="setDestAddr" scoped="" ref="0xb798d470"/>
        <function-ref name="createAckFrame" scoped="" ref="0xb798d550"/>
        <function-ref name="setFramePending" scoped="" ref="0xb798d630"/>
        <function-ref name="getLength" scoped="" ref="0xb798d710"/>
        <function-ref name="setDestPan" scoped="" ref="0xb798d7f0"/>
        <function-ref name="setAckRequired" scoped="" ref="0xb798d8d0"/>
        <function-ref name="getFCF" scoped="" ref="0xb798d9b0"/>
        <function-ref name="getType" scoped="" ref="0xb798db90"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb798dc70"/>
        <function-ref name="getDestAddr" scoped="" ref="0xb798dd50"/>
        <function-ref name="getFramePending" scoped="" ref="0xb798de30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0xb798a010" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketP.nc">
      <component-ref qname="IEEE154PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb798a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0xb798a1e8"/>
        <function-ref name="changed" scoped="" ref="0xb798a2c8"/>
        <function-ref name="amGroup" scoped="" ref="0xb798a3a8"/>
        <function-ref name="setAddress" scoped="" ref="0xb798a488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb798c010" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketP.nc">
      <component-ref qname="IEEE154PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb798c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb798c1e8"/>
        <function-ref name="source" scoped="" ref="0xb798c2c8"/>
        <function-ref name="address" scoped="" ref="0xb798c3a8"/>
        <function-ref name="destination" scoped="" ref="0xb798c488"/>
        <function-ref name="setSource" scoped="" ref="0xb798c568"/>
        <function-ref name="setDestination" scoped="" ref="0xb798c648"/>
        <function-ref name="type" scoped="" ref="0xb798c728"/>
        <function-ref name="setType" scoped="" ref="0xb798c808"/>
        <function-ref name="isForMe" scoped="" ref="0xb798c8e8"/>
        <function-ref name="setGroup" scoped="" ref="0xb798c9c8"/>
        <function-ref name="localGroup" scoped="" ref="0xb798caa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0xb794e690" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0xb794e690"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0xb794e868"/>
        <function-ref name="changed" scoped="" ref="0xb794e948"/>
        <function-ref name="amGroup" scoped="" ref="0xb794ea28"/>
        <function-ref name="setAddress" scoped="" ref="0xb794eb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb7943010" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb7943010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cea410"/>
            <typename><typedef-ref name="TMicro" ref="0xb7cea5e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7943658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb793e088" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb793e088"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cea410"/>
            <typename><typedef-ref name="TOne" ref="0xb7cc84a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb793e7d8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb793ebd8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb793e9d8"/>
        <function-ref name="overflow" scoped="" ref="0xb793edd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb7926350" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb7926350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0xb7926528"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb7926608"/>
        <function-ref name="getControlA" scoped="" ref="0xb79266e8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb79267c8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb79268a8"/>
        <function-ref name="setControlB" scoped="" ref="0xb7926988"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb7926a68"/>
        <function-ref name="getControlB" scoped="" ref="0xb7926b48"/>
        <function-ref name="setControlC" scoped="" ref="0xb7926c28"/>
        <function-ref name="setControlA" scoped="" ref="0xb7926d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb7920888" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xb7920888"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xb791f048"/>
        <function-ref name="test" scoped="" ref="0xb792bc38"/>
        <function-ref name="get" scoped="" ref="0xb7920ed0"/>
        <function-ref name="captured" scoped="" ref="0xb792b398"/>
        <function-ref name="reset" scoped="" ref="0xb792b638"/>
        <function-ref name="isOn" scoped="" ref="0xb792be38"/>
        <function-ref name="set" scoped="" ref="0xb792b0f8"/>
        <function-ref name="start" scoped="" ref="0xb792b838"/>
        <function-ref name="stop" scoped="" ref="0xb792ba38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb791e340" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb791e340"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb791d648"/>
        <function-ref name="fired" scoped="" ref="0xb791ee28"/>
        <function-ref name="get" scoped="" ref="0xb791e988"/>
        <function-ref name="reset" scoped="" ref="0xb791d048"/>
        <function-ref name="isOn" scoped="" ref="0xb791d848"/>
        <function-ref name="set" scoped="" ref="0xb791eb88"/>
        <function-ref name="start" scoped="" ref="0xb791d248"/>
        <function-ref name="stop" scoped="" ref="0xb791d448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb792ea60" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb792ea60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb7934210"/>
        <function-ref name="test" scoped="" ref="0xb7935d78"/>
        <function-ref name="get" scoped="" ref="0xb79350d8"/>
        <function-ref name="setScale" scoped="" ref="0xb7934410"/>
        <function-ref name="getScale" scoped="" ref="0xb79346b0"/>
        <function-ref name="reset" scoped="" ref="0xb7935778"/>
        <function-ref name="overflow" scoped="" ref="0xb7935578"/>
        <function-ref name="isOn" scoped="" ref="0xb7934010"/>
        <function-ref name="set" scoped="" ref="0xb79352d8"/>
        <function-ref name="start" scoped="" ref="0xb7935978"/>
        <function-ref name="stop" scoped="" ref="0xb7935b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb7912cc8" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb7912cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0xb7912ea0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb7911010"/>
        <function-ref name="getControlA" scoped="" ref="0xb79110f0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb79111d0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb79112b0"/>
        <function-ref name="setControlB" scoped="" ref="0xb7911390"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb7911470"/>
        <function-ref name="getControlB" scoped="" ref="0xb7911550"/>
        <function-ref name="setControlC" scoped="" ref="0xb7911630"/>
        <function-ref name="setControlA" scoped="" ref="0xb7911710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0xb790e530" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0xb790e530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb790d848"/>
        <function-ref name="fired" scoped="" ref="0xb790d048"/>
        <function-ref name="get" scoped="" ref="0xb790eb78"/>
        <function-ref name="reset" scoped="" ref="0xb790d248"/>
        <function-ref name="isOn" scoped="" ref="0xb790da48"/>
        <function-ref name="set" scoped="" ref="0xb790ed78"/>
        <function-ref name="start" scoped="" ref="0xb790d448"/>
        <function-ref name="stop" scoped="" ref="0xb790d648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0xb7911930" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xb7911930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xb790e210"/>
        <function-ref name="test" scoped="" ref="0xb7910d50"/>
        <function-ref name="get" scoped="" ref="0xb7910010"/>
        <function-ref name="captured" scoped="" ref="0xb79104b0"/>
        <function-ref name="reset" scoped="" ref="0xb7910750"/>
        <function-ref name="isOn" scoped="" ref="0xb790e010"/>
        <function-ref name="set" scoped="" ref="0xb7910210"/>
        <function-ref name="start" scoped="" ref="0xb7910950"/>
        <function-ref name="stop" scoped="" ref="0xb7910b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0xb790dcc8" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0xb790dcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb790a010"/>
        <function-ref name="fired" scoped="" ref="0xb790c7d0"/>
        <function-ref name="get" scoped="" ref="0xb790c330"/>
        <function-ref name="reset" scoped="" ref="0xb790c9d0"/>
        <function-ref name="isOn" scoped="" ref="0xb790a210"/>
        <function-ref name="set" scoped="" ref="0xb790c530"/>
        <function-ref name="start" scoped="" ref="0xb790cbd0"/>
        <function-ref name="stop" scoped="" ref="0xb790cdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0xb790a490" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0xb790a490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb7909810"/>
        <function-ref name="fired" scoped="" ref="0xb7909010"/>
        <function-ref name="get" scoped="" ref="0xb790aad8"/>
        <function-ref name="reset" scoped="" ref="0xb7909210"/>
        <function-ref name="isOn" scoped="" ref="0xb7909a10"/>
        <function-ref name="set" scoped="" ref="0xb790acd8"/>
        <function-ref name="start" scoped="" ref="0xb7909410"/>
        <function-ref name="stop" scoped="" ref="0xb7909610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb7915ef8" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb7915ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb7912648"/>
        <function-ref name="test" scoped="" ref="0xb7912248"/>
        <function-ref name="get" scoped="" ref="0xb7914578"/>
        <function-ref name="setScale" scoped="" ref="0xb7912848"/>
        <function-ref name="getScale" scoped="" ref="0xb7912ae8"/>
        <function-ref name="reset" scoped="" ref="0xb7914c18"/>
        <function-ref name="overflow" scoped="" ref="0xb7914a18"/>
        <function-ref name="isOn" scoped="" ref="0xb7912448"/>
        <function-ref name="set" scoped="" ref="0xb7914778"/>
        <function-ref name="start" scoped="" ref="0xb7914e18"/>
        <function-ref name="stop" scoped="" ref="0xb7912048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb78ca940" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb78ca940"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0xb7d3b428"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0xb7d3b428"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb78cab18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb78cad28" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb78cad28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb78c1448"/>
        <function-ref name="test" scoped="" ref="0xb78c1048"/>
        <function-ref name="get" scoped="" ref="0xb78c9390"/>
        <function-ref name="setScale" scoped="" ref="0xb78c1648"/>
        <function-ref name="getScale" scoped="" ref="0xb78c18e8"/>
        <function-ref name="reset" scoped="" ref="0xb78c9a30"/>
        <function-ref name="overflow" scoped="" ref="0xb78c9830"/>
        <function-ref name="isOn" scoped="" ref="0xb78c1248"/>
        <function-ref name="set" scoped="" ref="0xb78c9590"/>
        <function-ref name="start" scoped="" ref="0xb78c9c30"/>
        <function-ref name="stop" scoped="" ref="0xb78c9e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb78cde28" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb78cde28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cea410"/>
            <typename><typedef-ref name="TOne" ref="0xb7cc84a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb78bf590"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb78bf990"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb78bf790"/>
        <function-ref name="overflow" scoped="" ref="0xb78bfb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb78bfdf8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb78bfdf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb78b4528"/>
        <function-ref name="test" scoped="" ref="0xb78b4128"/>
        <function-ref name="get" scoped="" ref="0xb78b5468"/>
        <function-ref name="setScale" scoped="" ref="0xb78b4728"/>
        <function-ref name="getScale" scoped="" ref="0xb78b49c8"/>
        <function-ref name="reset" scoped="" ref="0xb78b5b08"/>
        <function-ref name="overflow" scoped="" ref="0xb78b5908"/>
        <function-ref name="isOn" scoped="" ref="0xb78b4328"/>
        <function-ref name="set" scoped="" ref="0xb78b5668"/>
        <function-ref name="start" scoped="" ref="0xb78b5d08"/>
        <function-ref name="stop" scoped="" ref="0xb78b5f08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0xb78a4de0" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0xb78a4de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cea410"/>
            <typename><typedef-ref name="TMicro" ref="0xb7cea5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb78a3570"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb78a3970"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb78a3770"/>
        <function-ref name="overflow" scoped="" ref="0xb78a3b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb7941d60" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb7941d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cea410"/>
            <typename><typedef-ref name="TMicro" ref="0xb7cea5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb78a44e8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb78a48e8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb78a46e8"/>
        <function-ref name="overflow" scoped="" ref="0xb78a4ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb78a1860" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb78a1860"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cea410"/>
            <typename><typedef-ref name="TMicro" ref="0xb7cea5e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb78a1ea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb78a01b0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb78a01b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cea410"/>
            <typename><typedef-ref name="TMicro" ref="0xb7cea5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb78a0900"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb78a0d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb78a0b00"/>
        <function-ref name="overflow" scoped="" ref="0xb78a0f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb7897d18" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb7897d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cebc58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7cebe28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7896370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0xb7892830" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0xb7892830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cebc58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7cebe28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb788f170"/>
        <function-ref name="fired" scoped="" ref="0xb7891570"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb7891b10"/>
        <function-ref name="isOneShot" scoped="" ref="0xb7891930"/>
        <function-ref name="getdt" scoped="" ref="0xb788f530"/>
        <function-ref name="gett0" scoped="" ref="0xb788f350"/>
        <function-ref name="isRunning" scoped="" ref="0xb7891750"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb7892e58"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb7891e30"/>
        <function-ref name="startOneShot" scoped="" ref="0xb7891110"/>
        <function-ref name="stop" scoped="" ref="0xb7891390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb788f790" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb788f790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cebc58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7cebe28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb788fdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7892198" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7892198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7892370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0xb7887220" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0xb7887220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cebc58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7cebe28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7887970"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb7887d70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb7887b70"/>
        <function-ref name="overflow" scoped="" ref="0xb787f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7889278" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7889278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7889450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0xb7881990" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0xb7881990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cebc58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7cebe28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7888cd8"/>
        <function-ref name="fired" scoped="" ref="0xb7888598"/>
        <function-ref name="startAt" scoped="" ref="0xb7888998"/>
        <function-ref name="isRunning" scoped="" ref="0xb7888798"/>
        <function-ref name="getAlarm" scoped="" ref="0xb7888ed8"/>
        <function-ref name="start" scoped="" ref="0xb78880f8"/>
        <function-ref name="stop" scoped="" ref="0xb7888398"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb787dee0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb787dee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cebc58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7cebe28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb77f6278"/>
        <function-ref name="fired" scoped="" ref="0xb77f7b20"/>
        <function-ref name="startAt" scoped="" ref="0xb77f7f20"/>
        <function-ref name="isRunning" scoped="" ref="0xb77f7d20"/>
        <function-ref name="getAlarm" scoped="" ref="0xb77f6478"/>
        <function-ref name="start" scoped="" ref="0xb77f7680"/>
        <function-ref name="stop" scoped="" ref="0xb77f7920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb787daa8" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb787daa8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0xb7d3b428"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0xb7d3b428"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb787dc80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb77f6730" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb77f6730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cebc58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7cebe28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb77f6e80"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb77f42a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb77f40a8"/>
        <function-ref name="overflow" scoped="" ref="0xb77f44a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0xb728b668" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb728b668"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb728b840"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb728b920"/>
        <function-ref name="getControlA" scoped="" ref="0xb728ba00"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb728bae0"/>
        <function-ref name="setControlB" scoped="" ref="0xb728bbc0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb728bca0"/>
        <function-ref name="getControlB" scoped="" ref="0xb728bd80"/>
        <function-ref name="setControlA" scoped="" ref="0xb728be60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb7290010" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb7290010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cebc58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7cebe28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb728f350"/>
        <function-ref name="fired" scoped="" ref="0xb7290c00"/>
        <function-ref name="startAt" scoped="" ref="0xb728f010"/>
        <function-ref name="isRunning" scoped="" ref="0xb7290e00"/>
        <function-ref name="getAlarm" scoped="" ref="0xb728f550"/>
        <function-ref name="start" scoped="" ref="0xb7290760"/>
        <function-ref name="stop" scoped="" ref="0xb7290a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7292b38" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7292b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7292d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0xb728f808" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb728f808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cebc58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7cebe28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb728e010"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb728e410"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb728e210"/>
        <function-ref name="overflow" scoped="" ref="0xb728e610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0xb72897c8" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0xb72897c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0xb72899a0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0xb7289a80"/>
        <function-ref name="controlABusy" scoped="" ref="0xb7289b60"/>
        <function-ref name="controlBBusy" scoped="" ref="0xb7289c40"/>
        <function-ref name="countBusy" scoped="" ref="0xb7289d20"/>
        <function-ref name="compareABusy" scoped="" ref="0xb7289e00"/>
        <function-ref name="getAssr" scoped="" ref="0xb7289ee0"/>
        <function-ref name="setAssr" scoped="" ref="0xb7287010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0xb728a078" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb728a078"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb7289410"/>
        <function-ref name="fired" scoped="" ref="0xb728ab60"/>
        <function-ref name="get" scoped="" ref="0xb728a6c0"/>
        <function-ref name="reset" scoped="" ref="0xb728ad60"/>
        <function-ref name="isOn" scoped="" ref="0xb7289610"/>
        <function-ref name="set" scoped="" ref="0xb728a8c0"/>
        <function-ref name="start" scoped="" ref="0xb7289010"/>
        <function-ref name="stop" scoped="" ref="0xb7289210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb728e888" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb728e888"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb728b010"/>
        <function-ref name="test" scoped="" ref="0xb728cb98"/>
        <function-ref name="get" scoped="" ref="0xb728eed0"/>
        <function-ref name="setScale" scoped="" ref="0xb728b210"/>
        <function-ref name="getScale" scoped="" ref="0xb728b4b0"/>
        <function-ref name="reset" scoped="" ref="0xb728c598"/>
        <function-ref name="overflow" scoped="" ref="0xb728c398"/>
        <function-ref name="isOn" scoped="" ref="0xb728cd98"/>
        <function-ref name="set" scoped="" ref="0xb728c0f8"/>
        <function-ref name="start" scoped="" ref="0xb728c798"/>
        <function-ref name="stop" scoped="" ref="0xb728c998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb7832890" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb7832890"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb7832a68"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb7832b48"/>
        <function-ref name="getControlA" scoped="" ref="0xb7832c28"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb7832d08"/>
        <function-ref name="setControlB" scoped="" ref="0xb7832de8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb7832ec8"/>
        <function-ref name="getControlB" scoped="" ref="0xb7831010"/>
        <function-ref name="setControlA" scoped="" ref="0xb78310f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0xb782f9f0" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0xb782f9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0xb782fbc8"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0xb782fca8"/>
        <function-ref name="controlABusy" scoped="" ref="0xb782fd88"/>
        <function-ref name="controlBBusy" scoped="" ref="0xb782fe68"/>
        <function-ref name="countBusy" scoped="" ref="0xb782e010"/>
        <function-ref name="compareABusy" scoped="" ref="0xb782e0f0"/>
        <function-ref name="getAssr" scoped="" ref="0xb782e1d0"/>
        <function-ref name="setAssr" scoped="" ref="0xb782e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb7831308" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb7831308"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb782f610"/>
        <function-ref name="fired" scoped="" ref="0xb7831df0"/>
        <function-ref name="get" scoped="" ref="0xb7831950"/>
        <function-ref name="reset" scoped="" ref="0xb782f010"/>
        <function-ref name="isOn" scoped="" ref="0xb782f810"/>
        <function-ref name="set" scoped="" ref="0xb7831b50"/>
        <function-ref name="start" scoped="" ref="0xb782f210"/>
        <function-ref name="stop" scoped="" ref="0xb782f410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb7835a40" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb7835a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb7832210"/>
        <function-ref name="test" scoped="" ref="0xb7834d48"/>
        <function-ref name="get" scoped="" ref="0xb78340a8"/>
        <function-ref name="setScale" scoped="" ref="0xb7832410"/>
        <function-ref name="getScale" scoped="" ref="0xb78326b0"/>
        <function-ref name="reset" scoped="" ref="0xb7834748"/>
        <function-ref name="overflow" scoped="" ref="0xb7834548"/>
        <function-ref name="isOn" scoped="" ref="0xb7832010"/>
        <function-ref name="set" scoped="" ref="0xb78342a8"/>
        <function-ref name="start" scoped="" ref="0xb7834948"/>
        <function-ref name="stop" scoped="" ref="0xb7834b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0xb78287b8" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0xb78287b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0xb7828990"/>
        <function-ref name="getInterruptMask" scoped="" ref="0xb7828a70"/>
        <function-ref name="getControlA" scoped="" ref="0xb7828b50"/>
        <function-ref name="setInterruptMask" scoped="" ref="0xb7828c30"/>
        <function-ref name="setControlB" scoped="" ref="0xb7828d10"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0xb7828df0"/>
        <function-ref name="getControlB" scoped="" ref="0xb7828ed0"/>
        <function-ref name="setControlA" scoped="" ref="0xb7826010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0xb78248d8" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0xb78248d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0xb7824ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0xb7824c38" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0xb7824c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0xb7824e10"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0xb7824ef0"/>
        <function-ref name="controlABusy" scoped="" ref="0xb7823010"/>
        <function-ref name="controlBBusy" scoped="" ref="0xb78230f0"/>
        <function-ref name="countBusy" scoped="" ref="0xb78231d0"/>
        <function-ref name="compareABusy" scoped="" ref="0xb78232b0"/>
        <function-ref name="getAssr" scoped="" ref="0xb7823390"/>
        <function-ref name="setAssr" scoped="" ref="0xb7823470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0xb7826228" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0xb7826228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb7824528"/>
        <function-ref name="fired" scoped="" ref="0xb7826d10"/>
        <function-ref name="get" scoped="" ref="0xb7826870"/>
        <function-ref name="reset" scoped="" ref="0xb7826f10"/>
        <function-ref name="isOn" scoped="" ref="0xb7824728"/>
        <function-ref name="set" scoped="" ref="0xb7826a70"/>
        <function-ref name="start" scoped="" ref="0xb7824128"/>
        <function-ref name="stop" scoped="" ref="0xb7824328"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb782aa30" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb782aa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb7828138"/>
        <function-ref name="test" scoped="" ref="0xb7829d28"/>
        <function-ref name="get" scoped="" ref="0xb7829088"/>
        <function-ref name="setScale" scoped="" ref="0xb7828338"/>
        <function-ref name="getScale" scoped="" ref="0xb78285d8"/>
        <function-ref name="reset" scoped="" ref="0xb7829728"/>
        <function-ref name="overflow" scoped="" ref="0xb7829528"/>
        <function-ref name="isOn" scoped="" ref="0xb7829f28"/>
        <function-ref name="set" scoped="" ref="0xb7829288"/>
        <function-ref name="start" scoped="" ref="0xb7829928"/>
        <function-ref name="stop" scoped="" ref="0xb7829b28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0xb77db850" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0xb77db850"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb77dba28"/>
        <function-ref name="runTask" scoped="" ref="0xb77dbb08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0xb77dc130" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb77dc130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cebc58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7cebe28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb77db478"/>
        <function-ref name="fired" scoped="" ref="0xb77dcd20"/>
        <function-ref name="startAt" scoped="" ref="0xb77db138"/>
        <function-ref name="isRunning" scoped="" ref="0xb77dcf20"/>
        <function-ref name="getAlarm" scoped="" ref="0xb77db678"/>
        <function-ref name="start" scoped="" ref="0xb77dc880"/>
        <function-ref name="stop" scoped="" ref="0xb77dcb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb77f2158" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb77f2158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cebc58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7cebe28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb77dea68"/>
        <function-ref name="fired" scoped="" ref="0xb77f2e60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb77de428"/>
        <function-ref name="isOneShot" scoped="" ref="0xb77de248"/>
        <function-ref name="getdt" scoped="" ref="0xb77dee28"/>
        <function-ref name="gett0" scoped="" ref="0xb77dec48"/>
        <function-ref name="isRunning" scoped="" ref="0xb77de068"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb77f2780"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb77de748"/>
        <function-ref name="startOneShot" scoped="" ref="0xb77f2a00"/>
        <function-ref name="stop" scoped="" ref="0xb77f2c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0xb77b2a60" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0xb77b2a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb77b2c38"/>
        <function-ref name="runTask" scoped="" ref="0xb77b2d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0xb77b5b90" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0xb77b5b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cebc58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7cebe28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb77b24c8"/>
        <function-ref name="fired" scoped="" ref="0xb77b38c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb77b3e60"/>
        <function-ref name="isOneShot" scoped="" ref="0xb77b3c80"/>
        <function-ref name="getdt" scoped="" ref="0xb77b2888"/>
        <function-ref name="gett0" scoped="" ref="0xb77b26a8"/>
        <function-ref name="isRunning" scoped="" ref="0xb77b3aa0"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb77b31e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb77b21a8"/>
        <function-ref name="startOneShot" scoped="" ref="0xb77b3460"/>
        <function-ref name="stop" scoped="" ref="0xb77b36e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb77b7ad0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb77b7ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cebc58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7cebe28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb77b5538"/>
        <function-ref name="fired" scoped="" ref="0xb77b68f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb77b6ec0"/>
        <function-ref name="isOneShot" scoped="" ref="0xb77b6cd0"/>
        <function-ref name="getdt" scoped="" ref="0xb77b5918"/>
        <function-ref name="gett0" scoped="" ref="0xb77b5728"/>
        <function-ref name="isRunning" scoped="" ref="0xb77b6ae0"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb77b61e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb77b5208"/>
        <function-ref name="startOneShot" scoped="" ref="0xb77b6470"/>
        <function-ref name="stop" scoped="" ref="0xb77b6700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0xb77af010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb77af010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cebc58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7cebe28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb77af658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0xb77af930" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0xb77af930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cebc58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7cebe28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb77ae0a8"/>
        <function-ref name="clearOverflow" scoped="" ref="0xb77ae4a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0xb77ae2a8"/>
        <function-ref name="overflow" scoped="" ref="0xb77ae6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0xb77a9500" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <component-ref qname="RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb77a9500"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb77a96d8"/>
        <function-ref name="wait" scoped="" ref="0xb77a97b8"/>
        <function-ref name="cancel" scoped="" ref="0xb77a9898"/>
        <function-ref name="isFree" scoped="" ref="0xb77a9978"/>
        <function-ref name="getNow" scoped="" ref="0xb77a9a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0xb77a9e48" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <component-ref qname="RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb77a9e48"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0xb7d3b5c0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0xb7d3b5c0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cea410"/>
            <typename><typedef-ref name="TRF230" ref="0xb7ae3060"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb77a61e8"/>
        <function-ref name="fired" scoped="" ref="0xb77a7a80"/>
        <function-ref name="startAt" scoped="" ref="0xb77a7e80"/>
        <function-ref name="isRunning" scoped="" ref="0xb77a7c80"/>
        <function-ref name="getAlarm" scoped="" ref="0xb77a63e8"/>
        <function-ref name="start" scoped="" ref="0xb77a75e0"/>
        <function-ref name="stop" scoped="" ref="0xb77a7880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0xb77a28b0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb77a28b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb77a2a88"/>
        <function-ref name="wait" scoped="" ref="0xb77a2b68"/>
        <function-ref name="cancel" scoped="" ref="0xb77a2c48"/>
        <function-ref name="isFree" scoped="" ref="0xb77a2d28"/>
        <function-ref name="getNow" scoped="" ref="0xb77a2e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0xb77a1128" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb77a1128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cea410"/>
            <typename><typedef-ref name="TRF230" ref="0xb7ae3060"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb779f470"/>
        <function-ref name="fired" scoped="" ref="0xb77a1d18"/>
        <function-ref name="startAt" scoped="" ref="0xb779f130"/>
        <function-ref name="isRunning" scoped="" ref="0xb77a1f18"/>
        <function-ref name="getAlarm" scoped="" ref="0xb779f670"/>
        <function-ref name="start" scoped="" ref="0xb77a1878"/>
        <function-ref name="stop" scoped="" ref="0xb77a1b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xb779aaf8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb779aaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb779acd0"/>
        <function-ref name="suspend" scoped="" ref="0xb779adb0"/>
        <function-ref name="resume" scoped="" ref="0xb779ae90"/>
        <function-ref name="run" scoped="" ref="0xb779e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0xb7790cb8" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb7790cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb7790e90"/>
        <function-ref name="suspend" scoped="" ref="0xb778f010"/>
        <function-ref name="resume" scoped="" ref="0xb778f0f0"/>
        <function-ref name="run" scoped="" ref="0xb778f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb777f568" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb777f568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb777f740"/>
        <function-ref name="getPayload" scoped="" ref="0xb777f820"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb777f900"/>
        <function-ref name="cancel" scoped="" ref="0xb777f9e0"/>
        <function-ref name="sendDone" scoped="" ref="0xb777fac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb777fc38" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb777fc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb777fe10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb7788258" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb7788258"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7b6d1d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7788430"/>
        <function-ref name="getPayload" scoped="" ref="0xb7788510"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb77885f0"/>
        <function-ref name="cancel" scoped="" ref="0xb77886d0"/>
        <function-ref name="sendDone" scoped="" ref="0xb77887b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb7786178" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb7786178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7b6d1d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7786350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb7785c28" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb7785c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="checkPacket" scoped="" ref="0xb7785e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb7788b88" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb7788b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0xb7b6d1d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7788d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0xb7785010" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb7785010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb77851e8"/>
        <function-ref name="source" scoped="" ref="0xb77852c8"/>
        <function-ref name="address" scoped="" ref="0xb77853a8"/>
        <function-ref name="destination" scoped="" ref="0xb7785488"/>
        <function-ref name="setSource" scoped="" ref="0xb7785568"/>
        <function-ref name="setDestination" scoped="" ref="0xb7785648"/>
        <function-ref name="type" scoped="" ref="0xb7785728"/>
        <function-ref name="setType" scoped="" ref="0xb7785808"/>
        <function-ref name="isForMe" scoped="" ref="0xb77858e8"/>
        <function-ref name="setGroup" scoped="" ref="0xb77859c8"/>
        <function-ref name="localGroup" scoped="" ref="0xb7785aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb776e560" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb776e560"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb776e738"/>
        <function-ref name="stopDone" scoped="" ref="0xb776e818"/>
        <function-ref name="start" scoped="" ref="0xb776e8f8"/>
        <function-ref name="stop" scoped="" ref="0xb776e9d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb776dbc8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb776dbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb776dda0"/>
        <function-ref name="getPayload" scoped="" ref="0xb776de80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb776c010"/>
        <function-ref name="cancel" scoped="" ref="0xb776c0f0"/>
        <function-ref name="sendDone" scoped="" ref="0xb776c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb776c348" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb776c348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb776c520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb776eb20" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb776eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb776ecf8"/>
        <function-ref name="getPayload" scoped="" ref="0xb776edd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb776eeb8"/>
        <function-ref name="cancel" scoped="" ref="0xb776d010"/>
        <function-ref name="sendDone" scoped="" ref="0xb776d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0xb776d5e0" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0xb776d5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb776d7b8"/>
        <function-ref name="stopDone" scoped="" ref="0xb776d898"/>
        <function-ref name="start" scoped="" ref="0xb776d978"/>
        <function-ref name="stop" scoped="" ref="0xb776da58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb776d238" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb776d238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb776d410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb7768868" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb7768868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7768a40"/>
        <function-ref name="getPayload" scoped="" ref="0xb7768b20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7768c00"/>
        <function-ref name="cancel" scoped="" ref="0xb7768ce0"/>
        <function-ref name="sendDone" scoped="" ref="0xb7768dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb7767010" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb7767010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb77671e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb7769830" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb7769830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7769a08"/>
        <function-ref name="getPayload" scoped="" ref="0xb7769ae8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7769bc8"/>
        <function-ref name="cancel" scoped="" ref="0xb7769ca8"/>
        <function-ref name="sendDone" scoped="" ref="0xb7769d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NonTinyosReceive" ref="0xb77684d0" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NonTinyosReceive" scoped="" ref="0xb77684d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb77686a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEE154Packet" ref="0xb7767338" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEE154Packet" scoped="" ref="0xb7767338"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0xb7767510"/>
        <function-ref name="getDSN" scoped="" ref="0xb77675f0"/>
        <function-ref name="setFCF" scoped="" ref="0xb77676d0"/>
        <function-ref name="isAckFrame" scoped="" ref="0xb77677b0"/>
        <function-ref name="set6LowPan" scoped="" ref="0xb7767890"/>
        <function-ref name="setSrcAddr" scoped="" ref="0xb7767970"/>
        <function-ref name="createDataFrame" scoped="" ref="0xb7767a50"/>
        <function-ref name="setDSN" scoped="" ref="0xb7767b30"/>
        <function-ref name="createAckReply" scoped="" ref="0xb7767c10"/>
        <function-ref name="getHeader" scoped="" ref="0xb7767cf0"/>
        <function-ref name="getSrcAddr" scoped="" ref="0xb7767dd0"/>
        <function-ref name="isDataFrame" scoped="" ref="0xb7767eb0"/>
        <function-ref name="setType" scoped="" ref="0xb7766010"/>
        <function-ref name="getAckRequired" scoped="" ref="0xb7766170"/>
        <function-ref name="verifyAckReply" scoped="" ref="0xb7766250"/>
        <function-ref name="setLength" scoped="" ref="0xb7766330"/>
        <function-ref name="get6LowPan" scoped="" ref="0xb7766410"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb77664f0"/>
        <function-ref name="setDestAddr" scoped="" ref="0xb77665d0"/>
        <function-ref name="createAckFrame" scoped="" ref="0xb77666b0"/>
        <function-ref name="setFramePending" scoped="" ref="0xb7766790"/>
        <function-ref name="getLength" scoped="" ref="0xb7766870"/>
        <function-ref name="setDestPan" scoped="" ref="0xb7766950"/>
        <function-ref name="setAckRequired" scoped="" ref="0xb7766a30"/>
        <function-ref name="getFCF" scoped="" ref="0xb7766b10"/>
        <function-ref name="getType" scoped="" ref="0xb7766cf0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb7766dd0"/>
        <function-ref name="getDestAddr" scoped="" ref="0xb7766eb0"/>
        <function-ref name="getFramePending" scoped="" ref="0xb7765010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb7769ed0" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb7769ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb77680c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb775a790" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb775a790"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb775a968"/>
        <function-ref name="stopDone" scoped="" ref="0xb775aa48"/>
        <function-ref name="start" scoped="" ref="0xb775ab28"/>
        <function-ref name="stop" scoped="" ref="0xb775ac08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0xb7738230" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0xb7738230"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xb7738408"/>
        <function-ref name="request" scoped="" ref="0xb77384e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioSend" ref="0xb7737090" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioSend" scoped="" ref="0xb7737090"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7737268"/>
        <function-ref name="ready" scoped="" ref="0xb7737348"/>
        <function-ref name="sendDone" scoped="" ref="0xb7737428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb7735450" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb7735450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7735628"/>
        <function-ref name="getPayload" scoped="" ref="0xb7735708"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb77357e8"/>
        <function-ref name="cancel" scoped="" ref="0xb77358c8"/>
        <function-ref name="sendDone" scoped="" ref="0xb77359a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb7735b08" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb7735b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7735ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0xb7739230" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb7739230"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb7739408"/>
        <function-ref name="turnOn" scoped="" ref="0xb77394e8"/>
        <function-ref name="setChannel" scoped="" ref="0xb77395c8"/>
        <function-ref name="done" scoped="" ref="0xb77396a8"/>
        <function-ref name="standby" scoped="" ref="0xb7739788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb775ad48" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb775ad48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb775af20"/>
        <function-ref name="getPayload" scoped="" ref="0xb7744018"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb77440f8"/>
        <function-ref name="cancel" scoped="" ref="0xb77441d8"/>
        <function-ref name="sendDone" scoped="" ref="0xb77442b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb7744710" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb7744710"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0xb77448e8"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0xb77449c8"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0xb7744aa8"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0xb7744b88"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0xb7744c68"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0xb7744d48"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0xb7744e28"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0xb7744f08"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0xb7739010"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0xb77390f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0xb7738648" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0xb7738648"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xb7738820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb7739da0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb7739da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7738010"/>
        <function-ref name="header" scoped="" ref="0xb77380f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0xb77389b0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0xb77389b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb7738b88"/>
        <function-ref name="turnOn" scoped="" ref="0xb7738c68"/>
        <function-ref name="setChannel" scoped="" ref="0xb7738d48"/>
        <function-ref name="done" scoped="" ref="0xb7738e28"/>
        <function-ref name="standby" scoped="" ref="0xb7738f08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0xb7737e38" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0xb7737e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb7735050"/>
        <function-ref name="stopDone" scoped="" ref="0xb7735130"/>
        <function-ref name="start" scoped="" ref="0xb7735210"/>
        <function-ref name="stop" scoped="" ref="0xb77352f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb7735e40" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb7735e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xb7734050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb77443f8" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb77443f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb77445d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioReceive" ref="0xb7737588" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioReceive" scoped="" ref="0xb7737588"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7737760"/>
        <function-ref name="header" scoped="" ref="0xb7737840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb77398c8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb77398c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7739aa0"/>
        <function-ref name="ready" scoped="" ref="0xb7739b80"/>
        <function-ref name="sendDone" scoped="" ref="0xb7739c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0xb77379a0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0xb77379a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xb7737bf8"/>
        <function-ref name="request" scoped="" ref="0xb7737cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb77430b8" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerP.nc">
      <component-ref qname="DummyLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb77430b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0xb7743290"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0xb7743370"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0xb7743450"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0xb7743530"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0xb7743610"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0xb77436f0"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0xb77437d0"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0xb77438b0"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0xb7743990"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0xb7743a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb77306c8" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb77306c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb77308a0"/>
        <function-ref name="stopDone" scoped="" ref="0xb7730980"/>
        <function-ref name="start" scoped="" ref="0xb7730a60"/>
        <function-ref name="stop" scoped="" ref="0xb7730b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0xb772f770" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb772f770"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb772f948"/>
        <function-ref name="turnOn" scoped="" ref="0xb772fa28"/>
        <function-ref name="setChannel" scoped="" ref="0xb772fb08"/>
        <function-ref name="done" scoped="" ref="0xb772fbe8"/>
        <function-ref name="standby" scoped="" ref="0xb772fcc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb7730c88" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb7730c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7730e60"/>
        <function-ref name="getPayload" scoped="" ref="0xb772f010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb772f0f0"/>
        <function-ref name="cancel" scoped="" ref="0xb772f1d0"/>
        <function-ref name="sendDone" scoped="" ref="0xb772f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0xb772e720" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb772e720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb772e8f8"/>
        <function-ref name="payloadLength" scoped="" ref="0xb772e9d8"/>
        <function-ref name="getPayload" scoped="" ref="0xb772eab8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb772eb98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb772ec78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0xb772e320" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb772e320"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb772e4f8"/>
        <function-ref name="header" scoped="" ref="0xb772e5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb772f3f8" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb772f3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb772f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0xb772fe18" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb772fe18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb772e010"/>
        <function-ref name="ready" scoped="" ref="0xb772e0f0"/>
        <function-ref name="sendDone" scoped="" ref="0xb772e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb772ab60" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb772ab60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb772ad38"/>
        <function-ref name="stopDone" scoped="" ref="0xb772ae18"/>
        <function-ref name="start" scoped="" ref="0xb772aef8"/>
        <function-ref name="stop" scoped="" ref="0xb7729010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0xb7729188" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xb7729188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7729360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0xb7729ec0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb7729ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb77280c0"/>
        <function-ref name="turnOn" scoped="" ref="0xb77281a0"/>
        <function-ref name="setChannel" scoped="" ref="0xb7728280"/>
        <function-ref name="done" scoped="" ref="0xb7728360"/>
        <function-ref name="standby" scoped="" ref="0xb7728440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb77294a8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb77294a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7729680"/>
        <function-ref name="getPayload" scoped="" ref="0xb7729760"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7729840"/>
        <function-ref name="cancel" scoped="" ref="0xb7729920"/>
        <function-ref name="sendDone" scoped="" ref="0xb7729a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0xb7727460" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb7727460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7727638"/>
        <function-ref name="payloadLength" scoped="" ref="0xb7727718"/>
        <function-ref name="getPayload" scoped="" ref="0xb77277f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb77278d8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb77279b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0xb7727060" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb7727060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7727238"/>
        <function-ref name="header" scoped="" ref="0xb7727318"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0xb77224b8" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0xb77224b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7722690"/>
        <function-ref name="runTask" scoped="" ref="0xb7722770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb7729b48" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb7729b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7729d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0xb771d0d0" loc="139:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0xb771d0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb771d2a8"/>
        <function-ref name="runTask" scoped="" ref="0xb771d388"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0xb770db48" loc="267:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0xb770db48"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb770dd20"/>
        <function-ref name="runTask" scoped="" ref="0xb770de00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0xb7728b50" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb7728b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7728d28"/>
        <function-ref name="ready" scoped="" ref="0xb7728e08"/>
        <function-ref name="sendDone" scoped="" ref="0xb7728ee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xb7728588" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb7728588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb7728760"/>
        <function-ref name="suspend" scoped="" ref="0xb7728840"/>
        <function-ref name="resume" scoped="" ref="0xb7728920"/>
        <function-ref name="run" scoped="" ref="0xb7728a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb77016b8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb77016b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7701890"/>
        <function-ref name="getPayload" scoped="" ref="0xb7701970"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7701a50"/>
        <function-ref name="cancel" scoped="" ref="0xb7701b30"/>
        <function-ref name="sendDone" scoped="" ref="0xb7701c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb7701d90" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb7701d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7700010"/>
        <function-ref name="header" scoped="" ref="0xb77000f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb7702b28" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb7702b28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7702d00"/>
        <function-ref name="getPayload" scoped="" ref="0xb7702de0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7702ec0"/>
        <function-ref name="cancel" scoped="" ref="0xb7701010"/>
        <function-ref name="sendDone" scoped="" ref="0xb77010f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb7700268" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb7700268"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0xb7700440"/>
        <function-ref name="reportChannelError" scoped="" ref="0xb7700520"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0xb7700600"/>
        <function-ref name="getSender" scoped="" ref="0xb77006e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb7701240" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb7701240"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7701418"/>
        <function-ref name="header" scoped="" ref="0xb77014f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb76fb5d0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb76fb5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb76fb7a8"/>
        <function-ref name="getPayload" scoped="" ref="0xb76fb888"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb76fb968"/>
        <function-ref name="cancel" scoped="" ref="0xb76fba48"/>
        <function-ref name="sendDone" scoped="" ref="0xb76fbb28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb76fbca8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb76fbca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb76fbe80"/>
        <function-ref name="header" scoped="" ref="0xb76fa010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0xb76ef2e0" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb76ef2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb76ef4b8"/>
        <function-ref name="clearAll" scoped="" ref="0xb76ef598"/>
        <function-ref name="get" scoped="" ref="0xb76ef678"/>
        <function-ref name="set" scoped="" ref="0xb76ef758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb76fc700" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb76fc700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb76fc8d8"/>
        <function-ref name="getPayload" scoped="" ref="0xb76fc9b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb76fca98"/>
        <function-ref name="cancel" scoped="" ref="0xb76fcb78"/>
        <function-ref name="sendDone" scoped="" ref="0xb76fcc58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0xb76f3870" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0xb76f3870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0xb76f3a48"/>
        <function-ref name="insertNode" scoped="" ref="0xb76f3b28"/>
        <function-ref name="getNode" scoped="" ref="0xb76f3c08"/>
        <function-ref name="evicted" scoped="" ref="0xb76f3ce8"/>
        <function-ref name="getIndex" scoped="" ref="0xb76f3dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb76fcda8" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb76fcda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb76fb010"/>
        <function-ref name="header" scoped="" ref="0xb76fb0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb76fb238" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb76fb238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb76fb410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0xb76fa160" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0xb76fa160"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0xb76fa338"/>
        <function-ref name="reportChannelError" scoped="" ref="0xb76fa418"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0xb76fa4f8"/>
        <function-ref name="getSender" scoped="" ref="0xb76fa5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0xb76e3870" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0xb76e3870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0xb76e3a48"/>
        <function-ref name="insertNode" scoped="" ref="0xb76e3b28"/>
        <function-ref name="getNode" scoped="" ref="0xb76e3c08"/>
        <function-ref name="evicted" scoped="" ref="0xb76e3ce8"/>
        <function-ref name="getIndex" scoped="" ref="0xb76e3dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0xb76de288" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb76de288"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb76de460"/>
        <function-ref name="clearAll" scoped="" ref="0xb76de540"/>
        <function-ref name="get" scoped="" ref="0xb76de620"/>
        <function-ref name="set" scoped="" ref="0xb76de700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0xb76df930" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0xb76df930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0xb76dfb08"/>
        <function-ref name="insertNode" scoped="" ref="0xb76dfbe8"/>
        <function-ref name="getNode" scoped="" ref="0xb76dfcc8"/>
        <function-ref name="evicted" scoped="" ref="0xb76dfda8"/>
        <function-ref name="getIndex" scoped="" ref="0xb76dfe88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb76df608" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb76df608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb76df7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0xb76c9d98" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlagC.nc">
      <component-ref qname="UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb76c9d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb76e4010"/>
        <function-ref name="clearAll" scoped="" ref="0xb76e40f0"/>
        <function-ref name="get" scoped="" ref="0xb76e41d0"/>
        <function-ref name="set" scoped="" ref="0xb76e42b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb76c5b38" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb76c5b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb76c5d10"/>
        <function-ref name="ready" scoped="" ref="0xb76c5df0"/>
        <function-ref name="sendDone" scoped="" ref="0xb76c5ed0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb76c4070" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb76c4070"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb76c4248"/>
        <function-ref name="header" scoped="" ref="0xb76c4328"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0xb76c5418" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb76c5418"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb76c55f0"/>
        <function-ref name="turnOn" scoped="" ref="0xb76c56d0"/>
        <function-ref name="setChannel" scoped="" ref="0xb76c57b0"/>
        <function-ref name="done" scoped="" ref="0xb76c5890"/>
        <function-ref name="standby" scoped="" ref="0xb76c5970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0xb76c44a8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0xb76c44a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb76c4680"/>
        <function-ref name="turnOn" scoped="" ref="0xb76c4760"/>
        <function-ref name="setChannel" scoped="" ref="0xb76c4840"/>
        <function-ref name="done" scoped="" ref="0xb76c4920"/>
        <function-ref name="standby" scoped="" ref="0xb76c4a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb76c4b80" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb76c4b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getReceiveAverage" scoped="" ref="0xb76c3470"/>
        <function-ref name="channelError" scoped="" ref="0xb76c4e38"/>
        <function-ref name="getUpdatePeriod" scoped="" ref="0xb76c4f18"/>
        <function-ref name="getChannelTime" scoped="" ref="0xb76c3010"/>
        <function-ref name="getErrorAverage" scoped="" ref="0xb76c30f0"/>
        <function-ref name="getTransmitAverage" scoped="" ref="0xb76c31d0"/>
        <function-ref name="timerTick" scoped="" ref="0xb76c32b0"/>
        <function-ref name="getSender" scoped="" ref="0xb76c3390"/>
        <function-ref name="getNeighborAverage" scoped="" ref="0xb76c4d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb76c5010" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb76c5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb76c51e8"/>
        <function-ref name="header" scoped="" ref="0xb76c52c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb76c6a68" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb76c6a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb76c6c40"/>
        <function-ref name="ready" scoped="" ref="0xb76c6d20"/>
        <function-ref name="sendDone" scoped="" ref="0xb76c6e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb76bea90" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb76bea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb76bec68"/>
        <function-ref name="ready" scoped="" ref="0xb76bed48"/>
        <function-ref name="sendDone" scoped="" ref="0xb76bee28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrafficMonitorConfig" ref="0xb76be040" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0xb76be040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getReceiveAverage" scoped="" ref="0xb76be918"/>
        <function-ref name="channelError" scoped="" ref="0xb76be2f8"/>
        <function-ref name="getUpdatePeriod" scoped="" ref="0xb76be3d8"/>
        <function-ref name="getChannelTime" scoped="" ref="0xb76be4b8"/>
        <function-ref name="getErrorAverage" scoped="" ref="0xb76be598"/>
        <function-ref name="getTransmitAverage" scoped="" ref="0xb76be678"/>
        <function-ref name="timerTick" scoped="" ref="0xb76be758"/>
        <function-ref name="getSender" scoped="" ref="0xb76be838"/>
        <function-ref name="getNeighborAverage" scoped="" ref="0xb76be218"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb76bd010" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb76bd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb76bd1e8"/>
        <function-ref name="header" scoped="" ref="0xb76bd2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0xb76bf900" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb76bf900"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb76bfad8"/>
        <function-ref name="turnOn" scoped="" ref="0xb76bfbb8"/>
        <function-ref name="setChannel" scoped="" ref="0xb76bfc98"/>
        <function-ref name="done" scoped="" ref="0xb76bfd78"/>
        <function-ref name="standby" scoped="" ref="0xb76bfe58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0xb76bd448" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0xb76bd448"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb76bd620"/>
        <function-ref name="turnOn" scoped="" ref="0xb76bd700"/>
        <function-ref name="setChannel" scoped="" ref="0xb76bd7e0"/>
        <function-ref name="done" scoped="" ref="0xb76bd8c0"/>
        <function-ref name="standby" scoped="" ref="0xb76bd9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0xb76bba30" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0xb76bba30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0xb76bbc08"/>
        <function-ref name="insertNode" scoped="" ref="0xb76bbce8"/>
        <function-ref name="getNode" scoped="" ref="0xb76bbdc8"/>
        <function-ref name="evicted" scoped="" ref="0xb76bbea8"/>
        <function-ref name="getIndex" scoped="" ref="0xb76b9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb76bf4f8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb76bf4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb76bf6d0"/>
        <function-ref name="header" scoped="" ref="0xb76bf7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0xb76b9168" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb76b9168"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb76b9340"/>
        <function-ref name="clearAll" scoped="" ref="0xb76b9420"/>
        <function-ref name="get" scoped="" ref="0xb76b9500"/>
        <function-ref name="set" scoped="" ref="0xb76b95e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xb76b9728" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb76b9728"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb76b9900"/>
        <function-ref name="suspend" scoped="" ref="0xb76b99e0"/>
        <function-ref name="resume" scoped="" ref="0xb76b9ac0"/>
        <function-ref name="run" scoped="" ref="0xb76b9ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb76bf010" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb76bf010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb76bf1e8"/>
        <function-ref name="ready" scoped="" ref="0xb76bf2c8"/>
        <function-ref name="sendDone" scoped="" ref="0xb76bf3a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startStopTimer" ref="0xb76a4e38" loc="229:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startStopTimer" scoped="" ref="0xb76a4e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb76a2050"/>
        <function-ref name="runTask" scoped="" ref="0xb76a2130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0xb76bdba8" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb76bdba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cebc58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7cebe28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb76bb4c8"/>
        <function-ref name="fired" scoped="" ref="0xb76bc8d0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb76bce70"/>
        <function-ref name="isOneShot" scoped="" ref="0xb76bcc90"/>
        <function-ref name="getdt" scoped="" ref="0xb76bb888"/>
        <function-ref name="gett0" scoped="" ref="0xb76bb6a8"/>
        <function-ref name="isRunning" scoped="" ref="0xb76bcab0"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb76bc1f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb76bb1a8"/>
        <function-ref name="startOneShot" scoped="" ref="0xb76bc470"/>
        <function-ref name="stop" scoped="" ref="0xb76bc6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb76a0680" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="TrafficMonitorLayerC.UpdateTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb76a0680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cebc58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7cebe28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7692010"/>
        <function-ref name="fired" scoped="" ref="0xb769f398"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb769f938"/>
        <function-ref name="isOneShot" scoped="" ref="0xb769f758"/>
        <function-ref name="getdt" scoped="" ref="0xb76923d0"/>
        <function-ref name="gett0" scoped="" ref="0xb76921f0"/>
        <function-ref name="isRunning" scoped="" ref="0xb769f578"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb76a0ca8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb769fc58"/>
        <function-ref name="startOneShot" scoped="" ref="0xb76a0f28"/>
        <function-ref name="stop" scoped="" ref="0xb769f1b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0xb7697f00" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0xb7697f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cebc58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7cebe28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7695830"/>
        <function-ref name="fired" scoped="" ref="0xb7696c38"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb76951f0"/>
        <function-ref name="isOneShot" scoped="" ref="0xb7695010"/>
        <function-ref name="getdt" scoped="" ref="0xb7695bf0"/>
        <function-ref name="gett0" scoped="" ref="0xb7695a10"/>
        <function-ref name="isRunning" scoped="" ref="0xb7696e18"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb7696558"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb7695510"/>
        <function-ref name="startOneShot" scoped="" ref="0xb76967d8"/>
        <function-ref name="stop" scoped="" ref="0xb7696a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0xb7691140" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlagC.nc">
      <component-ref qname="TrafficMonitorLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0xb7691140"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7691318"/>
        <function-ref name="clearAll" scoped="" ref="0xb76913f8"/>
        <function-ref name="get" scoped="" ref="0xb76914d8"/>
        <function-ref name="set" scoped="" ref="0xb76915b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb768b2b8" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb768b2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb768b490"/>
        <function-ref name="ready" scoped="" ref="0xb768b570"/>
        <function-ref name="sendDone" scoped="" ref="0xb768b650"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb768b7d0" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb768b7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb768b9a8"/>
        <function-ref name="header" scoped="" ref="0xb768ba88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb768bc08" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb768bc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0xb768bde0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0xb768bec0"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0xb768a010"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0xb768a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb768cdf8" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb768cdf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb768b010"/>
        <function-ref name="header" scoped="" ref="0xb768b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb768c910" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb768c910"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb768cae8"/>
        <function-ref name="ready" scoped="" ref="0xb768cbc8"/>
        <function-ref name="sendDone" scoped="" ref="0xb768cca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb76869e8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb76869e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7686bc0"/>
        <function-ref name="ready" scoped="" ref="0xb7686ca0"/>
        <function-ref name="sendDone" scoped="" ref="0xb7686d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb7686f00" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb7686f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb76850f0"/>
        <function-ref name="header" scoped="" ref="0xb76851d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xb7685320" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb7685320"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb76854f8"/>
        <function-ref name="wait" scoped="" ref="0xb76855d8"/>
        <function-ref name="cancel" scoped="" ref="0xb76856b8"/>
        <function-ref name="isFree" scoped="" ref="0xb7685798"/>
        <function-ref name="getNow" scoped="" ref="0xb7685878"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0xb7681760" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xb7681760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb7681938"/>
        <function-ref name="rand32" scoped="" ref="0xb7681a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb7681b98" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb7681b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0xb7681d70"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0xb7681e50"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0xb7684010"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0xb76840f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb7686568" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb7686568"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7686740"/>
        <function-ref name="header" scoped="" ref="0xb7686820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb7686080" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb7686080"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7686258"/>
        <function-ref name="ready" scoped="" ref="0xb7686338"/>
        <function-ref name="sendDone" scoped="" ref="0xb7686418"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0xb767f490" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0xb767f490"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb767f668"/>
        <function-ref name="runTask" scoped="" ref="0xb767f748"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0xb766bdf8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xb766bdf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb766d010"/>
        <function-ref name="rand32" scoped="" ref="0xb766d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0xb766b570" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0xb766b570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb766bb98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7670c30" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7670c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7670e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0xb7667440" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0xb7667440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0xb7667618"/>
        <function-ref name="rand32" scoped="" ref="0xb76676f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0xb7668b90" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0xb7668b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb76671e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7668778" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7668778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7668950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb7660c60" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb7660c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7660e38"/>
        <function-ref name="ready" scoped="" ref="0xb7660f18"/>
        <function-ref name="sendDone" scoped="" ref="0xb765f010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb765f190" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb765f190"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb765f368"/>
        <function-ref name="header" scoped="" ref="0xb765f448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb765f5c8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb765f5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0xb765f7a0"/>
        <function-ref name="createAckPacket" scoped="" ref="0xb765f880"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb765f960"/>
        <function-ref name="isAckPacket" scoped="" ref="0xb765fa40"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0xb765fb20"/>
        <function-ref name="getAckTimeout" scoped="" ref="0xb765fc00"/>
        <function-ref name="setAckReceived" scoped="" ref="0xb765fce0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb765fdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb76607e0" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb76607e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb76609b8"/>
        <function-ref name="header" scoped="" ref="0xb7660a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb76602f8" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb76602f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb76604d0"/>
        <function-ref name="ready" scoped="" ref="0xb76605b0"/>
        <function-ref name="sendDone" scoped="" ref="0xb7660690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb765a5e0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb765a5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb765a7b8"/>
        <function-ref name="ready" scoped="" ref="0xb765a898"/>
        <function-ref name="sendDone" scoped="" ref="0xb765a978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb765aaf8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb765aaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb765acd0"/>
        <function-ref name="header" scoped="" ref="0xb765adb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xb765af00" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb765af00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb76590f0"/>
        <function-ref name="wait" scoped="" ref="0xb76591d0"/>
        <function-ref name="cancel" scoped="" ref="0xb76592b0"/>
        <function-ref name="isFree" scoped="" ref="0xb7659390"/>
        <function-ref name="getNow" scoped="" ref="0xb7659470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb765a160" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb765a160"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb765a338"/>
        <function-ref name="header" scoped="" ref="0xb765a418"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareAckConfig" ref="0xb76595c8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0xb76595c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0xb76597a0"/>
        <function-ref name="createAckPacket" scoped="" ref="0xb7659880"/>
        <function-ref name="requiresAckWait" scoped="" ref="0xb7659960"/>
        <function-ref name="isAckPacket" scoped="" ref="0xb7659a40"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0xb7659b20"/>
        <function-ref name="getAckTimeout" scoped="" ref="0xb7659c00"/>
        <function-ref name="setAckReceived" scoped="" ref="0xb7659ce0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0xb7659dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb765bbe8" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb765bbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb765bdc0"/>
        <function-ref name="ready" scoped="" ref="0xb765bea0"/>
        <function-ref name="sendDone" scoped="" ref="0xb765a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb7669648" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb7669648"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb7669820"/>
        <function-ref name="stopDone" scoped="" ref="0xb7669900"/>
        <function-ref name="start" scoped="" ref="0xb76699e0"/>
        <function-ref name="stop" scoped="" ref="0xb7669ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0xb764a150" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0xb764a150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xb764a328"/>
        <function-ref name="request" scoped="" ref="0xb764a408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioSend" ref="0xb7648010" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioSend" scoped="" ref="0xb7648010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb76481e8"/>
        <function-ref name="ready" scoped="" ref="0xb76482c8"/>
        <function-ref name="sendDone" scoped="" ref="0xb76483a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0xb7647410" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0xb7647410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb76475e8"/>
        <function-ref name="getPayload" scoped="" ref="0xb76476c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb76477a8"/>
        <function-ref name="cancel" scoped="" ref="0xb7647888"/>
        <function-ref name="sendDone" scoped="" ref="0xb7647968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0xb7647ac8" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0xb7647ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7647ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0xb764b150" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb764b150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb764b328"/>
        <function-ref name="turnOn" scoped="" ref="0xb764b408"/>
        <function-ref name="setChannel" scoped="" ref="0xb764b4e8"/>
        <function-ref name="done" scoped="" ref="0xb764b5c8"/>
        <function-ref name="standby" scoped="" ref="0xb764b6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0xb7669c00" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0xb7669c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7669dd8"/>
        <function-ref name="getPayload" scoped="" ref="0xb7669eb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb765c010"/>
        <function-ref name="cancel" scoped="" ref="0xb765c0f0"/>
        <function-ref name="sendDone" scoped="" ref="0xb765c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb765c628" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb765c628"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0xb765c800"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0xb765c8e0"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0xb765c9c0"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0xb765caa0"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0xb765cb80"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0xb765cc60"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0xb765cd40"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0xb765ce20"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0xb765cf00"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0xb764b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0xb764a568" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0xb764a568"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xb764a740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb764bcc0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb764bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb764be98"/>
        <function-ref name="header" scoped="" ref="0xb764a010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0xb764a8d0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0xb764a8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb764aaa8"/>
        <function-ref name="turnOn" scoped="" ref="0xb764ab88"/>
        <function-ref name="setChannel" scoped="" ref="0xb764ac68"/>
        <function-ref name="done" scoped="" ref="0xb764ad48"/>
        <function-ref name="standby" scoped="" ref="0xb764ae28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0xb7648db8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0xb7648db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb7647010"/>
        <function-ref name="stopDone" scoped="" ref="0xb76470f0"/>
        <function-ref name="start" scoped="" ref="0xb76471d0"/>
        <function-ref name="stop" scoped="" ref="0xb76472b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0xb7647e00" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0xb7647e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0xb7646010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb765c310" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb765c310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb765c4e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioReceive" ref="0xb7648508" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioReceive" scoped="" ref="0xb7648508"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb76486e0"/>
        <function-ref name="header" scoped="" ref="0xb76487c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb764b7e8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb764b7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb764b9c0"/>
        <function-ref name="ready" scoped="" ref="0xb764baa0"/>
        <function-ref name="sendDone" scoped="" ref="0xb764bb80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0xb7648920" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0xb7648920"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xb7648b78"/>
        <function-ref name="request" scoped="" ref="0xb7648c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0xb7641b30" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <component-ref qname="RF230LayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0xb7641b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xb7641d08"/>
        <function-ref name="request" scoped="" ref="0xb7641de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0xb7642b58" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <component-ref qname="RF230LayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb7642b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb7642d30"/>
        <function-ref name="turnOn" scoped="" ref="0xb7642e10"/>
        <function-ref name="setChannel" scoped="" ref="0xb7642ef0"/>
        <function-ref name="done" scoped="" ref="0xb7641010"/>
        <function-ref name="standby" scoped="" ref="0xb76410f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb7641728" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <component-ref qname="RF230LayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb7641728"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7641900"/>
        <function-ref name="header" scoped="" ref="0xb76419e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb7641240" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <component-ref qname="RF230LayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb7641240"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7641418"/>
        <function-ref name="ready" scoped="" ref="0xb76414f8"/>
        <function-ref name="sendDone" scoped="" ref="0xb76415d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Config" ref="0xb7640010" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <component-ref qname="RF230LayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Config" scoped="" ref="0xb7640010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230Config"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeaderLength" scoped="" ref="0xb76401e8"/>
        <function-ref name="getDefaultChannel" scoped="" ref="0xb7640728"/>
        <function-ref name="getPayload" scoped="" ref="0xb76403a8"/>
        <function-ref name="setLength" scoped="" ref="0xb7640488"/>
        <function-ref name="getLength" scoped="" ref="0xb7640568"/>
        <function-ref name="getMaxLength" scoped="" ref="0xb7640648"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0xb76402c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0xb763ae40" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0xb763ae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0xb7639050"/>
        <function-ref name="request" scoped="" ref="0xb7639130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0xb7621b50" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0xb7621b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cea410"/>
            <typename><typedef-ref name="TMicro" ref="0xb7cea5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0xb7627308"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketRSSI" ref="0xb761fb00" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0xb761fb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb761e780"/>
        <function-ref name="get" scoped="" ref="0xb761e4c0"/>
        <function-ref name="isSet" scoped="" ref="0xb761e200"/>
        <function-ref name="set" scoped="" ref="0xb761ea40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0xb763bb68" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0xb763bb68"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0xb7d3b5c0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0xb7d3b5c0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb763bd40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0xb761b128" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0xb761b128"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cea410"/>
            <typename><typedef-ref name="TRF230" ref="0xb7ae3060"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb761bb38"/>
        <function-ref name="clear" scoped="" ref="0xb761bdf8"/>
        <function-ref name="isValid" scoped="" ref="0xb761b878"/>
        <function-ref name="set" scoped="" ref="0xb76190d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplRF230" ref="0xb7629228" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplRF230" scoped="" ref="0xb7629228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplRF230"/>
      </instance>
      <interface-functions>
        <function-ref name="spiSplitRead" scoped="" ref="0xb7629400"/>
        <function-ref name="spiSplitReadWrite" scoped="" ref="0xb76294e0"/>
        <function-ref name="spiWrite" scoped="" ref="0xb76295c0"/>
        <function-ref name="spiSplitWrite" scoped="" ref="0xb76296a0"/>
        <function-ref name="crcByte" scoped="" ref="0xb7629780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0xb763be90" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0xb763be90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0xb763a080"/>
        <function-ref name="turnOn" scoped="" ref="0xb763a160"/>
        <function-ref name="setChannel" scoped="" ref="0xb763a240"/>
        <function-ref name="done" scoped="" ref="0xb763a320"/>
        <function-ref name="standby" scoped="" ref="0xb763a400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0xb7638348" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0xb7638348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7638520"/>
        <function-ref name="isInput" scoped="" ref="0xb7638600"/>
        <function-ref name="toggle" scoped="" ref="0xb76386e0"/>
        <function-ref name="isOutput" scoped="" ref="0xb76387c0"/>
        <function-ref name="get" scoped="" ref="0xb76388a0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7638980"/>
        <function-ref name="set" scoped="" ref="0xb7638a60"/>
        <function-ref name="clr" scoped="" ref="0xb7638b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTransmitPower" ref="0xb7623890" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0xb7623890"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb761f470"/>
        <function-ref name="get" scoped="" ref="0xb761f1b0"/>
        <function-ref name="isSet" scoped="" ref="0xb7623ed8"/>
        <function-ref name="set" scoped="" ref="0xb761f730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0xb7619478" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0xb7619478"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cea410"/>
            <typename><typedef-ref name="TRF230" ref="0xb7ae3060"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0xb7619ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0xb762d420" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0xb762d420"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xb762d5f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0xb76298f8" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0xb76298f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7629ad0"/>
        <function-ref name="isInput" scoped="" ref="0xb7629bb0"/>
        <function-ref name="toggle" scoped="" ref="0xb7629c90"/>
        <function-ref name="isOutput" scoped="" ref="0xb7629d70"/>
        <function-ref name="get" scoped="" ref="0xb7629e50"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7638010"/>
        <function-ref name="set" scoped="" ref="0xb76380f0"/>
        <function-ref name="clr" scoped="" ref="0xb76381d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0xb763aa38" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0xb763aa38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb763ac10"/>
        <function-ref name="header" scoped="" ref="0xb763acf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0xb7618aa8" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0xb7618aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0xb7618c80"/>
        <function-ref name="wait" scoped="" ref="0xb7618d60"/>
        <function-ref name="cancel" scoped="" ref="0xb7618e40"/>
        <function-ref name="isFree" scoped="" ref="0xb7618f20"/>
        <function-ref name="getNow" scoped="" ref="0xb7617018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0xb761ee18" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0xb761ee18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb761ca08"/>
        <function-ref name="get" scoped="" ref="0xb761c748"/>
        <function-ref name="isSet" scoped="" ref="0xb761c488"/>
        <function-ref name="set" scoped="" ref="0xb761ccc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xb763b6f8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb763b6f8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0xb7d3b5c0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0xb7d3b5c0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb763b8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0xb762f4a8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0xb762f4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb762f680"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb762f760"/>
        <function-ref name="request" scoped="" ref="0xb762f840"/>
        <function-ref name="granted" scoped="" ref="0xb762f920"/>
        <function-ref name="isOwner" scoped="" ref="0xb762fa00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0xb76392f8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0xb76392f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb76394d0"/>
        <function-ref name="isInput" scoped="" ref="0xb76395b0"/>
        <function-ref name="toggle" scoped="" ref="0xb7639690"/>
        <function-ref name="isOutput" scoped="" ref="0xb7639770"/>
        <function-ref name="get" scoped="" ref="0xb7639850"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7639930"/>
        <function-ref name="set" scoped="" ref="0xb7639a10"/>
        <function-ref name="clr" scoped="" ref="0xb7639af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0xb763a550" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0xb763a550"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb763a728"/>
        <function-ref name="ready" scoped="" ref="0xb763a808"/>
        <function-ref name="sendDone" scoped="" ref="0xb763a8e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0xb7624cd0" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0xb7624cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xb7624f28"/>
        <function-ref name="disable" scoped="" ref="0xb7628018"/>
        <function-ref name="captured" scoped="" ref="0xb76280f8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xb76281d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketLinkQuality" ref="0xb7627620" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0xb7627620"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb76231f8"/>
        <function-ref name="get" scoped="" ref="0xb7627f28"/>
        <function-ref name="isSet" scoped="" ref="0xb7627c68"/>
        <function-ref name="set" scoped="" ref="0xb76234b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0xb76184e0" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0xb76184e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0xb76186b8"/>
        <function-ref name="suspend" scoped="" ref="0xb7618798"/>
        <function-ref name="resume" scoped="" ref="0xb7618878"/>
        <function-ref name="run" scoped="" ref="0xb7618958"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Config" ref="0xb7619c68" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Config" scoped="" ref="0xb7619c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230Config"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeaderLength" scoped="" ref="0xb7619e40"/>
        <function-ref name="getDefaultChannel" scoped="" ref="0xb7618398"/>
        <function-ref name="getPayload" scoped="" ref="0xb7618018"/>
        <function-ref name="setLength" scoped="" ref="0xb76180f8"/>
        <function-ref name="getLength" scoped="" ref="0xb76181d8"/>
        <function-ref name="getMaxLength" scoped="" ref="0xb76182b8"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0xb7619f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0xb75ceb38" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0xb75ceb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb75ced10"/>
        <function-ref name="isInput" scoped="" ref="0xb75cedf0"/>
        <function-ref name="toggle" scoped="" ref="0xb75ceed0"/>
        <function-ref name="isOutput" scoped="" ref="0xb75cd010"/>
        <function-ref name="get" scoped="" ref="0xb75cd0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb75cd1d0"/>
        <function-ref name="set" scoped="" ref="0xb75cd2b0"/>
        <function-ref name="clr" scoped="" ref="0xb75cd390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplRF230" ref="0xb75cb3b8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplRF230" scoped="" ref="0xb75cb3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplRF230"/>
      </instance>
      <interface-functions>
        <function-ref name="spiSplitRead" scoped="" ref="0xb75cb590"/>
        <function-ref name="spiSplitReadWrite" scoped="" ref="0xb75cb670"/>
        <function-ref name="spiWrite" scoped="" ref="0xb75cb750"/>
        <function-ref name="spiSplitWrite" scoped="" ref="0xb75cb830"/>
        <function-ref name="crcByte" scoped="" ref="0xb75cb910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0xb75cfe50" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0xb75cfe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xb75ce050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0xb75ce1c8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0xb75ce1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb75ce3a0"/>
        <function-ref name="isInput" scoped="" ref="0xb75ce480"/>
        <function-ref name="toggle" scoped="" ref="0xb75ce560"/>
        <function-ref name="isOutput" scoped="" ref="0xb75ce640"/>
        <function-ref name="get" scoped="" ref="0xb75ce720"/>
        <function-ref name="makeOutput" scoped="" ref="0xb75ce800"/>
        <function-ref name="set" scoped="" ref="0xb75ce8e0"/>
        <function-ref name="clr" scoped="" ref="0xb75ce9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb75cdc28" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb75cdc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cea410"/>
            <typename><typedef-ref name="TRF230" ref="0xb7ae3060"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb75cb010"/>
        <function-ref name="fired" scoped="" ref="0xb75cc840"/>
        <function-ref name="startAt" scoped="" ref="0xb75ccc40"/>
        <function-ref name="isRunning" scoped="" ref="0xb75cca40"/>
        <function-ref name="getAlarm" scoped="" ref="0xb75cb210"/>
        <function-ref name="start" scoped="" ref="0xb75cc3a0"/>
        <function-ref name="stop" scoped="" ref="0xb75cc640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0xb75cf7b0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0xb75cf7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb75cf988"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb75cfa68"/>
        <function-ref name="request" scoped="" ref="0xb75cfb48"/>
        <function-ref name="granted" scoped="" ref="0xb75cfc28"/>
        <function-ref name="isOwner" scoped="" ref="0xb75cfd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0xb75d0d78" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0xb75d0d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb75cf010"/>
        <function-ref name="isInput" scoped="" ref="0xb75cf0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb75cf1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb75cf2b0"/>
        <function-ref name="get" scoped="" ref="0xb75cf390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb75cf470"/>
        <function-ref name="set" scoped="" ref="0xb75cf550"/>
        <function-ref name="clr" scoped="" ref="0xb75cf630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0xb75cd508" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0xb75cd508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xb75cd6e0"/>
        <function-ref name="disable" scoped="" ref="0xb75cd7c0"/>
        <function-ref name="captured" scoped="" ref="0xb75cd8a0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xb75cd980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0xb75add70" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0xb75add70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb75ac010"/>
        <function-ref name="isInput" scoped="" ref="0xb75ac0f0"/>
        <function-ref name="toggle" scoped="" ref="0xb75ac1d0"/>
        <function-ref name="isOutput" scoped="" ref="0xb75ac2b0"/>
        <function-ref name="get" scoped="" ref="0xb75ac390"/>
        <function-ref name="makeOutput" scoped="" ref="0xb75ac470"/>
        <function-ref name="set" scoped="" ref="0xb75ac550"/>
        <function-ref name="clr" scoped="" ref="0xb75ac630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplRF230" ref="0xb75afaf0" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplRF230" scoped="" ref="0xb75afaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplRF230"/>
      </instance>
      <interface-functions>
        <function-ref name="spiSplitRead" scoped="" ref="0xb75afcc8"/>
        <function-ref name="spiSplitReadWrite" scoped="" ref="0xb75afda8"/>
        <function-ref name="spiWrite" scoped="" ref="0xb75afe88"/>
        <function-ref name="spiSplitWrite" scoped="" ref="0xb75ae010"/>
        <function-ref name="crcByte" scoped="" ref="0xb75ae0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0xb75ae360" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0xb75ae360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0xb75adaf8"/>
        <function-ref name="test" scoped="" ref="0xb75ad6f8"/>
        <function-ref name="get" scoped="" ref="0xb75ae9a8"/>
        <function-ref name="captured" scoped="" ref="0xb75aee48"/>
        <function-ref name="reset" scoped="" ref="0xb75ad0f8"/>
        <function-ref name="isOn" scoped="" ref="0xb75ad8f8"/>
        <function-ref name="set" scoped="" ref="0xb75aeba8"/>
        <function-ref name="start" scoped="" ref="0xb75ad2f8"/>
        <function-ref name="stop" scoped="" ref="0xb75ad4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0xb75ac7a8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0xb75ac7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb75ac980"/>
        <function-ref name="isInput" scoped="" ref="0xb75aca60"/>
        <function-ref name="toggle" scoped="" ref="0xb75acb40"/>
        <function-ref name="isOutput" scoped="" ref="0xb75acc20"/>
        <function-ref name="get" scoped="" ref="0xb75acd00"/>
        <function-ref name="makeOutput" scoped="" ref="0xb75acde0"/>
        <function-ref name="set" scoped="" ref="0xb75acec0"/>
        <function-ref name="clr" scoped="" ref="0xb75ab010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0xb75af7c8" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0xb75af7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb75af9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0xb75af1d8" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0xb75af1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0xb75af3b0"/>
        <function-ref name="disable" scoped="" ref="0xb75af490"/>
        <function-ref name="captured" scoped="" ref="0xb75af570"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0xb75af650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0xb7596520" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0xb7596520"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb75966f8"/>
        <function-ref name="sendDone" scoped="" ref="0xb75967d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0xb759b178" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0xb759b178"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xb759b350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb759cda0" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb759cda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb759b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb7596bd8" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb7596bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb7596db0"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb7596e90"/>
        <function-ref name="request" scoped="" ref="0xb7599010"/>
        <function-ref name="granted" scoped="" ref="0xb75990f0"/>
        <function-ref name="isOwner" scoped="" ref="0xb75991d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0xb7576398" loc="207:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0xb7576398"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7576570"/>
        <function-ref name="runTask" scoped="" ref="0xb7576650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0xb75921a0" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0xb75921a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7592378"/>
        <function-ref name="sendDone" scoped="" ref="0xb7592458"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0xb758fb20" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0xb758fb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb758fcf8"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb758fdd8"/>
        <function-ref name="request" scoped="" ref="0xb758feb8"/>
        <function-ref name="granted" scoped="" ref="0xb7585010"/>
        <function-ref name="isOwner" scoped="" ref="0xb75850f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0xb7593e38" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0xb7593e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0xb7592050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7593b18" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7593b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7593cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0xb7590010" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0xb7590010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0xb75901e8"/>
        <function-ref name="sleep" scoped="" ref="0xb758f630"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0xb75903a8"/>
        <function-ref name="dataReady" scoped="" ref="0xb758f710"/>
        <function-ref name="initMaster" scoped="" ref="0xb7590568"/>
        <function-ref name="setMasterBit" scoped="" ref="0xb7590648"/>
        <function-ref name="enableInterrupt" scoped="" ref="0xb7590728"/>
        <function-ref name="read" scoped="" ref="0xb7590808"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0xb75908e8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0xb75909c8"/>
        <function-ref name="setClock" scoped="" ref="0xb7590aa8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb7590b88"/>
        <function-ref name="setClockPolarity" scoped="" ref="0xb7590c68"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0xb7590dc8"/>
        <function-ref name="setDataOrder" scoped="" ref="0xb7590ea8"/>
        <function-ref name="write" scoped="" ref="0xb758f010"/>
        <function-ref name="enableSpi" scoped="" ref="0xb758f0f0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0xb758f1d0"/>
        <function-ref name="getClockPhase" scoped="" ref="0xb758f2b0"/>
        <function-ref name="getClock" scoped="" ref="0xb758f390"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0xb758f470"/>
        <function-ref name="getClockPolarity" scoped="" ref="0xb75902c8"/>
        <function-ref name="setClockPhase" scoped="" ref="0xb7590488"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0xb758f550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb7592838" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb7592838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb7592a10"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb7592af0"/>
        <function-ref name="request" scoped="" ref="0xb7592bd0"/>
        <function-ref name="granted" scoped="" ref="0xb7592cb0"/>
        <function-ref name="isOwner" scoped="" ref="0xb7592d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0xb7581bc8" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0xb7581bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xb7581da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0xb75817c0" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb75817c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb7581998"/>
        <function-ref name="userId" scoped="" ref="0xb7581a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0xb7561d48" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0xb7561d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0xb7561f20"/>
        <function-ref name="sleep" scoped="" ref="0xb755f390"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0xb75600f8"/>
        <function-ref name="dataReady" scoped="" ref="0xb755f470"/>
        <function-ref name="initMaster" scoped="" ref="0xb75602b8"/>
        <function-ref name="setMasterBit" scoped="" ref="0xb7560398"/>
        <function-ref name="enableInterrupt" scoped="" ref="0xb7560478"/>
        <function-ref name="read" scoped="" ref="0xb7560558"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0xb7560638"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0xb7560718"/>
        <function-ref name="setClock" scoped="" ref="0xb75607f8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb75608d8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0xb75609b8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0xb7560b18"/>
        <function-ref name="setDataOrder" scoped="" ref="0xb7560bf8"/>
        <function-ref name="write" scoped="" ref="0xb7560cd8"/>
        <function-ref name="enableSpi" scoped="" ref="0xb7560db8"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0xb7560e98"/>
        <function-ref name="getClockPhase" scoped="" ref="0xb755f010"/>
        <function-ref name="getClock" scoped="" ref="0xb755f0f0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0xb755f1d0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0xb7560018"/>
        <function-ref name="setClockPhase" scoped="" ref="0xb75601d8"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0xb755f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0xb75576c8" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0xb75576c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb75578a0"/>
        <function-ref name="isInput" scoped="" ref="0xb7557980"/>
        <function-ref name="toggle" scoped="" ref="0xb7557a60"/>
        <function-ref name="isOutput" scoped="" ref="0xb7557b40"/>
        <function-ref name="get" scoped="" ref="0xb7557c20"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7557d00"/>
        <function-ref name="set" scoped="" ref="0xb7557de0"/>
        <function-ref name="clr" scoped="" ref="0xb7557ec0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0xb7558348" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0xb7558348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7558520"/>
        <function-ref name="isInput" scoped="" ref="0xb7558600"/>
        <function-ref name="toggle" scoped="" ref="0xb75586e0"/>
        <function-ref name="isOutput" scoped="" ref="0xb75587c0"/>
        <function-ref name="get" scoped="" ref="0xb75588a0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7558980"/>
        <function-ref name="set" scoped="" ref="0xb7558a60"/>
        <function-ref name="clr" scoped="" ref="0xb7558b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0xb7554918" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0xb7554918"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7554af0"/>
        <function-ref name="isInput" scoped="" ref="0xb7554bd0"/>
        <function-ref name="toggle" scoped="" ref="0xb7554cb0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7554d90"/>
        <function-ref name="get" scoped="" ref="0xb7554e70"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7558010"/>
        <function-ref name="set" scoped="" ref="0xb75580f0"/>
        <function-ref name="clr" scoped="" ref="0xb75581d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0xb75544b8" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0xb75544b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0xb7554690"/>
        <function-ref name="stop" scoped="" ref="0xb7554770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0xb7553068" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0xb7553068"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0xb7553240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0xb755b538" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0xb755b538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0xb755b710"/>
        <function-ref name="sleep" scoped="" ref="0xb755ab10"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0xb755b8d0"/>
        <function-ref name="dataReady" scoped="" ref="0xb755abf0"/>
        <function-ref name="initMaster" scoped="" ref="0xb755ba90"/>
        <function-ref name="setMasterBit" scoped="" ref="0xb755bb70"/>
        <function-ref name="enableInterrupt" scoped="" ref="0xb755bc50"/>
        <function-ref name="read" scoped="" ref="0xb755bd30"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0xb755be10"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0xb755bef0"/>
        <function-ref name="setClock" scoped="" ref="0xb755a010"/>
        <function-ref name="isInterruptPending" scoped="" ref="0xb755a0f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0xb755a1d0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0xb755a330"/>
        <function-ref name="setDataOrder" scoped="" ref="0xb755a410"/>
        <function-ref name="write" scoped="" ref="0xb755a4f0"/>
        <function-ref name="enableSpi" scoped="" ref="0xb755a5d0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0xb755a6b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0xb755a790"/>
        <function-ref name="getClock" scoped="" ref="0xb755a870"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0xb755a950"/>
        <function-ref name="getClockPolarity" scoped="" ref="0xb755b7f0"/>
        <function-ref name="setClockPhase" scoped="" ref="0xb755b9b0"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0xb755aa30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0xb7558cb8" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0xb7558cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7558e90"/>
        <function-ref name="isInput" scoped="" ref="0xb7557010"/>
        <function-ref name="toggle" scoped="" ref="0xb75570f0"/>
        <function-ref name="isOutput" scoped="" ref="0xb75571d0"/>
        <function-ref name="get" scoped="" ref="0xb75572b0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7557390"/>
        <function-ref name="set" scoped="" ref="0xb7557470"/>
        <function-ref name="clr" scoped="" ref="0xb7557550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb752edc0" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xb752edc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb752d010"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb752d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb752d6e0" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb752d6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb752d8c8"/>
        <function-ref name="configure" scoped="" ref="0xb752d9a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb752e680" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb752e680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb752e868"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb752e948"/>
        <function-ref name="request" scoped="" ref="0xb752ea28"/>
        <function-ref name="granted" scoped="" ref="0xb752eb08"/>
        <function-ref name="isOwner" scoped="" ref="0xb752ebe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb752d230" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb752d230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb752d408"/>
        <function-ref name="userId" scoped="" ref="0xb752d4e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb7235418" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7235418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb72355f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0xb7235750" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0xb7235750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb7235928"/>
        <function-ref name="isEmpty" scoped="" ref="0xb7235a08"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb7235ae8"/>
        <function-ref name="dequeue" scoped="" ref="0xb7235bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0xb722a010" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0xb722a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0xb722a1f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0xb722a2d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0xb722a8d8" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0xb722a8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0xb722aac0"/>
        <function-ref name="configure" scoped="" ref="0xb722aba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0xb722ad00" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0xb722ad00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0xb722aed8"/>
        <function-ref name="isEmpty" scoped="" ref="0xb7229010"/>
        <function-ref name="isEnqueued" scoped="" ref="0xb72290f0"/>
        <function-ref name="dequeue" scoped="" ref="0xb72291d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0xb722b828" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0xb722b828"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0xb722ba10"/>
        <function-ref name="immediateRequest" scoped="" ref="0xb722baf0"/>
        <function-ref name="request" scoped="" ref="0xb722bbd0"/>
        <function-ref name="granted" scoped="" ref="0xb722bcb0"/>
        <function-ref name="isOwner" scoped="" ref="0xb722bd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0xb722a418" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0xb722a418"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0xb722a5f0"/>
        <function-ref name="userId" scoped="" ref="0xb722a6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0xb7229350" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0xb7229350"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0xb7229528"/>
        <function-ref name="runTask" scoped="" ref="0xb7229608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb74f0850" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb74f0850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cea410"/>
            <typename><typedef-ref name="TOne" ref="0xb7cc84a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb74d0bf0"/>
        <function-ref name="fired" scoped="" ref="0xb74d04b0"/>
        <function-ref name="startAt" scoped="" ref="0xb74d08b0"/>
        <function-ref name="isRunning" scoped="" ref="0xb74d06b0"/>
        <function-ref name="getAlarm" scoped="" ref="0xb74d0df0"/>
        <function-ref name="start" scoped="" ref="0xb74d0010"/>
        <function-ref name="stop" scoped="" ref="0xb74d02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0xb7216c78" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0xb7216c78"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0xb7d3b290"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0xb7d3b290"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cea410"/>
            <typename><typedef-ref name="TOne" ref="0xb7cc84a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb7214010"/>
        <function-ref name="fired" scoped="" ref="0xb7215890"/>
        <function-ref name="startAt" scoped="" ref="0xb7215c90"/>
        <function-ref name="isRunning" scoped="" ref="0xb7215a90"/>
        <function-ref name="getAlarm" scoped="" ref="0xb7214210"/>
        <function-ref name="start" scoped="" ref="0xb72153f0"/>
        <function-ref name="stop" scoped="" ref="0xb7215690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0xb7211320" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0xb7211320"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0xb7210648"/>
        <function-ref name="fired" scoped="" ref="0xb7211e08"/>
        <function-ref name="get" scoped="" ref="0xb7211968"/>
        <function-ref name="reset" scoped="" ref="0xb7210048"/>
        <function-ref name="isOn" scoped="" ref="0xb7210848"/>
        <function-ref name="set" scoped="" ref="0xb7211b68"/>
        <function-ref name="start" scoped="" ref="0xb7210248"/>
        <function-ref name="stop" scoped="" ref="0xb7210448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0xb7214458" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0xb7214458"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0xb7212c10"/>
        <function-ref name="test" scoped="" ref="0xb7212810"/>
        <function-ref name="get" scoped="" ref="0xb7214aa0"/>
        <function-ref name="setScale" scoped="" ref="0xb7212e10"/>
        <function-ref name="getScale" scoped="" ref="0xb72110d8"/>
        <function-ref name="reset" scoped="" ref="0xb7212210"/>
        <function-ref name="overflow" scoped="" ref="0xb7212010"/>
        <function-ref name="isOn" scoped="" ref="0xb7212a10"/>
        <function-ref name="set" scoped="" ref="0xb7214ca0"/>
        <function-ref name="start" scoped="" ref="0xb7212410"/>
        <function-ref name="stop" scoped="" ref="0xb7212610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0xb74c92a0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0xb74c92a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cea410"/>
            <typename><typedef-ref name="TMicro" ref="0xb7cea5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0xb74c99f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0xb74b1e18" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="TimeSyncC.TimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0xb74b1e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cebc58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7cebe28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0xb74af748"/>
        <function-ref name="fired" scoped="" ref="0xb74b0b48"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0xb74af108"/>
        <function-ref name="isOneShot" scoped="" ref="0xb74b0f08"/>
        <function-ref name="getdt" scoped="" ref="0xb74afb08"/>
        <function-ref name="gett0" scoped="" ref="0xb74af928"/>
        <function-ref name="isRunning" scoped="" ref="0xb74b0d28"/>
        <function-ref name="startPeriodic" scoped="" ref="0xb74b0468"/>
        <function-ref name="startOneShotAt" scoped="" ref="0xb74af428"/>
        <function-ref name="startOneShot" scoped="" ref="0xb74b06e8"/>
        <function-ref name="stop" scoped="" ref="0xb74b0968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb74aa560" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb74aa560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb74aa738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0xb74aa8a0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb74aa8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb74aaa78"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb74aab58"/>
        <function-ref name="led1On" scoped="" ref="0xb74aac38"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb74aad18"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb74aadf8"/>
        <function-ref name="get" scoped="" ref="0xb74aaed8"/>
        <function-ref name="led1Off" scoped="" ref="0xb74a9010"/>
        <function-ref name="led2Off" scoped="" ref="0xb74a9390"/>
        <function-ref name="set" scoped="" ref="0xb74a90f0"/>
        <function-ref name="led0On" scoped="" ref="0xb74a91d0"/>
        <function-ref name="led2On" scoped="" ref="0xb74a92b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0xb7498998" loc="38:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0xb7498998"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cebc58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7cebe28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb74973e0"/>
        <function-ref name="clear" scoped="" ref="0xb74976a0"/>
        <function-ref name="isValid" scoped="" ref="0xb7497120"/>
        <function-ref name="set" scoped="" ref="0xb7497960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0xb7497c60" loc="39:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0xb7497c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0xb7497e38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GlobalTime" ref="0xb749b2d0" loc="32:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GlobalTime" scoped="" ref="0xb749b2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GlobalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cebc58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7cebe28"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getLocalTime" scoped="" ref="0xb749b918"/>
        <function-ref name="global2Local" scoped="" ref="0xb749a0b8"/>
        <function-ref name="getGlobalTime" scoped="" ref="0xb749bb18"/>
        <function-ref name="local2Global" scoped="" ref="0xb749bdd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0xb749aea0" loc="35:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb749aea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb74990c0"/>
        <function-ref name="getPayload" scoped="" ref="0xb74991a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7499280"/>
        <function-ref name="cancel" scoped="" ref="0xb7499360"/>
        <function-ref name="sendDone" scoped="" ref="0xb7499440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0xb7499588" loc="36:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb7499588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7499760"/>
        <function-ref name="payloadLength" scoped="" ref="0xb7499840"/>
        <function-ref name="getPayload" scoped="" ref="0xb7499920"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7499a00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb7499ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncInfo" ref="0xb749a320" loc="33:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncInfo" scoped="" ref="0xb749a320"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSyncInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getSyncPoint" scoped="" ref="0xb749a4f8"/>
        <function-ref name="getRootID" scoped="" ref="0xb749a5d8"/>
        <function-ref name="getSeqNum" scoped="" ref="0xb749a6b8"/>
        <function-ref name="getOffset" scoped="" ref="0xb749a798"/>
        <function-ref name="getNumEntries" scoped="" ref="0xb749a878"/>
        <function-ref name="getHeartBeats" scoped="" ref="0xb749a958"/>
        <function-ref name="getSkew" scoped="" ref="0xb749aa38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0xb7495010" loc="40:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0xb7495010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb74951e8"/>
        <function-ref name="stopDone" scoped="" ref="0xb74952c8"/>
        <function-ref name="start" scoped="" ref="0xb74953a8"/>
        <function-ref name="stop" scoped="" ref="0xb7495488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0xb749ab80" loc="34:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb749ab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb749ad58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0xb7499c28" loc="37:TestFtspC.nc">
      <component-ref qname="TestFtspC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb7499c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb7499e00"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb7499ee0"/>
        <function-ref name="led1On" scoped="" ref="0xb7498010"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb74980f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb74981d0"/>
        <function-ref name="get" scoped="" ref="0xb74982b0"/>
        <function-ref name="led1Off" scoped="" ref="0xb7498390"/>
        <function-ref name="led2Off" scoped="" ref="0xb7498710"/>
        <function-ref name="set" scoped="" ref="0xb7498470"/>
        <function-ref name="led0On" scoped="" ref="0xb7498550"/>
        <function-ref name="led2On" scoped="" ref="0xb7498630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0xb74892d0" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0xb74892d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0xb74894a8"/>
        <function-ref name="stopDone" scoped="" ref="0xb7489588"/>
        <function-ref name="start" scoped="" ref="0xb7489668"/>
        <function-ref name="stop" scoped="" ref="0xb7489748"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0xb74837e0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0xb74837e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cebc58"/>
            <typename><typedef-ref name="TMilli" ref="0xb7cebe28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb74822d0"/>
        <function-ref name="clear" scoped="" ref="0xb7482590"/>
        <function-ref name="isValid" scoped="" ref="0xb7482010"/>
        <function-ref name="set" scoped="" ref="0xb7482850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0xb7489b20" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0xb7489b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0xb7489cf8"/>
        <function-ref name="getPayload" scoped="" ref="0xb7489dd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb7489eb8"/>
        <function-ref name="cancel" scoped="" ref="0xb7488010"/>
        <function-ref name="sendDone" scoped="" ref="0xb74880f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0xb7488aa0" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0xb7488aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb7488c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0xb7488dc0" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0xb7488dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0xb7487010"/>
        <function-ref name="payloadLength" scoped="" ref="0xb74870f0"/>
        <function-ref name="getPayload" scoped="" ref="0xb74871d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0xb74872b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0xb7487390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0xb7486658" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0xb7486658"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0xb7486830"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0xb7486910"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0xb74869f0"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0xb7486ad0"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0xb7486bb0"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0xb7486c90"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0xb7486d70"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0xb7486e50"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0xb7485010"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0xb74850f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0xb74884c8" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0xb74884c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0xb74886a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0xb7486168" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0xb7486168"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0xb7486340"/>
        <function-ref name="noAck" scoped="" ref="0xb7486420"/>
        <function-ref name="wasAcked" scoped="" ref="0xb7486500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0xb74874e0" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0xb74874e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0xb74876b8"/>
        <function-ref name="source" scoped="" ref="0xb7487798"/>
        <function-ref name="address" scoped="" ref="0xb7487878"/>
        <function-ref name="destination" scoped="" ref="0xb7487958"/>
        <function-ref name="setSource" scoped="" ref="0xb7487a38"/>
        <function-ref name="setDestination" scoped="" ref="0xb7487b18"/>
        <function-ref name="type" scoped="" ref="0xb7487bf8"/>
        <function-ref name="setType" scoped="" ref="0xb7487cd8"/>
        <function-ref name="isForMe" scoped="" ref="0xb7487db8"/>
        <function-ref name="setGroup" scoped="" ref="0xb7487e98"/>
        <function-ref name="localGroup" scoped="" ref="0xb7486010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0xb74853b0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0xb74853b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0xb7cea410"/>
            <typename><typedef-ref name="TMicro" ref="0xb7cea5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0xb7485dc0"/>
        <function-ref name="clear" scoped="" ref="0xb74830a8"/>
        <function-ref name="isValid" scoped="" ref="0xb7485b00"/>
        <function-ref name="set" scoped="" ref="0xb7483368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0xb747c770" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb747c770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb747c948"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb747ca28"/>
        <function-ref name="led1On" scoped="" ref="0xb747cb08"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb747cbe8"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb747ccc8"/>
        <function-ref name="get" scoped="" ref="0xb747cda8"/>
        <function-ref name="led1Off" scoped="" ref="0xb747ce88"/>
        <function-ref name="led2Off" scoped="" ref="0xb747b2b0"/>
        <function-ref name="set" scoped="" ref="0xb747b010"/>
        <function-ref name="led0On" scoped="" ref="0xb747b0f0"/>
        <function-ref name="led2On" scoped="" ref="0xb747b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0xb74767e8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0xb74767e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb74769c0"/>
        <function-ref name="isInput" scoped="" ref="0xb7476aa0"/>
        <function-ref name="toggle" scoped="" ref="0xb7476b80"/>
        <function-ref name="isOutput" scoped="" ref="0xb7476c60"/>
        <function-ref name="get" scoped="" ref="0xb7476d40"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7476e20"/>
        <function-ref name="set" scoped="" ref="0xb7476f00"/>
        <function-ref name="clr" scoped="" ref="0xb7475010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0xb74787c0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb74787c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7478998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0xb7475188" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0xb7475188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7475360"/>
        <function-ref name="isInput" scoped="" ref="0xb7475440"/>
        <function-ref name="toggle" scoped="" ref="0xb7475520"/>
        <function-ref name="isOutput" scoped="" ref="0xb7475600"/>
        <function-ref name="get" scoped="" ref="0xb74756e0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb74757c0"/>
        <function-ref name="set" scoped="" ref="0xb74758a0"/>
        <function-ref name="clr" scoped="" ref="0xb7475980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0xb7478ae0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0xb7478ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0xb7478cb8"/>
        <function-ref name="led0Toggle" scoped="" ref="0xb7478d98"/>
        <function-ref name="led1On" scoped="" ref="0xb7478e78"/>
        <function-ref name="led1Toggle" scoped="" ref="0xb7476010"/>
        <function-ref name="led2Toggle" scoped="" ref="0xb74760f0"/>
        <function-ref name="get" scoped="" ref="0xb74761d0"/>
        <function-ref name="led1Off" scoped="" ref="0xb74762b0"/>
        <function-ref name="led2Off" scoped="" ref="0xb7476630"/>
        <function-ref name="set" scoped="" ref="0xb7476390"/>
        <function-ref name="led0On" scoped="" ref="0xb7476470"/>
        <function-ref name="led2On" scoped="" ref="0xb7476550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0xb7475af8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0xb7475af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7475cd0"/>
        <function-ref name="isInput" scoped="" ref="0xb7475db0"/>
        <function-ref name="toggle" scoped="" ref="0xb7475e90"/>
        <function-ref name="isOutput" scoped="" ref="0xb7474010"/>
        <function-ref name="get" scoped="" ref="0xb74740f0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb74741d0"/>
        <function-ref name="set" scoped="" ref="0xb74742b0"/>
        <function-ref name="clr" scoped="" ref="0xb7474390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0xb74650a8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0xb74650a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7465280"/>
        <function-ref name="isInput" scoped="" ref="0xb7465360"/>
        <function-ref name="toggle" scoped="" ref="0xb7465440"/>
        <function-ref name="isOutput" scoped="" ref="0xb7465520"/>
        <function-ref name="get" scoped="" ref="0xb7465600"/>
        <function-ref name="makeOutput" scoped="" ref="0xb74656e0"/>
        <function-ref name="set" scoped="" ref="0xb74657c0"/>
        <function-ref name="clr" scoped="" ref="0xb74658a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0xb7465a38" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0xb7465a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7465c10"/>
        <function-ref name="isInput" scoped="" ref="0xb7465cf0"/>
        <function-ref name="toggle" scoped="" ref="0xb7465dd0"/>
        <function-ref name="isOutput" scoped="" ref="0xb7465eb0"/>
        <function-ref name="get" scoped="" ref="0xb7464010"/>
        <function-ref name="makeOutput" scoped="" ref="0xb74640f0"/>
        <function-ref name="set" scoped="" ref="0xb74641d0"/>
        <function-ref name="clr" scoped="" ref="0xb74642b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0xb7464da8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0xb7464da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0xb7463010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0xb7464448" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0xb7464448"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0xb7464620"/>
        <function-ref name="isInput" scoped="" ref="0xb7464700"/>
        <function-ref name="toggle" scoped="" ref="0xb74647e0"/>
        <function-ref name="isOutput" scoped="" ref="0xb74648c0"/>
        <function-ref name="get" scoped="" ref="0xb74649a0"/>
        <function-ref name="makeOutput" scoped="" ref="0xb7464a80"/>
        <function-ref name="set" scoped="" ref="0xb7464b60"/>
        <function-ref name="clr" scoped="" ref="0xb7464c40"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Init.nc">
      <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Init.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author Phil Levis&#10;&#10; @author David Gay&#10;&#10; Revision:  $Revision: 1.11 $&#10;&#10;&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0xb7c97898" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Init.nc">
          <short>&#10;&#10; Initialize this component.</short>
          <long>&#10;&#10; Initialize this component. Initialization should not assume that&#10;&#10; any component is running: init() cannot call any commands besides&#10;&#10; those that initialize other components.  &#10;&#10; &#10;&#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10;&#10; @see TEP 107: Boot Sequence&#10;&#10;&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Boot.nc">
      <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Boot.nc">
        <short>&#10;&#10; Interface that notifies components when TinyOS has booted&#10;&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Interface that notifies components when TinyOS has booted&#10;&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10;&#10;&#10; @author Philip Levis&#10;&#10; @date   January 5 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0xb7c99688" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Boot.nc">
          <short>&#10;&#10; Signaled when the system has booted successfully.</short>
          <long>&#10;&#10; Signaled when the system has booted successfully. Components can&#10;&#10; assume the system has been initialized properly. Services may&#10;&#10; need to be started to work, however.&#10;&#10;&#10;&#10; @see StdControl&#10;&#10; @see SplitConrol&#10;&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10;&#10; This interface provides functions to compute ATmega128 configuration&#10;&#10; values that are clock-rate dependent.</short>
        <long>&#10;&#10; This interface provides functions to compute ATmega128 configuration&#10;&#10; values that are clock-rate dependent. These include:&#60;ul>&#10;&#10; &#60;li>the ADC prescaler value necessary for full precision&#10;&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10;&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;&#10;   AlarmMicroXXC components to get more accurate timing&#10;&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;&#10;   interface will measure this value at boot time and use it to compute&#10;&#10;   the values above)&#10;&#10; &#60;/ul>&#10;&#10;&#10;&#10; @author David Gay&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0xb7c8e020" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10;&#10; Return the value to use for the baudrate register to achieve a&#10;&#10; particular baud rate.</short>
          <long>&#10;&#10; Return the value to use for the baudrate register to achieve a&#10;&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10;&#10; double speed).&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0xb7c8fda8" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0xb7c90010" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10;&#10; Return CPU cycles per 1/32768s.&#10;&#10;</short>
          <long>&#10;&#10; Return CPU cycles per 1/32768s.&#10;&#10; @return CPU cycles.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0xb7c90868" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10;&#10; Convert n microseconds into a value suitable for use with&#10;&#10; AlarmMicro32C Alarms.&#10;&#10;</short>
          <long>&#10;&#10; Convert n microseconds into a value suitable for use with&#10;&#10; AlarmMicro32C Alarms.&#10;&#10; @param n Time in microseconds.&#10;&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0xb7c905e8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0xb7c8f150" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10;&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10;&#10;</short>
          <long>&#10;&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10;&#10; @param n A time expressed in AlarmMicro time units.&#10;&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0xb7c90e40" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0xb7c8f7c0" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10;&#10; Return the smallest ADC prescaler value which guaranteers full&#10;&#10; ADC precision.&#10;&#10;</short>
          <long>&#10;&#10; Return the smallest ADC prescaler value which guaranteers full&#10;&#10; ADC precision.&#10;&#10; @return ADC prescaler value.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author Joe Polastre&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0xb7c7d328" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isInput" ref="0xb7c7d640" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="toggle" ref="0xb7c7fc48" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOutput" ref="0xb7c7dc78" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0xb7c7d010" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0xb7c7d958" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0xb7c7f628" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="clr" ref="0xb7c7f938" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
      <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <short> &#10;&#10; The interface to a TinyOS task scheduler.&#10;&#10;&#10;&#10;</short>
        <long> &#10;&#10; The interface to a TinyOS task scheduler.&#10;&#10;&#10;&#10; @author Philip Levis&#10;&#10; @date   January 19 2005&#10;&#10; @see TEP 106: Tasks and Schedulers&#10;&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0xb7d357c8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10;&#10; Initialize the scheduler.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0xb7d34450" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short>&#10;&#10; Enter an infinite task-running loop.</short>
          <long>&#10;&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10;&#10; state when the processor is idle (task queue empty, waiting for&#10;&#10; interrupts). This call never returns.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0xb7d35e10" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10;&#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10;&#10;&#10;</short>
          <long> &#10;&#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10;&#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;&#10;                ran, FALSE indicates there was no task to run.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0xb7d2d7f0" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10;&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10;&#10; Post this task to the TinyOS scheduler. At some later time,&#10;&#10; depending on the scheduling policy, the scheduler will signal the&#10;&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10;&#10;&#10; @return SUCCESS if task was successfuly&#10;&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10;&#10; implementation of this interface (the class of task).&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="runTask" ref="0xb7d2de28" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10;&#10; Event from the scheduler to run this task.</short>
          <long>&#10;&#10; Event from the scheduler to run this task. Following the TinyOS&#10;&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10;&#10; execute atomically with respect to one another, but can be&#10;&#10; preempted by async commands/events.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuSleep.nc">
      <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <short>&#10;&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10;&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10;&#10; describes how an MCU computes this state and how the Scheduler uses&#10;&#10; this interface to manage system power draw.&#10;&#10; &#10;&#10; @author Philip Levis&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @date   Oct 26, 2005&#10;&#10;&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0xb7cc23f0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep. </short>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <short>                                                                     &#10;&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     &#10;&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;&#10;  downloading, copying, installing or using the software you agree to&#10;&#10;  this license.  If you do not agree to this license, do not download,&#10;&#10;  install, copy or use the software.&#10;&#10;&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;&#10;  All rights reserved.&#10;&#10;&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;&#10;  documentation for any purpose, without fee, and without written&#10;&#10;  agreement is hereby granted, provided that the above copyright&#10;&#10;  notice, the (updated) modification history and the author appear in&#10;&#10;  all copies of this source code.&#10;&#10;&#10;&#10;  Permission is also granted to distribute this software under the&#10;&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0xb7cae228" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
          <short>&#10;&#10; Called when computing the low power state, in order to allow&#10;&#10; a high-level component to institute a lower bound.</short>
          <long>&#10;&#10; Called when computing the low power state, in order to allow&#10;&#10; a high-level component to institute a lower bound. Because&#10;&#10; this command originates deep within the basic TinyOS scheduling&#10;&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10;&#10; details.&#10;&#10;&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;&#10;            requirements of this component&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0xb7cfdeb8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerState.nc">
      <documentation loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <short>&#10;&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10;&#10; may have changed.</short>
        <long>&#10;&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10;&#10; may have changed. TEP 112 describes how an MCU computes this state&#10;&#10; and how the Scheduler uses this interface to manage system power&#10;&#10; draw.&#10;&#10; &#10;&#10; @author Philip Levis&#10;&#10; @date   Oct 26, 2005&#10;&#10; @see    TEP 112: Microcontroller Power Management&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0xb7cb25d8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerState.nc">
          <short> &#10;&#10; Called by any component to tell TinyOS that the MCU low&#10;&#10; power state may have changed.</short>
          <long> &#10;&#10; Called by any component to tell TinyOS that the MCU low&#10;&#10; power state may have changed. Generally, this should be&#10;&#10; called whenever a peripheral/timer is started/stopped. &#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="GlobalTime" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/GlobalTime.nc">
      <parameters>
        <typedef name="precision_tag" ref="0xb7b92518" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/GlobalTime.nc">
          <interfacedef-ref qname="GlobalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb7b92518"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getLocalTime" ref="0xb7b92b88" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/GlobalTime.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/GlobalTime.nc">
          <short>&#10;&#10; Returns the current local time of this mote.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="GlobalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="global2Local" ref="0xb7b90628" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/GlobalTime.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/GlobalTime.nc">
          <short>&#10;&#10; Converts the global time given in &#60;code>time&#60;/code> into the&#10;&#10; correspoding local time and stores this again in&#10;&#10; &#60;code>time&#60;/code>.</short>
          <long>&#10;&#10; Converts the global time given in &#60;code>time&#60;/code> into the&#10;&#10; correspoding local time and stores this again in&#10;&#10; &#60;code>time&#60;/code>. This method performs the inverse of the&#10;&#10; &#60;code>local2Global&#60;/clode> transformation.&#10;&#10;&#10;&#10; @return SUCCESS if this mote is synchronized, FAIL otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="GlobalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
                <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0xb7b90310" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/GlobalTime.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
                <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getGlobalTime" ref="0xb7b91390" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/GlobalTime.nc">
        <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/GlobalTime.nc">
          <short>&#10;&#10; Reads the current global time.</short>
          <long>&#10;&#10; Reads the current global time. This method is a combination&#10;&#10; of &#60;code>getLocalTime&#60;/code> and &#60;code>local2Global&#60;/code>.&#10;&#10; @return SUCCESS if this mote is synchronized, FAIL otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="GlobalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
                <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0xb7b91140" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/GlobalTime.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
                <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="local2Global" ref="0xb7b91d60" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/GlobalTime.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/GlobalTime.nc">
          <short>&#10;&#10; Converts the local time given in &#60;code>time&#60;/code> into the&#10;&#10; corresponding global time and stores this again in&#10;&#10; &#60;code>time&#60;/code>.</short>
          <long>&#10;&#10; Converts the local time given in &#60;code>time&#60;/code> into the&#10;&#10; corresponding global time and stores this again in&#10;&#10; &#60;code>time&#60;/code>. The following equation is used to compute the&#10;&#10; conversion:&#10;&#10;&#10;&#10;	globalTime = localTime + offset + skew * (localTime - syncPoint)&#10;&#10;&#10;&#10; The skew is normalized to 0.0 (1.0 is subtracted) to increase the&#10;&#10; machine precision. The syncPoint value is periodically updated to&#10;&#10; increase the machine precision of the floating point arithmetic and&#10;&#10; also to allow time wrap.&#10;&#10;&#10;&#10; @return SUCCESS if this mote is synchronized, FAIL otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="GlobalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
                <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0xb7b91928" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/GlobalTime.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
                <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSyncInfo" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncInfo.nc">
      <function command="" provided="0" name="getSyncPoint" ref="0xb7b8c8a0" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncInfo.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncInfo.nc">
          <short>&#10;&#10; Returns the local time of the last synchronization point.</short>
          <long>&#10;&#10; Returns the local time of the last synchronization point. This &#10;&#10; value is close to the current local time and updated when a new&#10;&#10; time synchronization message arrives.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getRootID" ref="0xb7b8ce48" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncInfo.nc">
        <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncInfo.nc">
          <short>&#10;&#10; Returns the current root to which this node is synchronized. &#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="TimeSyncInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getSeqNum" ref="0xb7b8b420" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncInfo.nc">
        <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncInfo.nc">
          <short>&#10;&#10; Returns the latest seq number seen from the current root.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="TimeSyncInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getOffset" ref="0xb7b8dc18" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncInfo.nc">
        <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncInfo.nc">
          <short>&#10;&#10; Returns current offset of the local time wrt global time.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="TimeSyncInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getNumEntries" ref="0xb7b8b9c8" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncInfo.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncInfo.nc">
          <short>&#10;&#10; Returns the number of entries stored currently in the &#10;&#10; regerssion table.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="TimeSyncInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getHeartBeats" ref="0xb7b8a010" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncInfo.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncInfo.nc">
          <short>&#10;&#10; Returns the value of heartBeats variable. &#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="TimeSyncInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getSkew" ref="0xb7b8c250" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncInfo.nc">
        <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncInfo.nc">
          <short>&#10;&#10; Returns current skew of the local time wrt global time.&#10;&#10;</short>
          <long>&#10;&#10; Returns current skew of the local time wrt global time.&#10;&#10; This value is normalized to 0.0 (1.0 is subtracted) to get maximum &#10;&#10; representation precision.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-float cname="float" size="I:4" alignment="I:1"></type-float>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSyncMode" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncMode.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncMode.nc">
        <short>&#10;&#10; the time sync module can work in two modes:&#10;&#10;            - TS_TIMER_MODE (default): TS msgs sent period.</short>
        <long>&#10;&#10; the time sync module can work in two modes:&#10;&#10;            - TS_TIMER_MODE (default): TS msgs sent period. from the timer&#10;&#10;            - TS_USER_MODE: TS msgs sent only when explic. asked by user &#10;&#10;                            via TimeSyncMode.send() command, TimeSync.Timer &#10;&#10;                            is stopped in this mode&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb7b88e98" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncMode.nc">
        <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncMode.nc">
          <short>&#10;&#10; command to send out time synchronization message.&#10;&#10;</short>
          <long>&#10;&#10; command to send out time synchronization message.&#10;&#10; returns FAIL if TimeSync not in TS_USER_MODE&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncMode"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getMode" ref="0xb7b888c8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncMode.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncMode.nc">
          <short>&#10;&#10; Gets the current mode of the TimeSync module.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="TimeSyncMode"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setMode" ref="0xb7b88360" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncMode.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncMode.nc">
          <short>&#10;&#10; Sets the current mode of the TimeSync module.&#10;&#10;</short>
          <long>&#10;&#10; Sets the current mode of the TimeSync module.&#10;&#10; returns FAIL if didn't succeed&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncMode"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0xb7b88168" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncMode.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSyncNotify" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncNotify.nc">
      <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncNotify.nc">
        <short>&#10;&#10; time sync module (TimeSyncM) provides notification of arriving&#10;&#10; and transmitted time-sync msgs through TimeSyncNotify interface:&#10;&#10;</short>
      </documentation>
      <function event="" provided="0" name="msg_received" ref="0xb7b85b70" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncNotify.nc">
        <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncNotify.nc">
          <short>&#10;&#10; fired when time-sync msg is received and accepted&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="TimeSyncNotify"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="msg_sent" ref="0xb7b84128" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncNotify.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/ftsp/TimeSyncNotify.nc">
          <short>&#10;&#10; fired when time-sync msg is sent by TimeSyncM or the sending did not&#10;&#10; succeed&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="TimeSyncNotify"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
      <documentation loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
        <short>&#10;&#10; Please refer to TEP 115 for more information about this interface and its&#10;&#10; intended use.&#60;br>&#60;br>&#10;&#10;&#10;&#10; This interface is used to switch between&#10;&#10; the on and off power states of the component providing it. </short>
        <long>&#10;&#10; Please refer to TEP 115 for more information about this interface and its&#10;&#10; intended use.&#60;br>&#60;br>&#10;&#10;&#10;&#10; This interface is used to switch between&#10;&#10; the on and off power states of the component providing it.  A call to the&#10;&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10;&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10;&#10; component into the off state.&#10;&#10;&#10;&#10; @author Joe Polastre&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0xb7b942a8" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10;&#10; Start this component and all of its subcomponents.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Start this component and all of its subcomponents.&#10;&#10;&#10;&#10; @return SUCCESS if the component was either already on or was &#10;&#10;         successfully turned on&#60;br>&#10;&#10;         FAIL otherwise&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0xb7b94968" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10;&#10; Stop the component and any pertinent subcomponents (not all&#10;&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Stop the component and any pertinent subcomponents (not all&#10;&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10;&#10;&#10; @return SUCCESS if the component was either already off or was &#10;&#10;         successfully turned off&#60;br>&#10;&#10;         FAIL otherwise&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
      <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <short>&#10;&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10;&#10; A LocalTime interface counts time in some units. If you need to detect&#10;&#10; time overflow, you should use a component offering the Counter&#10;&#10; interface.&#10;&#10;&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10;&#10; e.g., unintentionally mixing components expecting milliseconds with&#10;&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10;&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10;&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10;&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb7b422d8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb7b422d8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0xb7b429d0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <short> &#10;&#10; Return current time.</short>
          <long> &#10;&#10; Return current time. Time starts counting at boot - some time sources&#10;&#10; may stop counting while the processor is in low-power mode.&#10;&#10;&#10;&#10; @return Current time.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
      <documentation loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <short>&#10;&#10; Please refer to TEP 115 for more information about this interface and its&#10;&#10; intended use.&#60;br>&#60;br>&#10;&#10;&#10;&#10; This is the split-phase counterpart to the StdContol interface. </short>
        <long>&#10;&#10; Please refer to TEP 115 for more information about this interface and its&#10;&#10; intended use.&#60;br>&#60;br>&#10;&#10;&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10;&#10; should be used for switching between the on and off power states of&#10;&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10;&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10;&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10;&#10; must be signalled.&#10;&#10;&#10;&#10; @author Joe Polastre&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0xb7b7a6a0" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short> &#10;&#10; Notify caller that the component has been started and is ready to&#10;&#10; receive other commands.&#10;&#10;&#10;&#10;</short>
          <long> &#10;&#10; Notify caller that the component has been started and is ready to&#10;&#10; receive other commands.&#10;&#10;&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;&#10;                        turned on, FAIL otherwise&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb7b7a3f0" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0xb7b796c0" loc="117:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10;&#10; Notify caller that the component has been stopped.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Notify caller that the component has been stopped.&#10;&#10;&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;&#10;                        turned off, FAIL otherwise&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb7b79460" loc="117:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb7b7ce48" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10;&#10; Start this component and all of its subcomponents. </short>
          <long>&#10;&#10; Start this component and all of its subcomponents.  Return&#10;&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10;&#10; event being signalled.&#10;&#10;&#10;&#10; @return SUCCESS if the device is already in the process of &#10;&#10;         starting or the device was off and the device is now ready to turn &#10;&#10;         on.  After receiving this return value, you should expect a &#10;&#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;&#10;         EBUSY if the component is in the middle of powering down&#10;&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;&#10;         EALREADY if the device is already on &#60;br>&#10;&#10;         FAIL Otherwise&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0xb7b7aee8" loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10;&#10; Start this component and all of its subcomponents. </short>
          <long>&#10;&#10; Start this component and all of its subcomponents.  Return&#10;&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10;&#10; event being signalled.&#10;&#10;&#10;&#10; @return SUCCESS if the device is already in the process of &#10;&#10;         stopping or the device was on and the device is now ready to turn &#10;&#10;         off.  After receiving this return value, you should expect a &#10;&#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;&#10;         EBUSY if the component is in the middle of powering up&#10;&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;&#10;         EALREADY if the device is already off &#60;br>&#10;&#10;         FAIL Otherwise&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSyncAMSend" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TimeSyncAMSend.nc">
      <parameters>
        <typedef name="precision_tag" ref="0xb7b65450" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TimeSyncAMSend.nc">
          <interfacedef-ref qname="TimeSyncAMSend"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb7b65450"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb7b65568" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TimeSyncAMSend.nc">
          <interfacedef-ref qname="TimeSyncAMSend"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7b65568"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="send" ref="0xb7b63690" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10;&#10; This command sends a regular message just like &#60;tt>AMSend.send&#60;/tt>, but&#10;&#10; it also performs sender-receiver time synchronization.</short>
          <long>&#10;&#10; This command sends a regular message just like &#60;tt>AMSend.send&#60;/tt>, but&#10;&#10; it also performs sender-receiver time synchronization. The &#60;tt>event_time&#60;/tt>&#10;&#10; parameter holds the time of some event as expressed in the local clock of&#10;&#10; the sender. The receiver can obtain the time of this event (expressed in its&#10;&#10; own local time) via the &#60;tt>TimeSyncPacket&#60;/tt> interface.&#10;&#10;&#10;&#10; @param addr         address to which to send the packet&#10;&#10; @param msg          the packet&#10;&#10; @param len          the length of the data in the packet payload&#10;&#10; @param event_time	  the synchronization point to be transfered with the message&#10;&#10; @return             SUCCESS if the request to send succeeded and a&#10;&#10;                     sendDone will be signaled later, EBUSY if the&#10;&#10;                     abstraction cannot send now but will be able to&#10;&#10;                     later, or FAIL if the communication layer is not&#10;&#10;                     in a state that can send (e.g., off).&#10;&#10; @see sendDone&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7b6d580"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7b65568"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0xb7b65bc8" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7b6d580"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0xb7b65d78" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7b65f00" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </variable>
          <variable name="event_time" ref="0xb7b630b8" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TimeSyncAMSend.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7b65568"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb7b61b98" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10;&#10; Return a pointer to a protocol's payload region in a packet.&#10;&#10;</short>
          <long>&#10;&#10; Return a pointer to a protocol's payload region in a packet.&#10;&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10;&#10; (minus the length parameter) and is included in this interface&#10;&#10; as a convenience.&#10;&#10;&#10;&#10; @param  msg    the packet&#10;&#10; @return        the payload of the packet&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7b61710" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7b61898" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb7b61178" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10;&#10; Return the maximum payload length that this communication layer&#10;&#10; can provide.</short>
          <long>&#10;&#10; Return the maximum payload length that this communication layer&#10;&#10; can provide. This command behaves identically to&#10;&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10;&#10; interface as a convenience.&#10;&#10;&#10;&#10; @return the maximum payload length&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb7b62030" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10;&#10; Cancel a requested transmission.</short>
          <long>&#10;&#10; Cancel a requested transmission. Returns SUCCESS if the&#10;&#10; transmission was canceled properly (not sent in its&#10;&#10; entirety). Note that the component may not know&#10;&#10; if the send was successfully canceled, if the radio is&#10;&#10; handling much of the logic; in this case, a component&#10;&#10; should be conservative and return an appropriate error code.&#10;&#10; A successful call to cancel must always result in a&#10;&#10; sendFailed event, and never a sendSucceeded event.&#10;&#10;&#10;&#10; @param  msg     the packet whose transmission should be cancelled.&#10;&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10;&#10; @see    sendDone&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7b63c28" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb7b62a70" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TimeSyncAMSend.nc">
        <documentation loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TimeSyncAMSend.nc">
          <short>&#10;&#10; Signaled in response to an accepted send request.</short>
          <long>&#10;&#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10;&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10;&#10; the send was successful.&#10;&#10;&#10;&#10; @param  msg   the packet which was submitted as a send request&#10;&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;&#10;               ECANCEL if it was cancelled&#10;&#10; @see send&#10;&#10; @see cancel&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncAMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7b625c8" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TimeSyncAMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb7b62750" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TimeSyncAMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
      <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author Phil Levis&#10;&#10; @author David Gay&#10;&#10; Revision:  $Revision: 1.11 $&#10;&#10;&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0xb7b5b010" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10;&#10; Receive a packet buffer, returning a buffer for the signaling&#10;&#10; component to use for the next reception.</short>
          <long>&#10;&#10; Receive a packet buffer, returning a buffer for the signaling&#10;&#10; component to use for the next reception. The return value&#10;&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10;&#10; component copies out the data it needs.&#10;&#10;&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10;&#10; common bugs in TinyOS code. For example, if a component both calls a&#10;&#10; send on the passed message and returns it, then it is possible&#10;&#10; the buffer will be reused before the send occurs, overwriting&#10;&#10; the component's data. This would cause the mote to possibly&#10;&#10; instead send a packet it most recently received.&#10;&#10;&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10;&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10;&#10; @param  len      the length of the data region pointed to by payload&#10;&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;&#10;                  received packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
              <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7b5c720" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0xb7b5c8c0" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7b5ca48" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
      <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <short>&#10;&#10; Constants for manipulating LEDs.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Constants for manipulating LEDs.&#10;&#10;&#10;&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0xb7b4db48" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10;&#10; Turn off LED 0.</short>
          <long>&#10;&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0xb7b4c150" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10;&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10;&#10;</short>
          <long>&#10;&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10;&#10; The color of this LED depends on the platform.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1On" ref="0xb7b4c6d8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10;&#10; Turn on LED 1.</short>
          <long>&#10;&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0xb7b4b268" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10;&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10;&#10;</short>
          <long>&#10;&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10;&#10; The color of this LED depends on the platform.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0xb7b4a378" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10;&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10;&#10;</short>
          <long>&#10;&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10;&#10; The color of this LED depends on the platform.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0xb7b4aae0" loc="106:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10;&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10;&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10;&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10;&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10;&#10; will determine whether LED 2 is on:&#10;&#10;&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10;&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10;&#10; those LEDs should always be off (their bit is zero). Also see&#10;&#10; &#60;tt>set()&#60;/tt>.&#10;&#10;&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1Off" ref="0xb7b4cc60" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10;&#10; Turn off LED 1.</short>
          <long>&#10;&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0xb7b48410" loc="123:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10;&#10; Set the current LED configuration using a bitmask. </short>
          <long>&#10;&#10; Set the current LED configuration using a bitmask.  Each bit&#10;&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10;&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10;&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10;&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10;&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10;&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10;&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0xb7b48068" loc="123:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0xb7b4d5c0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10;&#10; Turn on LED 0.</short>
          <long>&#10;&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2On" ref="0xb7b4b7f0" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10;&#10; Turn on LED 2.</short>
          <long>&#10;&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2Off" ref="0xb7b4bd78" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10;&#10; Turn off LED 2.</short>
          <long>&#10;&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
      <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <short>&#10;&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10;&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10;&#10; timing, you may wish to use a (platform-specific) component offering&#10;&#10; an Alarm interface.&#10;&#10;&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10;&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10;&#10; unintentionally mixing components expecting milliseconds with those&#10;&#10; expecting microseconds as those interfaces have a different type.&#10;&#10;&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10;&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10;&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb7b5aef0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb7b5aef0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0xb7b542f8" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="121:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10;&#10; Return the current time.&#10;&#10;</short>
          <long>&#10;&#10; Return the current time.&#10;&#10; @return Current time.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0xb7b58a80" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10;&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0xb7b552d8" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10;&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10;&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10;&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10;&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10;&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10;&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10;&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10;&#10; values represent times in the past, i.e., the time at which getNow()&#10;&#10; would last of returned that value.&#10;&#10;&#10;&#10; @param t0 Base time for timer.&#10;&#10; @param dt Time until the timer fires.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xb7b56be8" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0xb7b56d78" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0xb7b566a8" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10;&#10; Check if this is a one-shot timer.&#10;&#10;</short>
          <long>&#10;&#10; Check if this is a one-shot timer.&#10;&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getdt" ref="0xb7b53010" loc="140:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10;&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10;&#10; Return the delay or period for the previously started timer. The next&#10;&#10; fired event will occur at gett0() + getdt().&#10;&#10; @return Timer's interval.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="gett0" ref="0xb7b54958" loc="133:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="127:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10;&#10; Return the time anchor for the previously started timer or the time of&#10;&#10; the previous event for periodic timers.</short>
          <long>&#10;&#10; Return the time anchor for the previously started timer or the time of&#10;&#10; the previous event for periodic timers. The next fired event will occur&#10;&#10; at gett0() + getdt().&#10;&#10; @return Timer's base time.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isRunning" ref="0xb7b56100" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10;&#10; Check if timer is running.</short>
          <long>&#10;&#10; Check if timer is running. Periodic timers run until stopped or&#10;&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10;&#10;&#10; @return TRUE if the timer is still running.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0xb7b597e0" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10;&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10;&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10;&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10;&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10;&#10; event in dt units).&#10;&#10;&#10;&#10; @param dt Time until the timer fires.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb7b59530" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0xb7b55d50" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10;&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10;&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10;&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10;&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10;&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10;&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10;&#10; values represent times in the past, i.e., the time at which getNow()&#10;&#10; would last of returned that value.&#10;&#10;&#10;&#10; @param t0 Base time for timer.&#10;&#10; @param dt Time until the timer fires.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xb7b55818" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0xb7b559a8" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0xb7b58010" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10;&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10;&#10; Set a single-short timer to some time units in the future. Replaces&#10;&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10;&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10;&#10;&#10; @param dt Time until the timer fires.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb7b59d20" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb7b58530" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10;&#10; Cancel a timer.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSyncPacket" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TimeSyncPacket.nc">
      <parameters>
        <typedef name="precision_tag" ref="0xb7b46210" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TimeSyncPacket.nc">
          <interfacedef-ref qname="TimeSyncPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb7b46210"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb7b46328" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TimeSyncPacket.nc">
          <interfacedef-ref qname="TimeSyncPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7b46328"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="isValid" ref="0xb7b46d50" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TimeSyncPacket.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TimeSyncPacket.nc">
          <short>&#10;&#10; Returns TRUE if the value returned by &#60;tt>getTime&#60;/tt> can be trusted.&#10;&#10;</short>
          <long>&#10;&#10; Returns TRUE if the value returned by &#60;tt>getTime&#60;/tt> can be trusted.&#10;&#10; Under certain circumstances the received message cannot be properly&#10;&#10; time stamped, so the sender-receiver synchronization cannot be finished&#10;&#10; on the receiver side. In this case, this command returns FALSE.&#10;&#10; This command MUST BE called only on the receiver side and only for&#10;&#10; messages transmitted via the TimeSyncSend interface. It is recommended&#10;&#10; that this command be called from the receive event handler.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7b469a8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TimeSyncPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="eventTime" ref="0xb7b45710" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TimeSyncPacket.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TimeSyncPacket.nc">
          <short>&#10;&#10; This command should be called by the receiver of a message.</short>
          <long>&#10;&#10; This command should be called by the receiver of a message. The time&#10;&#10; of the synchronization event is returned as expressed in the local&#10;&#10; clock of the caller. This command MUST BE called only on the receiver&#10;&#10; side and only for messages transmitted via the TimeSyncSend interface.&#10;&#10; It is recommended that this command be called from the receive event&#10;&#10; handler.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSyncPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7b46328"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7b453f0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TimeSyncPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
      <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <short> &#10;&#10; The basic message data type accessors.</short>
        <long> &#10;&#10; The basic message data type accessors. Protocols may use&#10;&#10; additional packet interfaces for their protocol specific&#10;&#10; data/metadata.&#10;&#10;&#10;&#10; @author Philip Levis&#10;&#10; @date   January 5 2005&#10;&#10; @see    TEP 116: Packet Protocols&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0xb7add9f8" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10;&#10; Clear out this packet. </short>
          <long>&#10;&#10; Clear out this packet.  Note that this is a deep operation and&#10;&#10; total operation: calling clear() on any layer will completely&#10;&#10; clear the packet for reuse.&#10;&#10; @param  'message_t* ONE msg'    the packet to clear&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7add798" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0xb7adc350" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10;&#10; Return the length of the payload of msg.</short>
          <long>&#10;&#10; Return the length of the payload of msg. This value may be less&#10;&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10;&#10; the MTU. If a communication component does not support variably&#10;&#10; sized data regions, then payloadLength() will always return&#10;&#10; the same value as maxPayloadLength(). &#10;&#10;&#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10;&#10; @return        the length of its current payload&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7adc010" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb7ada3a8" loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10;&#10; Return a pointer to a protocol's payload region in a packet.&#10;&#10;</short>
          <long>&#10;&#10; Return a pointer to a protocol's payload region in a packet.&#10;&#10; If the caller intends to write to the payload region then&#10;&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10;&#10; length. If the caller (only) wants to read from the payload&#10;&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10;&#10; payloadLength(). If the payload region is smaller than &#10;&#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10;&#10; the payload region starts within a packet is fixed, i.e. for&#10;&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10;&#10; pointer or NULL.&#10;&#10;&#10;&#10; @param 'message_t* ONE msg'   the packet &#10;&#10; @param len   the length of payload required&#10;&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7adbac8" loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7adbc50" loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb7adb560" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10;&#10; Return the maximum payload length that this communication layer&#10;&#10; can provide.</short>
          <long>&#10;&#10; Return the maximum payload length that this communication layer&#10;&#10; can provide. Note that, depending on protocol fields, a given&#10;&#10; request to send a packet may not be able to send the maximum&#10;&#10; payload length (e.g., if there are variable length&#10;&#10; fields). Protocols may provide specialized interfaces for these&#10;&#10; circumstances.&#10;&#10;&#10;&#10; @return   the maximum size payload allowed by this layer&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0xb7adce08" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10;&#10; Set the length field of the packet.</short>
          <long>&#10;&#10; Set the length field of the packet. This value is not checked&#10;&#10; for validity (e.g., if it is larger than the maximum payload&#10;&#10; size). This command is not used when sending packets, as calls&#10;&#10; to send include a length parameter. Rather, it is used by&#10;&#10; components, such as queues, that need to buffer requests to&#10;&#10; send.  This command allows the component to store the length&#10;&#10; specified in the request and later recover it when actually&#10;&#10; sending.&#10;&#10;&#10;&#10; @param 'message_t* ONE msg'   the packet&#10;&#10; @param len   the value to set its length field to&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7adc8c0" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7adca48" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
      <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <short>&#10;&#10; The Active Message accessors, which provide the AM local address and&#10;&#10; functionality for querying packets.</short>
        <long>&#10;&#10; The Active Message accessors, which provide the AM local address and&#10;&#10; functionality for querying packets. Active Messages are a single-hop&#10;&#10; communication protocol. Therefore, fields such as source and destination&#10;&#10; represent the single-hop source and destination. Multihop sources and&#10;&#10; destinations are defined by the corresponding multihop protocol (if any).&#10;&#10; Also see the Packet interface.&#10;&#10;&#10;&#10; @author Philip Levis &#10;&#10; @date   January 18 2005&#10;&#10; @see    Packet&#10;&#10; @see    AMSend&#10;&#10; @see    TEP 116: Packet Protocols&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0xb7ad2b70" loc="166:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="153:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10;&#10; Get the AM group of the AM packet.</short>
          <long>&#10;&#10; Get the AM group of the AM packet. The AM group is a logical&#10;&#10; identifier that distinguishes sets of nodes which may share&#10;&#10; a physical communication medium but wish to not communicate.&#10;&#10; The AM group logically separates the sets of nodes. When&#10;&#10; a node sends a packet, it fills in its AM group, and typically&#10;&#10; nodes only receive packets whose AM group field matches their&#10;&#10; own.&#10;&#10;&#10;&#10; @param 'message_t* ONE amsg' the packet&#10;&#10; @return the AM group of this packet&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb7b6d3a8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb7ad2808" loc="166:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0xb7ad7ee0" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10;&#10; Return the AM address of the source of the AM packet.&#10;&#10;</short>
          <long>&#10;&#10; Return the AM address of the source of the AM packet.&#10;&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10;&#10; are undefined.&#10;&#10; @param 'message_t* ONE amsg'  the packet&#10;&#10; @return      the source address of the packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb7b6d580"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb7ad7c48" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0xb7ad8e90" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10;&#10; Return the node's active message address associated with this AM stack.&#10;&#10;</short>
          <long>&#10;&#10; Return the node's active message address associated with this AM stack.&#10;&#10; @return The address&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb7b6d580"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="destination" ref="0xb7ad76d0" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10;&#10; Return the AM address of the destination of the AM packet.&#10;&#10;</short>
          <long>&#10;&#10; Return the AM address of the destination of the AM packet.&#10;&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10;&#10; are undefined.&#10;&#10; @param 'message_t* ONE amsg'    the packet&#10;&#10; @return        the destination address of the packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb7b6d580"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb7ad7428" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0xb7ad4620" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10;&#10; Set the AM address of the source field of the AM packet. </short>
          <long>&#10;&#10; Set the AM address of the source field of the AM packet.  As&#10;&#10; the AM address is set as part of sending with the AMSend&#10;&#10; interface, this command is not used for sending packets.  Rather,&#10;&#10; it is used when a component, such as a queue, needs to buffer a&#10;&#10; request to send. The component can save the source address&#10;&#10; and then recover it when actually sending. As an AM layer generally&#10;&#10; sets the source address to be the local address, this interface&#10;&#10; is not commonly used except when a system is bypassing the AM&#10;&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10;&#10; not an AM packet, the results of this command are undefined.&#10;&#10;&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10;&#10; @param  addr   the address&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7b6d580"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb7ad4010" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb7ad41a0" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7b6d580"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0xb7ad59c8" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10;&#10; Set the AM address of the destination field of the AM packet. </short>
          <long>&#10;&#10; Set the AM address of the destination field of the AM packet.  As&#10;&#10; the AM address is set as part of sending with the AMSend&#10;&#10; interface, this command is not used for sending packets.  Rather,&#10;&#10; it is used when a component, such as a queue, needs to buffer a&#10;&#10; request to send. The component can save the destination address&#10;&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10;&#10; not an AM packet, the results of this command are undefined.&#10;&#10;&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10;&#10; @param  addr   the address&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7b6d580"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb7ad5468" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb7ad55f8" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7b6d580"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0xb7ad37e8" loc="136:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="127:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10;&#10; Return the AM type of the AM packet.&#10;&#10;</short>
          <long>&#10;&#10; Return the AM type of the AM packet.&#10;&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10;&#10; are undefined.&#10;&#10;&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10;&#10; @return        the AM type&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb7b6d1d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb7ad3580" loc="136:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0xb7ad2290" loc="151:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10;&#10; Set the AM type of the AM packet. </short>
          <long>&#10;&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10;&#10; of sending with the AMSend interface, this command is not used&#10;&#10; for sending packets. Instead, it is used when a component, such&#10;&#10; as a queue, needs to buffer a request to send. The component can&#10;&#10; save the AM type in the packet then recover it when actually&#10;&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10;&#10; this command are undefined.&#10;&#10; &#10;&#10; @param  'message_t* ONE amsg'    the packet&#10;&#10; @param  t       the AM type&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb7b6d1d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb7ad3d50" loc="151:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0xb7ad3ed8" loc="151:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb7b6d1d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0xb7ad3010" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10;&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10;&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10;&#10; partially a shortcut for testing whether the return value of&#10;&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10;&#10; may, however, include additional logic. For example, there&#10;&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10;&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10;&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10;&#10; the results of this command are undefined.&#10;&#10;&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10;&#10; @return        whether the packet is addressed to this AM stack&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb7ad4b90" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0xb7ad1560" loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="168:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10;&#10; Set the AM group field of a packet.</short>
          <long>&#10;&#10; Set the AM group field of a packet. Note that most data link&#10;&#10; stacks will set this field automatically on a send request, which&#10;&#10; may overwrite changes made with this command.&#10;&#10;&#10;&#10; @param 'message_t* ONE amsg' the packet&#10;&#10; @param group the packet's new AM group value&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb7b6d3a8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb7ad1120" loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0xb7ad12b0" loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb7b6d3a8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0xb7ad1b38" loc="184:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="178:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10;&#10; Provides the current AM group of this communication interface.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Provides the current AM group of this communication interface.&#10;&#10;&#10;&#10; @return The AM group.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb7b6d3a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
      <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author Phil Levis&#10;&#10; @author David Gay&#10;&#10; Revision:  $Revision: 1.11 $&#10;&#10;&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb7aa9470" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10;&#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10;&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10;&#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10;&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10;&#10; Packet interface of the component providing AMSend. If send&#10;&#10; returns SUCCESS, then the component will signal the sendDone&#10;&#10; event in the future; if send returns an error, it will not&#10;&#10; signal the event.  Note that a component may accept a send&#10;&#10; request which it later finds it cannot satisfy; in this case, it&#10;&#10; will signal sendDone with error code.&#10;&#10;&#10;&#10; @param addr   address to which to send the packet&#10;&#10; @param 'message_t* ONE msg'    the packet&#10;&#10; @param len    the length of the data in the packet payload&#10;&#10; @return       SUCCESS if the request to send succeeded and a&#10;&#10;               sendDone will be signaled later, EBUSY if the&#10;&#10;               abstraction cannot send now but will be able to&#10;&#10;               later, or FAIL if the communication layer is not&#10;&#10;               in a state that can send (e.g., off).&#10;&#10; @see          sendDone&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7b6d580"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0xb7aaba88" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7b6d580"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0xb7aabc38" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7aabdc0" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb7aa6908" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10;&#10; Return a pointer to a protocol's payload region in a packet.&#10;&#10;</short>
          <long>&#10;&#10; Return a pointer to a protocol's payload region in a packet.&#10;&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10;&#10; (minus the length parameter) and is included in this interface&#10;&#10; as a convenience.&#10;&#10;&#10;&#10; @param  'message_t* ONE msg'    the packet&#10;&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7aa6460" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7aa65e8" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb7aa8ee8" loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10;&#10; Return the maximum payload length that this communication layer&#10;&#10; can provide.</short>
          <long>&#10;&#10; Return the maximum payload length that this communication layer&#10;&#10; can provide. This command behaves identically to&#10;&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10;&#10; interface as a convenience.&#10;&#10;&#10;&#10; @return the maximum payload length&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb7aa9de0" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10;&#10; Cancel a requested transmission.</short>
          <long>&#10;&#10; Cancel a requested transmission. Returns SUCCESS if the &#10;&#10; transmission was canceled properly (not sent in its&#10;&#10; entirety). Note that the component may not know&#10;&#10; if the send was successfully canceled, if the radio is&#10;&#10; handling much of the logic; in this case, a component&#10;&#10; should be conservative and return an appropriate error code.&#10;&#10; A successful call to cancel must always result in a &#10;&#10; sendFailed event, and never a sendSucceeded event.&#10;&#10; &#10;&#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10;&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10;&#10; @see    sendDone&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7aa99d8" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb7aa8870" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10;&#10; Signaled in response to an accepted send request.</short>
          <long> &#10;&#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10;&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10;&#10; the send was successful.&#10;&#10;&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10;&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;&#10;               ECANCEL if it was cancelled&#10;&#10; @see send&#10;&#10; @see cancel&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7aa83b8" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb7aa8540" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0xb7aa49f8" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb7aa49f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb7aa4b10" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7aa4b10"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0xb7aa3f10" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10;&#10;</short>
          <long>&#10;&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10;&#10;&#10; Return the time stamp for the given message. Please check with the&#10;&#10; isValid command if this value can be relied upon. If this command is&#10;&#10; called after transmission, then the transmit time of the packet&#10;&#10; is returned (the time when the frame synchronization byte was&#10;&#10; transmitted). If this command is called after the message is received,&#10;&#10; the tne receive time of the message is returned. It is recommended that&#10;&#10; the timestamp command be called only from the receive or sendDone event&#10;&#10; handler.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7aa4b10"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7aa3b68" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0xb7aa26a8" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10;&#10;</short>
          <long>&#10;&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10;&#10;&#10; Sets the isValid flag to FALSE.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7aa24e0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0xb7aa35a0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10;&#10;</short>
          <long>&#10;&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10;&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10;&#10; circumstances the radio chip might not be able to correctly assign a&#10;&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10;&#10; multiple interrupts can occur before they could be serviced, and even&#10;&#10; if capture registers are used, it is not possible to get the time stamp&#10;&#10; for the first or last unserviced event), in which case the time stamp&#10;&#10; value should not be used. It is recommended that the isValid command be&#10;&#10; called from the receive or sendDone event handler.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7aa31c0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb7aa0010" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10;&#10;</short>
          <long>&#10;&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10;&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10;&#10; specified value.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7aa4b10"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7aa2c58" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0xb7aa2de8" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7aa4b10"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0xb7a9ba98" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0xb7a9ba98"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0xb7a99210" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
          <short>&#10;&#10; Clears the isSet flag.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a99088" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb7a9aac0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
        <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
          <short>&#10;&#10; Returns the stored value of this field in the message.</short>
          <long>&#10;&#10; Returns the stored value of this field in the message. If the&#10;&#10; value is not set, then the returned value is undefined.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0xb7a9ba98"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a9a898" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0xb7a9a2e0" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
          <short>&#10;&#10; Returns TRUE if the value is set for this message.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a9a140" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb7a99b10" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
          <short>&#10;&#10; Sets the isSet false to TRUE and the time stamp value to the &#10;&#10; specified value.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0xb7a9ba98"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a997b8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0xb7a99948" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0xb7a9ba98"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
      <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <short>&#10;&#10; Low Power Listening interface&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; Low Power Listening interface&#10;&#10;&#10;&#10; @author Jonathan Hui&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getLocalSleepInterval" ref="0xb7a6b2f8" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;&#10;</short>
          <long>&#10;&#10; @return the local node's sleep interval, in [ms]&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getRxDutyCycle" ref="0xb7a68638" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;&#10;</short>
          <long>&#10;&#10; @param 'message_t* ONE msg'&#10;&#10; @return the destination node's duty cycle configured in this message&#10;&#10;     in units of [percentage*100]&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a68438" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sleepIntervalToDutyCycle" ref="0xb7a67740" loc="130:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10;&#10; in units of [percentage*100]&#10;&#10;</short>
          <long>&#10;&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10;&#10; in units of [percentage*100]&#10;&#10; @param sleepInterval The sleep interval in units of [ms]&#10;&#10; @return The duty cycle in units of [percentage*100]&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepInterval" ref="0xb7a674a0" loc="130:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalDutyCycle" ref="0xb7a6a1c8" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;&#10;</short>
          <long>&#10;&#10; @return this node's radio duty cycle rate, in units of [percentage*100]&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setRxSleepInterval" ref="0xb7a6ac00" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10;&#10; with the specified Rx sleep interval.&#10;&#10;</short>
          <long>&#10;&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10;&#10; with the specified Rx sleep interval.&#10;&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10;&#10; @param sleepInterval The receiving node's sleep interval, in [ms]&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a6a770" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="sleepIntervalMs" ref="0xb7a6a908" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalDutyCycle" ref="0xb7a6bbf8" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;&#10; Set this node's radio duty cycle rate, in units of [percentage*100].&#10;&#10;</short>
          <long>&#10;&#10; Set this node's radio duty cycle rate, in units of [percentage*100].&#10;&#10; For example, to get a 0.05% duty cycle,&#10;&#10; &#60;code>&#10;&#10;   call LowPowerListening.setDutyCycle(5);&#10;&#10; &#60;/code>&#10;&#10;&#10;&#10; For a 100% duty cycle (always on),&#10;&#10; &#60;code>&#10;&#10;   call LowPowerListening.setDutyCycle(10000);&#10;&#10; &#60;/code>&#10;&#10;&#10;&#10; This is the equivalent of setting the local sleep interval explicitly.&#10;&#10; &#10;&#10; @param dutyCycle The duty cycle percentage, in units of [percentage*100]&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0xb7a6b888" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRxDutyCycle" ref="0xb7a69e50" loc="107:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10;&#10; with the specified Rx duty cycle rate.&#10;&#10;</short>
          <long>&#10;&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10;&#10; with the specified Rx duty cycle rate.&#10;&#10; Duty cycle is in units of [percentage*100], i.e. 0.25% duty cycle = 25.&#10;&#10; &#10;&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10;&#10; @param dutyCycle The duty cycle of the receiving mote, in units of &#10;&#10;     [percentage*100]&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a69958" loc="107:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dutyCycle" ref="0xb7a69af0" loc="107:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dutyCycleToSleepInterval" ref="0xb7a68ea0" loc="122:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="116:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;&#10; Convert a duty cycle, in units of [percentage*100], to&#10;&#10; the sleep interval of the mote in milliseconds&#10;&#10;</short>
          <long>&#10;&#10; Convert a duty cycle, in units of [percentage*100], to&#10;&#10; the sleep interval of the mote in milliseconds&#10;&#10; @param dutyCycle The duty cycle in units of [percentage*100]&#10;&#10; @return The equivalent sleep interval, in units of [ms]&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0xb7a68be0" loc="122:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRxSleepInterval" ref="0xb7a693b8" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;&#10;</short>
          <long>&#10;&#10; @param 'message_t* ONE msg'&#10;&#10; @return the destination node's sleep interval configured in this message&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a691d8" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalSleepInterval" ref="0xb7a6dd08" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;&#10; Set this this node's radio sleep interval, in milliseconds.&#10;&#10;</short>
          <long>&#10;&#10; Set this this node's radio sleep interval, in milliseconds.&#10;&#10; Once every interval, the node will sleep and perform an Rx check &#10;&#10; on the radio.  Setting the sleep interval to 0 will keep the radio&#10;&#10; always on.&#10;&#10;&#10;&#10; This is the equivalent of setting the local duty cycle rate.&#10;&#10;&#10;&#10; @param sleepIntervalMs the length of this node's Rx check interval, in [ms]&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepIntervalMs" ref="0xb7a6d9f0" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10;&#10; This interface allows a component to enable or disable acknowledgments&#10;&#10; on a per-packet basis.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; This interface allows a component to enable or disable acknowledgments&#10;&#10; on a per-packet basis.&#10;&#10;&#10;&#10; @author Jonathan Hui&#10;&#10; @author Philip Levis&#10;&#10; @author Joe Polastre&#10;&#10; @date   June 21 2006&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0xb7a70298" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10;&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10;&#10; acknowledgments.&#10;&#10;</short>
          <long>&#10;&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10;&#10; acknowledgments.&#10;&#10; The acknowledgment is synchronous as the caller can check whether the&#10;&#10; ack was received through the wasAcked() command as soon as a send operation&#10;&#10; completes.&#10;&#10;&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10;&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10;&#10; if the communication layer cannot enable them at this time, FAIL&#10;&#10; if it does not support them.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a71de0" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0xb7a70bc8" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10;&#10; Tell a protocol that when it sends this packet, it should not use&#10;&#10; synchronous acknowledgments.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Tell a protocol that when it sends this packet, it should not use&#10;&#10; synchronous acknowledgments.&#10;&#10;&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10;&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10;&#10; if the communication layer cannot disable them at this time, FAIL&#10;&#10; if it cannot support unacknowledged communication.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a70880" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0xb7a6f518" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10;&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10;&#10;</short>
          <long>&#10;&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10;&#10; If acknowledgments on the packet had been disabled through noAck(),&#10;&#10; then the return value is undefined. If a packet&#10;&#10; layer does not support acknowledgements, this command must return always&#10;&#10; return FALSE.&#10;&#10;&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10;&#10; @return Whether the packet was acknowledged.&#10;&#10;&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a6f1d8" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
      <function event="" provided="0" name="getNeighborAverage" ref="0xb7a3e0e8" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10;&#10; Returns the averaged (exponential decay) number of neighbors &#10;&#10; whose messages this component receives during one update period.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="channelError" ref="0xb7a41e70" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10;&#10; This event should be fired if we notice some anomalies in the operation&#10;&#10; of the channel, such as not receiving acknowledgements, missing&#10;&#10; sequence numbers or packets with corrupted CRC.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getUpdatePeriod" ref="0xb7a42878" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10;&#10; Returns the frequency (in milliseconds) when the traffic averages&#10;&#10; should be updated. &#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getChannelTime" ref="0xb7a41030" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10;&#10; Returns the amount of time this message has occupied the channel.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a42e68" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getErrorAverage" ref="0xb7a3e6c8" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10;&#10; Returns the averaged error events during one update period.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="getTransmitAverage" ref="0xb7a40498" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10;&#10; Returns the averaged (exponential decay) transmit channel time &#10;&#10; during one update period.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="timerTick" ref="0xb7a3ecb8" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10;&#10; This command is periodically called when the timer is fired and&#10;&#10; the averages are updated&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getSender" ref="0xb7a41818" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10;&#10; Returns the sender address of the message so we can calculate the&#10;&#10; average number of neighbors that send messages per update period.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb7b6d580"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a41620" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getReceiveAverage" ref="0xb7a40aa0" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10;&#10; Returns the averaged (exponential decay) receive channel time &#10;&#10; during one update period.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0xb7a371b0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10;&#10; This command should return the approximate transmit delay between&#10;&#10; setting an alarm, waiting for the fire event, calling send and&#10;&#10; obtaining the timestamp for the transmitted message.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0xb7a377f8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10;&#10; Must return a binary exponent so that the collision avoidance layer&#10;&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10;&#10; window.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0xb7a34010" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10;&#10; Returns the size of the collision window for this received message.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a35e18" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="timerTick" ref="0xb7a34618" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10;&#10; This event should be called periodically to indicate the passing of&#10;&#10; time (maybe we should use a timer)&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0xb7a35010" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10;&#10; This command must return the time when the message was transmitted.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a37df0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0xb7a35810" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10;&#10; Returns the start of the collision window for this received message,&#10;&#10; so transmit times in this range would be considered possible collisions.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a35610" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageConfig.nc">
      <function command="" provided="0" name="checkPacket" ref="0xb7a326a0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageConfig.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageConfig.nc">
          <short>&#10;&#10; This command is called when the message first enters the radio stack&#10;&#10; via the Send.send command.</short>
          <long>&#10;&#10; This command is called when the message first enters the radio stack&#10;&#10; via the Send.send command. This should clear the packet if the user&#10;&#10; forgot to do so (or return EINVAL to be strict).&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a32408" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0xb7a31ee0" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyConfig.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyConfig.nc">
          <short>&#10;&#10; We need to put something here, but this is not going to get called&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0xb7a449b8" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/CsmaConfig.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/CsmaConfig.nc">
          <short>&#10;&#10; This command is called when the message is transmitted to&#10;&#10; check if it needs software clear channel assesment.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a447d8" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0xb7a4a148" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10;&#10; This command is called when a sent packet did not receive an&#10;&#10; acknowledgement.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0xb7a4bb40" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10;&#10; Creates an acknowledgement packet for the given data packet.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb7a4b7d8" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xb7a4b988" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0xb7a4fda0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10;&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10;&#10; to be received after this packet was transmitted.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a4fbb8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0xb7a4c010" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10;&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10;&#10;</short>
          <long>&#10;&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10;&#10; The AckedSend layer will filter out all received acknowledgement&#10;&#10; packets and uses  only the matching one for the acknowledgement.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a4ed30" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0xb7a4ca20" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10;&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10;&#10; data packet.</short>
          <long>&#10;&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10;&#10; data packet. The acknowledgement packect was already verified &#10;&#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb7a4c5e8" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xb7a4c798" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0xb7a4f5e0" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10;&#10; Returns the acknowledgement timeout (in the radio clock units),&#10;&#10; in which a sent packet must be acknowledged.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setAckReceived" ref="0xb7a4e758" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10;&#10; Sets for the transmitted message whether it was acknowledged or not.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a4e410" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="acked" ref="0xb7a4e598" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0xb7a4b208" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10;&#10; Returns TRUE if the received packet needs software acknowledgements&#10;&#10; to be sent back to the sender.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a4b030" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IEEE154Packet" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <short>&#10;&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10;&#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10;&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10;&#10; 16-bit destination pan, source and destination addresses. It also &#10;&#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10;&#10; Note, that this interface does not support the CRC-16 value, which&#10;&#10; should be verified before the data can be trusted.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0xb7a227d0" loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="131:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10;&#10; valid only for data frames&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a22600" loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0xb7a24758" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="121:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Returns the data sequence number&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a245c8" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0xb7a2ba38" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Sets the frame control field.</short>
          <long>&#10;&#10; Sets the frame control field. This method should not be used, &#10;&#10; createDataFrame and createAckFrame should be used instead.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a2b688" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0xb7a2b818" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0xb7a291f8" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Returns TRUE if the message is an acknowledgement frame supported&#10;&#10; by this interface (based on the value of the FCF).&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a29010" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set6LowPan" ref="0xb7a1d340" loc="172:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="169:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Sets the value of the 6LowPan network field.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a1d010" loc="172:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="network" ref="0xb7a1d198" loc="172:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0xb7a1f238" loc="160:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="157:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Sets the source address, valid only for data frames&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a20ee8" loc="160:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb7a1f088" loc="160:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0xb7a2a9e8" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Sets the FCF to create a data frame supported by this interface.&#10;&#10;</short>
          <long>&#10;&#10; Sets the FCF to create a data frame supported by this interface.&#10;&#10; You may call setAckRequired and setFramePending commands after this.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a2a7a8" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0xb7a22038" loc="129:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="126:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Sets the data sequence number&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a24d08" loc="129:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0xb7a24e90" loc="129:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0xb7a28430" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Creates an acknowledgement packet for the given data packet.&#10;&#10;</short>
          <long>&#10;&#10; Creates an acknowledgement packet for the given data packet.&#10;&#10; This also sets the DSN value. The data message must be a &#10;&#10; data frame, the ack message will be overwritten.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb7a28010" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xb7a281c0" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0xb7a2e898" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Returns the IEEE 802.15.4 header including the length field.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="ieee154_header_t" ref="0xb7b76ea8"/>
              <typename><typedef-ref name="ieee154_header_t" ref="0xb7b75a58"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a2e6c8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0xb7a20930" loc="155:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="152:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Returns the source address, valid only for data frames&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a20788" loc="155:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0xb7a2a1f0" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Returns TRUE if the message is a data frame supported by &#10;&#10; this interface (based on the value of the FCF).&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a2a010" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0xb7a1c4b0" loc="184:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="181:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Sets the active message type&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb7b6d1d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a1c190" loc="184:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="type" ref="0xb7a1c318" loc="184:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb7b6d1d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0xb7a265b0" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a26408" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0xb7a28de0" loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10;&#10; data packet.</short>
          <long>&#10;&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10;&#10; data packet. The data message must be a data packet.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb7a289f0" loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xb7a28ba0" loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLength" ref="0xb7a2d8e8" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Sets the length field&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a2d5d0" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0xb7a2d758" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get6LowPan" ref="0xb7a1f998" loc="167:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="164:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Returns the value of the 6LowPan network field.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a1f7f8" loc="167:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0xb7a1cc60" loc="190:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="186:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10;&#10; is set and the destination address is not the broadcast address.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a1ca70" loc="190:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0xb7a201c0" loc="150:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="147:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Sets the destination address, valid only for data frames&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a21e10" loc="150:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb7a20010" loc="150:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0xb7a299f0" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Sets the FCF to create an acknowledgement frame supported by&#10;&#10; this interface.</short>
          <long>&#10;&#10; Sets the FCF to create an acknowledgement frame supported by&#10;&#10; this interface. You may call setFramePending after this.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a297b0" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0xb7a24010" loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="116:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Sets the frame pending field in the FCF.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a25cd0" loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0xb7a25e58" loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLength" ref="0xb7a2d018" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Returns the raw value (unadjusted) of the length field&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a2ee58" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0xb7a210e0" loc="140:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="137:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Sets the destination PAN id, valid only for data frames&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a22d88" loc="140:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0xb7a22f18" loc="140:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0xb7a26ec0" loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Sets the ACK required field in the FCF, should never be set&#10;&#10; for acknowledgement frames.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a26b68" loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xb7a26cf0" loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0xb7a2b0d8" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Returns the frame control field.</short>
          <long>&#10;&#10; Returns the frame control field. This method should not be used, &#10;&#10; isDataFrame and isAckFrame should be used instead.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a2dea8" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0xb7a1db98" loc="179:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Returns the active message type of the message&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb7b6d1d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a1d9f8" loc="179:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0xb7a1b418" loc="196:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="192:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10;&#10; is set and the destionation address is this node.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a1b238" loc="196:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0xb7a21858" loc="145:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="142:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Returns the destination address, valid only for data frames&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a216a8" loc="145:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0xb7a25718" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10;&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a25570" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0xb7a15778" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
          <short>&#10;&#10; This event is fired when the specified timeout period expires.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="wait" ref="0xb7a17c20" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
          <short>&#10;&#10; Waits till the specified timeout period expires.</short>
          <long>&#10;&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0xb7a17a30" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb7a151e8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
          <short>&#10;&#10; Cancels the running alarm.</short>
          <long>&#10;&#10; Cancels the running alarm. The alarm must be pending.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isFree" ref="0xb7a174b8" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
          <short>&#10;&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10;&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10;&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10;&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getNow" ref="0xb7a15d10" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
          <short>&#10;&#10; Returns the current time as measured by the radio stack.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0xb7a46728" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
        <documentation loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
          <short>&#10;&#10; Sets the sequence number of the packet.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a46400" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0xb7a46588" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0xb7a46d18" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
          <short>&#10;&#10; This command is called when the unqiue layer detects a missing (jump &#10;&#10; in the data sequence number) or a duplicate packet.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0xb7a486b8" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
          <short>&#10;&#10; Returns the sequence number of the packet.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a48520" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0xb7a48e08" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
        <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
          <short>&#10;&#10; Returns the sender of the packet. &#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb7b6d580"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a48c78" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0xb7a3a708" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
        <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
          <short>&#10;&#10; Returns the amount of maximum backoff when there is congestion&#10;&#10; (the channel was busy for the first try)&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a3a530" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0xb7a3bf18" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
          <short>&#10;&#10; Returns the initial amount of maximum backoff for this message.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a3bd68" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0xb7a3ad00" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
          <short>&#10;&#10; Returns the minimum ticks before the message could be sent.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0xb7a39520" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
          <short>&#10;&#10; The provided message was just received, and this command should return &#10;&#10; the time till no transmission should be initiated.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a39330" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230Config" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
      <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <short>&#10;&#10; This interface needs to be implemented by the MAC to control the behaviour &#10;&#10; of the RF230LayerC component.&#10;&#10;</short>
      </documentation>
      <function command="" provided="0" name="getHeaderLength" ref="0xb7a53dc0" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10;&#10; Gets the number of bytes we should read before the RadioReceive.header&#10;&#10; event is fired.</short>
          <long>&#10;&#10; Gets the number of bytes we should read before the RadioReceive.header&#10;&#10; event is fired. If the length of the packet is less than this amount, &#10;&#10; then that event is fired earlier. The last touch event is not signaled &#10;&#10; for packets whose length is less than or equal to this header length.&#10;&#10; The header length must be at least 1.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0xb7a51208" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10;&#10; Returns TRUE if before sending this message we should make sure that&#10;&#10; the channel is clear via a very basic (and quick) RSSI check.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a51010" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb7a536a8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10;&#10; Returns a pointer to the start of the PHY payload that contains &#10;&#10; getLength()-2 number of bytes.</short>
          <long>&#10;&#10; Returns a pointer to the start of the PHY payload that contains &#10;&#10; getLength()-2 number of bytes. The FCF field (CRC-16) is not stored,&#10;&#10; but automatically appended / verified.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a53400" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLength" ref="0xb7a55d80" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10;&#10; Sets the length of the PHY payload.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a55a58" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7a55be0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLength" ref="0xb7a554a8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10;&#10; Returns the length of the PHY payload (including the FCF field).&#10;&#10;</short>
          <long>&#10;&#10; Returns the length of the PHY payload (including the FCF field).&#10;&#10; This value must be in the range [3, 127].&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7a55280" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMaxLength" ref="0xb7a52400" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10;&#10; Returns the maximum PHY length that can be set via the setLength command&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getDefaultChannel" ref="0xb7a52a20" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10;&#10; This command is used at power up to set the default channel.&#10;&#10;</short>
          <long>&#10;&#10; This command is used at power up to set the default channel.&#10;&#10; The default CC2420 channel is 26.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author Phil Levis&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0xb7986248" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10;&#10;</short>
          <long>&#10;&#10; @return the active message address of this node&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb7b6d580"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="changed" ref="0xb7986de0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10;&#10; Notification that the address or group settings changed.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="amGroup" ref="0xb7986818" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10;&#10;</short>
          <long>&#10;&#10; @return the group address of this node&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb7b6d3a8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setAddress" ref="0xb7988c48" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10;&#10; Set the active message address of this node&#10;&#10;</short>
          <long>&#10;&#10; Set the active message address of this node&#10;&#10; @param group The node's group ID&#10;&#10; @param addr The node's active message address&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb7b6d3a8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7b6d580"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0xb7988888" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb7b6d3a8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0xb7988a18" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7b6d580"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
      <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <short>&#10;&#10; A Counter counts time in some units and in some width, signaling&#10;&#10; overflow.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; A Counter counts time in some units and in some width, signaling&#10;&#10; overflow.&#10;&#10;&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10;&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10;&#10; unintentionally mixing components expecting milliseconds with those&#10;&#10; expecting microseconds as those interfaces have a different type.&#10;&#10;&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10;&#10; bits used to represent time values. Width is indicated by including&#10;&#10; the appropriate size integer type as a Counter parameter.&#10;&#10;&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10;&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10;&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb793b3c0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb793b3c0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb793b4d8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb793b4d8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0xb793bbc8" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10;&#10; Return counter value.</short>
          <long> &#10;&#10; Return counter value. Counters start at boot - some time sources may&#10;&#10; stop counting while the processor is in low-power mode.&#10;&#10; @return Current counter value.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb793b4d8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0xb793a7a8" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10;&#10; Cancel a pending overflow interrupt.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0xb793a240" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10;&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10;&#10; block is exits. </short>
          <long> &#10;&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10;&#10; block is exits.  FALSE otherwise.&#10;&#10; @return Counter pending overflow status.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="overflow" ref="0xb793ada0" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10;&#10; Signals that the current time has overflowed. </short>
          <long>&#10;&#10; Signals that the current time has overflowed.  That is, the current&#10;&#10; time has wrapped around from its maximum value to zero.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10;&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0xb7928330" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0xb79274c8" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short> Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getControlA" ref="0xb7929c40" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short> Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0xb7927cc8" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short> Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0xb7927978" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0xb7927810" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0xb7928c80" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb7928b18" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0xb7926198" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0xb7926030" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0xb7928010" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setControlC" ref="0xb7927178" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb7927010" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0xb79287d8" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb7928670" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10;&#10; HPL Interface to Atmega128 capture capabilities.&#10;&#10;</short>
        <long>&#10;&#10; HPL Interface to Atmega128 capture capabilities.&#10;&#10; @param size_type Integer type of capture register&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0xb79231a8" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb79231a8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0xb7920638" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10;&#10; Sets the capture edge.&#10;&#10;</short>
          <long> &#10;&#10; Sets the capture edge.&#10;&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0xb7920448" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0xb7921838" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10;&#10; Did a capture interrupt occur?&#10;&#10;</short>
          <long> &#10;&#10; Did a capture interrupt occur?&#10;&#10; @return TRUE if capture triggered, FALSE otherwise&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0xb79238a0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10;&#10; Get the time to be captured.&#10;&#10;</short>
          <long> &#10;&#10; Get the time to be captured.&#10;&#10; @return  the capture time&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb79231a8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="captured" ref="0xb7922868" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10;&#10; Signalled on capture interrupt.&#10;&#10;</short>
          <long> &#10;&#10; Signalled on capture interrupt.&#10;&#10; @param t     the time of the capture event&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb79231a8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb7922680" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb79231a8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0xb7922ba0" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0xb7921e50" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10;&#10; Is capture interrupt on? &#10;&#10;</short>
          <long> &#10;&#10; Is capture interrupt on? &#10;&#10; @return TRUE if capture enabled, FALSE otherwise&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0xb79220b0" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10;&#10; Set the time to be captured.&#10;&#10;</short>
          <long> &#10;&#10; Set the time to be captured.&#10;&#10; @param t     the time of the next capture event&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb79231a8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb7923e68" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb79231a8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb7922ed0" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0xb7921210" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10;&#10; HPL Interface to Atmega128 compare registers.&#10;&#10;</short>
        <long>&#10;&#10; HPL Interface to Atmega128 compare registers.&#10;&#10; @param size_type Integer type of compare register&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0xb791c5e8" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb791c5e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0xb791a7f0" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10;&#10; Did compare interrupt occur? &#10;&#10;</short>
          <long> &#10;&#10; Did compare interrupt occur? &#10;&#10; @return TRUE if compare triggered, FALSE otherwise&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0xb791b800" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0xb791ccf0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10;&#10; Get the compare time to fire on.&#10;&#10;</short>
          <long> &#10;&#10; Get the compare time to fire on.&#10;&#10; @return  the compare time value&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb791c5e8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="reset" ref="0xb791bb38" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0xb791ae08" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10;&#10; Is compare interrupt on?&#10;&#10;</short>
          <long> &#10;&#10; Is compare interrupt on?&#10;&#10; @return TRUE if compare enabled, FALSE otherwise&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0xb791b4d0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10;&#10; Set the compare time to fire on.&#10;&#10;</short>
          <long> &#10;&#10; Set the compare time to fire on.&#10;&#10; @param t     the compare time to set&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb791c5e8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb791b2f0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb791c5e8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb791be68" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0xb791a1c8" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10;&#10; Basic interface to the hardware timers on an ATmega128.  &#10;&#10;</short>
        <long>&#10;&#10; Basic interface to the hardware timers on an ATmega128.  &#10;&#10; &#60;p>&#10;&#10; This interface is designed to be independent of whether the underlying &#10;&#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10;&#10; specified via a generics parameter.  Because this is exposing a common &#10;&#10; subset of functionality that all ATmega128 hardware timers share, all &#10;&#10; that is exposed is access to the overflow capability.  Compare and capture&#10;&#10; functionality are exposed on separate interfaces to allow easy &#10;&#10; configurability via wiring.&#10;&#10; &#60;p>&#10;&#10; This interface provides four major groups of functionality:&#60;ol>&#10;&#10;      &#60;li>Timer Value: get/set current time&#10;&#10;      &#60;li>Overflow Interrupt event&#10;&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10;&#10; &#60;/ol>&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0xb7933ea8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb7933ea8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0xb792f9f0" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="test" ref="0xb792f0b0" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10;&#10; Did an overflow interrupt occur?&#10;&#10;</short>
          <long> &#10;&#10; Did an overflow interrupt occur?&#10;&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0xb79325c8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10;&#10; Get the current time.&#10;&#10;</short>
          <long> &#10;&#10; Get the current time.&#10;&#10; @return  the current time&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb7933ea8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setScale" ref="0xb792e1f8" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10;&#10; Turn on the clock.&#10;&#10;</short>
          <long> &#10;&#10; Turn on the clock.&#10;&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0xb792e010" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0xb792e810" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10;&#10; Get prescaler setting.&#10;&#10;</short>
          <long> &#10;&#10; Get prescaler setting.&#10;&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="reset" ref="0xb79313f8" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="overflow" ref="0xb79310c0" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0xb792f6c8" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10;&#10; Is overflow interrupt on? &#10;&#10;</short>
          <long> &#10;&#10; Is overflow interrupt on? &#10;&#10; @return TRUE if overflow enabled, FALSE otherwise&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0xb7932d50" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10;&#10; Set the current time.&#10;&#10;</short>
          <long> &#10;&#10; Set the current time.&#10;&#10; @param t     the time to set&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb7933ea8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb7932b88" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb7933ea8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb7931730" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0xb7931a60" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
      <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <short>&#10;&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10;&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10;&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10;&#10; unintentionally mixing components expecting milliseconds with those&#10;&#10; expecting microseconds as those interfaces have a different type.&#10;&#10;&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10;&#10; bits used to represent time values. Width is indicated by including&#10;&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10;&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10;&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10;&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb7885398" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb7885398"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb78854b0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb78854b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0xb7881048" loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10;&#10; Return the current time.&#10;&#10;</short>
          <long>&#10;&#10; Return the current time.&#10;&#10; @return Current time.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb78854b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0xb7884978" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10;&#10; Signaled when the alarm expires.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startAt" ref="0xb7882a98" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10;&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10;&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10;&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; Alarms set in the past will fire &#34;soon&#34;.&#10;&#10; &#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10;&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10;&#10; values represent times in the past, i.e., the time at which getNow()&#10;&#10; would last of returned that value.&#10;&#10;&#10;&#10; @param t0 Base time for alarm.&#10;&#10; @param dt Alarm time as offset from t0.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb78854b0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb78854b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xb7882568" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb78854b0"/></type-var>
          </variable>
          <variable name="dt" ref="0xb78826f8" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb78854b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0xb7882010" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10;&#10; Check if alarm is running.</short>
          <long>&#10;&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10;&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10;&#10; already started executing, but not reached your code yet).&#10;&#10;&#10;&#10; @return TRUE if the alarm is still running.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0xb78816a0" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10;&#10; Return the time the currently running alarm will fire or the time that&#10;&#10; the previously running alarm was set to fire.&#10;&#10;</short>
          <long>&#10;&#10; Return the time the currently running alarm will fire or the time that&#10;&#10; the previously running alarm was set to fire.&#10;&#10; @return Alarm time.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb78854b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="start" ref="0xb7885d90" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10;&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10;&#10; Set a single-short alarm to some time units in the future. Replaces&#10;&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10;&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10;&#10;&#10; @param dt Time until the alarm fires.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb78854b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb7885af0" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb78854b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb7884428" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10;&#10; Cancel an alarm.</short>
          <long>&#10;&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10;&#10; already been signaled (even if your code has not yet started&#10;&#10; executing).&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10;&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10;&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0xb78645b0" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short> Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0xb7866d70" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short> Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getControlA" ref="0xb7867d98" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short> Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0xb7864260" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0xb78640f8" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0xb7866a20" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb78668b8" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0xb7864a60" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0xb78648f8" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0xb78660d0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setControlA" ref="0xb7866578" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb7866410" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10;&#10;&#10; @author David Gay&#10;&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0xb785b2f8" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10;&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10;&#10;</short>
          <long>&#10;&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10;&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0xb785e7f8" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10;&#10; Turn on timer 2 asynchronous mode&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0xb785eea0" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10;&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10;&#10;</short>
          <long>&#10;&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10;&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0xb785d5a0" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10;&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10;&#10;</short>
          <long>&#10;&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10;&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="countBusy" ref="0xb785b9a8" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10;&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10;&#10;</short>
          <long>&#10;&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10;&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0xb785dc40" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10;&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10;&#10;</short>
          <long>&#10;&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10;&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getAssr" ref="0xb785f950" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10;&#10; Read timer2 asynchronous status register (ASSR)&#10;&#10;</short>
          <long>&#10;&#10; Read timer2 asynchronous status register (ASSR)&#10;&#10; @return Current value of ASSR&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7cde608"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0xb7cde838"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setAssr" ref="0xb785e208" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10;&#10; Set timer2 asynchronous status register (ASSR)&#10;&#10;</short>
          <long>&#10;&#10; Set timer2 asynchronous status register (ASSR)&#10;&#10; @param x New value for ASSR&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7cde608"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0xb7cde838"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0xb785e010" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb7cde608"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0xb7cde838"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
        <short>&#10;&#10; This interface is useful in building state machines when the state &#10;&#10; transitions should be executed atomically but with interrupts enabled. &#10;&#10;</short>
        <long>&#10;&#10; This interface is useful in building state machines when the state &#10;&#10; transitions should be executed atomically but with interrupts enabled. &#10;&#10; All state transitions should take place in the run event handler or&#10;&#10; in blocks protected by the suspend and resume commands.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0xb779bb80" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
          <short>&#10;&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10;&#10; Makes sure that the run event is called at least once more. If the &#10;&#10; run event is currently not executing, then it  is called immediately &#10;&#10; and this command returns only after the completion of the run event. &#10;&#10; If the run event is currently executed, then this method returns at &#10;&#10; once, and makes sure that the run event is called once more when &#10;&#10; it is finished. If this method is called from a task, then by the &#10;&#10; above rules, the run event will be called from a task as well.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="suspend" ref="0xb779a380" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
          <short>&#10;&#10; Enters a critical section of the code and meakes sure that the&#10;&#10; run event is not called while in this section.</short>
          <long>&#10;&#10; Enters a critical section of the code and meakes sure that the&#10;&#10; run event is not called while in this section. No long running&#10;&#10; computation should be called from the critical session, and&#10;&#10; in particular no user event should be fired. This call is only&#10;&#10; possible from task context, otherwise we cannot guarantee that&#10;&#10; the run event is not currently running. The suspend calls&#10;&#10; can be nested. It is very important that the same number of&#10;&#10; resume commands must be called in all control paths, e.g. be very&#10;&#10; careful with the return and break commands.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="resume" ref="0xb779a980" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
          <short>&#10;&#10; Leaves the critical section.</short>
          <long>&#10;&#10; Leaves the critical section. This call is conly possible from &#10;&#10; task context. If there were scheduled executions of the run&#10;&#10; event, then those will be called before this command returns.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="run" ref="0xb779b410" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
          <short>&#10;&#10; This method is executed atomically. &#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
      <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author Phil Levis&#10;&#10; @author David Gay&#10;&#10; Revision:  $Revision: 1.11 $&#10;&#10;&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb7782dc8" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10;&#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10;&#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10;&#10; the maximum available size, use the Packet interface of the&#10;&#10; component providing Send. If send returns SUCCESS, then the&#10;&#10; component will signal the sendDone event in the future; if send&#10;&#10; returns an error, it will not signal sendDone.  Note that a&#10;&#10; component may accept a send request which it later finds it&#10;&#10; cannot satisfy; in this case, it will signal sendDone with an&#10;&#10; appropriate error code.&#10;&#10;&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10;&#10; @param   len     the length of the packet payload&#10;&#10; @return          SUCCESS if the request was accepted and will issue&#10;&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;&#10;                  the request now but will be able to later, FAIL&#10;&#10;                  if the stack is in a state that cannot accept requests&#10;&#10;                  (e.g., it's off).&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7782708" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7782890" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb777f3b8" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="104:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10;&#10; Return a pointer to a protocol's payload region in a packet which&#10;&#10; at least a certain length. </short>
          <long>&#10;&#10; Return a pointer to a protocol's payload region in a packet which&#10;&#10; at least a certain length.  If the payload region is smaller than&#10;&#10; the len parameter, then getPayload returns NULL. This command&#10;&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10;&#10; included in this interface as a convenience.&#10;&#10;&#10;&#10; @param   'message_t* ONE msg'    the packet&#10;&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7780de8" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb777f010" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb7780888" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10;&#10; Return the maximum payload length that this communication layer&#10;&#10; can provide.</short>
          <long>&#10;&#10; Return the maximum payload length that this communication layer&#10;&#10; can provide. This command behaves identically to&#10;&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10;&#10; interface as a convenience.&#10;&#10;&#10;&#10; @return  the maximum payload length&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb7781758" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10;&#10; Cancel a requested transmission.</short>
          <long>&#10;&#10; Cancel a requested transmission. Returns SUCCESS if the &#10;&#10; transmission was cancelled properly (not sent in its&#10;&#10; entirety). Note that the component may not know&#10;&#10; if the send was successfully cancelled, if the radio is&#10;&#10; handling much of the logic; in this case, a component&#10;&#10; should be conservative and return an appropriate error code.&#10;&#10;&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10;&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;&#10;                 otherwise&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb77813b0" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb7780210" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10;&#10; Signaled in response to an accepted send request.</short>
          <long> &#10;&#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10;&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10;&#10; send was succesful, and if not, the cause of the failure.&#10;&#10; &#10;&#10; @param 'message_t* ONE msg'   the message which was requested to send&#10;&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7781cb8" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb7781e40" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0xb7748538" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
          <short>&#10;&#10; Signals the completion of the clear channel assesment send command.&#10;&#10;</short>
          <long>&#10;&#10; Signals the completion of the clear channel assesment send command.&#10;&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10;&#10; clear, and FAIL means that the clear channel assesment could not&#10;&#10; be finished or the operation was cancelled.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb7748280" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0xb774ad10" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
          <short>&#10;&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10;&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10;&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10;&#10; The check will be performed only in the RX_READY state.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0xb774f3a0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
          <short>&#10;&#10; Starts the transmission of the given message.</short>
          <long>&#10;&#10; Starts the transmission of the given message. This command must not&#10;&#10; be called while another send is in progress (so one must wait for the&#10;&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10;&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10;&#10; the SPI bus access could not be acquired). In this case the send &#10;&#10; command could be retried from a tasklet. Returns SUCCESS if the &#10;&#10; transmission could be started. In this case sendDone will be fired.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb774f010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0xb774e298" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
          <short>&#10;&#10; This event is fired when the component is most likely able to accept &#10;&#10; a send request.</short>
          <long>&#10;&#10; This event is fired when the component is most likely able to accept &#10;&#10; a send request. If the send command has returned with a failure, then&#10;&#10; this event will be called at least once in the near future.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb774fbf0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
          <short>&#10;&#10; Signals the completion of the send command, exactly once for each &#10;&#10; successfull send command.</short>
          <long>&#10;&#10; Signals the completion of the send command, exactly once for each &#10;&#10; successfull send command. If the returned error code is SUCCESS, then &#10;&#10; the message was sent (may not have been acknowledged), otherwise &#10;&#10; the message was not transmitted over the air.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb774f918" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0xb77544d8" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
          <short>&#10;&#10; Moves to radio into sleep state with the lowest power consumption but &#10;&#10; highest wakeup time.</short>
          <long>&#10;&#10; Moves to radio into sleep state with the lowest power consumption but &#10;&#10; highest wakeup time. The radio cannot send or receive in this state &#10;&#10; and releases all access to shared resources (e.g. SPI bus). &#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="turnOn" ref="0xb77520a8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
          <short>&#10;&#10; Goes into receive state.</short>
          <long>&#10;&#10; Goes into receive state. The radio continuously receive messages &#10;&#10; and able to transmit.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setChannel" ref="0xb7752858" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
          <short>&#10;&#10; Sets the current channel.</short>
          <long>&#10;&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10;&#10; to change the channel this time (some other operation is in progress)&#10;&#10; SUCCESS otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0xb7752628" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0xb7752e28" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
          <short>&#10;&#10; This event is signaled exactly once for each sucessfully posted state &#10;&#10; transition and setChannel command when it is completed.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="standby" ref="0xb7754aa0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
          <short>&#10;&#10; The same as the turnOff command, except it is not as deep sleep, and&#10;&#10; it is quicker to recover from this state.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0xb774ce10" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
          <short>&#10;&#10; Signals the reception of a message, but only for those messages for&#10;&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10;&#10; Signals the reception of a message, but only for those messages for&#10;&#10; which SUCCESS was returned in the header event. The usual owner rules &#10;&#10; apply to the message pointers.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
              <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb774cb50" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0xb774c598" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
          <short>&#10;&#10; This event is fired when the header is received/downloaded and the &#10;&#10; higher layers are consulted whether it needs to be downloaded and &#10;&#10; further processed.</short>
          <long>&#10;&#10; This event is fired when the header is received/downloaded and the &#10;&#10; higher layers are consulted whether it needs to be downloaded and &#10;&#10; further processed. Return FALSE if the message should be discarded.&#10;&#10; In particular, the message buffer layer returns FALSE if there is&#10;&#10; no space for a new message, so this message will not get acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb774c220" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb7b66148"/>
                <typename><typedef-ref name="message_t" ref="0xb7b66a90"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
      <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
        <short>&#10;&#10; This interface provides one bit storage for each neighbor in a very&#10;&#10; fast and conveint way (without using shifts for example). &#10;&#10;</short>
      </documentation>
      <function command="" provided="0" name="clear" ref="0xb76f0bb8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
          <short>&#10;&#10; Clears the flag for the given index.</short>
          <long>&#10;&#10; Clears the flag for the given index. The flag is automatically&#10;&#10; cleared after the Neighborhood.evicted event is fired.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0xb76f09a8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0xb76ef168" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
          <short>&#10;&#10; Clears the flag for all indices&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0xb76f1cc0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
        <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
          <short>&#10;&#10; Returns the value of the flag for the given index&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0xb76f1b20" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb76f0418" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
          <short>&#10;&#10; Sets the flag for the given index&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0xb76f0288" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <short>&#10;&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10;&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10;&#10; component maintains only the nodeids and ages of the neighbors, and&#10;&#10; evicts old entries from the table when necessary.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0xb76f5e80" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
          <short>&#10;&#10; Returns the age of the given entry.</short>
          <long>&#10;&#10; Returns the age of the given entry. The age is incremented by one&#10;&#10; every time a new node is inserted into the neighborhood table that&#10;&#10; is not already at the very end. If the age would get too large to&#10;&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0xb76f5bd8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0xb76f4e58" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
          <short>&#10;&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10;&#10; Adds a new node into the neighborhood table. If this node was already&#10;&#10; in the table, then it is just brought to the front (its age is reset&#10;&#10; to zero). If the node was not in the table, then the oldest is evicted&#10;&#10; and its entry is replaced with this node. The index of the entry&#10;&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7b6d580"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xb76f4b70" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7b6d580"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0xb76f45d8" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
          <short>&#10;&#10; Returns the node address for the given entry.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0xb7b6d580"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0xb76f4438" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0xb76f36f8" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
          <short>&#10;&#10; This event is fired when the oldest entry is replaced with a new&#10;&#10; node.</short>
          <long>&#10;&#10; This event is fired when the oldest entry is replaced with a new&#10;&#10; node. The same interface is used by many users, so all of them&#10;&#10; will receive this event and can clear the corresponding entry.&#10;&#10; After this event is fired, all flags for this entry are cleared&#10;&#10; (see the NeighborhoodFlag interface)&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0xb76f3408" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0xb76f5650" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
          <short>&#10;&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10;&#10; Returns the index of the neighbor in the table. If the node was not &#10;&#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10;&#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7b6d580"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xb76f53e0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0xb7b6d580"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
      <documentation loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
        <short> &#10;&#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10;&#10;&#10;</short>
        <long> &#10;&#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10;&#10;&#10; @author Barbara Hohlt &#10;&#10; @date   March 1 2005 &#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0xb76815e8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10;&#10; Produces a 32-bit pseudorandom number. &#10;&#10;</short>
          <long> &#10;&#10; Produces a 32-bit pseudorandom number. &#10;&#10; @return Returns low 16 bits of the pseudorandom number.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="rand32" ref="0xb7681010" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10;&#10; Produces a 32-bit pseudorandom number. &#10;&#10;</short>
          <long> &#10;&#10; Produces a 32-bit pseudorandom number. &#10;&#10; @return Returns the 32-bit pseudorandom number.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0xb7f95818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
      <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author Phil Levis&#10;&#10; @author David Gay&#10;&#10; Revision:  $Revision: 1.11 $&#10;&#10;&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0xb766c8f8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xb766c8f8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0xb766b318" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <short>&#10;&#10; Initialize this component.</short>
          <long>&#10;&#10; Initialize this component. Initialization should not assume that&#10;&#10; any component is running: init() cannot call any commands besides&#10;&#10; those that initialize other components. This command behaves&#10;&#10; identically to Init.init, except that it takes a parameter.&#10;&#10;&#10;&#10; @param   param   the initialization parameter&#10;&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xb766c8f8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0xb766b010" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xb766c8f8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
      <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <short>&#10;&#10; BusyWait is a low-level interface intended for busy waiting for short&#10;&#10; durations.&#10;&#10;&#10;&#10;</short>
        <long>&#10;&#10; BusyWait is a low-level interface intended for busy waiting for short&#10;&#10; durations.&#10;&#10;&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10;&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10;&#10; unintentionally mixing components expecting milliseconds with those&#10;&#10; expecting microseconds as those interfaces have a different type.&#10;&#10;&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10;&#10; used to represent time values. Width is indicated by including the&#10;&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10;&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10;&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;&#10;   interface.&#10;&#10; @param size_type An integer type representing time values for this &#10;&#10;   BusyWait interface.&#10;&#10;&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb7622ec8" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb7622ec8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb7621010" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7621010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0xb7621890" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <short>&#10;&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10;&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10;&#10; cost of using an Alarm or Timer would be too high.&#10;&#10; @param dt Time to busy wait for.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7621010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb7621658" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb7621010"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplRF230" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <short>&#10;&#10; There should be standard interfaces/commands for these&#10;&#10;</short>
      </documentation>
      <function command="" provided="0" name="spiSplitRead" ref="0xb762a110" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
          <short>&#10;&#10; Finishes the split-phase SPI data transfer by waiting till &#10;&#10; the write command comletes and returning the received data.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplRF230"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="spiSplitReadWrite" ref="0xb762a8b8" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <documentation loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
          <short>&#10;&#10; This command first reads the SPI register and then writes&#10;&#10; there the new data, then returns&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplRF230"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb762a6e8" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="spiWrite" ref="0xb76290b0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
          <short>&#10;&#10; This is the standard SpiByte.write command but a little&#10;&#10; faster as we shuold not need to adjust the power state there.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplRF230"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb762ae88" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="spiSplitWrite" ref="0xb762bab0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
          <short>&#10;&#10; Starts a split-phase SPI data transfer with the given data.&#10;&#10;</short>
          <long>&#10;&#10; Starts a split-phase SPI data transfer with the given data.&#10;&#10; A spiSplitRead command must follow this command even if the&#10;&#10; result is unimportant. The SpiByte interface should be &#10;&#10; extended with this protocol.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplRF230"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb762b828" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="crcByte" ref="0xb762b260" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <documentation loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
          <short>&#10;&#10; Calculates the crc.</short>
          <long>&#10;&#10; Calculates the crc. For some unknown reason the standard&#10;&#10; tinyos crcByte command swiches endianness.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplRF230"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="crc" ref="0xb762ceb8" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0xb762b068" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author Jonathan Hui&#10;&#10; @author Joe Polastre&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0xb762d2a8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <documentation loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
          <short>&#10;&#10; Synchronous transmit and receive (can be in interrupt context)&#10;&#10;</short>
          <long>&#10;&#10; Synchronous transmit and receive (can be in interrupt context)&#10;&#10; @param tx Byte to transmit&#10;&#10; @param rx Received byte is stored here.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0xb762d068" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
      <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <short>&#10;&#10; Please refer to TEP 108 for more information about this interface and its&#10;&#10; intended use.&#60;br>&#60;br>&#10;&#10;&#10;&#10; The Resource interface can be used to gain access to&#10;&#10; shared resources. </short>
        <long>&#10;&#10; Please refer to TEP 108 for more information about this interface and its&#10;&#10; intended use.&#60;br>&#60;br>&#10;&#10;&#10;&#10; The Resource interface can be used to gain access to&#10;&#10; shared resources.  It is always offered as a parameterized&#10;&#10; interface, and its users gain access to the resource through some&#10;&#10; predefined arbitration policy.&#10;&#10;&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;&#10; @version $Revision: 1.5 $&#10;&#10; @date $Date: 2007/04/15 20:05:03 $&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0xb7631c98" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;&#10; Release a shared resource you previously acquired.  &#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Release a shared resource you previously acquired.  &#10;&#10;&#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;&#10;         FAIL You tried to release but you are not the&#10;&#10;              owner of the resource &#10;&#10;&#10;&#10; @note This command should never be called between putting in a request 	  &#10;&#10;       and waiting for a granted event.  Doing so will result in a&#10;&#10;       potential race condition.  There are ways to guarantee that no&#10;&#10;       race will occur, but they are clumsy and overly complicated.&#10;&#10;       Since it doesn't logically make since to be calling&#10;&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;&#10;       we have opted to keep thing simple and warn you about the potential &#10;&#10;       race.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0xb7632ec0" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;&#10; Request immediate access to a shared resource.</short>
          <long>&#10;&#10; Request immediate access to a shared resource. You must call release()&#10;&#10; when you are done with it.&#10;&#10;&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;&#10;            FAIL The request cannot be fulfilled&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="request" ref="0xb7632860" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;&#10; Request access to a shared resource.</short>
          <long>&#10;&#10; Request access to a shared resource. You must call release()&#10;&#10; when you are done with it.&#10;&#10;&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;&#10;                 event will be signaled once you have control of the&#10;&#10;                 resource.&#60;br>&#10;&#10;         EBUSY You have already requested this resource and a&#10;&#10;               granted event is pending&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="granted" ref="0xb7631440" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;&#10; You are now in control of the resource.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOwner" ref="0xb762f2f0" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;&#10;  Check if the user of this interface is the current&#10;&#10;  owner of the Resource&#10;&#10; </short>
          <long>&#10;&#10;  Check if the user of this interface is the current&#10;&#10;  owner of the Resource&#10;&#10;  @return TRUE  It is the owner &#60;br>&#10;&#10;             FALSE It is not the owner&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author Phil Levis&#10;&#10; @author David Gay&#10;&#10; Revision:  $Revision: 1.11 $&#10;&#10;&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0xb7626da8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disable" ref="0xb7624b20" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10;&#10; Disable further captures.&#10;&#10;</short>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="captured" ref="0xb76245b8" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10;&#10; Fired when an edge interrupt occurs.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Fired when an edge interrupt occurs.&#10;&#10;&#10;&#10; @param val The value of the 32kHz timer.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0xb76243c8" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0xb7626a80" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short> &#10;&#10; Enable an edge based timer capture event.&#10;&#10;&#10;&#10;</short>
          <long> &#10;&#10; Enable an edge based timer capture event.&#10;&#10;&#10;&#10; @return Whether the timer capture has been enabled.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
      <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <short>&#10;&#10; SPI Packet/buffer interface for sending data over an SPI bus. </short>
        <long>&#10;&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10;&#10; interface provides a split-phase send command which can be used for&#10;&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10;&#10; from the SPI requires writing bytes. The send call allows NULL&#10;&#10; parameters for receive or send only operations. This interface is&#10;&#10; for buffer based transfers where the microcontroller is the master&#10;&#10; (clocking) device.&#10;&#10;&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10;&#10; before sending commands with SPIPacket. In the case of multiple&#10;&#10; devices attached to a single SPI bus, chip select pins are often also&#10;&#10; used.&#10;&#10;&#10;&#10; @author Philip Levis&#10;&#10; @author Jonathan Hui&#10;&#10; @author Joe Polastre&#10;&#10; Revision:  $Revision: 1.7 $&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb75975c8" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10;&#10; Send a message over the SPI bus.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Send a message over the SPI bus.&#10;&#10;&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;&#10;              parameter is NULL, then the SPI will send zeroes.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;&#10;              be stored. If this parameter is NULL, then the SPI will&#10;&#10;              discard incoming bytes.&#10;&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;&#10;              will overflow a buffer.&#10;&#10;&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0xb7598dd0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0xb7597010" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb75971a0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb75963a8" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10;&#10; Notification that the send command has completed.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Notification that the send command has completed.&#10;&#10;&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10;&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10;&#10; @param len    The request length of the transfer, but not necessarily&#10;&#10;               the number of bytes that were actually transferred&#10;&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;&#10;               otherwise&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0xb7597b50" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0xb7597cf8" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7597e88" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0xb7f952a0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0xb7596030" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
      <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <short>&#10;&#10; HPL-level access to the Atmega128 SPI bus.</short>
        <long>&#10;&#10; HPL-level access to the Atmega128 SPI bus. Refer to pages 162-9&#10;&#10; of the Atmega128 datasheet (rev. 2467M-AVR-11/04) for details.&#10;&#10;&#10;&#10; &#60;pre>&#10;&#10;  $Id: Atm128Spi.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10;&#10; &#60;/pre>&#10;&#10;&#10;&#10; @author Philip Levis&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10; @date   September 8 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="initSlave" ref="0xb758d010" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0xb7588060" loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0xb758a7f0" loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0xb7588518" loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0xb75883b0" loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0xb758ec28" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0xb75894c0" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0xb7589358" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0xb758cce0" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0xb758cb78" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0xb758d920" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10;&#10; Read the SPI data register &#10;&#10;</short>
          <long> &#10;&#10; Read the SPI data register &#10;&#10; @return last data byte&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0xb7586e40" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0xb7586cd8" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0xb758a028" loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClock" ref="0xb7588ce0" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0xb7588b78" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0xb7586340" loc="120:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0xb7589d18" loc="108:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0xb7589bb0" loc="108:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0xb7586990" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0xb758aca0" loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0xb758ab38" loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0xb758c0a0" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10;&#10; Write the SPI data register &#10;&#10;</short>
          <long> &#10;&#10; Write the SPI data register &#10;&#10; @param data   next data byte&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb758dea8" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0xb758a4d0" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0xb758a368" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0xb7589860" loc="106:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0xb7588838" loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClock" ref="0xb7586018" loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0xb7586668" loc="122:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0xb7589010" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sleep" ref="0xb758d350" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="dataReady" ref="0xb758c838" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10;&#10; Interrupt signalling SPI data cycle is complete. &#10;&#10;</short>
          <long>&#10;&#10; Interrupt signalling SPI data cycle is complete. &#10;&#10; @param data   data byte from data register&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0xb758c630" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <short>&#10;&#10; Please refer to TEP 108 for more information about this interface and its&#10;&#10; intended use.&#60;br>&#60;br>&#10;&#10;&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10;&#10; status of an arbiter. </short>
        <long>&#10;&#10; Please refer to TEP 108 for more information about this interface and its&#10;&#10; intended use.&#60;br>&#60;br>&#10;&#10;&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10;&#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10;&#10; and can be used for a variety of different purposes.  Normally it will be&#10;&#10; used in conjunction with the Resource interface for performing run time&#10;&#10; checks on access rights to a particular shared resource.&#10;&#10;&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0xb7581010" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10;&#10; Check whether a resource is currently allocated.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Check whether a resource is currently allocated.&#10;&#10;&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;&#10;              to any of its users&#60;br>&#10;&#10;         FALSE Otherwise.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="userId" ref="0xb7581648" loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10;&#10; Get the id of the client currently using a resource.&#10;&#10; &#10;&#10;</short>
          <long>&#10;&#10; Get the id of the client currently using a resource.&#10;&#10; &#10;&#10; @return Id of the current owner of the resource&#60;br>&#10;&#10;         0xFF if no one currently owns the resource&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f97cd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <short>&#10;&#10; Please refer to TEP 115 for more information about this interface and its&#10;&#10; intended use.&#60;br>&#60;br>&#10;&#10;&#10;&#10; This is the asynchronous counterpart to the StdContol interface. </short>
        <long>&#10;&#10; Please refer to TEP 115 for more information about this interface and its&#10;&#10; intended use.&#60;br>&#60;br>&#10;&#10;&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10;&#10; should be used for switching between the on and off power states of&#10;&#10; the component providing it.  This interface differs from the&#10;&#10; StdControl interface only in the fact that any of its commands can&#10;&#10; be called from asynchronous context.&#10;&#10;&#10;&#10; @author Joe Polastre&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0xb7556c38" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10;&#10; Start this component and all of its subcomponents.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Start this component and all of its subcomponents.&#10;&#10;&#10;&#10; @return SUCCESS if the component was either already on or was &#10;&#10;         successfully turned on&#60;br>&#10;&#10;         FAIL otherwise&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0xb7554340" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10;&#10; Stop the component and any pertinent subcomponents (not all&#10;&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Stop the component and any pertinent subcomponents (not all&#10;&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10;&#10;&#10; @return SUCCESS if the component was either already off or was &#10;&#10;         successfully turned off&#60;br>&#10;&#10;         FAIL otherwise&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
      <documentation loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <short>&#10;&#10; Please refer to TEP 108 for more information about this interface and its&#10;&#10; intended use.&#60;br>&#60;br>&#10;&#10;&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10;&#10; Resource interface in order to receive events based on other users&#10;&#10; requests.&#10;&#10; &#10;&#10;</short>
        <long>&#10;&#10; Please refer to TEP 108 for more information about this interface and its&#10;&#10; intended use.&#60;br>&#60;br>&#10;&#10;&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10;&#10; Resource interface in order to receive events based on other users&#10;&#10; requests.&#10;&#10; &#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;&#10; @version $Revision: 1.4 $&#10;&#10; @date $Date: 2006/12/12 18:23:15 $&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0xb7528e38" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10;&#10; This event is signalled whenever the user of this interface&#10;&#10; currently has control of the resource, and another user requests&#10;&#10; it through the Resource.request() command.</short>
          <long>&#10;&#10; This event is signalled whenever the user of this interface&#10;&#10; currently has control of the resource, and another user requests&#10;&#10; it through the Resource.request() command. You may want to&#10;&#10; consider releasing a resource based on this event&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0xb75275b8" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10;&#10; This event is signalled whenever the user of this interface&#10;&#10; currently has control of the resource, and another user requests&#10;&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10;&#10; This event is signalled whenever the user of this interface&#10;&#10; currently has control of the resource, and another user requests&#10;&#10; it through the Resource.immediateRequest() command. You may&#10;&#10; want to consider releasing a resource based on this event&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <short>&#10;&#10; Please refer to TEP 108 for more information about this interface and its&#10;&#10; intended use.&#60;br>&#60;br>&#10;&#10; &#10;&#10; This interface is provided by a Resource arbiter in order to allow&#10;&#10; users of a shared resource to configure that resource just before being&#10;&#10; granted access to it. </short>
        <long>&#10;&#10; Please refer to TEP 108 for more information about this interface and its&#10;&#10; intended use.&#60;br>&#60;br>&#10;&#10; &#10;&#10; This interface is provided by a Resource arbiter in order to allow&#10;&#10; users of a shared resource to configure that resource just before being&#10;&#10; granted access to it.  It will always be parameterized along side &#10;&#10; a parameterized Resource interface, with the ids from one mapping directly&#10;&#10; onto the ids of the other.&#10;&#10;&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0xb7524528" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10;&#10; Used to unconfigure a resource just before releasing it.&#10;&#10;</short>
          <long>&#10;&#10; Used to unconfigure a resource just before releasing it.&#10;&#10; Must always be used in conjuntion with the Resource interface.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="configure" ref="0xb7525ed0" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10;&#10; Used to configure a resource just before being granted access to it.&#10;&#10;</short>
          <long>&#10;&#10; Used to configure a resource just before being granted access to it.&#10;&#10; Must always be used in conjuntion with the Resource interface.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <short>&#10;&#10;  A queue interface for managing client ids when performing resource &#10;&#10;  arbitration.</short>
        <long>&#10;&#10;  A queue interface for managing client ids when performing resource &#10;&#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;&#10;  client, with the actual queing policy determined by the implementation&#10;&#10;  of the interface.&#10;&#10;&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;&#10;  @date   $Date: 2006/12/12 18:23:15 $&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0xb751b848" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10;&#10; Enqueue a cleint id&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Enqueue a cleint id&#10;&#10;&#10;&#10; @param cleintId - the cleint id to enqueue&#10;&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;&#10;         EBUSY   if it has already been enqueued.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb7d31e68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb75218d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xb751b600" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb75218d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0xb751c198" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10;&#10; Check to see if the queue is empty.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Check to see if the queue is empty.&#10;&#10;&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;&#10;         FALSE if there is at least one entry in the queue&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0xb751c9c8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10;&#10; Check to see if a given cleint id has already been enqueued&#10;&#10; and is waiting to be processed.&#10;&#10;&#10;&#10;</short>
          <long>&#10;&#10; Check to see if a given cleint id has already been enqueued&#10;&#10; and is waiting to be processed.&#10;&#10;&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;&#10;         FALSE if it does not&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7d3c648"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb75218d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0xb751c738" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0xb75218d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0xb751b068" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10;&#10; Retreive the cleint id of the next resource in the queue. &#10;&#10;</short>
          <long>&#10;&#10; Retreive the cleint id of the next resource in the queue. &#10;&#10; If the queue is empty, the return value is undefined.&#10;&#10;&#10;&#10; @return The cleint id at the head of the queue.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0xb75218d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
