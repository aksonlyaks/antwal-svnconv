<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="70:uAgriAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x403a9da0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x403b25f0"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x403b25f0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x404962b8"/></to>
    </wire>
    <wire loc="71:uAgriAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x404fb3f8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4055c398"/></to>
    </wire>
    <wire loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4055c398"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40559a40"/></to>
    </wire>
    <wire loc="72:uAgriAppC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40501ae0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x405a8890"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x405a8890"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x408bc548"/></to>
    </wire>
    <wire loc="75:uAgriAppC.nc">
      <from><interface-ref name="SamplerInit" scoped="" ref="0x404ae588"/></from>
      <to><interface-ref name="SamplerInit" scoped="" ref="0x40b5e370"/></to>
    </wire>
    <wire loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SamplerInit" scoped="" ref="0x40b5e370"/></from>
      <to><interface-ref name="SamplerInit" scoped="" ref="0x40b58160"/></to>
    </wire>
    <wire loc="76:uAgriAppC.nc">
      <from><interface-ref name="SamplerControl" scoped="" ref="0x404ae9d0"/></from>
      <to><interface-ref name="SamplerControl" scoped="" ref="0x40b5e7b8"/></to>
    </wire>
    <wire loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SamplerControl" scoped="" ref="0x40b5e7b8"/></from>
      <to><interface-ref name="SamplerControl" scoped="" ref="0x40b585c8"/></to>
    </wire>
    <wire loc="77:uAgriAppC.nc">
      <from><interface-ref name="Sample" scoped="" ref="0x404b36a0"/></from>
      <to><interface-ref name="Sample" scoped="" ref="0x40b5edb0"/></to>
    </wire>
    <wire loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Sample" scoped="" ref="0x40b5edb0"/></from>
      <to><interface-ref name="Sample" scoped="" ref="0x40b58be0"/></to>
    </wire>
    <wire loc="80:uAgriAppC.nc">
      <from><function-ref name="PlugPlay" scoped="" ref="0x404b71a8"/></from>
      <to><function-ref name="PlugPlay" scoped="" ref="0x40b5b940"/></to>
    </wire>
    <wire loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><function-ref name="PlugPlay" scoped="" ref="0x40b5b940"/></from>
      <to><function-ref name="PlugPlay" scoped="" ref="0x40b57780"/></to>
    </wire>
    <wire loc="92:uAgriAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x404ac310"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40fd4010"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40fd4010"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4057e9b8"/></to>
    </wire>
    <wire loc="93:uAgriAppC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x404ac9f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x412b3970"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x412b3970"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x412fbb78"/></to>
    </wire>
    <wire loc="94:uAgriAppC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x404ae0c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40fcbca0"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40fcbca0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40fe42b0"/></to>
    </wire>
    <wire loc="96:uAgriAppC.nc">
      <from><interface-ref name="DataSend" scoped="" ref="0x404b6010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x412b4120"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x412b4120"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4196b640"/></to>
    </wire>
    <wire loc="97:uAgriAppC.nc">
      <from><interface-ref name="SerialSend" scoped="" ref="0x404df868"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x414dd760"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x414dd760"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41a3c2d8"/></to>
    </wire>
    <wire loc="98:uAgriAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x404d3148"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40fc9e98"/>
      <arguments>
        <value cst="I:51">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="99:uAgriAppC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x404e2178"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x40feb5e0"/></to>
    </wire>
    <wire loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x40feb5e0"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x40fdd478"/></to>
    </wire>
    <wire loc="104:uAgriAppC.nc">
      <from><interface-ref name="UARTMessagePool" scoped="" ref="0x404e8ef8"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x414c9d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pool" scoped="" ref="0x414c9d60"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x41a145a0"/></to>
    </wire>
    <wire loc="105:uAgriAppC.nc">
      <from><interface-ref name="UARTQueue" scoped="" ref="0x404e0b08"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x415140a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403b0258"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41a141f8"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403b0258"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x41418ca0"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403b0258"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x41414760"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403b0258"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x413c0730"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403b0258"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x412fb7e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403b0258"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x418e89f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403b0258"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x418f8bc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403b0258"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41901468"/></to>
    </wire>
    <wire loc="139:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403b0258"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4125e230"/></to>
    </wire>
    <wire loc="167:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403b0258"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x410aa898"/></to>
    </wire>
    <wire loc="208:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403b0258"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4112aa50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403b0258"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4180d338"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403b0258"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x417d7b80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403b0258"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41750c70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403b0258"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4172a358"/></to>
    </wire>
    <wire loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403b0258"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x409c9e70"/></to>
    </wire>
    <wire loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403b0258"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x409938b8"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403b0258"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4076df20"/></to>
    </wire>
    <wire loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403b0258"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4092ca08"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403b0258"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40906cb0"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403b0258"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x408e1ed8"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x40496650"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x402f8ed8"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x402f8ed8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x4037aa30"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40496c18"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40a4eec0"/></to>
    </wire>
    <wire loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40496c18"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x409c9810"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40496c18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403af868"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x403af868"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403aec68"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404a7030"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x403b0258"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403b49c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x414a8860"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403b49c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40be6d78"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403b49c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40742c70"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x403b4268"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x40494880"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x403bc490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404944d0"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x403bc088"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40573c88"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x403bc088"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x403b76f8"/></to>
    </wire>
    <wire loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x403b76f8"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x403c1690"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403b7ac8"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x403b49c8"/></to>
    </wire>
    <wire loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x403c5be8"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x403c9010"/></to>
    </wire>
    <wire loc="132:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x403c9010"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404146b0"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403be668"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x403b7ac8"/></to>
    </wire>
    <wire loc="182:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x403e72f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4046d3b0"/></to>
    </wire>
    <wire loc="156:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x403d9830"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404264f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x404264f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415de3b0"/></to>
    </wire>
    <wire loc="167:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x403ddea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40434030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40434030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415f4538"/></to>
    </wire>
    <wire loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x403e10a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40439ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40439ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4160da88"/></to>
    </wire>
    <wire loc="134:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x403c84b0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40413988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40413988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4153e538"/></to>
    </wire>
    <wire loc="174:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x403e3c08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4043a790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4043a790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x416106c0"/></to>
    </wire>
    <wire loc="137:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x403d08e0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40419888"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40419888"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4155f418"/></to>
    </wire>
    <wire loc="148:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x403d30a0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404234f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404234f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41573228"/></to>
    </wire>
    <wire loc="159:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x403d7750"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40430170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40430170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415d8228"/></to>
    </wire>
    <wire loc="170:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x403dbce8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40433c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40433c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415ef538"/></to>
    </wire>
    <wire loc="129:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x403cb120"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40416968"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40416968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414f30b0"/></to>
    </wire>
    <wire loc="140:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x403ce750"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404205d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x404205d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41559228"/></to>
    </wire>
    <wire loc="151:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x403d2ea8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40421170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40421170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4156e0b0"/></to>
    </wire>
    <wire loc="162:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x403df670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4042fe48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4042fe48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415d30b0"/></to>
    </wire>
    <wire loc="179:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x403e0ea8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404427d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404427d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4165b9e8"/></to>
    </wire>
    <wire loc="185:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x403e53d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40471b68"/></to>
    </wire>
    <wire loc="165:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x403dea98"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40436d30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40436d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415f7010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404146b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414ee010"/></to>
    </wire>
    <wire loc="143:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x403cc750"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4041e250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4041e250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415540b0"/></to>
    </wire>
    <wire loc="183:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x403e7ee8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4046bb68"/></to>
    </wire>
    <wire loc="146:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x403d5c08"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40424228"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40424228"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4157ade8"/></to>
    </wire>
    <wire loc="157:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x403d82f0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40426e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40426e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415dcd70"/></to>
    </wire>
    <wire loc="168:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x403dc8e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40434988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40434988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415f2010"/></to>
    </wire>
    <wire loc="177:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x403e1a98"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404434f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404434f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4160b538"/></to>
    </wire>
    <wire loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x403c8ea8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40412330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40412330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4153c010"/></to>
    </wire>
    <wire loc="138:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x403cf2f0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40418250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40418250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4155ede0"/></to>
    </wire>
    <wire loc="149:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x403d3a98"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40423e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40423e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41572c08"/></to>
    </wire>
    <wire loc="160:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x403d6210"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40430ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40430ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415d7c08"/></to>
    </wire>
    <wire loc="171:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x403e4750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404326b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x404326b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415ed010"/></to>
    </wire>
    <wire loc="130:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x403cbb18"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40415330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40415330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414f2a88"/></to>
    </wire>
    <wire loc="141:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x403cd210"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40420f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40420f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41558c08"/></to>
    </wire>
    <wire loc="152:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x403d18e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40421ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40421ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4156da88"/></to>
    </wire>
    <wire loc="180:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x403e88e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40441170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40441170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41659538"/></to>
    </wire>
    <wire loc="155:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x403dace8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40427b00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40427b00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415e0938"/></to>
    </wire>
    <wire loc="166:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x403dd4b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404356b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404356b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415f69e8"/></to>
    </wire>
    <wire loc="175:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x403e2670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40439170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40439170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4160e0b0"/></to>
    </wire>
    <wire loc="186:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x403e5dc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4046e3b0"/></to>
    </wire>
    <wire loc="133:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x403c9a08"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40413030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40413030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415409e8"/></to>
    </wire>
    <wire loc="144:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x403d5210"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4041eba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4041eba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41553a88"/></to>
    </wire>
    <wire loc="173:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x403e3210"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4043bdc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4043bdc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41613c20"/></to>
    </wire>
    <wire loc="147:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x403d4670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40424b80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40424b80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415757f8"/></to>
    </wire>
    <wire loc="158:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x403d8ce8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404317d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x404317d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415da7f8"/></to>
    </wire>
    <wire loc="169:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x403db2f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40433330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40433330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415f19e8"/></to>
    </wire>
    <wire loc="178:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x403e04b0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40443e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40443e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4165c010"/></to>
    </wire>
    <wire loc="128:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x403c0700"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40416010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40416010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414f55e8"/></to>
    </wire>
    <wire loc="139:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x403cfce8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40418ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40418ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4155c7f8"/></to>
    </wire>
    <wire loc="150:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x403d24b0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404227d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404227d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415706c0"/></to>
    </wire>
    <wire loc="161:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x403d6c08"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4042f4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4042f4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415d56c0"/></to>
    </wire>
    <wire loc="184:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x403e6900"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404733b0"/></to>
    </wire>
    <wire loc="164:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x403de0a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404363d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404363d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415f9538"/></to>
    </wire>
    <wire loc="153:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x403da2f0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4042b4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4042b4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4156b538"/></to>
    </wire>
    <wire loc="131:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x403ca590"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40415c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40415c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x414f0538"/></to>
    </wire>
    <wire loc="142:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x403cdc88"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4041f890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4041f890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x415566c0"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403792a8"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x40379f10"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x402f3938"/></to>
    </wire>
    <wire loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x4038de88"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x407e37b8"/></to>
    </wire>
    <wire loc="83:uAgriC.nc">
      <from><interface-ref name="uartSendTask" scoped="" ref="0x40500328"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="290:uAgriC.nc">
      <from><interface-ref name="send_radio_msg" scoped="" ref="0x40520888"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40573c88"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x405596f8"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40556780"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x40558e08"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40558e08"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x403cbb18"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40565200"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x40574840"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40574840"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x403cb120"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40565be8"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x40573300"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40573300"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x403c0700"/></to>
    </wire>
    <wire loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4057e9b8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x408ae590"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x408ae590"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x408cbc20"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x405a5d18"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40615d18"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x40615d18"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40629d18"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40596328"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x405a9a48"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x405a9a48"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4062dc50"/></to>
    </wire>
    <wire loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x405902a8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40871ab0"/></to>
    </wire>
    <wire loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x4058f310"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40884b18"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x4059a930"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40617930"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x40617930"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x4062b8f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x408bc548"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x408becb0"/></to>
    </wire>
    <wire loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40590c68"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40884480"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x405ad320"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40621a10"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40621a10"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40637a10"/></to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x405a6560"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40618568"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x40618568"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x4062c528"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405a8308"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40619e60"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40619e60"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4062d738"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4059d140"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406191a8"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x406191a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4066f7e8"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x405a1ce0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4061f488"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4061f488"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40635488"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="IEEE154Packet" scoped="" ref="0x405d4040"/></from>
      <to><interface-ref name="IEEE154Packet" scoped="" ref="0x4062e9c0"/></to>
    </wire>
    <wire loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <from><interface-ref name="IEEE154Packet" scoped="" ref="0x4062e9c0"/></from>
      <to><interface-ref name="IEEE154Packet" scoped="" ref="0x4066e9a0"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x405d3df0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x405a9a48"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x405e0078"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x4086de68"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x408817b0"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x405bcbe8"/></to>
    </wire>
    <wire loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40882a08"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4066f7e8"/></to>
    </wire>
    <wire loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4066f7e8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4067e7e8"/></to>
    </wire>
    <wire loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40884f18"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4088a6c8"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4088a6c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408a4980"/></to>
    </wire>
    <wire loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40882698"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4088ada8"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4088ada8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408a10a8"/></to>
    </wire>
    <wire loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x408a58f8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408c6cd8"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x408c6cd8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40906170"/></to>
    </wire>
    <wire loc="106:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x408a4098"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408bc230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x408bc230"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x408ca908"/></to>
    </wire>
    <wire loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40909640"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x405be928"/></to>
    </wire>
    <wire loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4090a950"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408aeb48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x408aeb48"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x408ca250"/></to>
    </wire>
    <wire loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x408cbc20"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x408c8940"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x408c8940"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x408e1850"/></to>
    </wire>
    <wire loc="113:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x408ca250"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408c8f28"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x408c8f28"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408de230"/></to>
    </wire>
    <wire loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x408ca908"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408c5618"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x408c5618"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408de910"/></to>
    </wire>
    <wire loc="121:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x408c4b40"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x405a9a48"/></to>
    </wire>
    <wire loc="122:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x408c41b0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x4092e1f0"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x4092e1f0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x4094b770"/></to>
    </wire>
    <wire loc="123:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x408c4708"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x4090a470"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x4090a470"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40906888"/></to>
    </wire>
    <wire loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x408c59e8"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x4092eba8"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x4092eba8"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x409471b8"/></to>
    </wire>
    <wire loc="126:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40909168"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x4092e748"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x4092e748"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x4094bcc8"/></to>
    </wire>
    <wire loc="128:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x4094c6d0"/></from>
      <to><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x405c9238"/></to>
    </wire>
    <wire loc="129:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4092d428"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409711f8"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x409711f8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x4096f3d8"/></to>
    </wire>
    <wire loc="130:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4092da08"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40971750"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40971750"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x4096f930"/></to>
    </wire>
    <wire loc="131:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x4092dee0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x409cb198"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x409cb198"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x409c6218"/></to>
    </wire>
    <wire loc="133:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40970788"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x405c7a18"/></to>
    </wire>
    <wire loc="134:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40971c60"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40973df8"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40973df8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409a52c8"/></to>
    </wire>
    <wire loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40970258"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x409a7390"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x409a7390"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x409a5820"/></to>
    </wire>
    <wire loc="137:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x409a63a0"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x405c0228"/></to>
    </wire>
    <wire loc="138:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x409a78a0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409b0010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0x409b0010"/></from>
      <to><interface-ref name="SubRadioSend" scoped="" ref="0x409af748"/></to>
    </wire>
    <wire loc="139:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x409a7e80"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x409cbde8"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x409cbde8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x409c6e68"/></to>
    </wire>
    <wire loc="141:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x409ad588"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x405c6640"/></to>
    </wire>
    <wire loc="142:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubRadioSend" scoped="" ref="0x409af748"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409cb890"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x409cb890"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409c6910"/></to>
    </wire>
    <wire loc="143:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x409ae090"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x409ca288"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x409ca288"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x409c52c8"/></to>
    </wire>
    <wire loc="145:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <from><interface-ref name="RF230Config" scoped="" ref="0x409ca720"/></from>
      <to><interface-ref name="RF230Config" scoped="" ref="0x405b4a48"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketSleepInterval" scoped="" ref="0x40624120"/></from>
      <to><interface-ref name="PacketSleepInterval" scoped="" ref="0x4063a120"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40623540"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40639540"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="IEEE154Packet" scoped="" ref="0x40633c40"/></from>
      <to><interface-ref name="IEEE154Packet" scoped="" ref="0x4062e9c0"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x406428c8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40671548"/></to>
    </wire>
    <wire loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40671548"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x4075e940"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x40644318"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x4076d040"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x4076d040"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40778418"/></to>
    </wire>
    <wire loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40678dc8"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x4066d748"/></to>
    </wire>
    <wire loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40775360"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406d3908"/></to>
    </wire>
    <wire loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40761b40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406ce3e0"/></to>
    </wire>
    <wire loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x406ce3e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40743890"/></to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4074fa58"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406dc928"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x406dc928"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406f3230"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x406d5360"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x406f0530"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x406d9190"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x406ef258"/></to>
    </wire>
    <wire loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x406e1cd8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x406ec128"/></to>
    </wire>
    <wire loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x406e1cd8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x406ebd20"/></to>
    </wire>
    <wire loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x406e1cd8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x406fe950"/></to>
    </wire>
    <wire loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40741078"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406dc928"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40778418"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40856970"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40781100"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4082eea8"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4076df20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40777af8"/></to>
    </wire>
    <wire loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40777af8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40782bb8"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x4085a220"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4078df08"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40832248"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x4078c258"/></to>
    </wire>
    <wire loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x4078c258"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40819010"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40855360"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x4078be60"/></to>
    </wire>
    <wire loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x4078be60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40818a88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x40818a88"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x416d6228"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x40782bb8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x416d8368"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40819010"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x416d87a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x416d5400"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x407c0e80"/></to>
    </wire>
    <wire loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x407c0e80"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x407d1de8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x416d2640"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x407d51a0"/></to>
    </wire>
    <wire loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x407d51a0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x407e51a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x416d1050"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x407d5cc0"/></to>
    </wire>
    <wire loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x407d5cc0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x407e5cc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0x416d0a50"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x407d2858"/></to>
    </wire>
    <wire loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x407d2858"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x407e3c18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x40831bd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x408584b8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x4086de68"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40867b60"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x4086a9c8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40a43810"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40864470"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4086a9c8"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x4087a740"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x40866b18"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4088a0e0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x408a52a8"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x408a1be0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x408a58f8"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x408a03e0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x408a4098"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <from><interface-ref name="IEEE154Packet" scoped="" ref="0x408a0780"/></from>
      <to><interface-ref name="IEEE154Packet" scoped="" ref="0x4062e9c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioCCA" scoped="" ref="0x408cd010"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x408cb788"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0x408ce070"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x408cd790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x408cd428"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x408cac40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x408cebe0"/></from>
      <to><interface-ref name="SubRadioReceive" scoped="" ref="0x408cb370"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0x408ce708"/></from>
      <to><interface-ref name="SubRadioSend" scoped="" ref="0x408cde48"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x408dece0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x408c59e8"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x408dd438"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x40866b18"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x408dda50"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x408c41b0"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x408dc010"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x408c4708"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x408dc448"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408c4b40"/></to>
    </wire>
    <wire loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x408d63a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x408ef9a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="267:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x408fadb8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x409009c8"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x40908de8"/></to>
    </wire>
    <wire loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x40908de8"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x4092cda0"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4091ba00"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4090f848"/></to>
    </wire>
    <wire>
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4090f848"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40929860"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x409050c8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x4090a950"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40905868"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40909168"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x40905ce0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40909640"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x409464b8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x4092d428"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40946a98"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x4092da08"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x40945010"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x4092dee0"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x40947970"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x4094c6d0"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40945808"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40963918"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40963918"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4095fab8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x40942a70"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x40908de8"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x409411f8"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40977850"/></to>
    </wire>
    <wire>
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40977850"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40929860"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x409417f8"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x40866b18"/></to>
    </wire>
    <wire loc="229:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <from><interface-ref name="startStopTimer" scoped="" ref="0x40967a50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x4095fab8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40781100"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4096fe40"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40971c60"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x4098a198"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40970788"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4098c458"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40970258"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x4098c8b8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x4086de68"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x4098bc10"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40991c40"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40991c40"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x4098f6e0"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x409861e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x40991380"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x40993dd8"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40994010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x409938b8"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x409a5d30"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x409a78a0"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x409a2338"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x409a7e80"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="SoftwareAckConfig" scoped="" ref="0x409a2ee0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x409a63a0"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x409a2798"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x4086de68"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x40972da8"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x409ae528"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioCCA" scoped="" ref="0x409b08e0"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x409ae090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0x409b2930"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x409af090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x409903f0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x409aeb00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40990da0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x408becb0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x409b0cf8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x409ad588"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x409b04e8"/></from>
      <to><interface-ref name="SubRadioReceive" scoped="" ref="0x409afc40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40990a88"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x409ad250"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RF230Config" scoped="" ref="0x409f0328"/></from>
      <to><interface-ref name="RF230Config" scoped="" ref="0x409ca720"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x409db300"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40618568"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x409d66d0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40617930"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x409d5a58"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40615d18"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x409d3e28"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40623540"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x409d02b0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40621a10"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x409cfa48"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40671548"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x409ef298"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x4086de68"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40a43810"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40b02c88"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x409c57c0"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x409c7540"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x409c7540"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x403d08e0"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x409bf310"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x40a45010"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40a45010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a5c190"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x409be3a0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x40a456f0"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x40a456f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x40a5d5e8"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="HplRF230" scoped="" ref="0x409deb20"/></from>
      <to><interface-ref name="HplRF230" scoped="" ref="0x40a40278"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="HplRF230" scoped="" ref="0x40a40278"/></from>
      <to><interface-ref name="HplRF230" scoped="" ref="0x40a4d258"/></to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x409c22f0"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x40a45ac8"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x40a45ac8"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x403d5210"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x409c2cd8"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x40a44580"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40a44580"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x403c84b0"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x409d9e70"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x40a43010"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x40a43010"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x40a4e838"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x409f0bc8"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x40866b18"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x409d7748"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40b29e48"/></to>
    </wire>
    <wire loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x40a5d5e8"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x40a78628"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40b02c88"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x41712138"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortCLKM" scoped="" ref="0x40a4a950"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x403d6c08"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="PortIRQ" scoped="" ref="0x40a493d8"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x403d7750"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40a4db38"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x406d9190"/></to>
    </wire>
    <wire loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x40a7ca28"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x40a789a0"/></to>
    </wire>
    <wire loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40a5d268"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a782c8"/></to>
    </wire>
    <wire loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40a5c190"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a77100"/></to>
    </wire>
    <wire loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x40a75010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40acb8c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40acb8c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41729680"/></to>
    </wire>
    <wire loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40a8c678"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40aca438"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40aca438"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x41727230"/></to>
    </wire>
    <wire loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x40a8f320"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x40aaf0c0"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x40aaf0c0"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x40aab4a0"/></to>
    </wire>
    <wire loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40a8caf8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x4038e680"/></to>
    </wire>
    <wire loc="207:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x40a7f860"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x40aa6c00"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x4038e680"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x40aa9338"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x403d08e0"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x40aa9d10"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x403cf2f0"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x40aa8740"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x403cfce8"/></to>
    </wire>
    <wire loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x40aa6200"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x403ce750"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40aca030"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x41729dc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x417276f0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40aca8e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x41727b18"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x4172a690"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x41726190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x41711b38"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406dc928"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x4170fdd8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x406e1cd8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SamplerTimer" scoped="" ref="0x40b56758"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40bd5758"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40bd5758"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4095fab8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40b57940"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4055c398"/></to>
    </wire>
    <wire loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Battery" scoped="" ref="0x40b6fcd0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40cc3ef8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x40cc3ef8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x417580a0"/></to>
    </wire>
    <wire loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="TempHumControl" scoped="" ref="0x40b71980"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40cbe6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x40cbe6b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40cf42c8"/></to>
    </wire>
    <wire loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Temp" scoped="" ref="0x40b700d8"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x40cbed38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Temperature" scoped="" ref="0x40cbed38"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x4177e908"/></to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Hum" scoped="" ref="0x40b70d88"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x40dd1970"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Humidity" scoped="" ref="0x40dd1970"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x4177d968"/></to>
    </wire>
    <wire loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="DioInit" scoped="" ref="0x40b6d998"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40dcded8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x40dcded8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40dca380"/></to>
    </wire>
    <wire loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="DioControl" scoped="" ref="0x40b6ddb8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40ec1220"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x40ec1220"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40dca738"/></to>
    </wire>
    <wire loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Dio0" scoped="" ref="0x40b68230"/></from>
      <to><interface-ref name="Dio" scoped="" ref="0x40ec1890"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Dio1" scoped="" ref="0x40b68a18"/></from>
      <to><interface-ref name="Dio" scoped="" ref="0x40ec1890"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Dio2" scoped="" ref="0x40b6b2a0"/></from>
      <to><interface-ref name="Dio" scoped="" ref="0x40ec1890"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Dio3" scoped="" ref="0x40b6ba88"/></from>
      <to><interface-ref name="Dio" scoped="" ref="0x40ec1890"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Dio4" scoped="" ref="0x40b6a2a0"/></from>
      <to><interface-ref name="Dio" scoped="" ref="0x40ec1890"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Dio5" scoped="" ref="0x40b6aa88"/></from>
      <to><interface-ref name="Dio" scoped="" ref="0x40ec1890"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="IBADCinit" scoped="" ref="0x40b539c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40ebe600"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x40ebe600"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40eba6b0"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="IBADCcontrol" scoped="" ref="0x40b53e00"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40ebe918"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x40ebe918"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40ebaa48"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x40b4f360"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x40f65010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x40b4f808"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x40f65010"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x40b4fcb0"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x40f65010"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x40b51200"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x40f65010"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x40b516a8"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x40f65010"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x40b51bd0"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x40f65010"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x40b50090"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x40f65010"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x40b50538"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x40f65010"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC8" scoped="" ref="0x40b509e0"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x40f65010"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC9" scoped="" ref="0x40b50e88"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x40f65010"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC10" scoped="" ref="0x40b78348"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x40f65010"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC11" scoped="" ref="0x40b787f8"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x40f65010"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC12" scoped="" ref="0x40b78ca8"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x40f65010"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="ADC13" scoped="" ref="0x40b77208"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x40f65010"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam0" scoped="" ref="0x40b76010"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x40f654b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam1" scoped="" ref="0x40b76400"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x40f654b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam2" scoped="" ref="0x40b767f0"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x40f654b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam3" scoped="" ref="0x40b76ce0"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x40f654b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam4" scoped="" ref="0x40b750e0"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x40f654b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam5" scoped="" ref="0x40b754d0"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x40f654b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam6" scoped="" ref="0x40b758c0"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x40f654b0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam7" scoped="" ref="0x40b75cb0"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x40f654b0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam8" scoped="" ref="0x40b730c0"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x40f654b0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam9" scoped="" ref="0x40b734b0"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x40f654b0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam10" scoped="" ref="0x40b738a8"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x40f654b0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam11" scoped="" ref="0x40b73ca0"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x40f654b0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam12" scoped="" ref="0x40b720c8"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x40f654b0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="SetParam13" scoped="" ref="0x40b724c0"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x40f654b0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="CounterInit" scoped="" ref="0x40b66300"/></from>
      <to><interface-ref name="CounterInit" scoped="" ref="0x40f95988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="CounterInit" scoped="" ref="0x40f95988"/></from>
      <to><interface-ref name="CounterInit" scoped="" ref="0x40f92e10"/></to>
    </wire>
    <wire loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="CounterControl" scoped="" ref="0x40b66948"/></from>
      <to><interface-ref name="CounterControl" scoped="" ref="0x40f95ce0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="CounterControl" scoped="" ref="0x40f95ce0"/></from>
      <to><interface-ref name="CounterControl" scoped="" ref="0x40f8f2a0"/></to>
    </wire>
    <wire loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40b65010"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40f94350"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x40f94350"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40f8f900"/></to>
    </wire>
    <wire loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <from><function-ref name="Plugged" scoped="" ref="0x40b65a08"/></from>
      <to><function-ref name="Plugged" scoped="" ref="0x40f94b30"/></to>
    </wire>
    <wire>
      <from><function-ref name="Plugged" scoped="" ref="0x40f94b30"/></from>
      <to><function-ref name="Plugged" scoped="" ref="0x40f8e3f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x417580a0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40bf3a90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x41758c28"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40cc4468"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40bede38"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x41758c28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40bec6b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x40be9698"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40be6100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x41757150"/></to>
    </wire>
    <wire loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40bf3a90"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40c96560"/></to>
    </wire>
    <wire loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x40bebeb0"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x40c94178"/></to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40cc9ea0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40bec6b0"/></to>
    </wire>
    <wire loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40c926b0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40bede38"/></to>
    </wire>
    <wire loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x40cc9280"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40c951d8"/></to>
    </wire>
    <wire loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40c94de8"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40be2300"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40be2300"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40c06678"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x40c08870"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x40c06c00"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40be9698"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40c3a910"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40c3a910"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4174d170"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40c7d010"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40be6100"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x40bfb498"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x40be5a00"/></to>
    </wire>
    <wire loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x40be5a00"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x40c30740"/></to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x40c04968"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x403b4268"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x40c7c9f0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x40c061e8"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40c7b150"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40c7e470"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40c7e470"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x4174dcb8"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40c2dc18"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x4038e680"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40c7e068"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x4174d8b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40c7eb08"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x4174b3f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x4174b8b0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40c7d010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x4174bcd8"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x4174e010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x4174af28"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x417873b0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x40c7c9f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x417877a8"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x40c7cde8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41787ac0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40c7b150"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x41786230"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40c7b7e8"/></to>
    </wire>
    <wire loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x40cb6e90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40cf42c8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40d3c010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TempResource" scoped="" ref="0x4177b580"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40cf4c00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Sht15Temp" scoped="" ref="0x4177a350"/></from>
      <to><interface-ref name="SensirionSht15" scoped="" ref="0x40cf36c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="HumResource" scoped="" ref="0x4177bc58"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40cf4c00"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Sht15Hum" scoped="" ref="0x4177ab08"/></from>
      <to><interface-ref name="SensirionSht15" scoped="" ref="0x40cf36c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40d3c010"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40d92270"/></to>
    </wire>
    <wire loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <from><interface-ref name="SensirionSht15" scoped="" ref="0x40cf36c8"/></from>
      <to><interface-ref name="SensirionSht15" scoped="" ref="0x40cef2d0"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40cf4c00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40d3c920"/></to>
    </wire>
    <wire loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40d3c920"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40db6a70"/></to>
    </wire>
    <wire loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x40cefa98"/></from>
      <to><interface-ref name="DATA" scoped="" ref="0x40d3b0b0"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x40d3b0b0"/></from>
      <to><interface-ref name="Int3" scoped="" ref="0x40d2e200"/></to>
    </wire>
    <wire loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <from><interface-ref name="CLOCK" scoped="" ref="0x40d16430"/></from>
      <to><interface-ref name="SCK" scoped="" ref="0x40d3baa8"/></to>
    </wire>
    <wire loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x40d3baa8"/></from>
      <to><interface-ref name="PW0" scoped="" ref="0x40d36200"/></to>
    </wire>
    <wire loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x40d16da8"/></from>
      <to><interface-ref name="InterruptDATA" scoped="" ref="0x40d3a548"/></to>
    </wire>
    <wire loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x40d3a548"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x40d4b080"/></to>
    </wire>
    <wire loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40d154a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40db1c18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40db1c18"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4095fab8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40d416f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40daee78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="readSensor" scoped="" ref="0x40d40350"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW0" scoped="" ref="0x40d36200"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0x403d5c08"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x40d2e200"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x403e4750"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40db6a70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x417d5ec8"/></to>
    </wire>
    <wire loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x40d4b678"/></from>
      <to><interface-ref name="Int7" scoped="" ref="0x40d6a890"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x40d6a890"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40d9ad60"/></to>
    </wire>
    <wire loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40d92950"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40db90a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40db90a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4095fab8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x40d90c58"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x403e4750"/></to>
    </wire>
    <wire loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x40d8f670"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0x403d5c08"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc0" scoped="" ref="0x40d2b468"/></from>
      <to><interface-ref name="Adc0" scoped="" ref="0x40d2cb48"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW3" scoped="" ref="0x40d33050"/></from>
      <to><interface-ref name="PortC3" scoped="" ref="0x403d3a98"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW6" scoped="" ref="0x40d32e68"/></from>
      <to><interface-ref name="PortC6" scoped="" ref="0x403d18e0"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc3" scoped="" ref="0x40d2d090"/></from>
      <to><interface-ref name="Adc3" scoped="" ref="0x40d586d0"/></to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc5" scoped="" ref="0x40d2d830"/></from>
      <to><interface-ref name="Adc5" scoped="" ref="0x40d58e70"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x40d30cc8"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x403db2f0"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW1" scoped="" ref="0x40d36bd8"/></from>
      <to><interface-ref name="PortC1" scoped="" ref="0x403d4670"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW4" scoped="" ref="0x40d33a28"/></from>
      <to><interface-ref name="PortC4" scoped="" ref="0x403d24b0"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc1" scoped="" ref="0x40d2b8b8"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x40d2cf18"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW7" scoped="" ref="0x40d31850"/></from>
      <to><interface-ref name="PortC7" scoped="" ref="0x403da2f0"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc6" scoped="" ref="0x40d2dc00"/></from>
      <to><interface-ref name="Adc6" scoped="" ref="0x40d57268"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x40d2f740"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x403dbce8"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW2" scoped="" ref="0x40d34650"/></from>
      <to><interface-ref name="PortC2" scoped="" ref="0x403d30a0"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW5" scoped="" ref="0x40d32490"/></from>
      <to><interface-ref name="PortC5" scoped="" ref="0x403d2ea8"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc2" scoped="" ref="0x40d2bc88"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0x40d58300"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x40d302e0"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x403dc8e0"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc4" scoped="" ref="0x40d2d460"/></from>
      <to><interface-ref name="Adc4" scoped="" ref="0x40d58aa0"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc7" scoped="" ref="0x40d2c010"/></from>
      <to><interface-ref name="Adc7" scoped="" ref="0x40d57638"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x40d6a010"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40d9dc70"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x40d6d338"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40d78538"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x40d6cd78"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40da1920"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x40d6dbb8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40d766c0"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x40d6b6b8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40d9fb68"/></to>
    </wire>
    <wire loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x40d4aa88"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40d843b0"/></to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x40d6c4f8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40d737a8"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40d84b68"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x40d643d8"/></to>
    </wire>
    <wire loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40d78cf0"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x40d64850"/></to>
    </wire>
    <wire loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40d76e78"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x40d64cc8"/></to>
    </wire>
    <wire loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40d72010"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x40d661a0"/></to>
    </wire>
    <wire loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40da0190"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x40d66618"/></to>
    </wire>
    <wire loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40d9e350"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x40d66a90"/></to>
    </wire>
    <wire loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40d9c438"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x40d66f08"/></to>
    </wire>
    <wire loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40d995f0"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x40d65390"/></to>
    </wire>
    <wire loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15P.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x40d8e4c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40db51e8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x417d3618"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40db55f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x417d3a20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x417d3ee0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40db5aa0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x417d2320"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x417d7eb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x417d2918"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40dca738"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40dc43a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Dio" scoped="" ref="0x40ec1890"/></from>
      <to><interface-ref name="Dio" scoped="" ref="0x40dc7100"/></to>
    </wire>
    <wire loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <from><interface-ref name="Dio" scoped="" ref="0x40dc7100"/></from>
      <to><interface-ref name="Dio" scoped="" ref="0x40dc4c90"/></to>
    </wire>
    <wire loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40dca380"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40dc4010"/></to>
    </wire>
    <wire loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <from><interface-ref name="Interrupt" scoped="" ref="0x40de8288"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x40e0d368"/></to>
    </wire>
    <wire loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300DigitalC.nc">
      <from><interface-ref name="Interrupt" scoped="" ref="0x40e0d368"/></from>
      <to><interface-ref name="Int4" scoped="" ref="0x40d6cd78"/></to>
    </wire>
    <wire loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x40dc0010"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x40e0dc58"/></to>
    </wire>
    <wire loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300DigitalC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x40e0dc58"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x40e08200"/></to>
    </wire>
    <wire loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x40de9010"/></from>
      <to><interface-ref name="I2CResource" scoped="" ref="0x40e0bbf8"/></to>
    </wire>
    <wire loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300DigitalC.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x40e0bbf8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40e09a38"/></to>
    </wire>
    <wire loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <from><interface-ref name="IntPin" scoped="" ref="0x40de9768"/></from>
      <to><interface-ref name="IntPin" scoped="" ref="0x40e108c0"/></to>
    </wire>
    <wire loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300DigitalC.nc">
      <from><interface-ref name="IntPin" scoped="" ref="0x40e108c0"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x403dc8e0"/></to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x40dc3720"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40b29e48"/></to>
    </wire>
    <wire loc="233:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <from><interface-ref name="read_io" scoped="" ref="0x40df4010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <from><interface-ref name="init_io" scoped="" ref="0x40de54d8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <from><interface-ref name="set_io_low" scoped="" ref="0x40dd7698"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <from><interface-ref name="set_io_toggle" scoped="" ref="0x40e04930"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <from><interface-ref name="set_io_high" scoped="" ref="0x40ddb478"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40e09a38"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40e338e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="I2CPacket" scoped="" ref="0x40e08200"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x40e30460"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40e338e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40e4d010"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x40e30460"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x40e4d800"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x40e607a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40e2a5f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40e2a5f8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4180c7f0"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40e60f20"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x40e5be90"/></to>
    </wire>
    <wire loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Atm128I2C" scoped="" ref="0x40e5ddd8"/></from>
      <to><interface-ref name="Atm128I2C" scoped="" ref="0x40e8cd50"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x40e50eb8"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x40e5b9e8"/></to>
    </wire>
    <wire loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40e4f5f8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40e51158"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40e51158"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x4180b418"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x40e8b0b8"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x40e869b8"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x40e869b8"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x40eb6a88"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ReadDebugLeds" scoped="" ref="0x40e8a7b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40daee78"/></to>
    </wire>
    <wire loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="WriteDebugLeds" scoped="" ref="0x40e89430"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40daee78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40e2ad38"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x4180b010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40e517f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x4180bab0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x41809010"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40e51ca0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x41809438"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x4180d670"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x418086d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CClk" scoped="" ref="0x40eb2240"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x403dace8"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CData" scoped="" ref="0x40eb2c40"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x403d9830"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40ec5c60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4095fab8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40ebaa48"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40f366c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="EXITATION33" scoped="" ref="0x40f65c10"/></from>
      <to><interface-ref name="EXITATION33" scoped="" ref="0x40eeb3c8"/></to>
    </wire>
    <wire loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="EXITATION33" scoped="" ref="0x40eeb3c8"/></from>
      <to><interface-ref name="EXITATION33" scoped="" ref="0x40ee6718"/></to>
    </wire>
    <wire loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40eba6b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40f36330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ADConvert" scoped="" ref="0x40f65010"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x40eec3b8"/></to>
    </wire>
    <wire loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="ADConvert" scoped="" ref="0x40eec3b8"/></from>
      <to><interface-ref name="ADConvert" scoped="" ref="0x40eea708"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SetParam" scoped="" ref="0x40f654b0"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x40eecb00"/></to>
    </wire>
    <wire loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="SetParam" scoped="" ref="0x40eecb00"/></from>
      <to><interface-ref name="SetParam" scoped="" ref="0x40eeae50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="EXITATION50" scoped="" ref="0x40f64050"/></from>
      <to><interface-ref name="EXITATION50" scoped="" ref="0x40eeb888"/></to>
    </wire>
    <wire loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="EXITATION50" scoped="" ref="0x40eeb888"/></from>
      <to><interface-ref name="EXITATION50" scoped="" ref="0x40ee6bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="EXITATION25" scoped="" ref="0x40f657f8"/></from>
      <to><interface-ref name="EXITATION25" scoped="" ref="0x40eecee0"/></to>
    </wire>
    <wire loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="EXITATION25" scoped="" ref="0x40eecee0"/></from>
      <to><interface-ref name="EXITATION25" scoped="" ref="0x40ee6258"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40f366c8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40f433c8"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40f36330"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40f43010"/></to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="Switch" scoped="" ref="0x40ed76a8"/></from>
      <to><interface-ref name="Switch" scoped="" ref="0x40f3d608"/></to>
    </wire>
    <wire loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchC.nc">
      <from><interface-ref name="Switch" scoped="" ref="0x40f3d608"/></from>
      <to><interface-ref name="Switch" scoped="" ref="0x40f38cf0"/></to>
    </wire>
    <wire loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40ed7e70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4055c398"/></to>
    </wire>
    <wire loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="Exitation50" scoped="" ref="0x40ee5150"/></from>
      <to><interface-ref name="Exitation50" scoped="" ref="0x40f36d70"/></to>
    </wire>
    <wire loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="Exitation50" scoped="" ref="0x40f36d70"/></from>
      <to><interface-ref name="PW5" scoped="" ref="0x40d32490"/></to>
    </wire>
    <wire loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="Exitation33" scoped="" ref="0x40ee5b98"/></from>
      <to><interface-ref name="Exitation33" scoped="" ref="0x40f58860"/></to>
    </wire>
    <wire loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="Exitation33" scoped="" ref="0x40f58860"/></from>
      <to><interface-ref name="PW3" scoped="" ref="0x40d33050"/></to>
    </wire>
    <wire loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="VoltageBuffer" scoped="" ref="0x40ee46d8"/></from>
      <to><interface-ref name="VoltageBuffer" scoped="" ref="0x40f57338"/></to>
    </wire>
    <wire loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="VoltageBuffer" scoped="" ref="0x40f57338"/></from>
      <to><interface-ref name="PW2" scoped="" ref="0x40d34650"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="VoltageBooster" scoped="" ref="0x40ee3170"/></from>
      <to><interface-ref name="VoltageBooster" scoped="" ref="0x40f57d80"/></to>
    </wire>
    <wire loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="VoltageBooster" scoped="" ref="0x40f57d80"/></from>
      <to><interface-ref name="PW1" scoped="" ref="0x40d36bd8"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="Amplifier" scoped="" ref="0x40ee3ba8"/></from>
      <to><interface-ref name="Amplifier" scoped="" ref="0x40f56850"/></to>
    </wire>
    <wire loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="Amplifier" scoped="" ref="0x40f56850"/></from>
      <to><interface-ref name="PW6" scoped="" ref="0x40d32e68"/></to>
    </wire>
    <wire loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x40ee2748"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x40f543a8"/></to>
    </wire>
    <wire loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x40f543a8"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x40f4d778"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x40ee0708"/></from>
      <to><interface-ref name="I2CResource" scoped="" ref="0x40f52340"/></to>
    </wire>
    <wire loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x40f52340"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40f4d030"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="PowerStabalizingTimer" scoped="" ref="0x40edf010"/></from>
      <to><interface-ref name="PowerStabalizingTimer" scoped="" ref="0x40f52bd8"/></to>
    </wire>
    <wire loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="PowerStabalizingTimer" scoped="" ref="0x40f52bd8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40f4a1e8"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <from><interface-ref name="SwitchControl" scoped="" ref="0x40f50ef0"/></from>
      <to><interface-ref name="SwitchControl" scoped="" ref="0x40f3d010"/></to>
    </wire>
    <wire loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchC.nc">
      <from><interface-ref name="SwitchControl" scoped="" ref="0x40f3d010"/></from>
      <to><interface-ref name="SwitchControl" scoped="" ref="0x40f386f8"/></to>
    </wire>
    <wire loc="161:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <from><interface-ref name="adc_get_data" scoped="" ref="0x40ef7bd8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x40f35e18"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x40f3cc68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="I2CPacket" scoped="" ref="0x40f3cc68"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x40e30460"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchC.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x40f355e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40f3c520"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40f3c520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40e338e8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40f4a1e8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4095fab8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40f4d030"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40e338e8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="I2CPacket" scoped="" ref="0x40f4d778"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x40e30460"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="SwitchControl" scoped="" ref="0x40f77998"/></from>
      <to><interface-ref name="SwitchControl" scoped="" ref="0x40f50ef0"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="Exitation50" scoped="" ref="0x40f43a90"/></from>
      <to><interface-ref name="PW5" scoped="" ref="0x40d32490"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="Exitation33" scoped="" ref="0x40f42500"/></from>
      <to><interface-ref name="PW3" scoped="" ref="0x40d33050"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="VoltageBuffer" scoped="" ref="0x40f79010"/></from>
      <to><interface-ref name="PW2" scoped="" ref="0x40d34650"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="VoltageBooster" scoped="" ref="0x40f79a78"/></from>
      <to><interface-ref name="PW1" scoped="" ref="0x40d36bd8"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="Amplifier" scoped="" ref="0x40f784f0"/></from>
      <to><interface-ref name="PW6" scoped="" ref="0x40d32e68"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x40f78f00"/></from>
      <to><interface-ref name="PW4" scoped="" ref="0x40d33a28"/></to>
    </wire>
    <wire loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <from><interface-ref name="CounterInit" scoped="" ref="0x40f92e10"/></from>
      <to><interface-ref name="CounterInit" scoped="" ref="0x40f8ec78"/></to>
    </wire>
    <wire loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40f8f900"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40f8b730"/></to>
    </wire>
    <wire loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <from><interface-ref name="CounterControl" scoped="" ref="0x40f8f2a0"/></from>
      <to><interface-ref name="CounterControl" scoped="" ref="0x40f8b0f0"/></to>
    </wire>
    <wire loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <from><function-ref name="Plugged" scoped="" ref="0x40f8e3f0"/></from>
      <to><function-ref name="Plugged" scoped="" ref="0x40f8a138"/></to>
    </wire>
    <wire loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40f8a308"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4055c398"/></to>
    </wire>
    <wire loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <from><interface-ref name="Interrupt" scoped="" ref="0x40f86010"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x40fa7528"/></to>
    </wire>
    <wire loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300CounterC.nc">
      <from><interface-ref name="Interrupt" scoped="" ref="0x40fa7528"/></from>
      <to><interface-ref name="Int5" scoped="" ref="0x40d6b6b8"/></to>
    </wire>
    <wire loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <from><interface-ref name="IntPin" scoped="" ref="0x40f89b70"/></from>
      <to><interface-ref name="IntPin" scoped="" ref="0x40fa8010"/></to>
    </wire>
    <wire loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300CounterC.nc">
      <from><interface-ref name="IntPin" scoped="" ref="0x40fa8010"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x403db2f0"/></to>
    </wire>
    <wire loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x40f87588"/></from>
      <to><interface-ref name="Power" scoped="" ref="0x40fa8a00"/></to>
    </wire>
    <wire loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300CounterC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x40fa8a00"/></from>
      <to><interface-ref name="PW4" scoped="" ref="0x40d33a28"/></to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x40f89128"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40b29e48"/></to>
    </wire>
    <wire loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <from><interface-ref name="count_ready" scoped="" ref="0x40fb0c28"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40fa6b10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40e338e8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="I2CPacket" scoped="" ref="0x40fa52e0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x40e30460"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x40fdd478"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x412603f0"/></to>
    </wire>
    <wire loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x40fc7c28"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x40fe2ce0"/></to>
    </wire>
    <wire loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x40fe2ce0"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x410a79d0"/></to>
    </wire>
    <wire loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x40fc7190"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x40fe2248"/></to>
    </wire>
    <wire loc="107:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x40fe2248"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x410a7010"/></to>
    </wire>
    <wire loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40fc74e8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40fe25a0"/></to>
    </wire>
    <wire loc="108:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40fe25a0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x410a7338"/></to>
    </wire>
    <wire loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40fc8598"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40fe3b78"/></to>
    </wire>
    <wire loc="106:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40fe3b78"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x410a8b88"/></to>
    </wire>
    <wire loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40fc9488"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40fe49e0"/></to>
    </wire>
    <wire loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40fe49e0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x410a8068"/></to>
    </wire>
    <wire loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x40fb3768"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x40fdf598"/></to>
    </wire>
    <wire loc="154:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x40fdf598"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x412608c8"/></to>
    </wire>
    <wire loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40fc9e98"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40fe34c8"/></to>
    </wire>
    <wire loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40fe34c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x410a87a8"/></to>
    </wire>
    <wire loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x40feb178"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x40fdd010"/></to>
    </wire>
    <wire loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x40fdd010"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x410a5150"/></to>
    </wire>
    <wire loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x40fb9178"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x40fe0530"/></to>
    </wire>
    <wire loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x40fe0530"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x410a6158"/></to>
    </wire>
    <wire loc="104:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40fe42b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x410aabb0"/></to>
    </wire>
    <wire loc="136:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40fe42b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x4125f4d0"/></to>
    </wire>
    <wire loc="137:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40fe42b0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x4112b198"/></to>
    </wire>
    <wire loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x40fddd18"/></from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x40fea6c8"/></to>
    </wire>
    <wire loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x40fd81e8"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x40fe5550"/></to>
    </wire>
    <wire loc="182:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x40fd9580"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x4112a0e8"/></to>
    </wire>
    <wire loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x410d05e8"/></from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x40fddd18"/></to>
    </wire>
    <wire loc="116:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="QEntryPool" scoped="" ref="0x410a0320"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x410ef478"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pool" scoped="" ref="0x410ef478"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x418f6010"/></to>
    </wire>
    <wire loc="117:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="MessagePool" scoped="" ref="0x4109f830"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x410c80a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pool" scoped="" ref="0x410c80a0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x41901810"/></to>
    </wire>
    <wire loc="120:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x410a36d8"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x410eb638"/></to>
    </wire>
    <wire loc="123:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SentCache" scoped="" ref="0x410d4c98"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0x411170c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Cache" scoped="" ref="0x411170c0"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0x418e8dc0"/></to>
    </wire>
    <wire loc="128:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x410d6010"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x4112a0e8"/></to>
    </wire>
    <wire loc="140:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconSend" scoped="" ref="0x4125e598"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4112b620"/></to>
    </wire>
    <wire loc="141:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconReceive" scoped="" ref="0x4125ec50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4112bd00"/></to>
    </wire>
    <wire loc="142:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x412a1010"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x4112a0e8"/></to>
    </wire>
    <wire loc="144:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CompareBit" scoped="" ref="0x41298150"/></from>
      <to><interface-ref name="CompareBit" scoped="" ref="0x41126a58"/></to>
    </wire>
    <wire loc="146:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x412a1948"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40fd2448"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40fd2448"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4059d140"/></to>
    </wire>
    <wire loc="147:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x412a05d0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40fd4010"/></to>
    </wire>
    <wire loc="148:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconTimer" scoped="" ref="0x412a0c38"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x410fcb98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x410fcb98"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4095fab8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RouteTimer" scoped="" ref="0x4129dea0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x411369a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x411369a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4095fab8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x41299618"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x40fd81e8"/></to>
    </wire>
    <wire loc="151:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x410cf5b0"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x40fd81e8"/></to>
    </wire>
    <wire loc="152:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x410d29f8"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x412608c8"/></to>
    </wire>
    <wire loc="153:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x41299cb0"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x410a5150"/></to>
    </wire>
    <wire loc="158:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RetxmitTimer" scoped="" ref="0x410dad68"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x41293a70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x41293a70"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4095fab8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CongestionTimer" scoped="" ref="0x410d69f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4128fad0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x4128fad0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4095fab8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x41299220"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40991c40"/></to>
    </wire>
    <wire loc="165:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x410d1c68"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40991c40"/></to>
    </wire>
    <wire loc="168:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x410a5598"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x411b79d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x411b79d8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41930c88"/></to>
    </wire>
    <wire loc="169:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x410a5c50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x411f5e10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x411f5e10"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40fd32c8"/>
      <arguments>
        <value cst="I:113">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404bdd68"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubSnoop" scoped="" ref="0x410a4010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x411ef7f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x411ef7f8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40fd3960"/>
      <arguments>
        <value cst="I:113">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404bdd68"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x410a43c8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x411f8150"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x411f8150"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40fd3cb8"/></to>
    </wire>
    <wire loc="172:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x410d0078"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x412603f0"/></to>
    </wire>
    <wire loc="173:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x410a4a60"/></from>
      <to><interface-ref name="Routing" scoped="" ref="0x41261d60"/></to>
    </wire>
    <wire loc="174:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x410a3050"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40fd4010"/></to>
    </wire>
    <wire loc="175:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x410d1690"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x411f7410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x411f7410"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40fd1140"/></to>
    </wire>
    <wire loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x410d0910"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x411f87e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x411f87e8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40fd2448"/></to>
    </wire>
    <wire loc="177:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x410cfc48"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4055c398"/></to>
    </wire>
    <wire loc="184:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x41124040"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40991c40"/></to>
    </wire>
    <wire loc="186:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x41126df0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4128ae80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x4128ae80"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x419791f0"/></to>
    </wire>
    <wire loc="187:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x41127a58"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x41286ea8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x41286ea8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40fd32c8"/>
      <arguments>
        <value cst="I:112">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404bdd68"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x411272f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41289530"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41289530"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40fd3cb8"/></to>
    </wire>
    <wire loc="189:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubAMPacket" scoped="" ref="0x411285b8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41289bc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41289bc8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40fd2448"/></to>
    </wire>
    <wire loc="203:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x41122cc8"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x41283f00"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40fcff20"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x405a1ce0"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40fd48e8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x405902a8"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40fd3960"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x4058f310"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40fd3cb8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40596328"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40fd16c8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x405a8890"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40fd32c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40590c68"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40fd1140"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405a8308"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x40fd0570"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x405ad320"/></to>
    </wire>
    <wire>
      <from><interface-ref name="sendTask" scoped="" ref="0x410ce890"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CtpPacket" scoped="" ref="0x418e7b48"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x40fe0530"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x4192d420"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x411a5100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x4192dab8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40fd2448"/></to>
    </wire>
    <wire loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x411a5100"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x411bc010"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x411bc780"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40fd48e8"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x411bce28"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40fd2448"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x411bba50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40fd3cb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x411ba190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x411ba5c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x411f4150"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40fd3cb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x411f47e8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40fd2448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x411efb10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40fd3cb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x411ee230"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40fd2448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="updateRouteTask" scoped="" ref="0x412988e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="sendBeaconTask" scoped="" ref="0x412984a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41288870"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40fd1140"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x419798b8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x411a5100"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41978010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40fd2448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41285200"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40fd3cb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41285898"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40fd2448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x412b47b8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4196bcd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x4196bcd8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40fc74e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x4196b640"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40fc9488"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CollectionId" scoped="" ref="0x40fea6c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x419c8de8"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x412fbb78"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x41328b88"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x412a6258"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x412e9a10"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x412a5010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x412fd150"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x412a6c18"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x412e71e8"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x412a43f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x412fd7e8"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x412a5700"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x412e7510"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x412fb7e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x413287f0"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x412f6660"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x412a4928"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x412fdd10"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x412f8a60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x412fc410"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x412f8458"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x412f6158"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x414e7930"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x412f8a60"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4139c108"/></to>
    </wire>
    <wire loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x412f8458"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4138cd10"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x4139c898"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x412f6158"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x41326040"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x412f6660"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x413e48c8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x412f6660"/></to>
    </wire>
    <wire loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x413d5978"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x412f6660"/></to>
    </wire>
    <wire loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x4139cd80"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x41320430"/></to>
    </wire>
    <wire loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x413e4310"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x41322348"/></to>
    </wire>
    <wire loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x4131c790"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x413e2d40"/></to>
    </wire>
    <wire loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x41326d28"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x413e1620"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x413e1620"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x413c7338"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x413d50f0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x413e1aa0"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x413e1aa0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x413c7c28"/></to>
    </wire>
    <wire loc="326:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x413348b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x41353300"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="320:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x413356a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="335:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x41332550"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="receiveTask" scoped="" ref="0x413e3510"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="signalSendDone" scoped="" ref="0x413e3948"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x413c58f0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x413c77a8"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x413c77a8"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x413c0e80"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x413c7c28"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x4142d2b0"/></to>
    </wire>
    <wire loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x413c7338"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x413c0a68"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x413c26f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x413c3878"/></to>
    </wire>
    <wire loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x413c3878"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x41471e68"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4142b0a0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x413c26f0"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x4142db48"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x4141b918"/></to>
    </wire>
    <wire loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x4141b918"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x41415110"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x4142c010"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x4141be28"/></to>
    </wire>
    <wire loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x4141be28"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x41415640"/></to>
    </wire>
    <wire loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x4142c448"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x4141a370"/></to>
    </wire>
    <wire loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x4141a370"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x41415b58"/></to>
    </wire>
    <wire loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x41419a18"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x41413628"/></to>
    </wire>
    <wire loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x41419010"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x41414bb0"/></to>
    </wire>
    <wire loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x41419520"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x41413110"/></to>
    </wire>
    <wire loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x41412208"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x403b4268"/></to>
    </wire>
    <wire loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x41412948"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x4038e680"/></to>
    </wire>
    <wire loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x414ea0e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4146f3c0"/></to>
    </wire>
    <wire loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4146f3c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x414aae40"/></to>
    </wire>
    <wire loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x414a2050"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4146dd20"/></to>
    </wire>
    <wire loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4146dd20"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4145f438"/></to>
    </wire>
    <wire loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x41468090"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x4145d770"/></to>
    </wire>
    <wire loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x41468d80"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x4145c508"/></to>
    </wire>
    <wire loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x41465f20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x41459450"/></to>
    </wire>
    <wire loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x41465f20"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x414560b8"/></to>
    </wire>
    <wire loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x41465f20"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x41455cb0"/></to>
    </wire>
    <wire loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/InitThreeP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x414a8c48"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4146dd20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x414dddf8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x412a5010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x414cc4d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x412a5700"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x414cb170"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x412a43f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x41a3c9a0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x414d76f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41a3b070"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x412a5700"/></to>
    </wire>
    <wire loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x414d76f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x414d4db8"/></to>
    </wire>
    <wire loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x414d3598"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x412a6258"/></to>
    </wire>
    <wire loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x414d3c40"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x412a5700"/></to>
    </wire>
    <wire loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x414d1850"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x412a5010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x414d1f28"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x414d0370"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc" safe="">
      <documentation loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.3 2008/07/07 19:52:52 sallai Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="uAgriC" loc="32:uAgriC.nc">
      <module/>
    </component>
    <component qname="LedsC" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc" safe="">
      <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageC" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.h">
        <short>&#10; The number of alarm ticks per one microsecond (0.9216)&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="RF230ActiveMessageP" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <module/>
    </component>
    <component qname="RF230PacketC" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <configuration/>
    </component>
    <component qname="RF230PacketP" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <module/>
    </component>
    <component qname="IEEE154PacketC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <configuration/>
    </component>
    <component qname="IEEE154PacketP" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketP.nc">
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalTimeMicroC" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer1P" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc" safe="">
      <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="35(InitOneP.InitOne):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="33(CounterOne16C.NCounter):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TOne" ref="0x403742f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.TransformCounterC" loc="43(LocalTimeMicroC.TransformCounterC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMicroC.CounterToLocalTimeC" loc="35(LocalTimeMicroC.CounterToLocalTimeC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
        <short>&#10; Provide current time via the LocalTime&#60;TMilli> interface.</short>
        <long>&#10; Provide current time via the LocalTime&#60;TMilli> interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="47(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="47(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x407849d8"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmP.nc">
      <module/>
    </component>
    <component qname="TaskletC" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TaskletC.nc">
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <module/>
    </component>
    <component qname="IEEE154NetworkLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <configuration/>
    </component>
    <component qname="IEEE154NetworkLayerP" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <module/>
    </component>
    <component qname="RF230ActiveMessageC.LowPowerListeningLayerC" loc="24(RF230ActiveMessageC.LowPowerListeningLayerC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DummyLayerP" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerP.nc">
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="UniqueLayerC.NeighborhoodFlagC" loc="24(UniqueLayerC.NeighborhoodFlagC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TrafficMonitorLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <configuration/>
    </component>
    <component qname="TrafficMonitorLayerP" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <module/>
    </component>
    <component qname="TrafficMonitorLayerC.UpdateTimerC" loc="36(TrafficMonitorLayerC.UpdateTimerC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TrafficMonitorLayerC.NeighborhoodFlagC" loc="24(TrafficMonitorLayerC.NeighborhoodFlagC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlagC.nc">
      <instance number="1">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <module/>
    </component>
    <component qname="RandomC" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <documentation loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <configuration/>
    </component>
    <component qname="SoftwareAckLayerP" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <module/>
    </component>
    <component qname="RF230ActiveMessageC.CsmaLayerC" loc="24(RF230ActiveMessageC.CsmaLayerC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RF230LayerC" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <configuration/>
    </component>
    <component qname="RF230LayerP" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <module/>
    </component>
    <component qname="HplRF230C" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <configuration/>
    </component>
    <component qname="HplRF230P" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <module/>
    </component>
    <component qname="Atm128SpiC" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.5 2008/04/24 22:31:25 mmaroti Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.9 2008/06/23 20:25:15 regehr Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="73(Atm128SpiC.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="32(Atm128SpiC.Arbiter.Queue):/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplRF230C.AlarmC" loc="28(HplRF230C.AlarmC):/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplRF230C.AlarmC.NAlarm" loc="42(HplRF230C.AlarmC.NAlarm):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TOne" ref="0x403742f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/BusyWaitMicroC.nc">
      <module/>
    </component>
    <component qname="SamplerC" loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <configuration/>
    </component>
    <component qname="SamplerM" loc="4:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <module/>
    </component>
    <component qname="SamplerC.TimerMilliC" loc="36(SamplerC.TimerMilliC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SamplerC.VoltageC" loc="29(SamplerC.VoltageC):/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageC.nc">
      <documentation loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VoltageC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SamplerC.VoltageC.AdcReadClientC" loc="21(SamplerC.VoltageC.AdcReadClientC):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc" safe="">
      <documentation loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega1281 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega1281 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega1281 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega1281 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="79(Atm128AdcC.AdcArbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="32(Atm128AdcC.AdcArbiter.Queue):/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2008/06/26 04:39:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="57(Atm128AdcC.PM):/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="48(Atm128AdcC.PM.PowerManager):/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc" safe="">
      <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="VoltageP" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageP.nc">
      <documentation loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageP.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SamplerC.TempHumC" loc="15(SamplerC.TempHumC):/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SensirionSht15C.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SensirionSht15C.nc">
        <short>&#10; SensirionSht15C is a top-level access component for the Sensirion&#10; SHT15 model humidity and temperature sensor, available on the&#10; mda300ca sensorboard.</short>
        <long>&#10; SensirionSht15C is a top-level access component for the Sensirion&#10; SHT15 model humidity and temperature sensor, available on the&#10; mda300ca sensorboard. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. &#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @author Phil Buonadonna &#60;pbuonadonna@archrock.com>&#10; @author Gilman Tolles &#60;gtolle@archrock.com>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht15C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SamplerC.TempHumC.SensirionSht15ReaderP" loc="16(SamplerC.TempHumC.SensirionSht15ReaderP):/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc">
      <instance number="0">
        <component-ref qname="SensirionSht15ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht15C" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
        <short>&#10; HalSensirionSht15C is an advanced access component for the&#10; Sensirion SHT15 model humidity and temperature sensor, available on&#10; the mda300CA sensor board.</short>
        <long>&#10; HalSensirionSht15C is an advanced access component for the&#10; Sensirion SHT15 model humidity and temperature sensor, available on&#10; the mda300CA sensor board. This component provides the SensirionSht15&#10; interface, which offers full control over the device. Please&#10; acquire the Resource before using it.&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @author Phil Buonadonna &#60;pbuonadonna@archrock.com>&#10; @version $Revision: 1.0 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HalSensirionSht15C.SensirionSht15LogicP" loc="24(HalSensirionSht15C.SensirionSht15LogicP):/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
        <short>&#10; SensirionSht15LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT15 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht15LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT15 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht15 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT15 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.0 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht15LogicP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht15C" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/mda300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; Revision: $Revision: 1.0 $&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MicaBusC" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus. Just provides the PW0-PW7 and Int0-3 digital&#10; I/O pins and returns the ADC channel number for the ADC pins.&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MicaBusP" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
        <short>&#10; Internal component of the simplistic mica bus interface.</short>
        <long>&#10; Internal component of the simplistic mica bus interface.&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht15C.Int" loc="6(HplSensirionSht15C.Int):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="30(HplAtm128InterruptC.IntPin0):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="30(HplAtm128InterruptC.IntPin1):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="30(HplAtm128InterruptC.IntPin2):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="30(HplAtm128InterruptC.IntPin3):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:105">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="30(HplAtm128InterruptC.IntPin4):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="30(HplAtm128InterruptC.IntPin5):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="30(HplAtm128InterruptC.IntPin6):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="30(HplAtm128InterruptC.IntPin7):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht15P" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15P.nc">
      <documentation loc="4:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15P.nc">
        <short>&#10; HplSensirionSht15P is a low-level component that controls power for&#10; the Sensirion SHT15 sensor on the mda300CA sensor board&#10;&#10; </short>
        <long>&#10; HplSensirionSht15P is a low-level component that controls power for&#10; the Sensirion SHT15 sensor on the mda300CA sensor board&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @author Phil Buonadonna &#60;pbuonadonna@archrock.com>&#10; @version $Revision: 1.0 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht15C.TimerMilliC" loc="36(HplSensirionSht15C.TimerMilliC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht15C.Arbiter" loc="73(HplSensirionSht15C.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Sht15.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht15C.Arbiter.Queue" loc="32(HplSensirionSht15C.Arbiter.Queue):/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht15C.Arbiter.Arbiter" loc="49(HplSensirionSht15C.Arbiter.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht15C.TimerMilliC" loc="36(HalSensirionSht15C.TimerMilliC):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="NoLedsC" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoLedsC.nc">
      <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SamplerC.DioC" loc="10(SamplerC.DioC):/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalC.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalC.nc">
        <short>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="MDA300DigitalC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HalMDA300DigitalC" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
        <short>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MDA300DigitalLogicP" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
        <short>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMDA300DigitalC" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300DigitalC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMDA300DigitalC.I2C" loc="43(HplMDA300DigitalC.I2C):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter" loc="79(Atm128I2CMasterP.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128I2CMasterC.I2CPacket">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Queue" loc="32(Atm128I2CMasterP.Arbiter.Queue):/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Arbiter" loc="52(Atm128I2CMasterP.Arbiter.Arbiter):/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Power" loc="48(Atm128I2CMasterP.Power):/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.I2C" loc="40(Atm128I2CMasterP.I2C):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Master" loc="44(Atm128I2CMasterP.Master):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10;&#10; @version $Id: Atm128I2CMasterPacketP.nc,v 1.7 2007/11/01 18:10:36 fredjiang Exp $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterPacketP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128I2CBusC" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version    $Id: HplAtm128I2CBusC.nc,v 1.4 2006/12/12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128I2CBusP" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version $Id: HplAtm128I2CBusP.nc,v 1.4 2006/12/12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMDA300DigitalC.WarmupTimer" loc="36(HplMDA300DigitalC.WarmupTimer):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SamplerC.IBADC" loc="10(SamplerC.IBADC):/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="MDA300IBADCC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HalMDA300IBADCC" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MDA300IBADCLogicP" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MDA300IBADCSwitchC" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchC.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchC.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MDA300IBADCSwitchC.I2C" loc="43(MDA300IBADCSwitchC.I2C):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MDA300IBADCSwitchP" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchP.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchP.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the&#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the&#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMDA300IBADCC" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMDA300IBADCC.I2C" loc="43(HplMDA300IBADCC.I2C):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplMDA300IBADCC.WarmupTimer" loc="36(HplMDA300IBADCC.WarmupTimer):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplMDA300IBADCP" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SamplerC.CounterC" loc="10(SamplerC.CounterC):/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterC.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterC.nc">
        <short>&#10; MDA300CounterC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300CounterC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="MDA300CounterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HalMDA300CounterC" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
        <short>&#10; MDA300CounterC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300CounterC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MDA300CounterLogicP" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
        <short>&#10; MDA300CounterC is a top-level access component for the&#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300CounterC is a top-level access component for the&#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMDA300CounterC" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300CounterC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMDA300CounterC.I2C" loc="43(HplMDA300CounterC.I2C):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CollectionC" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
        <short>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.</short>
        <long>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.&#10;&#10; @author Rodrigo Fonseca&#10; @author Omprakash Gnawali&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CtpP" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
        <short>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.</short>
        <long>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.&#10;&#10; @author Rodrigo Fonseca&#10; @author Omprakash Gnawali&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CtpP.Forwarder" loc="129(CtpP.Forwarder):/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <instance number="0">
        <component-ref qname="CtpForwardingEngineP"/>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.MessagePoolP" loc="41(CtpP.MessagePoolP):/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
            <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.MessagePoolP.PoolP" loc="53(CtpP.MessagePoolP.PoolP):/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2008/06/16 18:58:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x410c9b50"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.QEntryPoolP" loc="41(CtpP.QEntryPoolP):/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40ffc2f8"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x40ffc580"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.QEntryPoolP.PoolP" loc="53(CtpP.QEntryPoolP.PoolP):/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2008/06/16 18:58:15 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x410c9b50"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SendQueueP" loc="42(CtpP.SendQueueP):/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2008/05/31 20:27:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40ffc2f8"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x40ffc580"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:13">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SentCacheP" loc="38(CtpP.SentCacheP):/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
        <short>&#10; An LRU cache CTP packet instances, where insertion represents use.</short>
        <long>&#10; An LRU cache CTP packet instances, where insertion represents use.&#10;&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruCtpMsgCacheC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SentCacheP.CacheP" loc="43(CtpP.SentCacheP.CacheP):/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
        <short>&#10; An LRU cache that stores the signature of a CTP packet instance.</short>
        <long>&#10; An LRU cache that stores the signature of a CTP packet instance.&#10; An insert operation indicates &#34;use&#34;.  Inserting an element not in&#10; the cache will replace the oldest, and inserting an element already&#10; in the cache will refresh its age.&#10;&#10; @author Philip Levis &#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruCtpMsgCacheP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.RoutingBeaconTimer" loc="36(CtpP.RoutingBeaconTimer):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.RouteUpdateTimer" loc="36(CtpP.RouteUpdateTimer):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LinkEstimatorP" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <module/>
    </component>
    <component qname="CtpP.AMSenderC" loc="39(CtpP.AMSenderC):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.AMQueueEntryP" loc="35(CtpP.AMSenderC.AMQueueEntryP):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404bdd68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="37(AMQueueP.AMQueueImplP):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.AMReceiverC" loc="35(CtpP.AMReceiverC):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSnooperC" loc="36(CtpP.AMSnooperC):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSnooperC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSnooperC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.Router" loc="96(CtpP.Router):/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
        <short> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.</short>
        <long> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.  It builds a set of trees rooted at specific nodes (roots) and&#10;  maintains these trees using information provided by the link estimator on&#10;  the quality of one hop links.&#10; &#10;  &#60;p>Each node is part of only one tree at any given time, but there is no&#10;  difference from the node's point of view of which tree it is part. In other&#10;  words, a message is sent towards &#60;i>a&#60;/i> root, but which one is not&#10;  specified. It is assumed that the roots will work together to have all data&#10;  aggregated later if need be.  The tree routing engine's responsibility is&#10;  for each node to find the path with the least number of transmissions to&#10;  any one root.&#10;&#10;  &#60;p>The tree is proactively maintained by periodic beacons sent by each&#10;  node. These beacons are jittered in time to prevent synchronizations in the&#10;  network. All nodes maintain the same &#60;i>average&#60;/i> beacon sending rate&#10;  (defined by BEACON_INTERVAL +- 50%). The beacon contains the node's parent,&#10;  the current hopcount, and the cumulative path quality metric. The metric is&#10;  defined as the parent's metric plus the bidirectional quality of the link&#10;  between the current node and its parent.  The metric represents the&#10;  expected number of transmissions along the path to the root, and is 0 by&#10;  definition at the root.&#10; &#10;  &#60;p>Every time a node receives an update from a neighbor it records the&#10;  information if the node is part of the neighbor table. The neighbor table&#10;  keeps the best candidates for being parents i.e., the nodes with the best&#10;  path metric. The neighbor table does not store the full path metric,&#10;  though. It stores the parent's path metric, and the link quality to the&#10;  parent is only added when the information is needed: (i) when choosing a&#10;  parent and (ii) when choosing a route. The nodes in the neighbor table are&#10;  a subset of the nodes in the link estimator table, as a node is not&#10;  admitted in the neighbor table with an estimate of infinity.&#10; &#10;  &#60;p>There are two uses for the neighbor table, as mentioned above. The first&#10;  one is to select a parent. The parent is just the neighbor with the best&#10;  path metric. It serves to define the node's own path metric and hopcount,&#10;  and the set of child-parent links is what defines the tree. In a sense the&#10;  tree is defined to form a coherent propagation substrate for the path&#10;  metrics. The parent is (re)-selected periodically, immediately before a&#10;  node sends its own beacon, in the updateRouteTask.&#10;  &#10;  &#60;p>The second use is to actually choose a next hop towards any root at&#10;  message forwarding time.  This need not be the current parent, even though&#10;  it is currently implemented as such.&#10;&#10;  &#60;p>The operation of the routing engine has two main tasks and one main&#10;  event: updateRouteTask is called periodically and chooses a new parent;&#10;  sendBeaconTask broadcasts the current route information to the neighbors.&#10;  The main event is the receiving of a neighbor's beacon, which updates the&#10;  neighbor table.&#10;  &#10;  &#60;p> The interface with the ForwardingEngine occurs through the nextHop()&#10;  call.&#10; &#10;  &#60;p> Any node can become a root, and routed messages from a subset of the&#10;  network will be routed towards it. The RootControl interface allows&#10;  setting, unsetting, and querying the root state of a node. By convention,&#10;  when a node is root its hopcount and metric are 0, and the parent is&#10;  itself. A root always has a valid route, to itself.&#10;&#10;  @author Rodrigo Fonseca&#10;  @author Philip Levis (added trickle-like updates)&#10;  Acknowledgment: based on MintRoute, MultiHopLQI, BVR tree construction, Berkeley's MTree&#10;                           &#10;  @date   $Date: 2008/06/04 04:30:41 $&#10;  @see Net2-WG&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CtpRoutingEngineP"/>
        <arguments>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:128">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:512000">
            <type-int cname="long" size="I:4" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.RetxmitTimer" loc="36(CtpP.RetxmitTimer):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.CongestionTimer" loc="36(CtpP.CongestionTimer):/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl" loc="39(CtpP.SendControl):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:112">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.AMQueueEntryP" loc="35(CtpP.SendControl.AMQueueEntryP):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404bdd68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.ReceiveControl" loc="35(CtpP.ReceiveControl):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:112">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DummyActiveMessageP" loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/DummyActiveMessageP.nc">
      <module/>
    </component>
    <component qname="uAgriAppC.CollectionSenderC" loc="43(uAgriAppC.CollectionSenderC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionSenderC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionSenderC.nc">
        <short>&#10; The virtualized collection sender abstraction.</short>
        <long>&#10; The virtualized collection sender abstraction.&#10;&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10; @date April 25 2006&#10; @see TinyOS Net2-WG&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CollectionSenderC"/>
        <arguments>
          <value cst="I:51">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="uAgriAppC.CollectionSenderC.CollectionSenderP" loc="34(uAgriAppC.CollectionSenderC.CollectionSenderP):/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionSenderP.nc">
      <instance number="0">
        <component-ref qname="CollectionSenderP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x404b1b20"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="uAgriAppC.CollectionSenderC.CollectionSenderP.CollectionIdP" loc="45(uAgriAppC.CollectionSenderC.CollectionSenderP.CollectionIdP):/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionIdP.nc">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionIdP.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006/12/12 18:23:28 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CollectionIdP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x404b1b20"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="34(SerialActiveMessageC.AM):/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="37(SerialDispatcherC.SerialDispatcherP):/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:42 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008/06/23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <documentation loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <documentation loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
        <short>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterThree16C" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
        <short>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit microsecond Counter component as per TEP102 HAL guidelines. The&#10; mica family microsecond clock is built on hardware timer 3, and actually&#10; runs at CPU frequency / 8. You can use the MeasureClockC.cyclesPerJiffy() &#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer3C" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
        <short>&#10; HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer3P" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc" safe="">
      <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega1281 timer 3.</short>
        <long>&#10; Internal component of the HPL interface to Atmega1281 timer 3.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitThreeP.InitThree" loc="35(InitThreeP.InitThree):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterThree16C.NCounter" loc="33(CounterThree16C.NCounter):/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TThree" ref="0x40374518"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMicro32C.Transform32" loc="43(CounterMicro32C.Transform32):/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TThree" ref="0x40374518"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_three_overflow_t" ref="0x40374af0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="uAgriAppC.SerialAMSenderC" loc="39(uAgriAppC.SerialAMSenderC):/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:51">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="uAgriAppC.SerialAMSenderC.AMQueueEntryP" loc="35(uAgriAppC.SerialAMSenderC.AMQueueEntryP):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404bdd68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="37(SerialAMQueueP.AMQueueImplP):/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="uAgriAppC.UARTMessagePoolP" loc="41(uAgriAppC.UARTMessagePoolP):/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
            <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
          </type-tag>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="uAgriAppC.UARTMessagePoolP.PoolP" loc="53(uAgriAppC.UARTMessagePoolP.PoolP):/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2008/06/16 18:58:15 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x410c9b50"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="uAgriAppC.UARTQueueP" loc="42(uAgriAppC.UARTQueueP):/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2008/05/31 20:27:07 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
              <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x403edbf0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x403ede08" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x403ea030" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x403eff18" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x403f6158" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x403f6380" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x403f6570" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x404473d0" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x404475f8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40447820" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x40447a10" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40740348" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40740348"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x40740568" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40744ea8" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40744ea8"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x4074e348" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4074e348"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40758010" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40758010"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x40758470" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x40758470"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x407586d8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x407586d8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40758b48" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40758b48"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x40758db0" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x40756258" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x40756258"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4075f860" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4075f860"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x407849d8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x407849d8"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40784b98" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40795c88" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40795c88"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40795e48" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x407769d0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x407769d0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4082d010" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4082d010"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x4082d1f0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="NeighborhoodFlagC" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimerMilliC" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x40acce50" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x40aedd90" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmC" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x40b23b48" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x40b23b48"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40b20010" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40b20010"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x40b201d0" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="VoltageC" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageC.nc" abstract="">
      <documentation loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x40c32858" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2008/06/26 04:39:15 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x40c36b20" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x40c4e528" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x40c97940" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x40c97940"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht15C" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SensirionSht15C.nc" abstract="">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SensirionSht15C.nc">
        <short>&#10; SensirionSht15C is a top-level access component for the Sensirion&#10; SHT15 model humidity and temperature sensor, available on the&#10; mda300ca sensorboard.</short>
        <long>&#10; SensirionSht15C is a top-level access component for the Sensirion&#10; SHT15 model humidity and temperature sensor, available on the&#10; mda300ca sensorboard. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. &#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @author Phil Buonadonna &#60;pbuonadonna@archrock.com>&#10; @author Gilman Tolles &#60;gtolle@archrock.com>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SensirionSht15ReaderP" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht15LogicP" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc" abstract="">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
        <short>&#10; SensirionSht15LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT15 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht15LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT15 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht15 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT15 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.0 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x40d67388" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x40d675b0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x40d677d8" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x40d679c8" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="MDA300DigitalC" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalC.nc" abstract="">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalC.nc">
        <short>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterC" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc" abstract="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsArbiterC" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x40e2c758" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterImplP" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc" abstract="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterPacketP" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc" abstract="">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10;&#10; @version $Id: Atm128I2CMasterPacketP.nc,v 1.7 2007/11/01 18:10:36 fredjiang Exp $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MDA300IBADCC" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc" abstract="">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MDA300CounterC" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterC.nc" abstract="">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterC.nc">
        <short>&#10; MDA300CounterC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300CounterC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="CtpForwardingEngineP" loc="129:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc" abstract="">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006/12/12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x410c9b50" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x410c9b50"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x410c9d70" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc" abstract="">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2008/06/16 18:58:15 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x410c1058" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x410c1058"/></type-var>
        </typedef>
        <constant name="size" ref="0x410c1248" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2008/05/31 20:27:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x410ec970" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x410ec970"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x410ecb98" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="LruCtpMsgCacheC" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/LruCtpMsgCacheC.nc" abstract="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
        <short>&#10; An LRU cache CTP packet instances, where insertion represents use.</short>
        <long>&#10; An LRU cache CTP packet instances, where insertion represents use.&#10;&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="CACHE_SIZE" ref="0x410dbe30" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
          <component-ref qname="LruCtpMsgCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="LruCtpMsgCacheP" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/LruCtpMsgCacheP.nc" abstract="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
        <short>&#10; An LRU cache that stores the signature of a CTP packet instance.</short>
        <long>&#10; An LRU cache that stores the signature of a CTP packet instance.&#10; An insert operation indicates &#34;use&#34;.  Inserting an element not in&#10; the cache will replace the oldest, and inserting an element already&#10; in the cache will refresh its age.&#10;&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x411158c8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
          <component-ref qname="LruCtpMsgCacheP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x411b6368" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404bdd68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x411b4e40" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404bdd68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x411a4600" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x411f66f8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404bdd68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSnooperC" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSnooperC.nc" abstract="">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x411ed0b8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSnooperC.nc">
          <component-ref qname="AMSnooperC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404bdd68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CtpRoutingEngineP" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc" abstract="">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
        <short> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.</short>
        <long> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.  It builds a set of trees rooted at specific nodes (roots) and&#10;  maintains these trees using information provided by the link estimator on&#10;  the quality of one hop links.&#10; &#10;  &#60;p>Each node is part of only one tree at any given time, but there is no&#10;  difference from the node's point of view of which tree it is part. In other&#10;  words, a message is sent towards &#60;i>a&#60;/i> root, but which one is not&#10;  specified. It is assumed that the roots will work together to have all data&#10;  aggregated later if need be.  The tree routing engine's responsibility is&#10;  for each node to find the path with the least number of transmissions to&#10;  any one root.&#10;&#10;  &#60;p>The tree is proactively maintained by periodic beacons sent by each&#10;  node. These beacons are jittered in time to prevent synchronizations in the&#10;  network. All nodes maintain the same &#60;i>average&#60;/i> beacon sending rate&#10;  (defined by BEACON_INTERVAL +- 50%). The beacon contains the node's parent,&#10;  the current hopcount, and the cumulative path quality metric. The metric is&#10;  defined as the parent's metric plus the bidirectional quality of the link&#10;  between the current node and its parent.  The metric represents the&#10;  expected number of transmissions along the path to the root, and is 0 by&#10;  definition at the root.&#10; &#10;  &#60;p>Every time a node receives an update from a neighbor it records the&#10;  information if the node is part of the neighbor table. The neighbor table&#10;  keeps the best candidates for being parents i.e., the nodes with the best&#10;  path metric. The neighbor table does not store the full path metric,&#10;  though. It stores the parent's path metric, and the link quality to the&#10;  parent is only added when the information is needed: (i) when choosing a&#10;  parent and (ii) when choosing a route. The nodes in the neighbor table are&#10;  a subset of the nodes in the link estimator table, as a node is not&#10;  admitted in the neighbor table with an estimate of infinity.&#10; &#10;  &#60;p>There are two uses for the neighbor table, as mentioned above. The first&#10;  one is to select a parent. The parent is just the neighbor with the best&#10;  path metric. It serves to define the node's own path metric and hopcount,&#10;  and the set of child-parent links is what defines the tree. In a sense the&#10;  tree is defined to form a coherent propagation substrate for the path&#10;  metrics. The parent is (re)-selected periodically, immediately before a&#10;  node sends its own beacon, in the updateRouteTask.&#10;  &#10;  &#60;p>The second use is to actually choose a next hop towards any root at&#10;  message forwarding time.  This need not be the current parent, even though&#10;  it is currently implemented as such.&#10;&#10;  &#60;p>The operation of the routing engine has two main tasks and one main&#10;  event: updateRouteTask is called periodically and chooses a new parent;&#10;  sendBeaconTask broadcasts the current route information to the neighbors.&#10;  The main event is the receiving of a neighbor's beacon, which updates the&#10;  neighbor table.&#10;  &#10;  &#60;p> The interface with the ForwardingEngine occurs through the nextHop()&#10;  call.&#10; &#10;  &#60;p> Any node can become a root, and routed messages from a subset of the&#10;  network will be routed towards it. The RootControl interface allows&#10;  setting, unsetting, and querying the root state of a node. By convention,&#10;  when a node is root its hopcount and metric are 0, and the parent is&#10;  itself. A root always has a valid route, to itself.&#10;&#10;  @author Rodrigo Fonseca&#10;  @author Philip Levis (added trickle-like updates)&#10;  Acknowledgment: based on MintRoute, MultiHopLQI, BVR tree construction, Berkeley's MTree&#10;                           &#10;  @date   $Date: 2008/06/04 04:30:41 $&#10;  @see Net2-WG&#10;</long>
      </documentation>
      <parameters>
        <constant name="routingTableSize" ref="0x411e2198" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
        <constant name="minInterval" ref="0x411e23d8" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </constant>
        <constant name="maxInterval" ref="0x411e2618" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CollectionSenderC" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionSenderC.nc" abstract="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionSenderC.nc">
        <short>&#10; The virtualized collection sender abstraction.</short>
        <long>&#10; The virtualized collection sender abstraction.&#10;&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10; @date April 25 2006&#10; @see TinyOS Net2-WG&#10;</long>
      </documentation>
      <parameters>
        <constant name="collectid" ref="0x412b5560" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionSenderC.nc">
          <component-ref qname="CollectionSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x404b1b20"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CollectionSenderP" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionSenderP.nc" abstract="">
      <parameters>
        <constant name="collectid" ref="0x412af068" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionSenderP.nc">
          <component-ref qname="CollectionSenderP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x404b1b20"/></typename>
          </type-int>
        </constant>
        <constant name="clientid" ref="0x412af280" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionSenderP.nc">
          <component-ref qname="CollectionSenderP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CollectionIdP" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionIdP.nc" abstract="">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionIdP.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006/12/12 18:23:28 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="collectid" ref="0x412add50" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionIdP.nc">
          <component-ref qname="CollectionIdP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x404b1b20"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008/06/23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x414dc010" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404bdd68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x403b0258" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x403b0258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403b0430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x403b25f0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x403b25f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x403b27c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x403b49c8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x403b49c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403b4ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x403af868" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403af868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403afa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x403b4268" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x403b4268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x403b4440"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x403b4520"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x403b4600"/>
        <function-ref name="actualMicro" scoped="" ref="0x403b46e0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x403b47c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x403bc088" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x403bc088"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403bc260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x403aec68" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403aec68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403aee40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x403bc490" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x403bc490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403bc668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x403b7ac8" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x403b7ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403b7ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x403b76f8" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x403b76f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403b78d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x403be668" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x403be668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403be840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x403c5be8" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x403c5be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c5dc0"/>
        <function-ref name="isInput" scoped="" ref="0x403c5ea0"/>
        <function-ref name="toggle" scoped="" ref="0x403be010"/>
        <function-ref name="isOutput" scoped="" ref="0x403be0f0"/>
        <function-ref name="get" scoped="" ref="0x403be1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403be2b0"/>
        <function-ref name="set" scoped="" ref="0x403be390"/>
        <function-ref name="clr" scoped="" ref="0x403be470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x403c1690" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x403c1690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403c1868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x403e72f0" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x403e72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e76c8"/>
        <function-ref name="isInput" scoped="" ref="0x403e77a8"/>
        <function-ref name="toggle" scoped="" ref="0x403e7888"/>
        <function-ref name="isOutput" scoped="" ref="0x403e7968"/>
        <function-ref name="get" scoped="" ref="0x403e7a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e7b28"/>
        <function-ref name="set" scoped="" ref="0x403e7c08"/>
        <function-ref name="clr" scoped="" ref="0x403e7ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x403d9830" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x403d9830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d9a08"/>
        <function-ref name="isInput" scoped="" ref="0x403d9ae8"/>
        <function-ref name="toggle" scoped="" ref="0x403d9bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x403d9ca8"/>
        <function-ref name="get" scoped="" ref="0x403d9d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d9e68"/>
        <function-ref name="set" scoped="" ref="0x403d8010"/>
        <function-ref name="clr" scoped="" ref="0x403d80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x403ddea8" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x403ddea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403dc0c0"/>
        <function-ref name="isInput" scoped="" ref="0x403dc1a0"/>
        <function-ref name="toggle" scoped="" ref="0x403dc280"/>
        <function-ref name="isOutput" scoped="" ref="0x403dc360"/>
        <function-ref name="get" scoped="" ref="0x403dc440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403dc520"/>
        <function-ref name="set" scoped="" ref="0x403dc600"/>
        <function-ref name="clr" scoped="" ref="0x403dc6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x403e10a0" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x403e10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e1278"/>
        <function-ref name="isInput" scoped="" ref="0x403e1358"/>
        <function-ref name="toggle" scoped="" ref="0x403e1438"/>
        <function-ref name="isOutput" scoped="" ref="0x403e1518"/>
        <function-ref name="get" scoped="" ref="0x403e15f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e16d8"/>
        <function-ref name="set" scoped="" ref="0x403e17b8"/>
        <function-ref name="clr" scoped="" ref="0x403e1898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x403c84b0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x403c84b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c8688"/>
        <function-ref name="isInput" scoped="" ref="0x403c8768"/>
        <function-ref name="toggle" scoped="" ref="0x403c8848"/>
        <function-ref name="isOutput" scoped="" ref="0x403c8928"/>
        <function-ref name="get" scoped="" ref="0x403c8a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c8ae8"/>
        <function-ref name="set" scoped="" ref="0x403c8bc8"/>
        <function-ref name="clr" scoped="" ref="0x403c8ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x403e3c08" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x403e3c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e3de0"/>
        <function-ref name="isInput" scoped="" ref="0x403e3ec0"/>
        <function-ref name="toggle" scoped="" ref="0x403e2010"/>
        <function-ref name="isOutput" scoped="" ref="0x403e20f0"/>
        <function-ref name="get" scoped="" ref="0x403e21d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e22b0"/>
        <function-ref name="set" scoped="" ref="0x403e2390"/>
        <function-ref name="clr" scoped="" ref="0x403e2470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x403d08e0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x403d08e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d0ab8"/>
        <function-ref name="isInput" scoped="" ref="0x403d0b98"/>
        <function-ref name="toggle" scoped="" ref="0x403d0c78"/>
        <function-ref name="isOutput" scoped="" ref="0x403d0d58"/>
        <function-ref name="get" scoped="" ref="0x403d0e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d0f18"/>
        <function-ref name="set" scoped="" ref="0x403cf010"/>
        <function-ref name="clr" scoped="" ref="0x403cf0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x403d30a0" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x403d30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d3278"/>
        <function-ref name="isInput" scoped="" ref="0x403d3358"/>
        <function-ref name="toggle" scoped="" ref="0x403d3438"/>
        <function-ref name="isOutput" scoped="" ref="0x403d3518"/>
        <function-ref name="get" scoped="" ref="0x403d35f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d36d8"/>
        <function-ref name="set" scoped="" ref="0x403d37b8"/>
        <function-ref name="clr" scoped="" ref="0x403d3898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x403d7750" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x403d7750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d7928"/>
        <function-ref name="isInput" scoped="" ref="0x403d7a08"/>
        <function-ref name="toggle" scoped="" ref="0x403d7ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403d7bc8"/>
        <function-ref name="get" scoped="" ref="0x403d7ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d7d88"/>
        <function-ref name="set" scoped="" ref="0x403d7e68"/>
        <function-ref name="clr" scoped="" ref="0x403d6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x403dbce8" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x403dbce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403dbec0"/>
        <function-ref name="isInput" scoped="" ref="0x403e4010"/>
        <function-ref name="toggle" scoped="" ref="0x403e40f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403e41d0"/>
        <function-ref name="get" scoped="" ref="0x403e42b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e4390"/>
        <function-ref name="set" scoped="" ref="0x403e4470"/>
        <function-ref name="clr" scoped="" ref="0x403e4550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x403cb120" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x403cb120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403cb2f8"/>
        <function-ref name="isInput" scoped="" ref="0x403cb3d8"/>
        <function-ref name="toggle" scoped="" ref="0x403cb4b8"/>
        <function-ref name="isOutput" scoped="" ref="0x403cb598"/>
        <function-ref name="get" scoped="" ref="0x403cb678"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cb758"/>
        <function-ref name="set" scoped="" ref="0x403cb838"/>
        <function-ref name="clr" scoped="" ref="0x403cb918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x403ce750" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x403ce750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ce928"/>
        <function-ref name="isInput" scoped="" ref="0x403cea08"/>
        <function-ref name="toggle" scoped="" ref="0x403ceae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403cebc8"/>
        <function-ref name="get" scoped="" ref="0x403ceca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ced88"/>
        <function-ref name="set" scoped="" ref="0x403cee68"/>
        <function-ref name="clr" scoped="" ref="0x403cd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x403d2ea8" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x403d2ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d10c0"/>
        <function-ref name="isInput" scoped="" ref="0x403d11a0"/>
        <function-ref name="toggle" scoped="" ref="0x403d1280"/>
        <function-ref name="isOutput" scoped="" ref="0x403d1360"/>
        <function-ref name="get" scoped="" ref="0x403d1440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d1520"/>
        <function-ref name="set" scoped="" ref="0x403d1600"/>
        <function-ref name="clr" scoped="" ref="0x403d16e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x403df670" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x403df670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403df848"/>
        <function-ref name="isInput" scoped="" ref="0x403df928"/>
        <function-ref name="toggle" scoped="" ref="0x403dfa08"/>
        <function-ref name="isOutput" scoped="" ref="0x403dfae8"/>
        <function-ref name="get" scoped="" ref="0x403dfbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403dfca8"/>
        <function-ref name="set" scoped="" ref="0x403dfd88"/>
        <function-ref name="clr" scoped="" ref="0x403dfe68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x403e0ea8" loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x403e0ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e80c0"/>
        <function-ref name="isInput" scoped="" ref="0x403e81a0"/>
        <function-ref name="toggle" scoped="" ref="0x403e8280"/>
        <function-ref name="isOutput" scoped="" ref="0x403e8360"/>
        <function-ref name="get" scoped="" ref="0x403e8440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e8520"/>
        <function-ref name="set" scoped="" ref="0x403e8600"/>
        <function-ref name="clr" scoped="" ref="0x403e86e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x403e53d0" loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x403e53d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e55a8"/>
        <function-ref name="isInput" scoped="" ref="0x403e5688"/>
        <function-ref name="toggle" scoped="" ref="0x403e5768"/>
        <function-ref name="isOutput" scoped="" ref="0x403e5848"/>
        <function-ref name="get" scoped="" ref="0x403e5928"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e5a08"/>
        <function-ref name="set" scoped="" ref="0x403e5ae8"/>
        <function-ref name="clr" scoped="" ref="0x403e5bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x403dea98" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x403dea98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403dec70"/>
        <function-ref name="isInput" scoped="" ref="0x403ded50"/>
        <function-ref name="toggle" scoped="" ref="0x403dee30"/>
        <function-ref name="isOutput" scoped="" ref="0x403def10"/>
        <function-ref name="get" scoped="" ref="0x403dd010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403dd0f0"/>
        <function-ref name="set" scoped="" ref="0x403dd1d0"/>
        <function-ref name="clr" scoped="" ref="0x403dd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x403c9010" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x403c9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c91e8"/>
        <function-ref name="isInput" scoped="" ref="0x403c92c8"/>
        <function-ref name="toggle" scoped="" ref="0x403c93a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403c9488"/>
        <function-ref name="get" scoped="" ref="0x403c9568"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c9648"/>
        <function-ref name="set" scoped="" ref="0x403c9728"/>
        <function-ref name="clr" scoped="" ref="0x403c9808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x403cc750" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x403cc750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403cc928"/>
        <function-ref name="isInput" scoped="" ref="0x403cca08"/>
        <function-ref name="toggle" scoped="" ref="0x403ccae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403ccbc8"/>
        <function-ref name="get" scoped="" ref="0x403ccca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ccd88"/>
        <function-ref name="set" scoped="" ref="0x403cce68"/>
        <function-ref name="clr" scoped="" ref="0x403d5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x403e7ee8" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x403e7ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e60e0"/>
        <function-ref name="isInput" scoped="" ref="0x403e61c0"/>
        <function-ref name="toggle" scoped="" ref="0x403e62a0"/>
        <function-ref name="isOutput" scoped="" ref="0x403e6380"/>
        <function-ref name="get" scoped="" ref="0x403e6460"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e6540"/>
        <function-ref name="set" scoped="" ref="0x403e6620"/>
        <function-ref name="clr" scoped="" ref="0x403e6700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x403d5c08" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x403d5c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d5de0"/>
        <function-ref name="isInput" scoped="" ref="0x403d5ec0"/>
        <function-ref name="toggle" scoped="" ref="0x403d4010"/>
        <function-ref name="isOutput" scoped="" ref="0x403d40f0"/>
        <function-ref name="get" scoped="" ref="0x403d41d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d42b0"/>
        <function-ref name="set" scoped="" ref="0x403d4390"/>
        <function-ref name="clr" scoped="" ref="0x403d4470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x403d82f0" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x403d82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d84c8"/>
        <function-ref name="isInput" scoped="" ref="0x403d85a8"/>
        <function-ref name="toggle" scoped="" ref="0x403d8688"/>
        <function-ref name="isOutput" scoped="" ref="0x403d8768"/>
        <function-ref name="get" scoped="" ref="0x403d8848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d8928"/>
        <function-ref name="set" scoped="" ref="0x403d8a08"/>
        <function-ref name="clr" scoped="" ref="0x403d8ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x403dc8e0" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x403dc8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403dcab8"/>
        <function-ref name="isInput" scoped="" ref="0x403dcb98"/>
        <function-ref name="toggle" scoped="" ref="0x403dcc78"/>
        <function-ref name="isOutput" scoped="" ref="0x403dcd58"/>
        <function-ref name="get" scoped="" ref="0x403dce38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403dcf18"/>
        <function-ref name="set" scoped="" ref="0x403db010"/>
        <function-ref name="clr" scoped="" ref="0x403db0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x403e1a98" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x403e1a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e1c70"/>
        <function-ref name="isInput" scoped="" ref="0x403e1d50"/>
        <function-ref name="toggle" scoped="" ref="0x403e1e30"/>
        <function-ref name="isOutput" scoped="" ref="0x403e1f10"/>
        <function-ref name="get" scoped="" ref="0x403e0010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e00f0"/>
        <function-ref name="set" scoped="" ref="0x403e01d0"/>
        <function-ref name="clr" scoped="" ref="0x403e02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x403c8ea8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x403c8ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d00c0"/>
        <function-ref name="isInput" scoped="" ref="0x403d01a0"/>
        <function-ref name="toggle" scoped="" ref="0x403d0280"/>
        <function-ref name="isOutput" scoped="" ref="0x403d0360"/>
        <function-ref name="get" scoped="" ref="0x403d0440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d0520"/>
        <function-ref name="set" scoped="" ref="0x403d0600"/>
        <function-ref name="clr" scoped="" ref="0x403d06e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x403cf2f0" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x403cf2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403cf4c8"/>
        <function-ref name="isInput" scoped="" ref="0x403cf5a8"/>
        <function-ref name="toggle" scoped="" ref="0x403cf688"/>
        <function-ref name="isOutput" scoped="" ref="0x403cf768"/>
        <function-ref name="get" scoped="" ref="0x403cf848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cf928"/>
        <function-ref name="set" scoped="" ref="0x403cfa08"/>
        <function-ref name="clr" scoped="" ref="0x403cfae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x403d3a98" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x403d3a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d3c70"/>
        <function-ref name="isInput" scoped="" ref="0x403d3d50"/>
        <function-ref name="toggle" scoped="" ref="0x403d3e30"/>
        <function-ref name="isOutput" scoped="" ref="0x403d3f10"/>
        <function-ref name="get" scoped="" ref="0x403d2010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d20f0"/>
        <function-ref name="set" scoped="" ref="0x403d21d0"/>
        <function-ref name="clr" scoped="" ref="0x403d22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x403d6210" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x403d6210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d63e8"/>
        <function-ref name="isInput" scoped="" ref="0x403d64c8"/>
        <function-ref name="toggle" scoped="" ref="0x403d65a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403d6688"/>
        <function-ref name="get" scoped="" ref="0x403d6768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d6848"/>
        <function-ref name="set" scoped="" ref="0x403d6928"/>
        <function-ref name="clr" scoped="" ref="0x403d6a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x403e4750" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x403e4750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e4928"/>
        <function-ref name="isInput" scoped="" ref="0x403e4a08"/>
        <function-ref name="toggle" scoped="" ref="0x403e4ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x403e4bc8"/>
        <function-ref name="get" scoped="" ref="0x403e4ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e4d88"/>
        <function-ref name="set" scoped="" ref="0x403e4e68"/>
        <function-ref name="clr" scoped="" ref="0x403e3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x403cbb18" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x403cbb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403cbcf0"/>
        <function-ref name="isInput" scoped="" ref="0x403cbdd0"/>
        <function-ref name="toggle" scoped="" ref="0x403cbeb0"/>
        <function-ref name="isOutput" scoped="" ref="0x403ca010"/>
        <function-ref name="get" scoped="" ref="0x403ca0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ca1d0"/>
        <function-ref name="set" scoped="" ref="0x403ca2b0"/>
        <function-ref name="clr" scoped="" ref="0x403ca390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x403cd210" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x403cd210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403cd468"/>
        <function-ref name="isInput" scoped="" ref="0x403cd548"/>
        <function-ref name="toggle" scoped="" ref="0x403cd628"/>
        <function-ref name="isOutput" scoped="" ref="0x403cd708"/>
        <function-ref name="get" scoped="" ref="0x403cd7e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cd8c8"/>
        <function-ref name="set" scoped="" ref="0x403cd9a8"/>
        <function-ref name="clr" scoped="" ref="0x403cda88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x403d18e0" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x403d18e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d1ab8"/>
        <function-ref name="isInput" scoped="" ref="0x403d1b98"/>
        <function-ref name="toggle" scoped="" ref="0x403d1c78"/>
        <function-ref name="isOutput" scoped="" ref="0x403d1d58"/>
        <function-ref name="get" scoped="" ref="0x403d1e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d1f18"/>
        <function-ref name="set" scoped="" ref="0x403da010"/>
        <function-ref name="clr" scoped="" ref="0x403da0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x403e88e0" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x403e88e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e8ab8"/>
        <function-ref name="isInput" scoped="" ref="0x403e8b98"/>
        <function-ref name="toggle" scoped="" ref="0x403e8c78"/>
        <function-ref name="isOutput" scoped="" ref="0x403e8d58"/>
        <function-ref name="get" scoped="" ref="0x403e8e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e8f18"/>
        <function-ref name="set" scoped="" ref="0x403e7010"/>
        <function-ref name="clr" scoped="" ref="0x403e70f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x403dace8" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x403dace8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d9010"/>
        <function-ref name="isInput" scoped="" ref="0x403d90f0"/>
        <function-ref name="toggle" scoped="" ref="0x403d91d0"/>
        <function-ref name="isOutput" scoped="" ref="0x403d92b0"/>
        <function-ref name="get" scoped="" ref="0x403d9390"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d9470"/>
        <function-ref name="set" scoped="" ref="0x403d9550"/>
        <function-ref name="clr" scoped="" ref="0x403d9630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x403dd4b0" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x403dd4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403dd688"/>
        <function-ref name="isInput" scoped="" ref="0x403dd768"/>
        <function-ref name="toggle" scoped="" ref="0x403dd848"/>
        <function-ref name="isOutput" scoped="" ref="0x403dd928"/>
        <function-ref name="get" scoped="" ref="0x403dda08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ddae8"/>
        <function-ref name="set" scoped="" ref="0x403ddbc8"/>
        <function-ref name="clr" scoped="" ref="0x403ddca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x403e2670" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x403e2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e2848"/>
        <function-ref name="isInput" scoped="" ref="0x403e2928"/>
        <function-ref name="toggle" scoped="" ref="0x403e2a08"/>
        <function-ref name="isOutput" scoped="" ref="0x403e2ae8"/>
        <function-ref name="get" scoped="" ref="0x403e2bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e2ca8"/>
        <function-ref name="set" scoped="" ref="0x403e2d88"/>
        <function-ref name="clr" scoped="" ref="0x403e2e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x403e5dc8" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x403e5dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ee010"/>
        <function-ref name="isInput" scoped="" ref="0x403ee0f0"/>
        <function-ref name="toggle" scoped="" ref="0x403ee1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x403ee2b0"/>
        <function-ref name="get" scoped="" ref="0x403ee390"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ee470"/>
        <function-ref name="set" scoped="" ref="0x403ee550"/>
        <function-ref name="clr" scoped="" ref="0x403ee630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x403c9a08" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x403c9a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c9be0"/>
        <function-ref name="isInput" scoped="" ref="0x403c9cc0"/>
        <function-ref name="toggle" scoped="" ref="0x403c9da0"/>
        <function-ref name="isOutput" scoped="" ref="0x403c9e80"/>
        <function-ref name="get" scoped="" ref="0x403c8010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c80f0"/>
        <function-ref name="set" scoped="" ref="0x403c81d0"/>
        <function-ref name="clr" scoped="" ref="0x403c82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x403d5210" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x403d5210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d53e8"/>
        <function-ref name="isInput" scoped="" ref="0x403d54c8"/>
        <function-ref name="toggle" scoped="" ref="0x403d55a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403d5688"/>
        <function-ref name="get" scoped="" ref="0x403d5768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d5848"/>
        <function-ref name="set" scoped="" ref="0x403d5928"/>
        <function-ref name="clr" scoped="" ref="0x403d5a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x403e3210" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x403e3210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e33e8"/>
        <function-ref name="isInput" scoped="" ref="0x403e34c8"/>
        <function-ref name="toggle" scoped="" ref="0x403e35a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403e3688"/>
        <function-ref name="get" scoped="" ref="0x403e3768"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e3848"/>
        <function-ref name="set" scoped="" ref="0x403e3928"/>
        <function-ref name="clr" scoped="" ref="0x403e3a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x403d4670" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x403d4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d4848"/>
        <function-ref name="isInput" scoped="" ref="0x403d4928"/>
        <function-ref name="toggle" scoped="" ref="0x403d4a08"/>
        <function-ref name="isOutput" scoped="" ref="0x403d4ae8"/>
        <function-ref name="get" scoped="" ref="0x403d4bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d4ca8"/>
        <function-ref name="set" scoped="" ref="0x403d4d88"/>
        <function-ref name="clr" scoped="" ref="0x403d4e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x403d8ce8" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x403d8ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d8ec0"/>
        <function-ref name="isInput" scoped="" ref="0x403d7010"/>
        <function-ref name="toggle" scoped="" ref="0x403d70f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403d71d0"/>
        <function-ref name="get" scoped="" ref="0x403d72b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d7390"/>
        <function-ref name="set" scoped="" ref="0x403d7470"/>
        <function-ref name="clr" scoped="" ref="0x403d7550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x403db2f0" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x403db2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403db4c8"/>
        <function-ref name="isInput" scoped="" ref="0x403db5a8"/>
        <function-ref name="toggle" scoped="" ref="0x403db688"/>
        <function-ref name="isOutput" scoped="" ref="0x403db768"/>
        <function-ref name="get" scoped="" ref="0x403db848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403db928"/>
        <function-ref name="set" scoped="" ref="0x403dba08"/>
        <function-ref name="clr" scoped="" ref="0x403dbae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x403e04b0" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x403e04b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e0688"/>
        <function-ref name="isInput" scoped="" ref="0x403e0768"/>
        <function-ref name="toggle" scoped="" ref="0x403e0848"/>
        <function-ref name="isOutput" scoped="" ref="0x403e0928"/>
        <function-ref name="get" scoped="" ref="0x403e0a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e0ae8"/>
        <function-ref name="set" scoped="" ref="0x403e0bc8"/>
        <function-ref name="clr" scoped="" ref="0x403e0ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x403c0700" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x403c0700"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c08d8"/>
        <function-ref name="isInput" scoped="" ref="0x403c09b8"/>
        <function-ref name="toggle" scoped="" ref="0x403c0a98"/>
        <function-ref name="isOutput" scoped="" ref="0x403c0b78"/>
        <function-ref name="get" scoped="" ref="0x403c0c58"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c0d38"/>
        <function-ref name="set" scoped="" ref="0x403c0e18"/>
        <function-ref name="clr" scoped="" ref="0x403c0ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x403cfce8" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x403cfce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403cfec0"/>
        <function-ref name="isInput" scoped="" ref="0x403ce010"/>
        <function-ref name="toggle" scoped="" ref="0x403ce0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403ce1d0"/>
        <function-ref name="get" scoped="" ref="0x403ce2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ce390"/>
        <function-ref name="set" scoped="" ref="0x403ce470"/>
        <function-ref name="clr" scoped="" ref="0x403ce550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x403d24b0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x403d24b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d2688"/>
        <function-ref name="isInput" scoped="" ref="0x403d2768"/>
        <function-ref name="toggle" scoped="" ref="0x403d2848"/>
        <function-ref name="isOutput" scoped="" ref="0x403d2928"/>
        <function-ref name="get" scoped="" ref="0x403d2a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d2ae8"/>
        <function-ref name="set" scoped="" ref="0x403d2bc8"/>
        <function-ref name="clr" scoped="" ref="0x403d2ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x403d6c08" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x403d6c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d6de0"/>
        <function-ref name="isInput" scoped="" ref="0x403d6ec0"/>
        <function-ref name="toggle" scoped="" ref="0x403df010"/>
        <function-ref name="isOutput" scoped="" ref="0x403df0f0"/>
        <function-ref name="get" scoped="" ref="0x403df1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403df2b0"/>
        <function-ref name="set" scoped="" ref="0x403df390"/>
        <function-ref name="clr" scoped="" ref="0x403df470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x403e6900" loc="93:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x403e6900"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e6ad8"/>
        <function-ref name="isInput" scoped="" ref="0x403e6bb8"/>
        <function-ref name="toggle" scoped="" ref="0x403e6c98"/>
        <function-ref name="isOutput" scoped="" ref="0x403e6d78"/>
        <function-ref name="get" scoped="" ref="0x403e6e58"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e5010"/>
        <function-ref name="set" scoped="" ref="0x403e50f0"/>
        <function-ref name="clr" scoped="" ref="0x403e51d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x403de0a0" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x403de0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403de278"/>
        <function-ref name="isInput" scoped="" ref="0x403de358"/>
        <function-ref name="toggle" scoped="" ref="0x403de438"/>
        <function-ref name="isOutput" scoped="" ref="0x403de518"/>
        <function-ref name="get" scoped="" ref="0x403de5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403de6d8"/>
        <function-ref name="set" scoped="" ref="0x403de7b8"/>
        <function-ref name="clr" scoped="" ref="0x403de898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x403da2f0" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x403da2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403da4c8"/>
        <function-ref name="isInput" scoped="" ref="0x403da5a8"/>
        <function-ref name="toggle" scoped="" ref="0x403da688"/>
        <function-ref name="isOutput" scoped="" ref="0x403da768"/>
        <function-ref name="get" scoped="" ref="0x403da848"/>
        <function-ref name="makeOutput" scoped="" ref="0x403da928"/>
        <function-ref name="set" scoped="" ref="0x403daa08"/>
        <function-ref name="clr" scoped="" ref="0x403daae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x403ca590" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x403ca590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ca768"/>
        <function-ref name="isInput" scoped="" ref="0x403ca848"/>
        <function-ref name="toggle" scoped="" ref="0x403ca928"/>
        <function-ref name="isOutput" scoped="" ref="0x403caa08"/>
        <function-ref name="get" scoped="" ref="0x403caae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cabc8"/>
        <function-ref name="set" scoped="" ref="0x403caca8"/>
        <function-ref name="clr" scoped="" ref="0x403cad88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x403cdc88" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x403cdc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403cde60"/>
        <function-ref name="isInput" scoped="" ref="0x403cc010"/>
        <function-ref name="toggle" scoped="" ref="0x403cc0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403cc1d0"/>
        <function-ref name="get" scoped="" ref="0x403cc2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cc390"/>
        <function-ref name="set" scoped="" ref="0x403cc470"/>
        <function-ref name="clr" scoped="" ref="0x403cc550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40415330" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40415330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40415508"/>
        <function-ref name="isInput" scoped="" ref="0x404155e8"/>
        <function-ref name="toggle" scoped="" ref="0x404156c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404157a8"/>
        <function-ref name="get" scoped="" ref="0x40415888"/>
        <function-ref name="makeOutput" scoped="" ref="0x40415968"/>
        <function-ref name="set" scoped="" ref="0x40415a48"/>
        <function-ref name="clr" scoped="" ref="0x40415b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40413030" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40413030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40413208"/>
        <function-ref name="isInput" scoped="" ref="0x404132e8"/>
        <function-ref name="toggle" scoped="" ref="0x404133c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404134a8"/>
        <function-ref name="get" scoped="" ref="0x40413588"/>
        <function-ref name="makeOutput" scoped="" ref="0x40413668"/>
        <function-ref name="set" scoped="" ref="0x40413748"/>
        <function-ref name="clr" scoped="" ref="0x40413828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40416010" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40416010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404161e8"/>
        <function-ref name="isInput" scoped="" ref="0x404162c8"/>
        <function-ref name="toggle" scoped="" ref="0x404163a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40416488"/>
        <function-ref name="get" scoped="" ref="0x40416568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40416648"/>
        <function-ref name="set" scoped="" ref="0x40416728"/>
        <function-ref name="clr" scoped="" ref="0x40416808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40415c88" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40415c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40415e60"/>
        <function-ref name="isInput" scoped="" ref="0x40414010"/>
        <function-ref name="toggle" scoped="" ref="0x404140f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404141d0"/>
        <function-ref name="get" scoped="" ref="0x404142b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40414390"/>
        <function-ref name="set" scoped="" ref="0x40414470"/>
        <function-ref name="clr" scoped="" ref="0x40414550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40413988" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40413988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40413b60"/>
        <function-ref name="isInput" scoped="" ref="0x40413c40"/>
        <function-ref name="toggle" scoped="" ref="0x40413d20"/>
        <function-ref name="isOutput" scoped="" ref="0x40413e00"/>
        <function-ref name="get" scoped="" ref="0x40413ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40412010"/>
        <function-ref name="set" scoped="" ref="0x404120f0"/>
        <function-ref name="clr" scoped="" ref="0x404121d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40416968" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40416968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40416b40"/>
        <function-ref name="isInput" scoped="" ref="0x40416c20"/>
        <function-ref name="toggle" scoped="" ref="0x40416d00"/>
        <function-ref name="isOutput" scoped="" ref="0x40416de0"/>
        <function-ref name="get" scoped="" ref="0x40416ec0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40415010"/>
        <function-ref name="set" scoped="" ref="0x404150f0"/>
        <function-ref name="clr" scoped="" ref="0x404151d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404146b0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404146b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40414888"/>
        <function-ref name="isInput" scoped="" ref="0x40414968"/>
        <function-ref name="toggle" scoped="" ref="0x40414a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40414b28"/>
        <function-ref name="get" scoped="" ref="0x40414c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40414ce8"/>
        <function-ref name="set" scoped="" ref="0x40414dc8"/>
        <function-ref name="clr" scoped="" ref="0x40414ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40412330" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40412330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40412508"/>
        <function-ref name="isInput" scoped="" ref="0x404125e8"/>
        <function-ref name="toggle" scoped="" ref="0x404126c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404127a8"/>
        <function-ref name="get" scoped="" ref="0x40412888"/>
        <function-ref name="makeOutput" scoped="" ref="0x40412968"/>
        <function-ref name="set" scoped="" ref="0x40412a48"/>
        <function-ref name="clr" scoped="" ref="0x40412b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414f55e8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414f55e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414f57c0"/>
        <function-ref name="isInput" scoped="" ref="0x414f58a0"/>
        <function-ref name="toggle" scoped="" ref="0x414f5980"/>
        <function-ref name="isOutput" scoped="" ref="0x414f5a60"/>
        <function-ref name="get" scoped="" ref="0x414f5b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x414f5c20"/>
        <function-ref name="set" scoped="" ref="0x414f5d00"/>
        <function-ref name="clr" scoped="" ref="0x414f5de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414f30b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414f30b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414f3288"/>
        <function-ref name="isInput" scoped="" ref="0x414f3368"/>
        <function-ref name="toggle" scoped="" ref="0x414f3448"/>
        <function-ref name="isOutput" scoped="" ref="0x414f3528"/>
        <function-ref name="get" scoped="" ref="0x414f3608"/>
        <function-ref name="makeOutput" scoped="" ref="0x414f36e8"/>
        <function-ref name="set" scoped="" ref="0x414f37c8"/>
        <function-ref name="clr" scoped="" ref="0x414f38a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414f2a88" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414f2a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414f2c60"/>
        <function-ref name="isInput" scoped="" ref="0x414f2d40"/>
        <function-ref name="toggle" scoped="" ref="0x414f2e20"/>
        <function-ref name="isOutput" scoped="" ref="0x414f2f00"/>
        <function-ref name="get" scoped="" ref="0x414f1010"/>
        <function-ref name="makeOutput" scoped="" ref="0x414f10f0"/>
        <function-ref name="set" scoped="" ref="0x414f11d0"/>
        <function-ref name="clr" scoped="" ref="0x414f12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414f0538" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414f0538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414f0710"/>
        <function-ref name="isInput" scoped="" ref="0x414f07f0"/>
        <function-ref name="toggle" scoped="" ref="0x414f08d0"/>
        <function-ref name="isOutput" scoped="" ref="0x414f09b0"/>
        <function-ref name="get" scoped="" ref="0x414f0a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x414f0b70"/>
        <function-ref name="set" scoped="" ref="0x414f0c50"/>
        <function-ref name="clr" scoped="" ref="0x414f0d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x414ee010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x414ee010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x414ee1e8"/>
        <function-ref name="isInput" scoped="" ref="0x414ee2c8"/>
        <function-ref name="toggle" scoped="" ref="0x414ee3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x414ee488"/>
        <function-ref name="get" scoped="" ref="0x414ee568"/>
        <function-ref name="makeOutput" scoped="" ref="0x414ee648"/>
        <function-ref name="set" scoped="" ref="0x414ee728"/>
        <function-ref name="clr" scoped="" ref="0x414ee808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415409e8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415409e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41540bc0"/>
        <function-ref name="isInput" scoped="" ref="0x41540ca0"/>
        <function-ref name="toggle" scoped="" ref="0x41540d80"/>
        <function-ref name="isOutput" scoped="" ref="0x41540e60"/>
        <function-ref name="get" scoped="" ref="0x4153f010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4153f0f0"/>
        <function-ref name="set" scoped="" ref="0x4153f1d0"/>
        <function-ref name="clr" scoped="" ref="0x4153f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4153e538" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4153e538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4153e710"/>
        <function-ref name="isInput" scoped="" ref="0x4153e7f0"/>
        <function-ref name="toggle" scoped="" ref="0x4153e8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4153e9b0"/>
        <function-ref name="get" scoped="" ref="0x4153ea90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4153eb70"/>
        <function-ref name="set" scoped="" ref="0x4153ec50"/>
        <function-ref name="clr" scoped="" ref="0x4153ed30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4153c010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4153c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4153c1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4153c2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4153c3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4153c488"/>
        <function-ref name="get" scoped="" ref="0x4153c568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4153c648"/>
        <function-ref name="set" scoped="" ref="0x4153c728"/>
        <function-ref name="clr" scoped="" ref="0x4153c808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40418ba8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40418ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40418d80"/>
        <function-ref name="isInput" scoped="" ref="0x40418e60"/>
        <function-ref name="toggle" scoped="" ref="0x40420010"/>
        <function-ref name="isOutput" scoped="" ref="0x404200f0"/>
        <function-ref name="get" scoped="" ref="0x404201d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404202b0"/>
        <function-ref name="set" scoped="" ref="0x40420390"/>
        <function-ref name="clr" scoped="" ref="0x40420470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4041f890" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4041f890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041fa68"/>
        <function-ref name="isInput" scoped="" ref="0x4041fb48"/>
        <function-ref name="toggle" scoped="" ref="0x4041fc28"/>
        <function-ref name="isOutput" scoped="" ref="0x4041fd08"/>
        <function-ref name="get" scoped="" ref="0x4041fde8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041fec8"/>
        <function-ref name="set" scoped="" ref="0x4041e010"/>
        <function-ref name="clr" scoped="" ref="0x4041e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40419888" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40419888"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40419a60"/>
        <function-ref name="isInput" scoped="" ref="0x40419b40"/>
        <function-ref name="toggle" scoped="" ref="0x40419c20"/>
        <function-ref name="isOutput" scoped="" ref="0x40419d00"/>
        <function-ref name="get" scoped="" ref="0x40419de0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40419ec0"/>
        <function-ref name="set" scoped="" ref="0x40418010"/>
        <function-ref name="clr" scoped="" ref="0x404180f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404205d0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404205d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404207a8"/>
        <function-ref name="isInput" scoped="" ref="0x40420888"/>
        <function-ref name="toggle" scoped="" ref="0x40420968"/>
        <function-ref name="isOutput" scoped="" ref="0x40420a48"/>
        <function-ref name="get" scoped="" ref="0x40420b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40420c08"/>
        <function-ref name="set" scoped="" ref="0x40420ce8"/>
        <function-ref name="clr" scoped="" ref="0x40420dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4041e250" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4041e250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041e428"/>
        <function-ref name="isInput" scoped="" ref="0x4041e508"/>
        <function-ref name="toggle" scoped="" ref="0x4041e5e8"/>
        <function-ref name="isOutput" scoped="" ref="0x4041e6c8"/>
        <function-ref name="get" scoped="" ref="0x4041e7a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041e888"/>
        <function-ref name="set" scoped="" ref="0x4041e968"/>
        <function-ref name="clr" scoped="" ref="0x4041ea48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40418250" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40418250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40418428"/>
        <function-ref name="isInput" scoped="" ref="0x40418508"/>
        <function-ref name="toggle" scoped="" ref="0x404185e8"/>
        <function-ref name="isOutput" scoped="" ref="0x404186c8"/>
        <function-ref name="get" scoped="" ref="0x404187a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40418888"/>
        <function-ref name="set" scoped="" ref="0x40418968"/>
        <function-ref name="clr" scoped="" ref="0x40418a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40420f28" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40420f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041f110"/>
        <function-ref name="isInput" scoped="" ref="0x4041f1f0"/>
        <function-ref name="toggle" scoped="" ref="0x4041f2d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4041f3b0"/>
        <function-ref name="get" scoped="" ref="0x4041f490"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041f570"/>
        <function-ref name="set" scoped="" ref="0x4041f650"/>
        <function-ref name="clr" scoped="" ref="0x4041f730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4041eba8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4041eba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041ed80"/>
        <function-ref name="isInput" scoped="" ref="0x4041ee60"/>
        <function-ref name="toggle" scoped="" ref="0x4041d010"/>
        <function-ref name="isOutput" scoped="" ref="0x4041d0f0"/>
        <function-ref name="get" scoped="" ref="0x4041d1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041d2b0"/>
        <function-ref name="set" scoped="" ref="0x4041d390"/>
        <function-ref name="clr" scoped="" ref="0x4041d470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4155f418" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4155f418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4155f5f0"/>
        <function-ref name="isInput" scoped="" ref="0x4155f6d0"/>
        <function-ref name="toggle" scoped="" ref="0x4155f7b0"/>
        <function-ref name="isOutput" scoped="" ref="0x4155f890"/>
        <function-ref name="get" scoped="" ref="0x4155f970"/>
        <function-ref name="makeOutput" scoped="" ref="0x4155fa50"/>
        <function-ref name="set" scoped="" ref="0x4155fb30"/>
        <function-ref name="clr" scoped="" ref="0x4155fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4155ede0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4155ede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4155d010"/>
        <function-ref name="isInput" scoped="" ref="0x4155d0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4155d1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4155d2b0"/>
        <function-ref name="get" scoped="" ref="0x4155d390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4155d470"/>
        <function-ref name="set" scoped="" ref="0x4155d550"/>
        <function-ref name="clr" scoped="" ref="0x4155d630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4155c7f8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4155c7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4155c9d0"/>
        <function-ref name="isInput" scoped="" ref="0x4155cab0"/>
        <function-ref name="toggle" scoped="" ref="0x4155cb90"/>
        <function-ref name="isOutput" scoped="" ref="0x4155cc70"/>
        <function-ref name="get" scoped="" ref="0x4155cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x4155ce30"/>
        <function-ref name="set" scoped="" ref="0x4155cf10"/>
        <function-ref name="clr" scoped="" ref="0x4155a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41559228" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41559228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41559400"/>
        <function-ref name="isInput" scoped="" ref="0x415594e0"/>
        <function-ref name="toggle" scoped="" ref="0x415595c0"/>
        <function-ref name="isOutput" scoped="" ref="0x415596a0"/>
        <function-ref name="get" scoped="" ref="0x41559780"/>
        <function-ref name="makeOutput" scoped="" ref="0x41559860"/>
        <function-ref name="set" scoped="" ref="0x41559940"/>
        <function-ref name="clr" scoped="" ref="0x41559a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41558c08" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41558c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41558de0"/>
        <function-ref name="isInput" scoped="" ref="0x41558ec0"/>
        <function-ref name="toggle" scoped="" ref="0x41557010"/>
        <function-ref name="isOutput" scoped="" ref="0x415570f0"/>
        <function-ref name="get" scoped="" ref="0x415571d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x415572b0"/>
        <function-ref name="set" scoped="" ref="0x41557390"/>
        <function-ref name="clr" scoped="" ref="0x41557470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415566c0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415566c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41556898"/>
        <function-ref name="isInput" scoped="" ref="0x41556978"/>
        <function-ref name="toggle" scoped="" ref="0x41556a58"/>
        <function-ref name="isOutput" scoped="" ref="0x41556b38"/>
        <function-ref name="get" scoped="" ref="0x41556c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x41556cf8"/>
        <function-ref name="set" scoped="" ref="0x41556dd8"/>
        <function-ref name="clr" scoped="" ref="0x41556eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415540b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415540b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41554288"/>
        <function-ref name="isInput" scoped="" ref="0x41554368"/>
        <function-ref name="toggle" scoped="" ref="0x41554448"/>
        <function-ref name="isOutput" scoped="" ref="0x41554528"/>
        <function-ref name="get" scoped="" ref="0x41554608"/>
        <function-ref name="makeOutput" scoped="" ref="0x415546e8"/>
        <function-ref name="set" scoped="" ref="0x415547c8"/>
        <function-ref name="clr" scoped="" ref="0x415548a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41553a88" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41553a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41553c60"/>
        <function-ref name="isInput" scoped="" ref="0x41553d40"/>
        <function-ref name="toggle" scoped="" ref="0x41553e20"/>
        <function-ref name="isOutput" scoped="" ref="0x41553f00"/>
        <function-ref name="get" scoped="" ref="0x41552010"/>
        <function-ref name="makeOutput" scoped="" ref="0x415520f0"/>
        <function-ref name="set" scoped="" ref="0x415521d0"/>
        <function-ref name="clr" scoped="" ref="0x415522b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404234f0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404234f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404236c8"/>
        <function-ref name="isInput" scoped="" ref="0x404237a8"/>
        <function-ref name="toggle" scoped="" ref="0x40423888"/>
        <function-ref name="isOutput" scoped="" ref="0x40423968"/>
        <function-ref name="get" scoped="" ref="0x40423a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40423b28"/>
        <function-ref name="set" scoped="" ref="0x40423c08"/>
        <function-ref name="clr" scoped="" ref="0x40423ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40421170" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40421170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40421348"/>
        <function-ref name="isInput" scoped="" ref="0x40421428"/>
        <function-ref name="toggle" scoped="" ref="0x40421508"/>
        <function-ref name="isOutput" scoped="" ref="0x404215e8"/>
        <function-ref name="get" scoped="" ref="0x404216c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404217a8"/>
        <function-ref name="set" scoped="" ref="0x40421888"/>
        <function-ref name="clr" scoped="" ref="0x40421968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40424228" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40424228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40424400"/>
        <function-ref name="isInput" scoped="" ref="0x404244e0"/>
        <function-ref name="toggle" scoped="" ref="0x404245c0"/>
        <function-ref name="isOutput" scoped="" ref="0x404246a0"/>
        <function-ref name="get" scoped="" ref="0x40424780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40424860"/>
        <function-ref name="set" scoped="" ref="0x40424940"/>
        <function-ref name="clr" scoped="" ref="0x40424a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40423e48" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40423e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40422050"/>
        <function-ref name="isInput" scoped="" ref="0x40422130"/>
        <function-ref name="toggle" scoped="" ref="0x40422210"/>
        <function-ref name="isOutput" scoped="" ref="0x404222f0"/>
        <function-ref name="get" scoped="" ref="0x404223d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404224b0"/>
        <function-ref name="set" scoped="" ref="0x40422590"/>
        <function-ref name="clr" scoped="" ref="0x40422670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40421ac8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40421ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40421ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40421d80"/>
        <function-ref name="toggle" scoped="" ref="0x40421e60"/>
        <function-ref name="isOutput" scoped="" ref="0x4042b010"/>
        <function-ref name="get" scoped="" ref="0x4042b0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042b1d0"/>
        <function-ref name="set" scoped="" ref="0x4042b2b0"/>
        <function-ref name="clr" scoped="" ref="0x4042b390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40424b80" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40424b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40424d58"/>
        <function-ref name="isInput" scoped="" ref="0x40424e38"/>
        <function-ref name="toggle" scoped="" ref="0x40424f18"/>
        <function-ref name="isOutput" scoped="" ref="0x40423010"/>
        <function-ref name="get" scoped="" ref="0x404230f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404231d0"/>
        <function-ref name="set" scoped="" ref="0x404232b0"/>
        <function-ref name="clr" scoped="" ref="0x40423390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404227d0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404227d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404229a8"/>
        <function-ref name="isInput" scoped="" ref="0x40422a88"/>
        <function-ref name="toggle" scoped="" ref="0x40422b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40422c48"/>
        <function-ref name="get" scoped="" ref="0x40422d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40422e08"/>
        <function-ref name="set" scoped="" ref="0x40422ee8"/>
        <function-ref name="clr" scoped="" ref="0x40421010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4042b4f0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4042b4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042b6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4042b7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4042b888"/>
        <function-ref name="isOutput" scoped="" ref="0x4042b968"/>
        <function-ref name="get" scoped="" ref="0x4042ba48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042bb28"/>
        <function-ref name="set" scoped="" ref="0x4042bc08"/>
        <function-ref name="clr" scoped="" ref="0x4042bce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4157ade8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4157ade8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41576010"/>
        <function-ref name="isInput" scoped="" ref="0x415760f0"/>
        <function-ref name="toggle" scoped="" ref="0x415761d0"/>
        <function-ref name="isOutput" scoped="" ref="0x415762b0"/>
        <function-ref name="get" scoped="" ref="0x41576390"/>
        <function-ref name="makeOutput" scoped="" ref="0x41576470"/>
        <function-ref name="set" scoped="" ref="0x41576550"/>
        <function-ref name="clr" scoped="" ref="0x41576630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415757f8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415757f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415759d0"/>
        <function-ref name="isInput" scoped="" ref="0x41575ab0"/>
        <function-ref name="toggle" scoped="" ref="0x41575b90"/>
        <function-ref name="isOutput" scoped="" ref="0x41575c70"/>
        <function-ref name="get" scoped="" ref="0x41575d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x41575e30"/>
        <function-ref name="set" scoped="" ref="0x41575f10"/>
        <function-ref name="clr" scoped="" ref="0x41574010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41573228" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41573228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41573400"/>
        <function-ref name="isInput" scoped="" ref="0x415734e0"/>
        <function-ref name="toggle" scoped="" ref="0x415735c0"/>
        <function-ref name="isOutput" scoped="" ref="0x415736a0"/>
        <function-ref name="get" scoped="" ref="0x41573780"/>
        <function-ref name="makeOutput" scoped="" ref="0x41573860"/>
        <function-ref name="set" scoped="" ref="0x41573940"/>
        <function-ref name="clr" scoped="" ref="0x41573a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41572c08" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41572c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41572de0"/>
        <function-ref name="isInput" scoped="" ref="0x41572ec0"/>
        <function-ref name="toggle" scoped="" ref="0x41571010"/>
        <function-ref name="isOutput" scoped="" ref="0x415710f0"/>
        <function-ref name="get" scoped="" ref="0x415711d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x415712b0"/>
        <function-ref name="set" scoped="" ref="0x41571390"/>
        <function-ref name="clr" scoped="" ref="0x41571470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415706c0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415706c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41570898"/>
        <function-ref name="isInput" scoped="" ref="0x41570978"/>
        <function-ref name="toggle" scoped="" ref="0x41570a58"/>
        <function-ref name="isOutput" scoped="" ref="0x41570b38"/>
        <function-ref name="get" scoped="" ref="0x41570c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x41570cf8"/>
        <function-ref name="set" scoped="" ref="0x41570dd8"/>
        <function-ref name="clr" scoped="" ref="0x41570eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4156e0b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4156e0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4156e288"/>
        <function-ref name="isInput" scoped="" ref="0x4156e368"/>
        <function-ref name="toggle" scoped="" ref="0x4156e448"/>
        <function-ref name="isOutput" scoped="" ref="0x4156e528"/>
        <function-ref name="get" scoped="" ref="0x4156e608"/>
        <function-ref name="makeOutput" scoped="" ref="0x4156e6e8"/>
        <function-ref name="set" scoped="" ref="0x4156e7c8"/>
        <function-ref name="clr" scoped="" ref="0x4156e8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4156da88" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4156da88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4156dc60"/>
        <function-ref name="isInput" scoped="" ref="0x4156dd40"/>
        <function-ref name="toggle" scoped="" ref="0x4156de20"/>
        <function-ref name="isOutput" scoped="" ref="0x4156df00"/>
        <function-ref name="get" scoped="" ref="0x4156c010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4156c0f0"/>
        <function-ref name="set" scoped="" ref="0x4156c1d0"/>
        <function-ref name="clr" scoped="" ref="0x4156c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4156b538" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4156b538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4156b710"/>
        <function-ref name="isInput" scoped="" ref="0x4156b7f0"/>
        <function-ref name="toggle" scoped="" ref="0x4156b8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4156b9b0"/>
        <function-ref name="get" scoped="" ref="0x4156ba90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4156bb70"/>
        <function-ref name="set" scoped="" ref="0x4156bc50"/>
        <function-ref name="clr" scoped="" ref="0x4156bd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40426e48" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40426e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40431050"/>
        <function-ref name="isInput" scoped="" ref="0x40431130"/>
        <function-ref name="toggle" scoped="" ref="0x40431210"/>
        <function-ref name="isOutput" scoped="" ref="0x404312f0"/>
        <function-ref name="get" scoped="" ref="0x404313d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404314b0"/>
        <function-ref name="set" scoped="" ref="0x40431590"/>
        <function-ref name="clr" scoped="" ref="0x40431670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40430ac8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40430ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40430ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40430d80"/>
        <function-ref name="toggle" scoped="" ref="0x40430e60"/>
        <function-ref name="isOutput" scoped="" ref="0x4042f010"/>
        <function-ref name="get" scoped="" ref="0x4042f0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042f1d0"/>
        <function-ref name="set" scoped="" ref="0x4042f2b0"/>
        <function-ref name="clr" scoped="" ref="0x4042f390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40427b00" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40427b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40427cd8"/>
        <function-ref name="isInput" scoped="" ref="0x40427db8"/>
        <function-ref name="toggle" scoped="" ref="0x40427e98"/>
        <function-ref name="isOutput" scoped="" ref="0x40426010"/>
        <function-ref name="get" scoped="" ref="0x404260f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404261d0"/>
        <function-ref name="set" scoped="" ref="0x404262b0"/>
        <function-ref name="clr" scoped="" ref="0x40426390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404317d0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404317d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404319a8"/>
        <function-ref name="isInput" scoped="" ref="0x40431a88"/>
        <function-ref name="toggle" scoped="" ref="0x40431b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40431c48"/>
        <function-ref name="get" scoped="" ref="0x40431d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40431e08"/>
        <function-ref name="set" scoped="" ref="0x40431ee8"/>
        <function-ref name="clr" scoped="" ref="0x40430010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4042f4f0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4042f4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042f6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4042f7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4042f888"/>
        <function-ref name="isOutput" scoped="" ref="0x4042f968"/>
        <function-ref name="get" scoped="" ref="0x4042fa48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042fb28"/>
        <function-ref name="set" scoped="" ref="0x4042fc08"/>
        <function-ref name="clr" scoped="" ref="0x4042fce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404264f0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404264f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404266c8"/>
        <function-ref name="isInput" scoped="" ref="0x404267a8"/>
        <function-ref name="toggle" scoped="" ref="0x40426888"/>
        <function-ref name="isOutput" scoped="" ref="0x40426968"/>
        <function-ref name="get" scoped="" ref="0x40426a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40426b28"/>
        <function-ref name="set" scoped="" ref="0x40426c08"/>
        <function-ref name="clr" scoped="" ref="0x40426ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40430170" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40430170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40430348"/>
        <function-ref name="isInput" scoped="" ref="0x40430428"/>
        <function-ref name="toggle" scoped="" ref="0x40430508"/>
        <function-ref name="isOutput" scoped="" ref="0x404305e8"/>
        <function-ref name="get" scoped="" ref="0x404306c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404307a8"/>
        <function-ref name="set" scoped="" ref="0x40430888"/>
        <function-ref name="clr" scoped="" ref="0x40430968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4042fe48" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4042fe48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042e050"/>
        <function-ref name="isInput" scoped="" ref="0x4042e130"/>
        <function-ref name="toggle" scoped="" ref="0x4042e210"/>
        <function-ref name="isOutput" scoped="" ref="0x4042e2f0"/>
        <function-ref name="get" scoped="" ref="0x4042e3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042e4b0"/>
        <function-ref name="set" scoped="" ref="0x4042e590"/>
        <function-ref name="clr" scoped="" ref="0x4042e670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415e0938" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415e0938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415e0b10"/>
        <function-ref name="isInput" scoped="" ref="0x415e0bf0"/>
        <function-ref name="toggle" scoped="" ref="0x415e0cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x415e0db0"/>
        <function-ref name="get" scoped="" ref="0x415e0e90"/>
        <function-ref name="makeOutput" scoped="" ref="0x415df010"/>
        <function-ref name="set" scoped="" ref="0x415df0f0"/>
        <function-ref name="clr" scoped="" ref="0x415df1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415de3b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415de3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415de588"/>
        <function-ref name="isInput" scoped="" ref="0x415de668"/>
        <function-ref name="toggle" scoped="" ref="0x415de748"/>
        <function-ref name="isOutput" scoped="" ref="0x415de828"/>
        <function-ref name="get" scoped="" ref="0x415de908"/>
        <function-ref name="makeOutput" scoped="" ref="0x415de9e8"/>
        <function-ref name="set" scoped="" ref="0x415deac8"/>
        <function-ref name="clr" scoped="" ref="0x415deba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415dcd70" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415dcd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415db010"/>
        <function-ref name="isInput" scoped="" ref="0x415db0f0"/>
        <function-ref name="toggle" scoped="" ref="0x415db1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x415db2b0"/>
        <function-ref name="get" scoped="" ref="0x415db390"/>
        <function-ref name="makeOutput" scoped="" ref="0x415db470"/>
        <function-ref name="set" scoped="" ref="0x415db550"/>
        <function-ref name="clr" scoped="" ref="0x415db630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415da7f8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415da7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415da9d0"/>
        <function-ref name="isInput" scoped="" ref="0x415daab0"/>
        <function-ref name="toggle" scoped="" ref="0x415dab90"/>
        <function-ref name="isOutput" scoped="" ref="0x415dac70"/>
        <function-ref name="get" scoped="" ref="0x415dad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x415dae30"/>
        <function-ref name="set" scoped="" ref="0x415daf10"/>
        <function-ref name="clr" scoped="" ref="0x415d9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415d8228" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415d8228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415d8400"/>
        <function-ref name="isInput" scoped="" ref="0x415d84e0"/>
        <function-ref name="toggle" scoped="" ref="0x415d85c0"/>
        <function-ref name="isOutput" scoped="" ref="0x415d86a0"/>
        <function-ref name="get" scoped="" ref="0x415d8780"/>
        <function-ref name="makeOutput" scoped="" ref="0x415d8860"/>
        <function-ref name="set" scoped="" ref="0x415d8940"/>
        <function-ref name="clr" scoped="" ref="0x415d8a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415d7c08" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415d7c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415d7de0"/>
        <function-ref name="isInput" scoped="" ref="0x415d7ec0"/>
        <function-ref name="toggle" scoped="" ref="0x415d6010"/>
        <function-ref name="isOutput" scoped="" ref="0x415d60f0"/>
        <function-ref name="get" scoped="" ref="0x415d61d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x415d62b0"/>
        <function-ref name="set" scoped="" ref="0x415d6390"/>
        <function-ref name="clr" scoped="" ref="0x415d6470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415d56c0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415d56c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415d5898"/>
        <function-ref name="isInput" scoped="" ref="0x415d5978"/>
        <function-ref name="toggle" scoped="" ref="0x415d5a58"/>
        <function-ref name="isOutput" scoped="" ref="0x415d5b38"/>
        <function-ref name="get" scoped="" ref="0x415d5c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x415d5cf8"/>
        <function-ref name="set" scoped="" ref="0x415d5dd8"/>
        <function-ref name="clr" scoped="" ref="0x415d5eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415d30b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415d30b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415d3288"/>
        <function-ref name="isInput" scoped="" ref="0x415d3368"/>
        <function-ref name="toggle" scoped="" ref="0x415d3448"/>
        <function-ref name="isOutput" scoped="" ref="0x415d3528"/>
        <function-ref name="get" scoped="" ref="0x415d3608"/>
        <function-ref name="makeOutput" scoped="" ref="0x415d36e8"/>
        <function-ref name="set" scoped="" ref="0x415d37c8"/>
        <function-ref name="clr" scoped="" ref="0x415d38a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404356b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404356b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40435888"/>
        <function-ref name="isInput" scoped="" ref="0x40435968"/>
        <function-ref name="toggle" scoped="" ref="0x40435a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40435b28"/>
        <function-ref name="get" scoped="" ref="0x40435c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40435ce8"/>
        <function-ref name="set" scoped="" ref="0x40435dc8"/>
        <function-ref name="clr" scoped="" ref="0x40435ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40433330" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40433330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40433508"/>
        <function-ref name="isInput" scoped="" ref="0x404335e8"/>
        <function-ref name="toggle" scoped="" ref="0x404336c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404337a8"/>
        <function-ref name="get" scoped="" ref="0x40433888"/>
        <function-ref name="makeOutput" scoped="" ref="0x40433968"/>
        <function-ref name="set" scoped="" ref="0x40433a48"/>
        <function-ref name="clr" scoped="" ref="0x40433b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404363d8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404363d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404365b0"/>
        <function-ref name="isInput" scoped="" ref="0x40436690"/>
        <function-ref name="toggle" scoped="" ref="0x40436770"/>
        <function-ref name="isOutput" scoped="" ref="0x40436850"/>
        <function-ref name="get" scoped="" ref="0x40436930"/>
        <function-ref name="makeOutput" scoped="" ref="0x40436a10"/>
        <function-ref name="set" scoped="" ref="0x40436af0"/>
        <function-ref name="clr" scoped="" ref="0x40436bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40434030" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40434030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40434208"/>
        <function-ref name="isInput" scoped="" ref="0x404342e8"/>
        <function-ref name="toggle" scoped="" ref="0x404343c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404344a8"/>
        <function-ref name="get" scoped="" ref="0x40434588"/>
        <function-ref name="makeOutput" scoped="" ref="0x40434668"/>
        <function-ref name="set" scoped="" ref="0x40434748"/>
        <function-ref name="clr" scoped="" ref="0x40434828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40433c88" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40433c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40433e60"/>
        <function-ref name="isInput" scoped="" ref="0x40432010"/>
        <function-ref name="toggle" scoped="" ref="0x404320f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404321d0"/>
        <function-ref name="get" scoped="" ref="0x404322b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40432390"/>
        <function-ref name="set" scoped="" ref="0x40432470"/>
        <function-ref name="clr" scoped="" ref="0x40432550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40436d30" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40436d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40436f08"/>
        <function-ref name="isInput" scoped="" ref="0x40435010"/>
        <function-ref name="toggle" scoped="" ref="0x404350f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404351d0"/>
        <function-ref name="get" scoped="" ref="0x404352b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40435390"/>
        <function-ref name="set" scoped="" ref="0x40435470"/>
        <function-ref name="clr" scoped="" ref="0x40435550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40434988" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40434988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40434b60"/>
        <function-ref name="isInput" scoped="" ref="0x40434c40"/>
        <function-ref name="toggle" scoped="" ref="0x40434d20"/>
        <function-ref name="isOutput" scoped="" ref="0x40434e00"/>
        <function-ref name="get" scoped="" ref="0x40434ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40433010"/>
        <function-ref name="set" scoped="" ref="0x404330f0"/>
        <function-ref name="clr" scoped="" ref="0x404331d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404326b0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404326b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40432888"/>
        <function-ref name="isInput" scoped="" ref="0x40432968"/>
        <function-ref name="toggle" scoped="" ref="0x40432a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40432b28"/>
        <function-ref name="get" scoped="" ref="0x40432c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40432ce8"/>
        <function-ref name="set" scoped="" ref="0x40432dc8"/>
        <function-ref name="clr" scoped="" ref="0x40432ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415f9538" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415f9538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415f9710"/>
        <function-ref name="isInput" scoped="" ref="0x415f97f0"/>
        <function-ref name="toggle" scoped="" ref="0x415f98d0"/>
        <function-ref name="isOutput" scoped="" ref="0x415f99b0"/>
        <function-ref name="get" scoped="" ref="0x415f9a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x415f9b70"/>
        <function-ref name="set" scoped="" ref="0x415f9c50"/>
        <function-ref name="clr" scoped="" ref="0x415f9d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415f7010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415f7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415f71e8"/>
        <function-ref name="isInput" scoped="" ref="0x415f72c8"/>
        <function-ref name="toggle" scoped="" ref="0x415f73a8"/>
        <function-ref name="isOutput" scoped="" ref="0x415f7488"/>
        <function-ref name="get" scoped="" ref="0x415f7568"/>
        <function-ref name="makeOutput" scoped="" ref="0x415f7648"/>
        <function-ref name="set" scoped="" ref="0x415f7728"/>
        <function-ref name="clr" scoped="" ref="0x415f7808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415f69e8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415f69e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415f6bc0"/>
        <function-ref name="isInput" scoped="" ref="0x415f6ca0"/>
        <function-ref name="toggle" scoped="" ref="0x415f6d80"/>
        <function-ref name="isOutput" scoped="" ref="0x415f6e60"/>
        <function-ref name="get" scoped="" ref="0x415f5010"/>
        <function-ref name="makeOutput" scoped="" ref="0x415f50f0"/>
        <function-ref name="set" scoped="" ref="0x415f51d0"/>
        <function-ref name="clr" scoped="" ref="0x415f52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415f4538" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415f4538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415f4710"/>
        <function-ref name="isInput" scoped="" ref="0x415f47f0"/>
        <function-ref name="toggle" scoped="" ref="0x415f48d0"/>
        <function-ref name="isOutput" scoped="" ref="0x415f49b0"/>
        <function-ref name="get" scoped="" ref="0x415f4a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x415f4b70"/>
        <function-ref name="set" scoped="" ref="0x415f4c50"/>
        <function-ref name="clr" scoped="" ref="0x415f4d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415f2010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415f2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415f21e8"/>
        <function-ref name="isInput" scoped="" ref="0x415f22c8"/>
        <function-ref name="toggle" scoped="" ref="0x415f23a8"/>
        <function-ref name="isOutput" scoped="" ref="0x415f2488"/>
        <function-ref name="get" scoped="" ref="0x415f2568"/>
        <function-ref name="makeOutput" scoped="" ref="0x415f2648"/>
        <function-ref name="set" scoped="" ref="0x415f2728"/>
        <function-ref name="clr" scoped="" ref="0x415f2808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415f19e8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415f19e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415f1bc0"/>
        <function-ref name="isInput" scoped="" ref="0x415f1ca0"/>
        <function-ref name="toggle" scoped="" ref="0x415f1d80"/>
        <function-ref name="isOutput" scoped="" ref="0x415f1e60"/>
        <function-ref name="get" scoped="" ref="0x415f0010"/>
        <function-ref name="makeOutput" scoped="" ref="0x415f00f0"/>
        <function-ref name="set" scoped="" ref="0x415f01d0"/>
        <function-ref name="clr" scoped="" ref="0x415f02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415ef538" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415ef538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415ef710"/>
        <function-ref name="isInput" scoped="" ref="0x415ef7f0"/>
        <function-ref name="toggle" scoped="" ref="0x415ef8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x415ef9b0"/>
        <function-ref name="get" scoped="" ref="0x415efa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x415efb70"/>
        <function-ref name="set" scoped="" ref="0x415efc50"/>
        <function-ref name="clr" scoped="" ref="0x415efd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x415ed010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x415ed010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x415ed1e8"/>
        <function-ref name="isInput" scoped="" ref="0x415ed2c8"/>
        <function-ref name="toggle" scoped="" ref="0x415ed3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x415ed488"/>
        <function-ref name="get" scoped="" ref="0x415ed568"/>
        <function-ref name="makeOutput" scoped="" ref="0x415ed648"/>
        <function-ref name="set" scoped="" ref="0x415ed728"/>
        <function-ref name="clr" scoped="" ref="0x415ed808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40439170" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40439170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40439348"/>
        <function-ref name="isInput" scoped="" ref="0x40439428"/>
        <function-ref name="toggle" scoped="" ref="0x40439508"/>
        <function-ref name="isOutput" scoped="" ref="0x404395e8"/>
        <function-ref name="get" scoped="" ref="0x404396c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404397a8"/>
        <function-ref name="set" scoped="" ref="0x40439888"/>
        <function-ref name="clr" scoped="" ref="0x40439968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40443e48" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40443e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40442050"/>
        <function-ref name="isInput" scoped="" ref="0x40442130"/>
        <function-ref name="toggle" scoped="" ref="0x40442210"/>
        <function-ref name="isOutput" scoped="" ref="0x404422f0"/>
        <function-ref name="get" scoped="" ref="0x404423d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404424b0"/>
        <function-ref name="set" scoped="" ref="0x40442590"/>
        <function-ref name="clr" scoped="" ref="0x40442670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4043bdc8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4043bdc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043a010"/>
        <function-ref name="isInput" scoped="" ref="0x4043a0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4043a1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4043a2b0"/>
        <function-ref name="get" scoped="" ref="0x4043a390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043a470"/>
        <function-ref name="set" scoped="" ref="0x4043a550"/>
        <function-ref name="clr" scoped="" ref="0x4043a630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40439ac8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40439ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40439ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40439d80"/>
        <function-ref name="toggle" scoped="" ref="0x40439e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40443010"/>
        <function-ref name="get" scoped="" ref="0x404430f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404431d0"/>
        <function-ref name="set" scoped="" ref="0x404432b0"/>
        <function-ref name="clr" scoped="" ref="0x40443390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404427d0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404427d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404429a8"/>
        <function-ref name="isInput" scoped="" ref="0x40442a88"/>
        <function-ref name="toggle" scoped="" ref="0x40442b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40442c48"/>
        <function-ref name="get" scoped="" ref="0x40442d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40442e08"/>
        <function-ref name="set" scoped="" ref="0x40442ee8"/>
        <function-ref name="clr" scoped="" ref="0x40441010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4043a790" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4043a790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043a968"/>
        <function-ref name="isInput" scoped="" ref="0x4043aa48"/>
        <function-ref name="toggle" scoped="" ref="0x4043ab28"/>
        <function-ref name="isOutput" scoped="" ref="0x4043ac08"/>
        <function-ref name="get" scoped="" ref="0x4043ace8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043adc8"/>
        <function-ref name="set" scoped="" ref="0x4043aea8"/>
        <function-ref name="clr" scoped="" ref="0x40439010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404434f0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404434f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404436c8"/>
        <function-ref name="isInput" scoped="" ref="0x404437a8"/>
        <function-ref name="toggle" scoped="" ref="0x40443888"/>
        <function-ref name="isOutput" scoped="" ref="0x40443968"/>
        <function-ref name="get" scoped="" ref="0x40443a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40443b28"/>
        <function-ref name="set" scoped="" ref="0x40443c08"/>
        <function-ref name="clr" scoped="" ref="0x40443ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40441170" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40441170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40441348"/>
        <function-ref name="isInput" scoped="" ref="0x40441428"/>
        <function-ref name="toggle" scoped="" ref="0x40441508"/>
        <function-ref name="isOutput" scoped="" ref="0x404415e8"/>
        <function-ref name="get" scoped="" ref="0x404416c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404417a8"/>
        <function-ref name="set" scoped="" ref="0x40441888"/>
        <function-ref name="clr" scoped="" ref="0x40441968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41613c20" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41613c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41613df8"/>
        <function-ref name="isInput" scoped="" ref="0x41613ed8"/>
        <function-ref name="toggle" scoped="" ref="0x41611010"/>
        <function-ref name="isOutput" scoped="" ref="0x416110f0"/>
        <function-ref name="get" scoped="" ref="0x416111d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x416112b0"/>
        <function-ref name="set" scoped="" ref="0x41611390"/>
        <function-ref name="clr" scoped="" ref="0x41611470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x416106c0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x416106c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41610898"/>
        <function-ref name="isInput" scoped="" ref="0x41610978"/>
        <function-ref name="toggle" scoped="" ref="0x41610a58"/>
        <function-ref name="isOutput" scoped="" ref="0x41610b38"/>
        <function-ref name="get" scoped="" ref="0x41610c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x41610cf8"/>
        <function-ref name="set" scoped="" ref="0x41610dd8"/>
        <function-ref name="clr" scoped="" ref="0x41610eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4160e0b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4160e0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4160e288"/>
        <function-ref name="isInput" scoped="" ref="0x4160e368"/>
        <function-ref name="toggle" scoped="" ref="0x4160e448"/>
        <function-ref name="isOutput" scoped="" ref="0x4160e528"/>
        <function-ref name="get" scoped="" ref="0x4160e608"/>
        <function-ref name="makeOutput" scoped="" ref="0x4160e6e8"/>
        <function-ref name="set" scoped="" ref="0x4160e7c8"/>
        <function-ref name="clr" scoped="" ref="0x4160e8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4160da88" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4160da88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4160dc60"/>
        <function-ref name="isInput" scoped="" ref="0x4160dd40"/>
        <function-ref name="toggle" scoped="" ref="0x4160de20"/>
        <function-ref name="isOutput" scoped="" ref="0x4160df00"/>
        <function-ref name="get" scoped="" ref="0x4160c010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4160c0f0"/>
        <function-ref name="set" scoped="" ref="0x4160c1d0"/>
        <function-ref name="clr" scoped="" ref="0x4160c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4160b538" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4160b538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4160b710"/>
        <function-ref name="isInput" scoped="" ref="0x4160b7f0"/>
        <function-ref name="toggle" scoped="" ref="0x4160b8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4160b9b0"/>
        <function-ref name="get" scoped="" ref="0x4160ba90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4160bb70"/>
        <function-ref name="set" scoped="" ref="0x4160bc50"/>
        <function-ref name="clr" scoped="" ref="0x4160bd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4165c010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4165c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4165c1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4165c2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4165c3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4165c488"/>
        <function-ref name="get" scoped="" ref="0x4165c568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4165c648"/>
        <function-ref name="set" scoped="" ref="0x4165c728"/>
        <function-ref name="clr" scoped="" ref="0x4165c808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4165b9e8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4165b9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4165bbc0"/>
        <function-ref name="isInput" scoped="" ref="0x4165bca0"/>
        <function-ref name="toggle" scoped="" ref="0x4165bd80"/>
        <function-ref name="isOutput" scoped="" ref="0x4165be60"/>
        <function-ref name="get" scoped="" ref="0x4165a010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4165a0f0"/>
        <function-ref name="set" scoped="" ref="0x4165a1d0"/>
        <function-ref name="clr" scoped="" ref="0x4165a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41659538" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41659538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41659710"/>
        <function-ref name="isInput" scoped="" ref="0x416597f0"/>
        <function-ref name="toggle" scoped="" ref="0x416598d0"/>
        <function-ref name="isOutput" scoped="" ref="0x416599b0"/>
        <function-ref name="get" scoped="" ref="0x41659a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41659b70"/>
        <function-ref name="set" scoped="" ref="0x41659c50"/>
        <function-ref name="clr" scoped="" ref="0x41659d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4043e2d0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4043e2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043e4a8"/>
        <function-ref name="isInput" scoped="" ref="0x4043e588"/>
        <function-ref name="toggle" scoped="" ref="0x4043e668"/>
        <function-ref name="isOutput" scoped="" ref="0x4043e748"/>
        <function-ref name="get" scoped="" ref="0x4043e828"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043e908"/>
        <function-ref name="set" scoped="" ref="0x4043e9e8"/>
        <function-ref name="clr" scoped="" ref="0x4043eac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40452a88" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40452a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40452c60"/>
        <function-ref name="isInput" scoped="" ref="0x40452d40"/>
        <function-ref name="toggle" scoped="" ref="0x40452e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40452f00"/>
        <function-ref name="get" scoped="" ref="0x40451010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404510f0"/>
        <function-ref name="set" scoped="" ref="0x404511d0"/>
        <function-ref name="clr" scoped="" ref="0x404512b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4045a280" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4045a280"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045a458"/>
        <function-ref name="isInput" scoped="" ref="0x4045a538"/>
        <function-ref name="toggle" scoped="" ref="0x4045a618"/>
        <function-ref name="isOutput" scoped="" ref="0x4045a6f8"/>
        <function-ref name="get" scoped="" ref="0x4045a7d8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045a8b8"/>
        <function-ref name="set" scoped="" ref="0x4045a998"/>
        <function-ref name="clr" scoped="" ref="0x4045aa78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40458a30" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40458a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40458c08"/>
        <function-ref name="isInput" scoped="" ref="0x40458ce8"/>
        <function-ref name="toggle" scoped="" ref="0x40458dc8"/>
        <function-ref name="isOutput" scoped="" ref="0x40458ea8"/>
        <function-ref name="get" scoped="" ref="0x40457010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404570f0"/>
        <function-ref name="set" scoped="" ref="0x404571d0"/>
        <function-ref name="clr" scoped="" ref="0x404572b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40461280" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40461280"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40461458"/>
        <function-ref name="isInput" scoped="" ref="0x40461538"/>
        <function-ref name="toggle" scoped="" ref="0x40461618"/>
        <function-ref name="isOutput" scoped="" ref="0x404616f8"/>
        <function-ref name="get" scoped="" ref="0x404617d8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404618b8"/>
        <function-ref name="set" scoped="" ref="0x40461998"/>
        <function-ref name="clr" scoped="" ref="0x40461a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4045ea30" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4045ea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045ec08"/>
        <function-ref name="isInput" scoped="" ref="0x4045ece8"/>
        <function-ref name="toggle" scoped="" ref="0x4045edc8"/>
        <function-ref name="isOutput" scoped="" ref="0x4045eea8"/>
        <function-ref name="get" scoped="" ref="0x4045d010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045d0f0"/>
        <function-ref name="set" scoped="" ref="0x4045d1d0"/>
        <function-ref name="clr" scoped="" ref="0x4045d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404673b0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404673b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40467588"/>
        <function-ref name="isInput" scoped="" ref="0x40467668"/>
        <function-ref name="toggle" scoped="" ref="0x40467748"/>
        <function-ref name="isOutput" scoped="" ref="0x40467828"/>
        <function-ref name="get" scoped="" ref="0x40467908"/>
        <function-ref name="makeOutput" scoped="" ref="0x404679e8"/>
        <function-ref name="set" scoped="" ref="0x40467ac8"/>
        <function-ref name="clr" scoped="" ref="0x40467ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40464b68" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40464b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40464d40"/>
        <function-ref name="isInput" scoped="" ref="0x40464e20"/>
        <function-ref name="toggle" scoped="" ref="0x40464f00"/>
        <function-ref name="isOutput" scoped="" ref="0x40463010"/>
        <function-ref name="get" scoped="" ref="0x404630f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404631d0"/>
        <function-ref name="set" scoped="" ref="0x404632b0"/>
        <function-ref name="clr" scoped="" ref="0x40463390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4046d3b0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4046d3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046d588"/>
        <function-ref name="isInput" scoped="" ref="0x4046d668"/>
        <function-ref name="toggle" scoped="" ref="0x4046d748"/>
        <function-ref name="isOutput" scoped="" ref="0x4046d828"/>
        <function-ref name="get" scoped="" ref="0x4046d908"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046d9e8"/>
        <function-ref name="set" scoped="" ref="0x4046dac8"/>
        <function-ref name="clr" scoped="" ref="0x4046dba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4046bb68" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4046bb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046bd40"/>
        <function-ref name="isInput" scoped="" ref="0x4046be20"/>
        <function-ref name="toggle" scoped="" ref="0x4046bf00"/>
        <function-ref name="isOutput" scoped="" ref="0x4046a010"/>
        <function-ref name="get" scoped="" ref="0x4046a0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046a1d0"/>
        <function-ref name="set" scoped="" ref="0x4046a2b0"/>
        <function-ref name="clr" scoped="" ref="0x4046a390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404733b0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404733b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40473588"/>
        <function-ref name="isInput" scoped="" ref="0x40473668"/>
        <function-ref name="toggle" scoped="" ref="0x40473748"/>
        <function-ref name="isOutput" scoped="" ref="0x40473828"/>
        <function-ref name="get" scoped="" ref="0x40473908"/>
        <function-ref name="makeOutput" scoped="" ref="0x404739e8"/>
        <function-ref name="set" scoped="" ref="0x40473ac8"/>
        <function-ref name="clr" scoped="" ref="0x40473ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40471b68" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40471b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40471d40"/>
        <function-ref name="isInput" scoped="" ref="0x40471e20"/>
        <function-ref name="toggle" scoped="" ref="0x40471f00"/>
        <function-ref name="isOutput" scoped="" ref="0x40470010"/>
        <function-ref name="get" scoped="" ref="0x404700f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404701d0"/>
        <function-ref name="set" scoped="" ref="0x404702b0"/>
        <function-ref name="clr" scoped="" ref="0x40470390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4046e3b0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4046e3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046e588"/>
        <function-ref name="isInput" scoped="" ref="0x4046e668"/>
        <function-ref name="toggle" scoped="" ref="0x4046e748"/>
        <function-ref name="isOutput" scoped="" ref="0x4046e828"/>
        <function-ref name="get" scoped="" ref="0x4046e908"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046e9e8"/>
        <function-ref name="set" scoped="" ref="0x4046eac8"/>
        <function-ref name="clr" scoped="" ref="0x4046eba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404944d0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404944d0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f57d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f57d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404946a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x40494880" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40494880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40494a58"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40494b38"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40494c18"/>
        <function-ref name="actualMicro" scoped="" ref="0x40494cf8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40494dd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x404a7030" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x404a7030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404a7208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x404962b8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x404962b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40496490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x40496c18" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40496c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40496df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x40496650" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x40496650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40496828"/>
        <function-ref name="taskLoop" scoped="" ref="0x40496908"/>
        <function-ref name="runNextTask" scoped="" ref="0x404969e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x402fe600" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x402fe600"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x402fe7d8"/>
        <function-ref name="runTask" scoped="" ref="0x402fe8b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x402f8ed8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x402f8ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x402f40c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x402f41a0"/>
        <function-ref name="runNextTask" scoped="" ref="0x402f4280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x403792a8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x403792a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40379480"/>
        <function-ref name="runTask" scoped="" ref="0x40379560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x40379f10" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x40379f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x4037f108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x4037aa30" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x4037aa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4037ac08"/>
        <function-ref name="taskLoop" scoped="" ref="0x4037ace8"/>
        <function-ref name="runNextTask" scoped="" ref="0x4037adc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x4038de88" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x4038de88"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40388070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x402f3938" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x402f3938"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x402f3b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x4038e680" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x4038e680"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x4038e858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x404e2178" loc="52:uAgriC.nc">
      <component-ref qname="uAgriC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x404e2178"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x404e23d0"/>
        <function-ref name="setRoot" scoped="" ref="0x404e24b0"/>
        <function-ref name="unsetRoot" scoped="" ref="0x404e2590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataSend" ref="0x404b6010" loc="48:uAgriC.nc">
      <component-ref qname="uAgriC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataSend" scoped="" ref="0x404b6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404b61e8"/>
        <function-ref name="getPayload" scoped="" ref="0x404b62c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x404b63a8"/>
        <function-ref name="cancel" scoped="" ref="0x404b6488"/>
        <function-ref name="sendDone" scoped="" ref="0x404b6568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionPacket" ref="0x404e6920" loc="51:uAgriC.nc">
      <component-ref qname="uAgriC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x404e6920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x404e6af8"/>
        <function-ref name="setOrigin" scoped="" ref="0x404e6bd8"/>
        <function-ref name="setType" scoped="" ref="0x404e6cb8"/>
        <function-ref name="getOrigin" scoped="" ref="0x404e6d98"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x404e6e78"/>
        <function-ref name="getType" scoped="" ref="0x404d7010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x403a9da0" loc="35:uAgriC.nc">
      <component-ref qname="uAgriC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x403a9da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404b0010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x404ac9f0" loc="37:uAgriC.nc">
      <component-ref qname="uAgriC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x404ac9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x404acbc8"/>
        <function-ref name="stopDone" scoped="" ref="0x404acca8"/>
        <function-ref name="start" scoped="" ref="0x404acd88"/>
        <function-ref name="stop" scoped="" ref="0x404ace68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="uartSendTask" ref="0x40500328" loc="83:uAgriC.nc">
      <component-ref qname="uAgriC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="uartSendTask" scoped="" ref="0x40500328"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40500500"/>
        <function-ref name="runTask" scoped="" ref="0x405005e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x404ac310" loc="36:uAgriC.nc">
      <component-ref qname="uAgriC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x404ac310"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x404ac4e8"/>
        <function-ref name="stopDone" scoped="" ref="0x404ac5c8"/>
        <function-ref name="start" scoped="" ref="0x404ac6a8"/>
        <function-ref name="stop" scoped="" ref="0x404ac788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LowPowerListening" ref="0x40501ae0" loc="59:uAgriC.nc">
      <component-ref qname="uAgriC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40501ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x40501cb8"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x40501d98"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x40501e78"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x404f3010"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x404f30f0"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x404f31d0"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x404f32b0"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x404f3390"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x404f3470"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x404f3550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UARTMessagePool" ref="0x404e8ef8" loc="55:uAgriC.nc">
      <component-ref qname="uAgriC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UARTMessagePool" scoped="" ref="0x404e8ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
            <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x404ea010"/>
        <function-ref name="maxSize" scoped="" ref="0x404eba08"/>
        <function-ref name="empty" scoped="" ref="0x404eb558"/>
        <function-ref name="put" scoped="" ref="0x404ebc60"/>
        <function-ref name="size" scoped="" ref="0x404eb7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialSend" ref="0x404df868" loc="50:uAgriC.nc">
      <component-ref qname="uAgriC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialSend" scoped="" ref="0x404df868"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404dfa40"/>
        <function-ref name="getPayload" scoped="" ref="0x404dfb20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x404dfc00"/>
        <function-ref name="cancel" scoped="" ref="0x404dfce0"/>
        <function-ref name="sendDone" scoped="" ref="0x404dfdc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sample" ref="0x404b36a0" loc="43:uAgriC.nc">
      <component-ref qname="uAgriC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sample" scoped="" ref="0x404b36a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Sample"/>
      </instance>
      <interface-functions>
        <function-ref name="readSample" scoped="" ref="0x404b3cd8"/>
        <function-ref name="readDone" scoped="" ref="0x404b3db8"/>
        <function-ref name="set_digital_output" scoped="" ref="0x404b3a38"/>
        <function-ref name="getSample" scoped="" ref="0x404b3b18"/>
        <function-ref name="start" scoped="" ref="0x404b3958"/>
        <function-ref name="reTask" scoped="" ref="0x404b3bf8"/>
        <function-ref name="stop" scoped="" ref="0x404b3878"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x404ae0c0" loc="38:uAgriC.nc">
      <component-ref qname="uAgriC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoutingControl" scoped="" ref="0x404ae0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x404ae298"/>
        <function-ref name="stop" scoped="" ref="0x404ae378"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SamplerInit" ref="0x404ae588" loc="41:uAgriC.nc">
      <component-ref qname="uAgriC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SamplerInit" scoped="" ref="0x404ae588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404ae760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SamplerControl" ref="0x404ae9d0" loc="42:uAgriC.nc">
      <component-ref qname="uAgriC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SamplerControl" scoped="" ref="0x404ae9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x404aeba8"/>
        <function-ref name="stopDone" scoped="" ref="0x404aec88"/>
        <function-ref name="start" scoped="" ref="0x404aed68"/>
        <function-ref name="stop" scoped="" ref="0x404aee48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x404d3148" loc="49:uAgriC.nc">
      <component-ref qname="uAgriC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x404d3148"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x404d3320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x404fb3f8" loc="58:uAgriC.nc">
      <component-ref qname="uAgriC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x404fb3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x404fb5d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x404fb6b0"/>
        <function-ref name="led1On" scoped="" ref="0x404fb790"/>
        <function-ref name="led1Toggle" scoped="" ref="0x404fb870"/>
        <function-ref name="led2Toggle" scoped="" ref="0x404fb950"/>
        <function-ref name="get" scoped="" ref="0x404fba30"/>
        <function-ref name="led1Off" scoped="" ref="0x404fbb10"/>
        <function-ref name="led2Off" scoped="" ref="0x404fbe90"/>
        <function-ref name="set" scoped="" ref="0x404fbbf0"/>
        <function-ref name="led0On" scoped="" ref="0x404fbcd0"/>
        <function-ref name="led2On" scoped="" ref="0x404fbdb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UARTQueue" ref="0x404e0b08" loc="54:uAgriC.nc">
      <component-ref qname="uAgriC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UARTQueue" scoped="" ref="0x404e0b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
              <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x404dc8e8"/>
        <function-ref name="enqueue" scoped="" ref="0x404ec010"/>
        <function-ref name="element" scoped="" ref="0x404ec360"/>
        <function-ref name="maxSize" scoped="" ref="0x404dc690"/>
        <function-ref name="dequeue" scoped="" ref="0x404dcc58"/>
        <function-ref name="empty" scoped="" ref="0x404dc1e0"/>
        <function-ref name="size" scoped="" ref="0x404dc438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send_radio_msg" ref="0x40520888" loc="290:uAgriC.nc">
      <component-ref qname="uAgriC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="send_radio_msg" scoped="" ref="0x40520888"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40520a60"/>
        <function-ref name="runTask" scoped="" ref="0x40520b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x4055c398" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4055c398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4055c570"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4055c650"/>
        <function-ref name="led1On" scoped="" ref="0x4055c730"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4055c810"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4055c8f0"/>
        <function-ref name="get" scoped="" ref="0x4055c9d0"/>
        <function-ref name="led1Off" scoped="" ref="0x4055cab0"/>
        <function-ref name="led2Off" scoped="" ref="0x4055ce30"/>
        <function-ref name="set" scoped="" ref="0x4055cb90"/>
        <function-ref name="led0On" scoped="" ref="0x4055cc70"/>
        <function-ref name="led2On" scoped="" ref="0x4055cd50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x40556780" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40556780"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40556958"/>
        <function-ref name="isInput" scoped="" ref="0x40556a38"/>
        <function-ref name="toggle" scoped="" ref="0x40556b18"/>
        <function-ref name="isOutput" scoped="" ref="0x40556bf8"/>
        <function-ref name="get" scoped="" ref="0x40556cd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40556db8"/>
        <function-ref name="set" scoped="" ref="0x40556e98"/>
        <function-ref name="clr" scoped="" ref="0x40565010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x405596f8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x405596f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405598d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x40565200" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40565200"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405653d8"/>
        <function-ref name="isInput" scoped="" ref="0x405654b8"/>
        <function-ref name="toggle" scoped="" ref="0x40565598"/>
        <function-ref name="isOutput" scoped="" ref="0x40565678"/>
        <function-ref name="get" scoped="" ref="0x40565758"/>
        <function-ref name="makeOutput" scoped="" ref="0x40565838"/>
        <function-ref name="set" scoped="" ref="0x40565918"/>
        <function-ref name="clr" scoped="" ref="0x405659f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40559a40" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40559a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40559c18"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40559cf8"/>
        <function-ref name="led1On" scoped="" ref="0x40559dd8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40559eb8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40556010"/>
        <function-ref name="get" scoped="" ref="0x405560f0"/>
        <function-ref name="led1Off" scoped="" ref="0x405561d0"/>
        <function-ref name="led2Off" scoped="" ref="0x40556550"/>
        <function-ref name="set" scoped="" ref="0x405562b0"/>
        <function-ref name="led0On" scoped="" ref="0x40556390"/>
        <function-ref name="led2On" scoped="" ref="0x40556470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x40565be8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x40565be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40565dc0"/>
        <function-ref name="isInput" scoped="" ref="0x40565ea0"/>
        <function-ref name="toggle" scoped="" ref="0x40564010"/>
        <function-ref name="isOutput" scoped="" ref="0x405640f0"/>
        <function-ref name="get" scoped="" ref="0x405641d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405642b0"/>
        <function-ref name="set" scoped="" ref="0x40564390"/>
        <function-ref name="clr" scoped="" ref="0x40564470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x40558e08" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40558e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40574010"/>
        <function-ref name="isInput" scoped="" ref="0x405740f0"/>
        <function-ref name="toggle" scoped="" ref="0x405741d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405742b0"/>
        <function-ref name="get" scoped="" ref="0x40574390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40574470"/>
        <function-ref name="set" scoped="" ref="0x40574550"/>
        <function-ref name="clr" scoped="" ref="0x40574630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x40574840" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40574840"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40574a18"/>
        <function-ref name="isInput" scoped="" ref="0x40574af8"/>
        <function-ref name="toggle" scoped="" ref="0x40574bd8"/>
        <function-ref name="isOutput" scoped="" ref="0x40574cb8"/>
        <function-ref name="get" scoped="" ref="0x40574d98"/>
        <function-ref name="makeOutput" scoped="" ref="0x40574e78"/>
        <function-ref name="set" scoped="" ref="0x40573010"/>
        <function-ref name="clr" scoped="" ref="0x405730f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x40573c88" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40573c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40573e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x40573300" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x40573300"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405734d8"/>
        <function-ref name="isInput" scoped="" ref="0x405735b8"/>
        <function-ref name="toggle" scoped="" ref="0x40573698"/>
        <function-ref name="isOutput" scoped="" ref="0x40573778"/>
        <function-ref name="get" scoped="" ref="0x40573858"/>
        <function-ref name="makeOutput" scoped="" ref="0x40573938"/>
        <function-ref name="set" scoped="" ref="0x40573a18"/>
        <function-ref name="clr" scoped="" ref="0x40573af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4057e9b8" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4057e9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4057eb90"/>
        <function-ref name="stopDone" scoped="" ref="0x4057ec70"/>
        <function-ref name="start" scoped="" ref="0x4057ed50"/>
        <function-ref name="stop" scoped="" ref="0x4057ee30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x405a5d18" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x405a5d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405a38f0"/>
        <function-ref name="get" scoped="" ref="0x405a3630"/>
        <function-ref name="isSet" scoped="" ref="0x405a3370"/>
        <function-ref name="set" scoped="" ref="0x405a3bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40596328" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40596328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40596500"/>
        <function-ref name="payloadLength" scoped="" ref="0x405965e0"/>
        <function-ref name="getPayload" scoped="" ref="0x405966c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405967a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40596880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x405902a8" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x405902a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404bdd68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40590480"/>
        <function-ref name="getPayload" scoped="" ref="0x40590560"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40590640"/>
        <function-ref name="cancel" scoped="" ref="0x40590720"/>
        <function-ref name="sendDone" scoped="" ref="0x40590800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x4058f310" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x4058f310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404bdd68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4058f4e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x4059a930" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x4059a930"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405a5590"/>
        <function-ref name="get" scoped="" ref="0x405a52d0"/>
        <function-ref name="isSet" scoped="" ref="0x405a5010"/>
        <function-ref name="set" scoped="" ref="0x405a5850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x405a8890" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x405a8890"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x405a8a68"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x405a8b48"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x405a8c28"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x405a8d08"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x405a8de8"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x405a8ec8"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x4058d010"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x4058d0f0"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x4058d1d0"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x4058d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40590c68" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40590c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404bdd68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40590e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x405ad320" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x405ad320"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TRF230" ref="0x4057e600"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405ade20"/>
        <function-ref name="clear" scoped="" ref="0x405a11f8"/>
        <function-ref name="isValid" scoped="" ref="0x405ada70"/>
        <function-ref name="set" scoped="" ref="0x405a15a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x405a6560" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x405a6560"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4059a150"/>
        <function-ref name="get" scoped="" ref="0x405a6e68"/>
        <function-ref name="isSet" scoped="" ref="0x405a6ba8"/>
        <function-ref name="set" scoped="" ref="0x4059a410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x405a8308" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x405a8308"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x405a84e0"/>
        <function-ref name="noAck" scoped="" ref="0x405a85c0"/>
        <function-ref name="wasAcked" scoped="" ref="0x405a86a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4059d140" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4059d140"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4059d318"/>
        <function-ref name="source" scoped="" ref="0x4059d3f8"/>
        <function-ref name="address" scoped="" ref="0x4059d4d8"/>
        <function-ref name="destination" scoped="" ref="0x4059d5b8"/>
        <function-ref name="setSource" scoped="" ref="0x4059d698"/>
        <function-ref name="setDestination" scoped="" ref="0x4059d778"/>
        <function-ref name="type" scoped="" ref="0x4059d858"/>
        <function-ref name="setType" scoped="" ref="0x4059d938"/>
        <function-ref name="isForMe" scoped="" ref="0x4059da18"/>
        <function-ref name="setGroup" scoped="" ref="0x4059daf8"/>
        <function-ref name="localGroup" scoped="" ref="0x4059dbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x405a1ce0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageC.nc">
      <component-ref qname="RF230ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x405a1ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405ac898"/>
        <function-ref name="clear" scoped="" ref="0x405acc48"/>
        <function-ref name="isValid" scoped="" ref="0x405ac4e8"/>
        <function-ref name="set" scoped="" ref="0x405ab010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x405c9238" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x405c9238"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getReceiveAverage" scoped="" ref="0x405c9b10"/>
        <function-ref name="channelError" scoped="" ref="0x405c94f0"/>
        <function-ref name="getUpdatePeriod" scoped="" ref="0x405c95d0"/>
        <function-ref name="getChannelTime" scoped="" ref="0x405c96b0"/>
        <function-ref name="getErrorAverage" scoped="" ref="0x405c9790"/>
        <function-ref name="getTransmitAverage" scoped="" ref="0x405c9870"/>
        <function-ref name="timerTick" scoped="" ref="0x405c9950"/>
        <function-ref name="getSender" scoped="" ref="0x405c9a30"/>
        <function-ref name="getNeighborAverage" scoped="" ref="0x405c9410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x405c49c8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x405c49c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x405c4ba0"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x405c4c80"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x405c4d60"/>
        <function-ref name="timerTick" scoped="" ref="0x405c4e40"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x405c4f20"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x405bc018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x405bcbe8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x405bcbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="checkPacket" scoped="" ref="0x405bcdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x405c6640" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x405c6640"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x405c6818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x405b88e8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x405b88e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x405b8ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x405c0228" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x405c0228"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x405c0400"/>
        <function-ref name="createAckPacket" scoped="" ref="0x405c04e0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x405c05c0"/>
        <function-ref name="isAckPacket" scoped="" ref="0x405c06a0"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x405c0780"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x405c0860"/>
        <function-ref name="setAckReceived" scoped="" ref="0x405c0940"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x405c0a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEE154Packet" ref="0x405d4040" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEE154Packet" scoped="" ref="0x405d4040"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x405d4218"/>
        <function-ref name="getDSN" scoped="" ref="0x405d42f8"/>
        <function-ref name="setFCF" scoped="" ref="0x405d43d8"/>
        <function-ref name="isAckFrame" scoped="" ref="0x405d44b8"/>
        <function-ref name="set6LowPan" scoped="" ref="0x405d4598"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x405d4678"/>
        <function-ref name="createDataFrame" scoped="" ref="0x405d4758"/>
        <function-ref name="setDSN" scoped="" ref="0x405d4838"/>
        <function-ref name="createAckReply" scoped="" ref="0x405d4918"/>
        <function-ref name="getHeader" scoped="" ref="0x405d49f8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x405d4ad8"/>
        <function-ref name="isDataFrame" scoped="" ref="0x405d4bb8"/>
        <function-ref name="setType" scoped="" ref="0x405d4c98"/>
        <function-ref name="getAckRequired" scoped="" ref="0x405d4df8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x405d4ed8"/>
        <function-ref name="setLength" scoped="" ref="0x405d3010"/>
        <function-ref name="get6LowPan" scoped="" ref="0x405d30f0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x405d31d0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x405d32b0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x405d3390"/>
        <function-ref name="setFramePending" scoped="" ref="0x405d3470"/>
        <function-ref name="getLength" scoped="" ref="0x405d3550"/>
        <function-ref name="setDestPan" scoped="" ref="0x405d3630"/>
        <function-ref name="setAckRequired" scoped="" ref="0x405d3710"/>
        <function-ref name="getFCF" scoped="" ref="0x405d37f0"/>
        <function-ref name="getType" scoped="" ref="0x405d39d0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x405d3ab0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x405d3b90"/>
        <function-ref name="getFramePending" scoped="" ref="0x405d3c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x405d3df0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x405d3df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405e5010"/>
        <function-ref name="payloadLength" scoped="" ref="0x405e50f0"/>
        <function-ref name="getPayload" scoped="" ref="0x405e51d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405e52b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405e5390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x405e0078" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x405e0078"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x405e0250"/>
        <function-ref name="wait" scoped="" ref="0x405e0330"/>
        <function-ref name="cancel" scoped="" ref="0x405e0410"/>
        <function-ref name="isFree" scoped="" ref="0x405e04f0"/>
        <function-ref name="getNow" scoped="" ref="0x405e05d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x405be928" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x405be928"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x405beb00"/>
        <function-ref name="reportChannelError" scoped="" ref="0x405bebe0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x405becc0"/>
        <function-ref name="getSender" scoped="" ref="0x405beda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x405c7a18" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x405c7a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x405c7bf0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x405c7cd0"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x405c7db0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x405c7e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RF230Config" ref="0x405b4a48" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230ActiveMessageP.nc">
      <component-ref qname="RF230ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Config" scoped="" ref="0x405b4a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230Config"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeaderLength" scoped="" ref="0x405b4c20"/>
        <function-ref name="getDefaultChannel" scoped="" ref="0x405b91d0"/>
        <function-ref name="getPayload" scoped="" ref="0x405b4de0"/>
        <function-ref name="setLength" scoped="" ref="0x405b4ec0"/>
        <function-ref name="getLength" scoped="" ref="0x405b9010"/>
        <function-ref name="getMaxLength" scoped="" ref="0x405b90f0"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x405b4d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40615d18" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40615d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406268f0"/>
        <function-ref name="get" scoped="" ref="0x40626630"/>
        <function-ref name="isSet" scoped="" ref="0x40626370"/>
        <function-ref name="set" scoped="" ref="0x40626bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x405a9a48" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x405a9a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x405a9c20"/>
        <function-ref name="payloadLength" scoped="" ref="0x405a9d00"/>
        <function-ref name="getPayload" scoped="" ref="0x405a9de0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405a9ec0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40619010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40617930" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40617930"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40615590"/>
        <function-ref name="get" scoped="" ref="0x406152d0"/>
        <function-ref name="isSet" scoped="" ref="0x40615010"/>
        <function-ref name="set" scoped="" ref="0x40615850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSleepInterval" ref="0x40624120" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSleepInterval" scoped="" ref="0x40624120"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40624ce8"/>
        <function-ref name="get" scoped="" ref="0x40624a28"/>
        <function-ref name="isSet" scoped="" ref="0x40624768"/>
        <function-ref name="set" scoped="" ref="0x40623010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40623540" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40623540"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40621118"/>
        <function-ref name="get" scoped="" ref="0x40623e48"/>
        <function-ref name="isSet" scoped="" ref="0x40623b88"/>
        <function-ref name="set" scoped="" ref="0x406213d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40621a10" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40621a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TRF230" ref="0x4057e600"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x406205b0"/>
        <function-ref name="clear" scoped="" ref="0x40620960"/>
        <function-ref name="isValid" scoped="" ref="0x40620200"/>
        <function-ref name="set" scoped="" ref="0x40620d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40619e60" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40619e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40618050"/>
        <function-ref name="noAck" scoped="" ref="0x40618130"/>
        <function-ref name="wasAcked" scoped="" ref="0x40618210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40618568" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40618568"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40617150"/>
        <function-ref name="get" scoped="" ref="0x40618e70"/>
        <function-ref name="isSet" scoped="" ref="0x40618bb0"/>
        <function-ref name="set" scoped="" ref="0x40617410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x406191a8" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x406191a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40619380"/>
        <function-ref name="source" scoped="" ref="0x40619460"/>
        <function-ref name="address" scoped="" ref="0x40619540"/>
        <function-ref name="destination" scoped="" ref="0x40619620"/>
        <function-ref name="setSource" scoped="" ref="0x40619700"/>
        <function-ref name="setDestination" scoped="" ref="0x406197e0"/>
        <function-ref name="type" scoped="" ref="0x406198c0"/>
        <function-ref name="setType" scoped="" ref="0x406199a0"/>
        <function-ref name="isForMe" scoped="" ref="0x40619a80"/>
        <function-ref name="setGroup" scoped="" ref="0x40619b60"/>
        <function-ref name="localGroup" scoped="" ref="0x40619c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x4061f488" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketC.nc">
      <component-ref qname="RF230PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4061f488"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40630010"/>
        <function-ref name="clear" scoped="" ref="0x406303c0"/>
        <function-ref name="isValid" scoped="" ref="0x4061fbd8"/>
        <function-ref name="set" scoped="" ref="0x40630770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40629d18" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40629d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406288f0"/>
        <function-ref name="get" scoped="" ref="0x40628630"/>
        <function-ref name="isSet" scoped="" ref="0x40628370"/>
        <function-ref name="set" scoped="" ref="0x40628bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4062dc50" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4062dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4062de28"/>
        <function-ref name="payloadLength" scoped="" ref="0x4062df08"/>
        <function-ref name="getPayload" scoped="" ref="0x4062c010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4062c0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4062c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x4062b8f8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x4062b8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40629590"/>
        <function-ref name="get" scoped="" ref="0x406292d0"/>
        <function-ref name="isSet" scoped="" ref="0x40629010"/>
        <function-ref name="set" scoped="" ref="0x40629850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketSleepInterval" ref="0x4063a120" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketSleepInterval" scoped="" ref="0x4063a120"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4063ace8"/>
        <function-ref name="get" scoped="" ref="0x4063aa28"/>
        <function-ref name="isSet" scoped="" ref="0x4063a768"/>
        <function-ref name="set" scoped="" ref="0x40639010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEE154Packet" ref="0x40633c40" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEE154Packet" scoped="" ref="0x40633c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x40633e18"/>
        <function-ref name="getDSN" scoped="" ref="0x40633ef8"/>
        <function-ref name="setFCF" scoped="" ref="0x40632010"/>
        <function-ref name="isAckFrame" scoped="" ref="0x406320f0"/>
        <function-ref name="set6LowPan" scoped="" ref="0x406321d0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x406322b0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x40632390"/>
        <function-ref name="setDSN" scoped="" ref="0x40632470"/>
        <function-ref name="createAckReply" scoped="" ref="0x40632550"/>
        <function-ref name="getHeader" scoped="" ref="0x40632630"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40632710"/>
        <function-ref name="isDataFrame" scoped="" ref="0x406327f0"/>
        <function-ref name="setType" scoped="" ref="0x406328d0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x40632a30"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x40632b10"/>
        <function-ref name="setLength" scoped="" ref="0x40632bf0"/>
        <function-ref name="get6LowPan" scoped="" ref="0x40632cd0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40632db0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x40632e90"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40631010"/>
        <function-ref name="setFramePending" scoped="" ref="0x406310f0"/>
        <function-ref name="getLength" scoped="" ref="0x406311d0"/>
        <function-ref name="setDestPan" scoped="" ref="0x406312b0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40631390"/>
        <function-ref name="getFCF" scoped="" ref="0x40631470"/>
        <function-ref name="getType" scoped="" ref="0x40631650"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40631730"/>
        <function-ref name="getDestAddr" scoped="" ref="0x40631810"/>
        <function-ref name="getFramePending" scoped="" ref="0x406318f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40639540" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40639540"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40637118"/>
        <function-ref name="get" scoped="" ref="0x40639e48"/>
        <function-ref name="isSet" scoped="" ref="0x40639b88"/>
        <function-ref name="set" scoped="" ref="0x406373d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40637a10" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40637a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TRF230" ref="0x4057e600"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x406365b0"/>
        <function-ref name="clear" scoped="" ref="0x40636960"/>
        <function-ref name="isValid" scoped="" ref="0x40636200"/>
        <function-ref name="set" scoped="" ref="0x40636d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x406428c8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x406428c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TRF230" ref="0x4057e600"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40642f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4062d738" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4062d738"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4062d910"/>
        <function-ref name="noAck" scoped="" ref="0x4062d9f0"/>
        <function-ref name="wasAcked" scoped="" ref="0x4062dad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x4062c528" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x4062c528"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4062b118"/>
        <function-ref name="get" scoped="" ref="0x4062ce30"/>
        <function-ref name="isSet" scoped="" ref="0x4062cb70"/>
        <function-ref name="set" scoped="" ref="0x4062b3d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x40644318" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x40644318"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40644960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40635488" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230PacketP.nc">
      <component-ref qname="RF230PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40635488"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40633010"/>
        <function-ref name="clear" scoped="" ref="0x406333c0"/>
        <function-ref name="isValid" scoped="" ref="0x40635bd8"/>
        <function-ref name="set" scoped="" ref="0x40633770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEE154Packet" ref="0x4062e9c0" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <component-ref qname="IEEE154PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEE154Packet" scoped="" ref="0x4062e9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x4062eb98"/>
        <function-ref name="getDSN" scoped="" ref="0x4062ec78"/>
        <function-ref name="setFCF" scoped="" ref="0x4062ed58"/>
        <function-ref name="isAckFrame" scoped="" ref="0x4062ee38"/>
        <function-ref name="set6LowPan" scoped="" ref="0x4062ef18"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x40670010"/>
        <function-ref name="createDataFrame" scoped="" ref="0x406700f0"/>
        <function-ref name="setDSN" scoped="" ref="0x406701d0"/>
        <function-ref name="createAckReply" scoped="" ref="0x406702b0"/>
        <function-ref name="getHeader" scoped="" ref="0x40670390"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40670470"/>
        <function-ref name="isDataFrame" scoped="" ref="0x40670550"/>
        <function-ref name="setType" scoped="" ref="0x40670630"/>
        <function-ref name="getAckRequired" scoped="" ref="0x40670790"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x40670870"/>
        <function-ref name="setLength" scoped="" ref="0x40670950"/>
        <function-ref name="get6LowPan" scoped="" ref="0x40670a30"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40670b10"/>
        <function-ref name="setDestAddr" scoped="" ref="0x40670bf0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40670cd0"/>
        <function-ref name="setFramePending" scoped="" ref="0x40670db0"/>
        <function-ref name="getLength" scoped="" ref="0x40670e90"/>
        <function-ref name="setDestPan" scoped="" ref="0x4066f010"/>
        <function-ref name="setAckRequired" scoped="" ref="0x4066f0f0"/>
        <function-ref name="getFCF" scoped="" ref="0x4066f1d0"/>
        <function-ref name="getType" scoped="" ref="0x4066f3b0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x4066f490"/>
        <function-ref name="getDestAddr" scoped="" ref="0x4066f570"/>
        <function-ref name="getFramePending" scoped="" ref="0x4066f650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4066f7e8" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketC.nc">
      <component-ref qname="IEEE154PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4066f7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4066f9c0"/>
        <function-ref name="source" scoped="" ref="0x4066faa0"/>
        <function-ref name="address" scoped="" ref="0x4066fb80"/>
        <function-ref name="destination" scoped="" ref="0x4066fc60"/>
        <function-ref name="setSource" scoped="" ref="0x4066fd40"/>
        <function-ref name="setDestination" scoped="" ref="0x4066fe20"/>
        <function-ref name="type" scoped="" ref="0x4066ff00"/>
        <function-ref name="setType" scoped="" ref="0x4066e010"/>
        <function-ref name="isForMe" scoped="" ref="0x4066e0f0"/>
        <function-ref name="setGroup" scoped="" ref="0x4066e1d0"/>
        <function-ref name="localGroup" scoped="" ref="0x4066e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEE154Packet" ref="0x4066e9a0" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketP.nc">
      <component-ref qname="IEEE154PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEE154Packet" scoped="" ref="0x4066e9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x4066eb78"/>
        <function-ref name="getDSN" scoped="" ref="0x4066ec58"/>
        <function-ref name="setFCF" scoped="" ref="0x4066ed38"/>
        <function-ref name="isAckFrame" scoped="" ref="0x4066ee18"/>
        <function-ref name="set6LowPan" scoped="" ref="0x4066eef8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x4067f010"/>
        <function-ref name="createDataFrame" scoped="" ref="0x4067f0f0"/>
        <function-ref name="setDSN" scoped="" ref="0x4067f1d0"/>
        <function-ref name="createAckReply" scoped="" ref="0x4067f2b0"/>
        <function-ref name="getHeader" scoped="" ref="0x4067f390"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x4067f470"/>
        <function-ref name="isDataFrame" scoped="" ref="0x4067f550"/>
        <function-ref name="setType" scoped="" ref="0x4067f630"/>
        <function-ref name="getAckRequired" scoped="" ref="0x4067f790"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x4067f870"/>
        <function-ref name="setLength" scoped="" ref="0x4067f950"/>
        <function-ref name="get6LowPan" scoped="" ref="0x4067fa30"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x4067fb10"/>
        <function-ref name="setDestAddr" scoped="" ref="0x4067fbf0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x4067fcd0"/>
        <function-ref name="setFramePending" scoped="" ref="0x4067fdb0"/>
        <function-ref name="getLength" scoped="" ref="0x4067fe90"/>
        <function-ref name="setDestPan" scoped="" ref="0x4067e010"/>
        <function-ref name="setAckRequired" scoped="" ref="0x4067e0f0"/>
        <function-ref name="getFCF" scoped="" ref="0x4067e1d0"/>
        <function-ref name="getType" scoped="" ref="0x4067e3b0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x4067e490"/>
        <function-ref name="getDestAddr" scoped="" ref="0x4067e570"/>
        <function-ref name="getFramePending" scoped="" ref="0x4067e650"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x40678dc8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketP.nc">
      <component-ref qname="IEEE154PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40678dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x4067c010"/>
        <function-ref name="changed" scoped="" ref="0x4067c0f0"/>
        <function-ref name="amGroup" scoped="" ref="0x4067c1d0"/>
        <function-ref name="setAddress" scoped="" ref="0x4067c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4067e7e8" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154PacketP.nc">
      <component-ref qname="IEEE154PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4067e7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4067e9c0"/>
        <function-ref name="source" scoped="" ref="0x4067eaa0"/>
        <function-ref name="address" scoped="" ref="0x4067eb80"/>
        <function-ref name="destination" scoped="" ref="0x4067ec60"/>
        <function-ref name="setSource" scoped="" ref="0x4067ed40"/>
        <function-ref name="setDestination" scoped="" ref="0x4067ee20"/>
        <function-ref name="type" scoped="" ref="0x4067ef00"/>
        <function-ref name="setType" scoped="" ref="0x4067d010"/>
        <function-ref name="isForMe" scoped="" ref="0x4067d0f0"/>
        <function-ref name="setGroup" scoped="" ref="0x4067d1d0"/>
        <function-ref name="localGroup" scoped="" ref="0x4067d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x4066d748" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x4066d748"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x4066d920"/>
        <function-ref name="changed" scoped="" ref="0x4066da00"/>
        <function-ref name="amGroup" scoped="" ref="0x4066dae0"/>
        <function-ref name="setAddress" scoped="" ref="0x4066dbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40671548" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/LocalTimeMicroC.nc">
      <component-ref qname="LocalTimeMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40671548"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40671b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x406ce3e0" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406ce3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TOne" ref="0x403742f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406ceb30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406d2048"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406ceda8"/>
        <function-ref name="overflow" scoped="" ref="0x406d22c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x406d5360" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x406d5360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x406d5538"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x406d5618"/>
        <function-ref name="getControlA" scoped="" ref="0x406d56f8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x406d57d8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x406d58b8"/>
        <function-ref name="setControlB" scoped="" ref="0x406d5998"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x406d5a78"/>
        <function-ref name="getControlB" scoped="" ref="0x406d5b58"/>
        <function-ref name="setControlC" scoped="" ref="0x406d5c38"/>
        <function-ref name="setControlA" scoped="" ref="0x406d5d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x406d9190" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x406d9190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x406e6c68"/>
        <function-ref name="test" scoped="" ref="0x406e6778"/>
        <function-ref name="get" scoped="" ref="0x406d97d8"/>
        <function-ref name="captured" scoped="" ref="0x406d9cf0"/>
        <function-ref name="reset" scoped="" ref="0x406e6010"/>
        <function-ref name="isOn" scoped="" ref="0x406e69f0"/>
        <function-ref name="set" scoped="" ref="0x406d9a50"/>
        <function-ref name="start" scoped="" ref="0x406e6288"/>
        <function-ref name="stop" scoped="" ref="0x406e6500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x406e1cd8" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x406e1cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x406e3288"/>
        <function-ref name="fired" scoped="" ref="0x406e4888"/>
        <function-ref name="get" scoped="" ref="0x406e4370"/>
        <function-ref name="reset" scoped="" ref="0x406e4b00"/>
        <function-ref name="isOn" scoped="" ref="0x406e3500"/>
        <function-ref name="set" scoped="" ref="0x406e45e8"/>
        <function-ref name="start" scoped="" ref="0x406e4d78"/>
        <function-ref name="stop" scoped="" ref="0x406e3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406dc928" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406dc928"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x406cb418"/>
        <function-ref name="test" scoped="" ref="0x406ccf08"/>
        <function-ref name="get" scoped="" ref="0x406cc010"/>
        <function-ref name="setScale" scoped="" ref="0x406cb690"/>
        <function-ref name="getScale" scoped="" ref="0x406cb930"/>
        <function-ref name="reset" scoped="" ref="0x406cc7a0"/>
        <function-ref name="overflow" scoped="" ref="0x406cc528"/>
        <function-ref name="isOn" scoped="" ref="0x406cb1a0"/>
        <function-ref name="set" scoped="" ref="0x406cc288"/>
        <function-ref name="start" scoped="" ref="0x406cca18"/>
        <function-ref name="stop" scoped="" ref="0x406ccc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x406f0530" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x406f0530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x406f0708"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x406f07e8"/>
        <function-ref name="getControlA" scoped="" ref="0x406f08c8"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x406f09a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x406f0a88"/>
        <function-ref name="setControlB" scoped="" ref="0x406f0b68"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x406f0c48"/>
        <function-ref name="getControlB" scoped="" ref="0x406f0d28"/>
        <function-ref name="setControlC" scoped="" ref="0x406f0e08"/>
        <function-ref name="setControlA" scoped="" ref="0x406f0ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x406ec128" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x406ec128"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x406eb690"/>
        <function-ref name="fired" scoped="" ref="0x406ecc88"/>
        <function-ref name="get" scoped="" ref="0x406ec770"/>
        <function-ref name="reset" scoped="" ref="0x406ecf00"/>
        <function-ref name="isOn" scoped="" ref="0x406eb908"/>
        <function-ref name="set" scoped="" ref="0x406ec9e8"/>
        <function-ref name="start" scoped="" ref="0x406eb1a0"/>
        <function-ref name="stop" scoped="" ref="0x406eb418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x406ef258" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x406ef258"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x406eecc0"/>
        <function-ref name="test" scoped="" ref="0x406ee7d0"/>
        <function-ref name="get" scoped="" ref="0x406ef8a0"/>
        <function-ref name="captured" scoped="" ref="0x406efdb8"/>
        <function-ref name="reset" scoped="" ref="0x406ee068"/>
        <function-ref name="isOn" scoped="" ref="0x406eea48"/>
        <function-ref name="set" scoped="" ref="0x406efb18"/>
        <function-ref name="start" scoped="" ref="0x406ee2e0"/>
        <function-ref name="stop" scoped="" ref="0x406ee558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x406ebd20" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x406ebd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x406fe2c0"/>
        <function-ref name="fired" scoped="" ref="0x407008a8"/>
        <function-ref name="get" scoped="" ref="0x40700390"/>
        <function-ref name="reset" scoped="" ref="0x40700b20"/>
        <function-ref name="isOn" scoped="" ref="0x406fe538"/>
        <function-ref name="set" scoped="" ref="0x40700608"/>
        <function-ref name="start" scoped="" ref="0x40700d98"/>
        <function-ref name="stop" scoped="" ref="0x406fe048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x406fe950" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x406fe950"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x406fdf08"/>
        <function-ref name="fired" scoped="" ref="0x406fd528"/>
        <function-ref name="get" scoped="" ref="0x406fd010"/>
        <function-ref name="reset" scoped="" ref="0x406fd7a0"/>
        <function-ref name="isOn" scoped="" ref="0x406fc1a0"/>
        <function-ref name="set" scoped="" ref="0x406fd288"/>
        <function-ref name="start" scoped="" ref="0x406fda18"/>
        <function-ref name="stop" scoped="" ref="0x406fdc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406f3230" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer1P.nc">
      <component-ref qname="HplAtm1281Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406f3230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x406f1ca0"/>
        <function-ref name="test" scoped="" ref="0x406f17b0"/>
        <function-ref name="get" scoped="" ref="0x406f3878"/>
        <function-ref name="setScale" scoped="" ref="0x406f1f18"/>
        <function-ref name="getScale" scoped="" ref="0x406f01d0"/>
        <function-ref name="reset" scoped="" ref="0x406f1048"/>
        <function-ref name="overflow" scoped="" ref="0x406f3d90"/>
        <function-ref name="isOn" scoped="" ref="0x406f1a28"/>
        <function-ref name="set" scoped="" ref="0x406f3af0"/>
        <function-ref name="start" scoped="" ref="0x406f12c0"/>
        <function-ref name="stop" scoped="" ref="0x406f1538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40742c70" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40742c70"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402f55d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402f55d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40742e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40741078" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40741078"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4073aab8"/>
        <function-ref name="test" scoped="" ref="0x4073a5c8"/>
        <function-ref name="get" scoped="" ref="0x407416c0"/>
        <function-ref name="setScale" scoped="" ref="0x4073ad30"/>
        <function-ref name="getScale" scoped="" ref="0x40750010"/>
        <function-ref name="reset" scoped="" ref="0x40741e50"/>
        <function-ref name="overflow" scoped="" ref="0x40741bd8"/>
        <function-ref name="isOn" scoped="" ref="0x4073a840"/>
        <function-ref name="set" scoped="" ref="0x40741938"/>
        <function-ref name="start" scoped="" ref="0x4073a0d8"/>
        <function-ref name="stop" scoped="" ref="0x4073a350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40743890" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40743890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TOne" ref="0x403742f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4074f010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4074f500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4074f288"/>
        <function-ref name="overflow" scoped="" ref="0x4074f778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x4074fa58" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4074fa58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4075b500"/>
        <function-ref name="test" scoped="" ref="0x4075b010"/>
        <function-ref name="get" scoped="" ref="0x4075c0b8"/>
        <function-ref name="setScale" scoped="" ref="0x4075b778"/>
        <function-ref name="getScale" scoped="" ref="0x4075ba18"/>
        <function-ref name="reset" scoped="" ref="0x4075c848"/>
        <function-ref name="overflow" scoped="" ref="0x4075c5d0"/>
        <function-ref name="isOn" scoped="" ref="0x4075b288"/>
        <function-ref name="set" scoped="" ref="0x4075c330"/>
        <function-ref name="start" scoped="" ref="0x4075cac0"/>
        <function-ref name="stop" scoped="" ref="0x4075cd38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40761b40" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40761b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40760308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407607f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40760580"/>
        <function-ref name="overflow" scoped="" ref="0x40760a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x406d3908" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="LocalTimeMicroC.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406d3908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40761068"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40761558"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407612e0"/>
        <function-ref name="overflow" scoped="" ref="0x407617d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x4075e940" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x4075e940"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40775010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40775360" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMicroC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40775360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40775ab0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4076f010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40775d28"/>
        <function-ref name="overflow" scoped="" ref="0x4076f288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x4076d040" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/system/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x4076d040"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4076d688"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40781100" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40781100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40780be0"/>
        <function-ref name="fired" scoped="" ref="0x40781e80"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x407805a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40780348"/>
        <function-ref name="getdt" scoped="" ref="0x407780b8"/>
        <function-ref name="gett0" scoped="" ref="0x40780e38"/>
        <function-ref name="isRunning" scoped="" ref="0x407800f0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40781728"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x407808c0"/>
        <function-ref name="startOneShot" scoped="" ref="0x407819a8"/>
        <function-ref name="stop" scoped="" ref="0x40781c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40778418" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40778418"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40778a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4076df20" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4076df20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4076a110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x4078be60" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x4078be60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407855e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40785ad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40785858"/>
        <function-ref name="overflow" scoped="" ref="0x40785d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40777af8" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40777af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40777cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x4078c258" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x4078c258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4078b708"/>
        <function-ref name="fired" scoped="" ref="0x4078cec0"/>
        <function-ref name="startAt" scoped="" ref="0x4078b3c8"/>
        <function-ref name="isRunning" scoped="" ref="0x4078b150"/>
        <function-ref name="getAlarm" scoped="" ref="0x4078b980"/>
        <function-ref name="start" scoped="" ref="0x4078c9a8"/>
        <function-ref name="stop" scoped="" ref="0x4078cc48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40819010" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40819010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x408184e0"/>
        <function-ref name="fired" scoped="" ref="0x40819c78"/>
        <function-ref name="startAt" scoped="" ref="0x408181a0"/>
        <function-ref name="isRunning" scoped="" ref="0x40819ef0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40818758"/>
        <function-ref name="start" scoped="" ref="0x40819760"/>
        <function-ref name="stop" scoped="" ref="0x40819a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40782bb8" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40782bb8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402f55d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402f55d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40782d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40818a88" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40818a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40816200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408166f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40816478"/>
        <function-ref name="overflow" scoped="" ref="0x40816968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x416d2640" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x416d2640"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x416d2818"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x416d28f8"/>
        <function-ref name="getControlA" scoped="" ref="0x416d29d8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x416d2ab8"/>
        <function-ref name="setControlB" scoped="" ref="0x416d2b98"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x416d2c78"/>
        <function-ref name="getControlB" scoped="" ref="0x416d2d58"/>
        <function-ref name="setControlA" scoped="" ref="0x416d2e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x416d87a0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x416d87a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x416d7c68"/>
        <function-ref name="fired" scoped="" ref="0x416d7438"/>
        <function-ref name="startAt" scoped="" ref="0x416d7928"/>
        <function-ref name="isRunning" scoped="" ref="0x416d76b0"/>
        <function-ref name="getAlarm" scoped="" ref="0x416d7ee0"/>
        <function-ref name="start" scoped="" ref="0x416d8ef0"/>
        <function-ref name="stop" scoped="" ref="0x416d71c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x416d8368" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x416d8368"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x416d8540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x416d6228" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x416d6228"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x416d6978"/>
        <function-ref name="clearOverflow" scoped="" ref="0x416d6e68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x416d6bf0"/>
        <function-ref name="overflow" scoped="" ref="0x416d5110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x416d0a50" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x416d0a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x416d0c28"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x416d0d08"/>
        <function-ref name="controlABusy" scoped="" ref="0x416d0de8"/>
        <function-ref name="controlBBusy" scoped="" ref="0x416d0ec8"/>
        <function-ref name="countBusy" scoped="" ref="0x416ce010"/>
        <function-ref name="compareABusy" scoped="" ref="0x416ce0f0"/>
        <function-ref name="getAssr" scoped="" ref="0x416ce1d0"/>
        <function-ref name="setAssr" scoped="" ref="0x416ce2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x416d1050" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x416d1050"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x416d05a8"/>
        <function-ref name="fired" scoped="" ref="0x416d1bb0"/>
        <function-ref name="get" scoped="" ref="0x416d1698"/>
        <function-ref name="reset" scoped="" ref="0x416d1e28"/>
        <function-ref name="isOn" scoped="" ref="0x416d0820"/>
        <function-ref name="set" scoped="" ref="0x416d1910"/>
        <function-ref name="start" scoped="" ref="0x416d00b8"/>
        <function-ref name="stop" scoped="" ref="0x416d0330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x416d5400" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x416d5400"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x416d3ee0"/>
        <function-ref name="test" scoped="" ref="0x416d39f0"/>
        <function-ref name="get" scoped="" ref="0x416d5a48"/>
        <function-ref name="setScale" scoped="" ref="0x416d2170"/>
        <function-ref name="getScale" scoped="" ref="0x416d2410"/>
        <function-ref name="reset" scoped="" ref="0x416d3288"/>
        <function-ref name="overflow" scoped="" ref="0x416d3010"/>
        <function-ref name="isOn" scoped="" ref="0x416d3c68"/>
        <function-ref name="set" scoped="" ref="0x416d5cc0"/>
        <function-ref name="start" scoped="" ref="0x416d3500"/>
        <function-ref name="stop" scoped="" ref="0x416d3778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x407d51a0" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x407d51a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x407d5378"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x407d5458"/>
        <function-ref name="getControlA" scoped="" ref="0x407d5538"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x407d5618"/>
        <function-ref name="setControlB" scoped="" ref="0x407d56f8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x407d57d8"/>
        <function-ref name="getControlB" scoped="" ref="0x407d58b8"/>
        <function-ref name="setControlA" scoped="" ref="0x407d5998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x407d2858" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x407d2858"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x407d2a30"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x407d2b10"/>
        <function-ref name="controlABusy" scoped="" ref="0x407d2bf0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x407d2cd0"/>
        <function-ref name="countBusy" scoped="" ref="0x407d2db0"/>
        <function-ref name="compareABusy" scoped="" ref="0x407d2e90"/>
        <function-ref name="getAssr" scoped="" ref="0x407d1010"/>
        <function-ref name="setAssr" scoped="" ref="0x407d10f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x407d5cc0" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x407d5cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x407d2288"/>
        <function-ref name="fired" scoped="" ref="0x407d4830"/>
        <function-ref name="get" scoped="" ref="0x407d4318"/>
        <function-ref name="reset" scoped="" ref="0x407d4aa8"/>
        <function-ref name="isOn" scoped="" ref="0x407d2500"/>
        <function-ref name="set" scoped="" ref="0x407d4590"/>
        <function-ref name="start" scoped="" ref="0x407d4d20"/>
        <function-ref name="stop" scoped="" ref="0x407d2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x407c0e80" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x407c0e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x407d68d8"/>
        <function-ref name="test" scoped="" ref="0x407d63e8"/>
        <function-ref name="get" scoped="" ref="0x407d74d8"/>
        <function-ref name="setScale" scoped="" ref="0x407d6b50"/>
        <function-ref name="getScale" scoped="" ref="0x407d6df0"/>
        <function-ref name="reset" scoped="" ref="0x407d7c68"/>
        <function-ref name="overflow" scoped="" ref="0x407d79f0"/>
        <function-ref name="isOn" scoped="" ref="0x407d6660"/>
        <function-ref name="set" scoped="" ref="0x407d7750"/>
        <function-ref name="start" scoped="" ref="0x407d7ee0"/>
        <function-ref name="stop" scoped="" ref="0x407d6170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x407e51a0" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x407e51a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x407e5378"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x407e5458"/>
        <function-ref name="getControlA" scoped="" ref="0x407e5538"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x407e5618"/>
        <function-ref name="setControlB" scoped="" ref="0x407e56f8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x407e57d8"/>
        <function-ref name="getControlB" scoped="" ref="0x407e58b8"/>
        <function-ref name="setControlA" scoped="" ref="0x407e5998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x407e37b8" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x407e37b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x407e3990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x407e3c18" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x407e3c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x407e3df0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x407e3ed0"/>
        <function-ref name="controlABusy" scoped="" ref="0x407e2010"/>
        <function-ref name="controlBBusy" scoped="" ref="0x407e20f0"/>
        <function-ref name="countBusy" scoped="" ref="0x407e21d0"/>
        <function-ref name="compareABusy" scoped="" ref="0x407e22b0"/>
        <function-ref name="getAssr" scoped="" ref="0x407e2390"/>
        <function-ref name="setAssr" scoped="" ref="0x407e2470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x407e5cc0" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x407e5cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x407e3288"/>
        <function-ref name="fired" scoped="" ref="0x407e4830"/>
        <function-ref name="get" scoped="" ref="0x407e4318"/>
        <function-ref name="reset" scoped="" ref="0x407e4aa8"/>
        <function-ref name="isOn" scoped="" ref="0x407e3500"/>
        <function-ref name="set" scoped="" ref="0x407e4590"/>
        <function-ref name="start" scoped="" ref="0x407e4d20"/>
        <function-ref name="stop" scoped="" ref="0x407e3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x407d1de8" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x407d1de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x407cd878"/>
        <function-ref name="test" scoped="" ref="0x407cd388"/>
        <function-ref name="get" scoped="" ref="0x407ce468"/>
        <function-ref name="setScale" scoped="" ref="0x407cdaf0"/>
        <function-ref name="getScale" scoped="" ref="0x407cdd90"/>
        <function-ref name="reset" scoped="" ref="0x407cebf8"/>
        <function-ref name="overflow" scoped="" ref="0x407ce980"/>
        <function-ref name="isOn" scoped="" ref="0x407cd600"/>
        <function-ref name="set" scoped="" ref="0x407ce6e0"/>
        <function-ref name="start" scoped="" ref="0x407cee70"/>
        <function-ref name="stop" scoped="" ref="0x407cd110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x40831bd0" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x40831bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40831da8"/>
        <function-ref name="runTask" scoped="" ref="0x40831e88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40832248" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40832248"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40831708"/>
        <function-ref name="fired" scoped="" ref="0x40832eb0"/>
        <function-ref name="startAt" scoped="" ref="0x408313c8"/>
        <function-ref name="isRunning" scoped="" ref="0x40831150"/>
        <function-ref name="getAlarm" scoped="" ref="0x40831980"/>
        <function-ref name="start" scoped="" ref="0x40832998"/>
        <function-ref name="stop" scoped="" ref="0x40832c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4078df08" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4078df08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40834a18"/>
        <function-ref name="fired" scoped="" ref="0x40814cb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x408343d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x40834180"/>
        <function-ref name="getdt" scoped="" ref="0x40834ec8"/>
        <function-ref name="gett0" scoped="" ref="0x40834c70"/>
        <function-ref name="isRunning" scoped="" ref="0x40814f08"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40814558"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x408346f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x408147d8"/>
        <function-ref name="stop" scoped="" ref="0x40814a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x408584b8" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x408584b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40858690"/>
        <function-ref name="runTask" scoped="" ref="0x40858770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x4085a220" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x4085a220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40859d58"/>
        <function-ref name="fired" scoped="" ref="0x40859010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40859718"/>
        <function-ref name="isOneShot" scoped="" ref="0x408594c0"/>
        <function-ref name="getdt" scoped="" ref="0x40858268"/>
        <function-ref name="gett0" scoped="" ref="0x40858010"/>
        <function-ref name="isRunning" scoped="" ref="0x40859268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4085a848"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40859a38"/>
        <function-ref name="startOneShot" scoped="" ref="0x4085aac8"/>
        <function-ref name="stop" scoped="" ref="0x4085ad48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4082eea8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4082eea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4085ca48"/>
        <function-ref name="fired" scoped="" ref="0x4085dc88"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4085c3e8"/>
        <function-ref name="isOneShot" scoped="" ref="0x4085c180"/>
        <function-ref name="getdt" scoped="" ref="0x4085cf18"/>
        <function-ref name="gett0" scoped="" ref="0x4085ccb0"/>
        <function-ref name="isRunning" scoped="" ref="0x4085def0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4085d500"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4085c718"/>
        <function-ref name="startOneShot" scoped="" ref="0x4085d790"/>
        <function-ref name="stop" scoped="" ref="0x4085da20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40856970" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40856970"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40855010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40855360" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40855360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40855ab0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40854010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40855d28"/>
        <function-ref name="overflow" scoped="" ref="0x40854288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x4086de68" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <component-ref qname="RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x4086de68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4086a050"/>
        <function-ref name="wait" scoped="" ref="0x4086a130"/>
        <function-ref name="cancel" scoped="" ref="0x4086a210"/>
        <function-ref name="isFree" scoped="" ref="0x4086a2f0"/>
        <function-ref name="getNow" scoped="" ref="0x4086a3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x4086a9c8" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmC.nc">
      <component-ref qname="RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4086a9c8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f57d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f57d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TRF230" ref="0x4057e600"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40868e70"/>
        <function-ref name="fired" scoped="" ref="0x40868640"/>
        <function-ref name="startAt" scoped="" ref="0x40868b30"/>
        <function-ref name="isRunning" scoped="" ref="0x408688b8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40867110"/>
        <function-ref name="start" scoped="" ref="0x40868128"/>
        <function-ref name="stop" scoped="" ref="0x408683c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x40867b60" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40867b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40867d38"/>
        <function-ref name="wait" scoped="" ref="0x40867e18"/>
        <function-ref name="cancel" scoped="" ref="0x40867ef8"/>
        <function-ref name="isFree" scoped="" ref="0x40864010"/>
        <function-ref name="getNow" scoped="" ref="0x408640f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40864470" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40864470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TRF230" ref="0x4057e600"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40862940"/>
        <function-ref name="fired" scoped="" ref="0x40862110"/>
        <function-ref name="startAt" scoped="" ref="0x40862600"/>
        <function-ref name="isRunning" scoped="" ref="0x40862388"/>
        <function-ref name="getAlarm" scoped="" ref="0x40862bb8"/>
        <function-ref name="start" scoped="" ref="0x40864bc0"/>
        <function-ref name="stop" scoped="" ref="0x40864e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x4087a740" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarmP.nc">
      <component-ref qname="RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x4087a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x4087a918"/>
        <function-ref name="suspend" scoped="" ref="0x4087a9f8"/>
        <function-ref name="resume" scoped="" ref="0x4087aad8"/>
        <function-ref name="run" scoped="" ref="0x4087abb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x40866b18" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40866b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40866cf0"/>
        <function-ref name="suspend" scoped="" ref="0x40866dd0"/>
        <function-ref name="resume" scoped="" ref="0x40866eb0"/>
        <function-ref name="run" scoped="" ref="0x40870010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40884f18" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40884f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40882108"/>
        <function-ref name="getPayload" scoped="" ref="0x408821e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408822c8"/>
        <function-ref name="cancel" scoped="" ref="0x408823a8"/>
        <function-ref name="sendDone" scoped="" ref="0x40882488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40882698" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40882698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40882870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40871ab0" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40871ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404bdd68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40871c88"/>
        <function-ref name="getPayload" scoped="" ref="0x40871d68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40871e48"/>
        <function-ref name="cancel" scoped="" ref="0x40871f28"/>
        <function-ref name="sendDone" scoped="" ref="0x40884018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40884b18" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40884b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404bdd68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40884cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x408817b0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x408817b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="checkPacket" scoped="" ref="0x40881988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40884480" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40884480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404bdd68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40884658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40882a08" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageLayerC.nc">
      <component-ref qname="ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40882a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40882be0"/>
        <function-ref name="source" scoped="" ref="0x40882cc0"/>
        <function-ref name="address" scoped="" ref="0x40882da0"/>
        <function-ref name="destination" scoped="" ref="0x40882e80"/>
        <function-ref name="setSource" scoped="" ref="0x40881010"/>
        <function-ref name="setDestination" scoped="" ref="0x408810f0"/>
        <function-ref name="type" scoped="" ref="0x408811d0"/>
        <function-ref name="setType" scoped="" ref="0x408812b0"/>
        <function-ref name="isForMe" scoped="" ref="0x40881390"/>
        <function-ref name="setGroup" scoped="" ref="0x40881470"/>
        <function-ref name="localGroup" scoped="" ref="0x40881550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4088a0e0" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4088a0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4088a2b8"/>
        <function-ref name="stopDone" scoped="" ref="0x4088a398"/>
        <function-ref name="start" scoped="" ref="0x4088a478"/>
        <function-ref name="stop" scoped="" ref="0x4088a558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408a58f8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408a58f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408a5ad0"/>
        <function-ref name="getPayload" scoped="" ref="0x408a5bb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408a5c90"/>
        <function-ref name="cancel" scoped="" ref="0x408a5d70"/>
        <function-ref name="sendDone" scoped="" ref="0x408a5e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x408a4098" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x408a4098"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408a4270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4088a6c8" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4088a6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4088a8a0"/>
        <function-ref name="getPayload" scoped="" ref="0x4088a980"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4088aa60"/>
        <function-ref name="cancel" scoped="" ref="0x4088ab40"/>
        <function-ref name="sendDone" scoped="" ref="0x4088ac20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x408a52a8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x408a52a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408a5480"/>
        <function-ref name="stopDone" scoped="" ref="0x408a5560"/>
        <function-ref name="start" scoped="" ref="0x408a5640"/>
        <function-ref name="stop" scoped="" ref="0x408a5720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4088ada8" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerC.nc">
      <component-ref qname="IEEE154NetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4088ada8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408a5010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408a1be0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408a1be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408a1db8"/>
        <function-ref name="getPayload" scoped="" ref="0x408a1e98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408a0010"/>
        <function-ref name="cancel" scoped="" ref="0x408a00f0"/>
        <function-ref name="sendDone" scoped="" ref="0x408a01d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x408a03e0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x408a03e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408a05b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408a4980" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408a4980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408a4b58"/>
        <function-ref name="getPayload" scoped="" ref="0x408a4c38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408a4d18"/>
        <function-ref name="cancel" scoped="" ref="0x408a4df8"/>
        <function-ref name="sendDone" scoped="" ref="0x408a4ed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NonTinyosReceive" ref="0x408a17e0" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NonTinyosReceive" scoped="" ref="0x408a17e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408a19b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEE154Packet" ref="0x408a0780" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEE154Packet" scoped="" ref="0x408a0780"/></type-interface>
      <instance>
        <interfacedef-ref qname="IEEE154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x408a0958"/>
        <function-ref name="getDSN" scoped="" ref="0x408a0a38"/>
        <function-ref name="setFCF" scoped="" ref="0x408a0b18"/>
        <function-ref name="isAckFrame" scoped="" ref="0x408a0bf8"/>
        <function-ref name="set6LowPan" scoped="" ref="0x408a0cd8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x408a0db8"/>
        <function-ref name="createDataFrame" scoped="" ref="0x408a0e98"/>
        <function-ref name="setDSN" scoped="" ref="0x4089f010"/>
        <function-ref name="createAckReply" scoped="" ref="0x4089f0f0"/>
        <function-ref name="getHeader" scoped="" ref="0x4089f1d0"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x4089f2b0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x4089f390"/>
        <function-ref name="setType" scoped="" ref="0x4089f470"/>
        <function-ref name="getAckRequired" scoped="" ref="0x4089f5d0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x4089f6b0"/>
        <function-ref name="setLength" scoped="" ref="0x4089f790"/>
        <function-ref name="get6LowPan" scoped="" ref="0x4089f870"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x4089f950"/>
        <function-ref name="setDestAddr" scoped="" ref="0x4089fa30"/>
        <function-ref name="createAckFrame" scoped="" ref="0x4089fb10"/>
        <function-ref name="setFramePending" scoped="" ref="0x4089fbf0"/>
        <function-ref name="getLength" scoped="" ref="0x4089fcd0"/>
        <function-ref name="setDestPan" scoped="" ref="0x4089fdb0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x4089fe90"/>
        <function-ref name="getFCF" scoped="" ref="0x4089e010"/>
        <function-ref name="getType" scoped="" ref="0x4089e1f0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x4089e2d0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x4089e3b0"/>
        <function-ref name="getFramePending" scoped="" ref="0x4089e490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x408a10a8" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154NetworkLayerP.nc">
      <component-ref qname="IEEE154NetworkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x408a10a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408a1280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x408ae590" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x408ae590"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408ae768"/>
        <function-ref name="stopDone" scoped="" ref="0x408ae848"/>
        <function-ref name="start" scoped="" ref="0x408ae928"/>
        <function-ref name="stop" scoped="" ref="0x408aea08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x408cd010" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x408cd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x408cd1e8"/>
        <function-ref name="request" scoped="" ref="0x408cd2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioSend" ref="0x408cde48" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioSend" scoped="" ref="0x408cde48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408cb050"/>
        <function-ref name="ready" scoped="" ref="0x408cb130"/>
        <function-ref name="sendDone" scoped="" ref="0x408cb210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408ca250" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408ca250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408ca428"/>
        <function-ref name="getPayload" scoped="" ref="0x408ca508"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408ca5e8"/>
        <function-ref name="cancel" scoped="" ref="0x408ca6c8"/>
        <function-ref name="sendDone" scoped="" ref="0x408ca7a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x408ca908" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x408ca908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408caae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x408ce070" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x408ce070"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x408ce248"/>
        <function-ref name="turnOn" scoped="" ref="0x408ce328"/>
        <function-ref name="setChannel" scoped="" ref="0x408ce408"/>
        <function-ref name="done" scoped="" ref="0x408ce4e8"/>
        <function-ref name="standby" scoped="" ref="0x408ce5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408aeb48" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408aeb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408aed20"/>
        <function-ref name="getPayload" scoped="" ref="0x408aee00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408aeee0"/>
        <function-ref name="cancel" scoped="" ref="0x408bc010"/>
        <function-ref name="sendDone" scoped="" ref="0x408bc0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x408bc548" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x408bc548"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x408bc720"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x408bc800"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x408bc8e0"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x408bc9c0"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x408bcaa0"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x408bcb80"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x408bcc60"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x408bcd40"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x408bce20"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x408bcf00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x408cd428" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x408cd428"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x408cd600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x408cebe0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x408cebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408cedb8"/>
        <function-ref name="header" scoped="" ref="0x408cee98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x408cd790" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x408cd790"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x408cd968"/>
        <function-ref name="turnOn" scoped="" ref="0x408cda48"/>
        <function-ref name="setChannel" scoped="" ref="0x408cdb28"/>
        <function-ref name="done" scoped="" ref="0x408cdc08"/>
        <function-ref name="standby" scoped="" ref="0x408cdce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x408cbc20" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x408cbc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408cbdf8"/>
        <function-ref name="stopDone" scoped="" ref="0x408cbed8"/>
        <function-ref name="start" scoped="" ref="0x408ca010"/>
        <function-ref name="stop" scoped="" ref="0x408ca0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x408cac40" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x408cac40"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x408cae18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x408bc230" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x408bc230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408bc408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioReceive" ref="0x408cb370" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioReceive" scoped="" ref="0x408cb370"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408cb548"/>
        <function-ref name="header" scoped="" ref="0x408cb628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x408ce708" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x408ce708"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408ce8e0"/>
        <function-ref name="ready" scoped="" ref="0x408ce9c0"/>
        <function-ref name="sendDone" scoped="" ref="0x408ceaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x408cb788" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x408cb788"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x408cb9e0"/>
        <function-ref name="request" scoped="" ref="0x408cbac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x408becb0" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerP.nc">
      <component-ref qname="DummyLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x408becb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x408bee88"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x408bb010"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x408bb0f0"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x408bb1d0"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x408bb2b0"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x408bb390"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x408bb470"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x408bb550"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x408bb630"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x408bb710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x408c8940" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x408c8940"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408c8b18"/>
        <function-ref name="stopDone" scoped="" ref="0x408c8bf8"/>
        <function-ref name="start" scoped="" ref="0x408c8cd8"/>
        <function-ref name="stop" scoped="" ref="0x408c8db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x408c59e8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x408c59e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x408c5bc0"/>
        <function-ref name="turnOn" scoped="" ref="0x408c5ca0"/>
        <function-ref name="setChannel" scoped="" ref="0x408c5d80"/>
        <function-ref name="done" scoped="" ref="0x408c5e60"/>
        <function-ref name="standby" scoped="" ref="0x408c4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408c8f28" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408c8f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408c5110"/>
        <function-ref name="getPayload" scoped="" ref="0x408c51f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408c52d0"/>
        <function-ref name="cancel" scoped="" ref="0x408c53b0"/>
        <function-ref name="sendDone" scoped="" ref="0x408c5490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x408c4b40" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x408c4b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408c4d18"/>
        <function-ref name="payloadLength" scoped="" ref="0x408c4df8"/>
        <function-ref name="getPayload" scoped="" ref="0x408c4ed8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408e1010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408e10f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x408c4708" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x408c4708"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408c48e0"/>
        <function-ref name="header" scoped="" ref="0x408c49c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x408c5618" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x408c5618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408c57f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x408c41b0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerC.nc">
      <component-ref qname="MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x408c41b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408c4388"/>
        <function-ref name="ready" scoped="" ref="0x408c4468"/>
        <function-ref name="sendDone" scoped="" ref="0x408c4548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x408e1850" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x408e1850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408e1a28"/>
        <function-ref name="stopDone" scoped="" ref="0x408e1b08"/>
        <function-ref name="start" scoped="" ref="0x408e1be8"/>
        <function-ref name="stop" scoped="" ref="0x408e1cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x408e1ed8" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x408e1ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408de0c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x408dece0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x408dece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x408deeb8"/>
        <function-ref name="turnOn" scoped="" ref="0x408dd010"/>
        <function-ref name="setChannel" scoped="" ref="0x408dd0f0"/>
        <function-ref name="done" scoped="" ref="0x408dd1d0"/>
        <function-ref name="standby" scoped="" ref="0x408dd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408de230" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408de230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408de408"/>
        <function-ref name="getPayload" scoped="" ref="0x408de4e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408de5c8"/>
        <function-ref name="cancel" scoped="" ref="0x408de6a8"/>
        <function-ref name="sendDone" scoped="" ref="0x408de788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x408dc448" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x408dc448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408dc620"/>
        <function-ref name="payloadLength" scoped="" ref="0x408dc700"/>
        <function-ref name="getPayload" scoped="" ref="0x408dc7e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408dc8c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408dc9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x408dc010" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x408dc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408dc1e8"/>
        <function-ref name="header" scoped="" ref="0x408dc2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x408d63a0" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x408d63a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408d6578"/>
        <function-ref name="runTask" scoped="" ref="0x408d6658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x408de910" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x408de910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408deae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x408ef9a0" loc="139:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x408ef9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408efb78"/>
        <function-ref name="runTask" scoped="" ref="0x408efc58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x408fadb8" loc="267:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x408fadb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408f9010"/>
        <function-ref name="runTask" scoped="" ref="0x408f90f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x408dda50" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x408dda50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408ddc28"/>
        <function-ref name="ready" scoped="" ref="0x408ddd08"/>
        <function-ref name="sendDone" scoped="" ref="0x408ddde8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x408dd438" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/MessageBufferLayerP.nc">
      <component-ref qname="MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x408dd438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x408dd610"/>
        <function-ref name="suspend" scoped="" ref="0x408dd6f0"/>
        <function-ref name="resume" scoped="" ref="0x408dd7d0"/>
        <function-ref name="run" scoped="" ref="0x408dd8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4090a950" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4090a950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4090ab28"/>
        <function-ref name="getPayload" scoped="" ref="0x4090ac08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4090ace8"/>
        <function-ref name="cancel" scoped="" ref="0x4090adc8"/>
        <function-ref name="sendDone" scoped="" ref="0x4090aea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40909168" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40909168"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40909340"/>
        <function-ref name="header" scoped="" ref="0x40909420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408c6cd8" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408c6cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408c6eb0"/>
        <function-ref name="getPayload" scoped="" ref="0x4090a010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4090a0f0"/>
        <function-ref name="cancel" scoped="" ref="0x4090a1d0"/>
        <function-ref name="sendDone" scoped="" ref="0x4090a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40909640" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40909640"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40909818"/>
        <function-ref name="reportChannelError" scoped="" ref="0x409098f8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x409099d8"/>
        <function-ref name="getSender" scoped="" ref="0x40909ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x4090a470" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerC.nc">
      <component-ref qname="UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x4090a470"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4090a648"/>
        <function-ref name="header" scoped="" ref="0x4090a728"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x409050c8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x409050c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409052a0"/>
        <function-ref name="getPayload" scoped="" ref="0x40905380"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40905460"/>
        <function-ref name="cancel" scoped="" ref="0x40905540"/>
        <function-ref name="sendDone" scoped="" ref="0x40905620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40905868" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40905868"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40905a40"/>
        <function-ref name="header" scoped="" ref="0x40905b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x4091ba00" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4091ba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4091bbd8"/>
        <function-ref name="clearAll" scoped="" ref="0x4091bcb8"/>
        <function-ref name="get" scoped="" ref="0x4091bd98"/>
        <function-ref name="set" scoped="" ref="0x4091be78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40906170" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40906170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40906348"/>
        <function-ref name="getPayload" scoped="" ref="0x40906428"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40906508"/>
        <function-ref name="cancel" scoped="" ref="0x409065e8"/>
        <function-ref name="sendDone" scoped="" ref="0x409066c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x409009c8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x409009c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x40900ba0"/>
        <function-ref name="insertNode" scoped="" ref="0x40900c80"/>
        <function-ref name="getNode" scoped="" ref="0x40900d60"/>
        <function-ref name="evicted" scoped="" ref="0x40900e40"/>
        <function-ref name="getIndex" scoped="" ref="0x40900f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40906888" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40906888"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40906a60"/>
        <function-ref name="header" scoped="" ref="0x40906b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40906cb0" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40906cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40906e88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x40905ce0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueLayerP.nc">
      <component-ref qname="UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x40905ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40905eb8"/>
        <function-ref name="reportChannelError" scoped="" ref="0x40904010"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x409040f0"/>
        <function-ref name="getSender" scoped="" ref="0x409041d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x40908de8" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x40908de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x4092c010"/>
        <function-ref name="insertNode" scoped="" ref="0x4092c0f0"/>
        <function-ref name="getNode" scoped="" ref="0x4092c1d0"/>
        <function-ref name="evicted" scoped="" ref="0x4092c2b0"/>
        <function-ref name="getIndex" scoped="" ref="0x4092c390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x40929860" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40929860"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40929a38"/>
        <function-ref name="clearAll" scoped="" ref="0x40929b18"/>
        <function-ref name="get" scoped="" ref="0x40929bf8"/>
        <function-ref name="set" scoped="" ref="0x40929cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x4092cda0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x4092cda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x40929010"/>
        <function-ref name="insertNode" scoped="" ref="0x409290f0"/>
        <function-ref name="getNode" scoped="" ref="0x409291d0"/>
        <function-ref name="evicted" scoped="" ref="0x409292b0"/>
        <function-ref name="getIndex" scoped="" ref="0x40929390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4092ca08" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4092ca08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4092cbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x4090f848" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlagC.nc">
      <component-ref qname="UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4090f848"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4090fa20"/>
        <function-ref name="clearAll" scoped="" ref="0x4090fb00"/>
        <function-ref name="get" scoped="" ref="0x4090fbe0"/>
        <function-ref name="set" scoped="" ref="0x4090fcc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4092d428" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4092d428"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4092d600"/>
        <function-ref name="ready" scoped="" ref="0x4092d6e0"/>
        <function-ref name="sendDone" scoped="" ref="0x4092d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4092da08" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4092da08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4092dbe0"/>
        <function-ref name="header" scoped="" ref="0x4092dcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x4092eba8" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x4092eba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x4092ed80"/>
        <function-ref name="turnOn" scoped="" ref="0x4092ee60"/>
        <function-ref name="setChannel" scoped="" ref="0x4092d010"/>
        <function-ref name="done" scoped="" ref="0x4092d0f0"/>
        <function-ref name="standby" scoped="" ref="0x4092d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x4092dee0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x4092dee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x4094c0e0"/>
        <function-ref name="turnOn" scoped="" ref="0x4094c1c0"/>
        <function-ref name="setChannel" scoped="" ref="0x4094c2a0"/>
        <function-ref name="done" scoped="" ref="0x4094c380"/>
        <function-ref name="standby" scoped="" ref="0x4094c460"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x4094c6d0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x4094c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getReceiveAverage" scoped="" ref="0x4094b010"/>
        <function-ref name="channelError" scoped="" ref="0x4094c988"/>
        <function-ref name="getUpdatePeriod" scoped="" ref="0x4094ca68"/>
        <function-ref name="getChannelTime" scoped="" ref="0x4094cb48"/>
        <function-ref name="getErrorAverage" scoped="" ref="0x4094cc28"/>
        <function-ref name="getTransmitAverage" scoped="" ref="0x4094cd08"/>
        <function-ref name="timerTick" scoped="" ref="0x4094cde8"/>
        <function-ref name="getSender" scoped="" ref="0x4094cec8"/>
        <function-ref name="getNeighborAverage" scoped="" ref="0x4094c8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x4092e748" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x4092e748"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4092e920"/>
        <function-ref name="header" scoped="" ref="0x4092ea00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x4092e1f0" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerC.nc">
      <component-ref qname="TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x4092e1f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4092e3c8"/>
        <function-ref name="ready" scoped="" ref="0x4092e4a8"/>
        <function-ref name="sendDone" scoped="" ref="0x4092e588"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x409464b8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x409464b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40946690"/>
        <function-ref name="ready" scoped="" ref="0x40946770"/>
        <function-ref name="sendDone" scoped="" ref="0x40946850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrafficMonitorConfig" ref="0x40947970" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x40947970"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getReceiveAverage" scoped="" ref="0x409462b0"/>
        <function-ref name="channelError" scoped="" ref="0x40947c28"/>
        <function-ref name="getUpdatePeriod" scoped="" ref="0x40947d08"/>
        <function-ref name="getChannelTime" scoped="" ref="0x40947de8"/>
        <function-ref name="getErrorAverage" scoped="" ref="0x40947ec8"/>
        <function-ref name="getTransmitAverage" scoped="" ref="0x40946010"/>
        <function-ref name="timerTick" scoped="" ref="0x409460f0"/>
        <function-ref name="getSender" scoped="" ref="0x409461d0"/>
        <function-ref name="getNeighborAverage" scoped="" ref="0x40947b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40946a98" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40946a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40946c70"/>
        <function-ref name="header" scoped="" ref="0x40946d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x409471b8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x409471b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40947390"/>
        <function-ref name="turnOn" scoped="" ref="0x40947470"/>
        <function-ref name="setChannel" scoped="" ref="0x40947550"/>
        <function-ref name="done" scoped="" ref="0x40947630"/>
        <function-ref name="standby" scoped="" ref="0x40947710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x40945010" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x40945010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409451e8"/>
        <function-ref name="turnOn" scoped="" ref="0x409452c8"/>
        <function-ref name="setChannel" scoped="" ref="0x409453a8"/>
        <function-ref name="done" scoped="" ref="0x40945488"/>
        <function-ref name="standby" scoped="" ref="0x40945568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x40942a70" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x40942a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x40942c48"/>
        <function-ref name="insertNode" scoped="" ref="0x40942d28"/>
        <function-ref name="getNode" scoped="" ref="0x40942e08"/>
        <function-ref name="evicted" scoped="" ref="0x40942ee8"/>
        <function-ref name="getIndex" scoped="" ref="0x40941010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x4094bcc8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x4094bcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4094bea0"/>
        <function-ref name="header" scoped="" ref="0x40947010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x409411f8" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x409411f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409413d0"/>
        <function-ref name="clearAll" scoped="" ref="0x409414b0"/>
        <function-ref name="get" scoped="" ref="0x40941590"/>
        <function-ref name="set" scoped="" ref="0x40941670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x409417f8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x409417f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x409419d0"/>
        <function-ref name="suspend" scoped="" ref="0x40941ab0"/>
        <function-ref name="resume" scoped="" ref="0x40941b90"/>
        <function-ref name="run" scoped="" ref="0x40941c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x4094b770" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x4094b770"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4094b948"/>
        <function-ref name="ready" scoped="" ref="0x4094ba28"/>
        <function-ref name="sendDone" scoped="" ref="0x4094bb08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startStopTimer" ref="0x40967a50" loc="229:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startStopTimer" scoped="" ref="0x40967a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40967c28"/>
        <function-ref name="runTask" scoped="" ref="0x40967d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40945808" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorLayerP.nc">
      <component-ref qname="TrafficMonitorLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40945808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40942330"/>
        <function-ref name="fired" scoped="" ref="0x409445b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40944cb8"/>
        <function-ref name="isOneShot" scoped="" ref="0x40944a60"/>
        <function-ref name="getdt" scoped="" ref="0x409427e0"/>
        <function-ref name="gett0" scoped="" ref="0x40942588"/>
        <function-ref name="isRunning" scoped="" ref="0x40944808"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40945e30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40942010"/>
        <function-ref name="startOneShot" scoped="" ref="0x409440d8"/>
        <function-ref name="stop" scoped="" ref="0x40944358"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40963918" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="TrafficMonitorLayerC.UpdateTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40963918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x409784c8"/>
        <function-ref name="fired" scoped="" ref="0x40962768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40962e70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40962c18"/>
        <function-ref name="getdt" scoped="" ref="0x40978978"/>
        <function-ref name="gett0" scoped="" ref="0x40978720"/>
        <function-ref name="isRunning" scoped="" ref="0x409629c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40962010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x409781a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40962290"/>
        <function-ref name="stop" scoped="" ref="0x40962510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x4095fab8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x4095fab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4097a650"/>
        <function-ref name="fired" scoped="" ref="0x4097c858"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4097a010"/>
        <function-ref name="isOneShot" scoped="" ref="0x4097cd08"/>
        <function-ref name="getdt" scoped="" ref="0x4097ab00"/>
        <function-ref name="gett0" scoped="" ref="0x4097a8a8"/>
        <function-ref name="isRunning" scoped="" ref="0x4097cab0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4097c100"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4097a330"/>
        <function-ref name="startOneShot" scoped="" ref="0x4097c380"/>
        <function-ref name="stop" scoped="" ref="0x4097c600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x40977850" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlagC.nc">
      <component-ref qname="TrafficMonitorLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40977850"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40977a28"/>
        <function-ref name="clearAll" scoped="" ref="0x40977b08"/>
        <function-ref name="get" scoped="" ref="0x40977be8"/>
        <function-ref name="set" scoped="" ref="0x40977cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40971c60" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40971c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40971e38"/>
        <function-ref name="ready" scoped="" ref="0x40971f18"/>
        <function-ref name="sendDone" scoped="" ref="0x40970010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40970258" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40970258"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40970430"/>
        <function-ref name="header" scoped="" ref="0x40970510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40970788" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40970788"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x40970960"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x40970a40"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x40970b20"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x40970c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40971750" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40971750"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40971928"/>
        <function-ref name="header" scoped="" ref="0x40971a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409711f8" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerC.nc">
      <component-ref qname="RandomCollisionLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409711f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409713d0"/>
        <function-ref name="ready" scoped="" ref="0x409714b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40971590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4096fe40" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4096fe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4098c050"/>
        <function-ref name="ready" scoped="" ref="0x4098c130"/>
        <function-ref name="sendDone" scoped="" ref="0x4098c210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4098c458" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4098c458"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4098c630"/>
        <function-ref name="header" scoped="" ref="0x4098c710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x4098c8b8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x4098c8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4098ca90"/>
        <function-ref name="wait" scoped="" ref="0x4098cb70"/>
        <function-ref name="cancel" scoped="" ref="0x4098cc50"/>
        <function-ref name="isFree" scoped="" ref="0x4098cd30"/>
        <function-ref name="getNow" scoped="" ref="0x4098ce10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x4098bc10" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x4098bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x4098bde8"/>
        <function-ref name="rand32" scoped="" ref="0x4098bec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x4098a198" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x4098a198"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x4098a370"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x4098a450"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x4098a530"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x4098a610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x4096f930" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x4096f930"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4096fb08"/>
        <function-ref name="header" scoped="" ref="0x4096fbe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x4096f3d8" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x4096f3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4096f5b0"/>
        <function-ref name="ready" scoped="" ref="0x4096f690"/>
        <function-ref name="sendDone" scoped="" ref="0x4096f770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x409861e0" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionLayerP.nc">
      <component-ref qname="RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x409861e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x409863b8"/>
        <function-ref name="runTask" scoped="" ref="0x40986498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40991c40" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40991c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40991e18"/>
        <function-ref name="rand32" scoped="" ref="0x40991ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40991380" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40991380"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409919a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40994010" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40994010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409941e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x4098f6e0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x4098f6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x4098f8b8"/>
        <function-ref name="rand32" scoped="" ref="0x4098f998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40993dd8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40993dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4098f448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x409938b8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x409938b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40993a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x409a78a0" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x409a78a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409a7a78"/>
        <function-ref name="ready" scoped="" ref="0x409a7b58"/>
        <function-ref name="sendDone" scoped="" ref="0x409a7c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x409a7e80" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x409a7e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409a6070"/>
        <function-ref name="header" scoped="" ref="0x409a6150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x409a63a0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x409a63a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x409a6578"/>
        <function-ref name="createAckPacket" scoped="" ref="0x409a6658"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x409a6738"/>
        <function-ref name="isAckPacket" scoped="" ref="0x409a6818"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x409a68f8"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x409a69d8"/>
        <function-ref name="setAckReceived" scoped="" ref="0x409a6ab8"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x409a6b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x409a7390" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x409a7390"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409a7568"/>
        <function-ref name="header" scoped="" ref="0x409a7648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40973df8" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerC.nc">
      <component-ref qname="SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40973df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409a7010"/>
        <function-ref name="ready" scoped="" ref="0x409a70f0"/>
        <function-ref name="sendDone" scoped="" ref="0x409a71d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x409a5d30" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x409a5d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409a5f08"/>
        <function-ref name="ready" scoped="" ref="0x409a2010"/>
        <function-ref name="sendDone" scoped="" ref="0x409a20f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x409a2338" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x409a2338"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409a2510"/>
        <function-ref name="header" scoped="" ref="0x409a25f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x409a2798" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x409a2798"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x409a2970"/>
        <function-ref name="wait" scoped="" ref="0x409a2a50"/>
        <function-ref name="cancel" scoped="" ref="0x409a2b30"/>
        <function-ref name="isFree" scoped="" ref="0x409a2c10"/>
        <function-ref name="getNow" scoped="" ref="0x409a2cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x409a5820" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x409a5820"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409a59f8"/>
        <function-ref name="header" scoped="" ref="0x409a5ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareAckConfig" ref="0x409a2ee0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x409a2ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x409a10e0"/>
        <function-ref name="createAckPacket" scoped="" ref="0x409a11c0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x409a12a0"/>
        <function-ref name="isAckPacket" scoped="" ref="0x409a1380"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x409a1460"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x409a1540"/>
        <function-ref name="setAckReceived" scoped="" ref="0x409a1620"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x409a1700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409a52c8" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckLayerP.nc">
      <component-ref qname="SoftwareAckLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409a52c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409a54a0"/>
        <function-ref name="ready" scoped="" ref="0x409a5580"/>
        <function-ref name="sendDone" scoped="" ref="0x409a5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40972da8" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40972da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40990010"/>
        <function-ref name="stopDone" scoped="" ref="0x409900f0"/>
        <function-ref name="start" scoped="" ref="0x409901d0"/>
        <function-ref name="stop" scoped="" ref="0x409902b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x409b08e0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x409b08e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x409b0ab8"/>
        <function-ref name="request" scoped="" ref="0x409b0b98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioSend" ref="0x409af748" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioSend" scoped="" ref="0x409af748"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409af920"/>
        <function-ref name="ready" scoped="" ref="0x409afa00"/>
        <function-ref name="sendDone" scoped="" ref="0x409afae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x409aeb00" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x409aeb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409aecd8"/>
        <function-ref name="getPayload" scoped="" ref="0x409aedb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409aee98"/>
        <function-ref name="cancel" scoped="" ref="0x409ad010"/>
        <function-ref name="sendDone" scoped="" ref="0x409ad0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x409ad250" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x409ad250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409ad428"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x409b2930" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x409b2930"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409b2b08"/>
        <function-ref name="turnOn" scoped="" ref="0x409b2be8"/>
        <function-ref name="setChannel" scoped="" ref="0x409b2cc8"/>
        <function-ref name="done" scoped="" ref="0x409b2da8"/>
        <function-ref name="standby" scoped="" ref="0x409b2e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x409903f0" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x409903f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409905c8"/>
        <function-ref name="getPayload" scoped="" ref="0x409906a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40990788"/>
        <function-ref name="cancel" scoped="" ref="0x40990868"/>
        <function-ref name="sendDone" scoped="" ref="0x40990948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40990da0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40990da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x409b2010"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x409b20f0"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x409b21d0"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x409b22b0"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x409b2390"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x409b2470"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x409b2550"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x409b2630"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x409b2710"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x409b27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x409b0cf8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x409b0cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x409b0ed0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x409b04e8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x409b04e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409b06c0"/>
        <function-ref name="header" scoped="" ref="0x409b07a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x409af090" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x409af090"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409af268"/>
        <function-ref name="turnOn" scoped="" ref="0x409af348"/>
        <function-ref name="setChannel" scoped="" ref="0x409af428"/>
        <function-ref name="done" scoped="" ref="0x409af508"/>
        <function-ref name="standby" scoped="" ref="0x409af5e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x409ae528" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x409ae528"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x409ae700"/>
        <function-ref name="stopDone" scoped="" ref="0x409ae7e0"/>
        <function-ref name="start" scoped="" ref="0x409ae8c0"/>
        <function-ref name="stop" scoped="" ref="0x409ae9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x409ad588" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x409ad588"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x409ad760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40990a88" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40990a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40990c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioReceive" ref="0x409afc40" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioReceive" scoped="" ref="0x409afc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409afe18"/>
        <function-ref name="header" scoped="" ref="0x409afef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409b0010" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409b0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409b01e8"/>
        <function-ref name="ready" scoped="" ref="0x409b02c8"/>
        <function-ref name="sendDone" scoped="" ref="0x409b03a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x409ae090" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyLayerC.nc">
      <component-ref qname="RF230ActiveMessageC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x409ae090"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x409ae2e8"/>
        <function-ref name="request" scoped="" ref="0x409ae3c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x409ca288" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <component-ref qname="RF230LayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x409ca288"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x409ca460"/>
        <function-ref name="request" scoped="" ref="0x409ca540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x409cb198" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <component-ref qname="RF230LayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x409cb198"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409cb370"/>
        <function-ref name="turnOn" scoped="" ref="0x409cb450"/>
        <function-ref name="setChannel" scoped="" ref="0x409cb530"/>
        <function-ref name="done" scoped="" ref="0x409cb610"/>
        <function-ref name="standby" scoped="" ref="0x409cb6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x409cbde8" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <component-ref qname="RF230LayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x409cbde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409ca010"/>
        <function-ref name="header" scoped="" ref="0x409ca0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409cb890" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <component-ref qname="RF230LayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409cb890"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409cba68"/>
        <function-ref name="ready" scoped="" ref="0x409cbb48"/>
        <function-ref name="sendDone" scoped="" ref="0x409cbc28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Config" ref="0x409ca720" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerC.nc">
      <component-ref qname="RF230LayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Config" scoped="" ref="0x409ca720"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230Config"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeaderLength" scoped="" ref="0x409ca8f8"/>
        <function-ref name="getDefaultChannel" scoped="" ref="0x409cae38"/>
        <function-ref name="getPayload" scoped="" ref="0x409caab8"/>
        <function-ref name="setLength" scoped="" ref="0x409cab98"/>
        <function-ref name="getLength" scoped="" ref="0x409cac78"/>
        <function-ref name="getMaxLength" scoped="" ref="0x409cad58"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x409ca9d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x409c52c8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x409c52c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x409c54a0"/>
        <function-ref name="request" scoped="" ref="0x409c5580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x409d7748" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x409d7748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x409d7e98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketRSSI" ref="0x409d5a58" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x409d5a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409d3638"/>
        <function-ref name="get" scoped="" ref="0x409d3378"/>
        <function-ref name="isSet" scoped="" ref="0x409d30b8"/>
        <function-ref name="set" scoped="" ref="0x409d38f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x409c9e70" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x409c9e70"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f57d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f57d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409c6070"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x409d02b0" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x409d02b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TRF230" ref="0x4057e600"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x409d0db0"/>
        <function-ref name="clear" scoped="" ref="0x409cf170"/>
        <function-ref name="isValid" scoped="" ref="0x409d0a00"/>
        <function-ref name="set" scoped="" ref="0x409cf520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplRF230" ref="0x409deb20" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplRF230" scoped="" ref="0x409deb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplRF230"/>
      </instance>
      <interface-functions>
        <function-ref name="spiSplitRead" scoped="" ref="0x409decf8"/>
        <function-ref name="spiSplitReadWrite" scoped="" ref="0x409dedd8"/>
        <function-ref name="spiWrite" scoped="" ref="0x409deeb8"/>
        <function-ref name="spiSplitWrite" scoped="" ref="0x409c2010"/>
        <function-ref name="crcByte" scoped="" ref="0x409c20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x409c6218" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x409c6218"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409c63f0"/>
        <function-ref name="turnOn" scoped="" ref="0x409c64d0"/>
        <function-ref name="setChannel" scoped="" ref="0x409c65b0"/>
        <function-ref name="done" scoped="" ref="0x409c6690"/>
        <function-ref name="standby" scoped="" ref="0x409c6770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x409c2cd8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x409c2cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409c2eb0"/>
        <function-ref name="isInput" scoped="" ref="0x409c1010"/>
        <function-ref name="toggle" scoped="" ref="0x409c10f0"/>
        <function-ref name="isOutput" scoped="" ref="0x409c11d0"/>
        <function-ref name="get" scoped="" ref="0x409c12b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x409c1390"/>
        <function-ref name="set" scoped="" ref="0x409c1470"/>
        <function-ref name="clr" scoped="" ref="0x409c1550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTransmitPower" ref="0x409d66d0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x409d66d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409d52d0"/>
        <function-ref name="get" scoped="" ref="0x409d5010"/>
        <function-ref name="isSet" scoped="" ref="0x409d6d18"/>
        <function-ref name="set" scoped="" ref="0x409d5590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x409cfa48" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x409cfa48"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TRF230" ref="0x4057e600"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409f00a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x409be3a0" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x409be3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x409be578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x409c22f0" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x409c22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409c24c8"/>
        <function-ref name="isInput" scoped="" ref="0x409c25a8"/>
        <function-ref name="toggle" scoped="" ref="0x409c2688"/>
        <function-ref name="isOutput" scoped="" ref="0x409c2768"/>
        <function-ref name="get" scoped="" ref="0x409c2848"/>
        <function-ref name="makeOutput" scoped="" ref="0x409c2928"/>
        <function-ref name="set" scoped="" ref="0x409c2a08"/>
        <function-ref name="clr" scoped="" ref="0x409c2ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x409c6e68" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x409c6e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409c5050"/>
        <function-ref name="header" scoped="" ref="0x409c5130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x409ef298" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x409ef298"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x409ef470"/>
        <function-ref name="wait" scoped="" ref="0x409ef550"/>
        <function-ref name="cancel" scoped="" ref="0x409ef630"/>
        <function-ref name="isFree" scoped="" ref="0x409ef710"/>
        <function-ref name="getNow" scoped="" ref="0x409ef7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x409d3e28" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x409d3e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409d2a08"/>
        <function-ref name="get" scoped="" ref="0x409d2748"/>
        <function-ref name="isSet" scoped="" ref="0x409d2488"/>
        <function-ref name="set" scoped="" ref="0x409d2cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x409c9810" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x409c9810"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f57d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f57d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409c99e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x409bf310" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x409bf310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409bf4e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409bf5c8"/>
        <function-ref name="request" scoped="" ref="0x409bf6a8"/>
        <function-ref name="granted" scoped="" ref="0x409bf788"/>
        <function-ref name="isOwner" scoped="" ref="0x409bf868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x409c57c0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x409c57c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409c5998"/>
        <function-ref name="isInput" scoped="" ref="0x409c5a78"/>
        <function-ref name="toggle" scoped="" ref="0x409c5b58"/>
        <function-ref name="isOutput" scoped="" ref="0x409c5c38"/>
        <function-ref name="get" scoped="" ref="0x409c5d18"/>
        <function-ref name="makeOutput" scoped="" ref="0x409c5df8"/>
        <function-ref name="set" scoped="" ref="0x409c5ed8"/>
        <function-ref name="clr" scoped="" ref="0x409c3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409c6910" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409c6910"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409c6ae8"/>
        <function-ref name="ready" scoped="" ref="0x409c6bc8"/>
        <function-ref name="sendDone" scoped="" ref="0x409c6ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IRQ" ref="0x409d9e70" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x409d9e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x409dc0e0"/>
        <function-ref name="disable" scoped="" ref="0x409dc1c0"/>
        <function-ref name="captured" scoped="" ref="0x409dc2a0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x409dc380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketLinkQuality" ref="0x409db300" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x409db300"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409dbec8"/>
        <function-ref name="get" scoped="" ref="0x409dbc08"/>
        <function-ref name="isSet" scoped="" ref="0x409db948"/>
        <function-ref name="set" scoped="" ref="0x409d61b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x409f0bc8" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x409f0bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x409f0da0"/>
        <function-ref name="suspend" scoped="" ref="0x409f0e80"/>
        <function-ref name="resume" scoped="" ref="0x409ef010"/>
        <function-ref name="run" scoped="" ref="0x409ef0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF230Config" ref="0x409f0328" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230LayerP.nc">
      <component-ref qname="RF230LayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF230Config" scoped="" ref="0x409f0328"/></type-interface>
      <instance>
        <interfacedef-ref qname="RF230Config"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeaderLength" scoped="" ref="0x409f0500"/>
        <function-ref name="getDefaultChannel" scoped="" ref="0x409f0a40"/>
        <function-ref name="getPayload" scoped="" ref="0x409f06c0"/>
        <function-ref name="setLength" scoped="" ref="0x409f07a0"/>
        <function-ref name="getLength" scoped="" ref="0x409f0880"/>
        <function-ref name="getMaxLength" scoped="" ref="0x409f0960"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x409f05e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x40a44580" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x40a44580"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a44758"/>
        <function-ref name="isInput" scoped="" ref="0x40a44838"/>
        <function-ref name="toggle" scoped="" ref="0x40a44918"/>
        <function-ref name="isOutput" scoped="" ref="0x40a449f8"/>
        <function-ref name="get" scoped="" ref="0x40a44ad8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a44bb8"/>
        <function-ref name="set" scoped="" ref="0x40a44c98"/>
        <function-ref name="clr" scoped="" ref="0x40a44d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplRF230" ref="0x40a40278" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplRF230" scoped="" ref="0x40a40278"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplRF230"/>
      </instance>
      <interface-functions>
        <function-ref name="spiSplitRead" scoped="" ref="0x40a40450"/>
        <function-ref name="spiSplitReadWrite" scoped="" ref="0x40a40530"/>
        <function-ref name="spiWrite" scoped="" ref="0x40a40610"/>
        <function-ref name="spiSplitWrite" scoped="" ref="0x40a406f0"/>
        <function-ref name="crcByte" scoped="" ref="0x40a407d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40a456f0" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40a456f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40a458c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x40a45ac8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x40a45ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a45ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40a45d80"/>
        <function-ref name="toggle" scoped="" ref="0x40a45e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40a44010"/>
        <function-ref name="get" scoped="" ref="0x40a440f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a441d0"/>
        <function-ref name="set" scoped="" ref="0x40a442b0"/>
        <function-ref name="clr" scoped="" ref="0x40a44390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40a43810" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40a43810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TRF230" ref="0x4057e600"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a42d58"/>
        <function-ref name="fired" scoped="" ref="0x40a42528"/>
        <function-ref name="startAt" scoped="" ref="0x40a42a18"/>
        <function-ref name="isRunning" scoped="" ref="0x40a427a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40a40010"/>
        <function-ref name="start" scoped="" ref="0x40a42010"/>
        <function-ref name="stop" scoped="" ref="0x40a422b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x40a45010" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40a45010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a451e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a452c8"/>
        <function-ref name="request" scoped="" ref="0x40a453a8"/>
        <function-ref name="granted" scoped="" ref="0x40a45488"/>
        <function-ref name="isOwner" scoped="" ref="0x40a45568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x409c7540" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x409c7540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409c7718"/>
        <function-ref name="isInput" scoped="" ref="0x409c77f8"/>
        <function-ref name="toggle" scoped="" ref="0x409c78d8"/>
        <function-ref name="isOutput" scoped="" ref="0x409c79b8"/>
        <function-ref name="get" scoped="" ref="0x409c7a98"/>
        <function-ref name="makeOutput" scoped="" ref="0x409c7b78"/>
        <function-ref name="set" scoped="" ref="0x409c7c58"/>
        <function-ref name="clr" scoped="" ref="0x409c7d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x40a43010" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230C.nc">
      <component-ref qname="HplRF230C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40a43010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40a431e8"/>
        <function-ref name="disable" scoped="" ref="0x40a432c8"/>
        <function-ref name="captured" scoped="" ref="0x40a433a8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40a43488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortCLKM" ref="0x40a4a950" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortCLKM" scoped="" ref="0x40a4a950"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a4ab28"/>
        <function-ref name="isInput" scoped="" ref="0x40a4ac08"/>
        <function-ref name="toggle" scoped="" ref="0x40a4ace8"/>
        <function-ref name="isOutput" scoped="" ref="0x40a4adc8"/>
        <function-ref name="get" scoped="" ref="0x40a4aea8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a49010"/>
        <function-ref name="set" scoped="" ref="0x40a490f0"/>
        <function-ref name="clr" scoped="" ref="0x40a491d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplRF230" ref="0x40a4d258" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplRF230" scoped="" ref="0x40a4d258"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplRF230"/>
      </instance>
      <interface-functions>
        <function-ref name="spiSplitRead" scoped="" ref="0x40a4d430"/>
        <function-ref name="spiSplitReadWrite" scoped="" ref="0x40a4d510"/>
        <function-ref name="spiWrite" scoped="" ref="0x40a4d5f0"/>
        <function-ref name="spiSplitWrite" scoped="" ref="0x40a4d6d0"/>
        <function-ref name="crcByte" scoped="" ref="0x40a4d7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Capture" ref="0x40a4db38" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40a4db38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40a4a640"/>
        <function-ref name="test" scoped="" ref="0x40a4a150"/>
        <function-ref name="get" scoped="" ref="0x40a4c200"/>
        <function-ref name="captured" scoped="" ref="0x40a4c718"/>
        <function-ref name="reset" scoped="" ref="0x40a4c9b8"/>
        <function-ref name="isOn" scoped="" ref="0x40a4a3c8"/>
        <function-ref name="set" scoped="" ref="0x40a4c478"/>
        <function-ref name="start" scoped="" ref="0x40a4cc30"/>
        <function-ref name="stop" scoped="" ref="0x40a4cea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PortIRQ" ref="0x40a493d8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortIRQ" scoped="" ref="0x40a493d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a495b0"/>
        <function-ref name="isInput" scoped="" ref="0x40a49690"/>
        <function-ref name="toggle" scoped="" ref="0x40a49770"/>
        <function-ref name="isOutput" scoped="" ref="0x40a49850"/>
        <function-ref name="get" scoped="" ref="0x40a49930"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a49a10"/>
        <function-ref name="set" scoped="" ref="0x40a49af0"/>
        <function-ref name="clr" scoped="" ref="0x40a49bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40a4eec0" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40a4eec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a4d0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x40a4e838" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230P.nc">
      <component-ref qname="HplRF230P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x40a4e838"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x40a4ea10"/>
        <function-ref name="disable" scoped="" ref="0x40a4eaf0"/>
        <function-ref name="captured" scoped="" ref="0x40a4ebd0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x40a4ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40a7ca28" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40a7ca28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a7cc00"/>
        <function-ref name="sendDone" scoped="" ref="0x40a7cce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40a5d5e8" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40a5d5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40a5d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a5d268" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a5d268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a5d440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40a5c190" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a5c190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a5c368"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a5c448"/>
        <function-ref name="request" scoped="" ref="0x40a5c528"/>
        <function-ref name="granted" scoped="" ref="0x40a5c608"/>
        <function-ref name="isOwner" scoped="" ref="0x40a5c6e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x40a7f860" loc="207:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x40a7f860"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40a7fa38"/>
        <function-ref name="runTask" scoped="" ref="0x40a7fb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x40a789a0" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40a789a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a78b78"/>
        <function-ref name="sendDone" scoped="" ref="0x40a78c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x40a75010" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x40a75010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a751e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a752c8"/>
        <function-ref name="request" scoped="" ref="0x40a753a8"/>
        <function-ref name="granted" scoped="" ref="0x40a75488"/>
        <function-ref name="isOwner" scoped="" ref="0x40a75568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40a78628" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40a78628"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40a78800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a782c8" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a782c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a784a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x40a8f320" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x40a8f320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40a8f4f8"/>
        <function-ref name="sleep" scoped="" ref="0x40a76950"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40a8f6b8"/>
        <function-ref name="dataReady" scoped="" ref="0x40a76a30"/>
        <function-ref name="initMaster" scoped="" ref="0x40a8f878"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40a8f958"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40a8fa38"/>
        <function-ref name="read" scoped="" ref="0x40a8fb18"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40a8fbf8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40a8fcd8"/>
        <function-ref name="setClock" scoped="" ref="0x40a8fdb8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40a8fe98"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40a76010"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40a76170"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40a76250"/>
        <function-ref name="write" scoped="" ref="0x40a76330"/>
        <function-ref name="enableSpi" scoped="" ref="0x40a76410"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40a764f0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40a765d0"/>
        <function-ref name="getClock" scoped="" ref="0x40a766b0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40a76790"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40a8f5d8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40a8f798"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40a76870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40a77100" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a77100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a772d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a773b8"/>
        <function-ref name="request" scoped="" ref="0x40a77498"/>
        <function-ref name="granted" scoped="" ref="0x40a77578"/>
        <function-ref name="isOwner" scoped="" ref="0x40a77658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40a8caf8" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40a8caf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40a8ccd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40a8c678" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40a8c678"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40a8c850"/>
        <function-ref name="userId" scoped="" ref="0x40a8c930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x40aaf0c0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x40aaf0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40aaf298"/>
        <function-ref name="sleep" scoped="" ref="0x40aae710"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40aaf458"/>
        <function-ref name="dataReady" scoped="" ref="0x40aae7f0"/>
        <function-ref name="initMaster" scoped="" ref="0x40aaf618"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40aaf6f8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40aaf7d8"/>
        <function-ref name="read" scoped="" ref="0x40aaf8b8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40aaf998"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40aafa78"/>
        <function-ref name="setClock" scoped="" ref="0x40aafb58"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40aafc38"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40aafd18"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40aafe78"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40aae010"/>
        <function-ref name="write" scoped="" ref="0x40aae0f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x40aae1d0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40aae2b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40aae390"/>
        <function-ref name="getClock" scoped="" ref="0x40aae470"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40aae550"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40aaf378"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40aaf538"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40aae630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x40aa6200" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x40aa6200"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40aa63d8"/>
        <function-ref name="isInput" scoped="" ref="0x40aa64b8"/>
        <function-ref name="toggle" scoped="" ref="0x40aa6598"/>
        <function-ref name="isOutput" scoped="" ref="0x40aa6678"/>
        <function-ref name="get" scoped="" ref="0x40aa6758"/>
        <function-ref name="makeOutput" scoped="" ref="0x40aa6838"/>
        <function-ref name="set" scoped="" ref="0x40aa6918"/>
        <function-ref name="clr" scoped="" ref="0x40aa69f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x40aa9d10" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x40aa9d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40aa9ee8"/>
        <function-ref name="isInput" scoped="" ref="0x40aa8010"/>
        <function-ref name="toggle" scoped="" ref="0x40aa80f0"/>
        <function-ref name="isOutput" scoped="" ref="0x40aa81d0"/>
        <function-ref name="get" scoped="" ref="0x40aa82b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40aa8390"/>
        <function-ref name="set" scoped="" ref="0x40aa8470"/>
        <function-ref name="clr" scoped="" ref="0x40aa8550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x40aa9338" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x40aa9338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40aa9510"/>
        <function-ref name="isInput" scoped="" ref="0x40aa95f0"/>
        <function-ref name="toggle" scoped="" ref="0x40aa96d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40aa97b0"/>
        <function-ref name="get" scoped="" ref="0x40aa9890"/>
        <function-ref name="makeOutput" scoped="" ref="0x40aa9970"/>
        <function-ref name="set" scoped="" ref="0x40aa9a50"/>
        <function-ref name="clr" scoped="" ref="0x40aa9b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40aa7e30" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40aa7e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40aa9050"/>
        <function-ref name="stop" scoped="" ref="0x40aa9130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x40aa6c00" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x40aa6c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40aa6dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x40aab4a0" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x40aab4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40aab678"/>
        <function-ref name="sleep" scoped="" ref="0x40aaab10"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x40aab838"/>
        <function-ref name="dataReady" scoped="" ref="0x40aaabf0"/>
        <function-ref name="initMaster" scoped="" ref="0x40aab9f8"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40aabad8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40aabbb8"/>
        <function-ref name="read" scoped="" ref="0x40aabc98"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40aabd78"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40aabe58"/>
        <function-ref name="setClock" scoped="" ref="0x40aaa010"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40aaa0f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x40aaa1d0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40aaa330"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40aaa410"/>
        <function-ref name="write" scoped="" ref="0x40aaa4f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x40aaa5d0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x40aaa6b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40aaa790"/>
        <function-ref name="getClock" scoped="" ref="0x40aaa870"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40aaa950"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40aab758"/>
        <function-ref name="setClockPhase" scoped="" ref="0x40aab918"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40aaaa30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x40aa8740" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x40aa8740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40aa8918"/>
        <function-ref name="isInput" scoped="" ref="0x40aa89f8"/>
        <function-ref name="toggle" scoped="" ref="0x40aa8ad8"/>
        <function-ref name="isOutput" scoped="" ref="0x40aa8bb8"/>
        <function-ref name="get" scoped="" ref="0x40aa8c98"/>
        <function-ref name="makeOutput" scoped="" ref="0x40aa8d78"/>
        <function-ref name="set" scoped="" ref="0x40aa8e58"/>
        <function-ref name="clr" scoped="" ref="0x40aa6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40aca030" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40aca030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40aca218"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40aca2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40aca8e8" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40aca8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40acaad0"/>
        <function-ref name="configure" scoped="" ref="0x40acabb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40acb8c0" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40acb8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40acbaa8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40acbb88"/>
        <function-ref name="request" scoped="" ref="0x40acbc68"/>
        <function-ref name="granted" scoped="" ref="0x40acbd48"/>
        <function-ref name="isOwner" scoped="" ref="0x40acbe28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40aca438" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40aca438"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40aca610"/>
        <function-ref name="userId" scoped="" ref="0x40aca6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4172a358" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4172a358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4172a530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x4172a690" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x4172a690"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x4172a868"/>
        <function-ref name="isEmpty" scoped="" ref="0x4172a948"/>
        <function-ref name="isEnqueued" scoped="" ref="0x4172aa28"/>
        <function-ref name="dequeue" scoped="" ref="0x4172ab08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x41729dc0" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x41729dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x41727010"/>
        <function-ref name="immediateRequested" scoped="" ref="0x417270f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x417276f0" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x417276f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x417278d8"/>
        <function-ref name="configure" scoped="" ref="0x417279b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x41727b18" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x41727b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41727cf0"/>
        <function-ref name="isEmpty" scoped="" ref="0x41727dd0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41727eb0"/>
        <function-ref name="dequeue" scoped="" ref="0x41726010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41729680" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41729680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41729868"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41729948"/>
        <function-ref name="request" scoped="" ref="0x41729a28"/>
        <function-ref name="granted" scoped="" ref="0x41729b08"/>
        <function-ref name="isOwner" scoped="" ref="0x41729be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x41727230" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41727230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41727408"/>
        <function-ref name="userId" scoped="" ref="0x417274e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x41726190" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x41726190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41726368"/>
        <function-ref name="runTask" scoped="" ref="0x41726448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40b02c88" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="HplRF230C.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40b02c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TOne" ref="0x403742f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b2b150"/>
        <function-ref name="fired" scoped="" ref="0x40b2d908"/>
        <function-ref name="startAt" scoped="" ref="0x40b2ddf8"/>
        <function-ref name="isRunning" scoped="" ref="0x40b2db80"/>
        <function-ref name="getAlarm" scoped="" ref="0x40b2b3c8"/>
        <function-ref name="start" scoped="" ref="0x40b2d3f0"/>
        <function-ref name="stop" scoped="" ref="0x40b2d690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x41712138" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x41712138"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x402f53d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x402f53d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TOne" ref="0x403742f0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41711600"/>
        <function-ref name="fired" scoped="" ref="0x41712da0"/>
        <function-ref name="startAt" scoped="" ref="0x417112c0"/>
        <function-ref name="isRunning" scoped="" ref="0x41711048"/>
        <function-ref name="getAlarm" scoped="" ref="0x41711878"/>
        <function-ref name="start" scoped="" ref="0x41712888"/>
        <function-ref name="stop" scoped="" ref="0x41712b28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x4170fdd8" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x4170fdd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4176c388"/>
        <function-ref name="fired" scoped="" ref="0x4176d980"/>
        <function-ref name="get" scoped="" ref="0x4176d468"/>
        <function-ref name="reset" scoped="" ref="0x4176dbf8"/>
        <function-ref name="isOn" scoped="" ref="0x4176c600"/>
        <function-ref name="set" scoped="" ref="0x4176d6e0"/>
        <function-ref name="start" scoped="" ref="0x4176de70"/>
        <function-ref name="stop" scoped="" ref="0x4176c110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x41711b38" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="HplRF230C.AlarmC.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x41711b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4170f600"/>
        <function-ref name="test" scoped="" ref="0x4170f110"/>
        <function-ref name="get" scoped="" ref="0x41710200"/>
        <function-ref name="setScale" scoped="" ref="0x4170f878"/>
        <function-ref name="getScale" scoped="" ref="0x4170fb18"/>
        <function-ref name="reset" scoped="" ref="0x41710990"/>
        <function-ref name="overflow" scoped="" ref="0x41710718"/>
        <function-ref name="isOn" scoped="" ref="0x4170f388"/>
        <function-ref name="set" scoped="" ref="0x41710478"/>
        <function-ref name="start" scoped="" ref="0x41710c08"/>
        <function-ref name="stop" scoped="" ref="0x41710e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x40b29e48" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40b29e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40b4e5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Sample" ref="0x40b5edb0" loc="7:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <component-ref qname="SamplerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sample" scoped="" ref="0x40b5edb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Sample"/>
      </instance>
      <interface-functions>
        <function-ref name="readSample" scoped="" ref="0x40b5b470"/>
        <function-ref name="readDone" scoped="" ref="0x40b5b550"/>
        <function-ref name="set_digital_output" scoped="" ref="0x40b5b1d0"/>
        <function-ref name="getSample" scoped="" ref="0x40b5b2b0"/>
        <function-ref name="start" scoped="" ref="0x40b5b0f0"/>
        <function-ref name="reTask" scoped="" ref="0x40b5b390"/>
        <function-ref name="stop" scoped="" ref="0x40b5b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SamplerInit" ref="0x40b5e370" loc="5:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <component-ref qname="SamplerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SamplerInit" scoped="" ref="0x40b5e370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b5e548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SamplerControl" ref="0x40b5e7b8" loc="6:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerC.nc">
      <component-ref qname="SamplerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SamplerControl" scoped="" ref="0x40b5e7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40b5e990"/>
        <function-ref name="stopDone" scoped="" ref="0x40b5ea70"/>
        <function-ref name="start" scoped="" ref="0x40b5eb50"/>
        <function-ref name="stop" scoped="" ref="0x40b5ec30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam8" ref="0x40b730c0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam8" scoped="" ref="0x40b730c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x40b73298"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam11" ref="0x40b73ca0" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam11" scoped="" ref="0x40b73ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x40b73e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC6" ref="0x40b50090" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC6" scoped="" ref="0x40b50090"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b50268"/>
        <function-ref name="readDone" scoped="" ref="0x40b50348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam0" ref="0x40b76010" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam0" scoped="" ref="0x40b76010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x40b761e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC0" ref="0x40b4f360" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC0" scoped="" ref="0x40b4f360"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b4f538"/>
        <function-ref name="readDone" scoped="" ref="0x40b4f618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Dio2" ref="0x40b6b2a0" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dio2" scoped="" ref="0x40b6b2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x40b6b478"/>
        <function-ref name="high" scoped="" ref="0x40b6b558"/>
        <function-ref name="Toggle" scoped="" ref="0x40b6b638"/>
        <function-ref name="read" scoped="" ref="0x40b6b718"/>
        <function-ref name="setParam" scoped="" ref="0x40b6b7f8"/>
        <function-ref name="readDone" scoped="" ref="0x40b6b8d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IBADCinit" ref="0x40b539c8" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IBADCinit" scoped="" ref="0x40b539c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b53ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC9" ref="0x40b50e88" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC9" scoped="" ref="0x40b50e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b78070"/>
        <function-ref name="readDone" scoped="" ref="0x40b78150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC3" ref="0x40b51200" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC3" scoped="" ref="0x40b51200"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b513d8"/>
        <function-ref name="readDone" scoped="" ref="0x40b514b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam3" ref="0x40b76ce0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam3" scoped="" ref="0x40b76ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x40b76eb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Dio5" ref="0x40b6aa88" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dio5" scoped="" ref="0x40b6aa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x40b6ac60"/>
        <function-ref name="high" scoped="" ref="0x40b6ad40"/>
        <function-ref name="Toggle" scoped="" ref="0x40b6ae20"/>
        <function-ref name="read" scoped="" ref="0x40b6af00"/>
        <function-ref name="setParam" scoped="" ref="0x40b66010"/>
        <function-ref name="readDone" scoped="" ref="0x40b660f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterInit" ref="0x40b66300" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterInit" scoped="" ref="0x40b66300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b666d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC12" ref="0x40b78ca8" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC12" scoped="" ref="0x40b78ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b78e80"/>
        <function-ref name="readDone" scoped="" ref="0x40b77010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam6" ref="0x40b758c0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam6" scoped="" ref="0x40b758c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x40b75a98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC4" ref="0x40b516a8" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC4" scoped="" ref="0x40b516a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b51900"/>
        <function-ref name="readDone" scoped="" ref="0x40b519e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Dio0" ref="0x40b68230" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dio0" scoped="" ref="0x40b68230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x40b68408"/>
        <function-ref name="high" scoped="" ref="0x40b684e8"/>
        <function-ref name="Toggle" scoped="" ref="0x40b685c8"/>
        <function-ref name="read" scoped="" ref="0x40b686a8"/>
        <function-ref name="setParam" scoped="" ref="0x40b68788"/>
        <function-ref name="readDone" scoped="" ref="0x40b68868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Hum" ref="0x40b70d88" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Hum" scoped="" ref="0x40b70d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b6d3c0"/>
        <function-ref name="readDone" scoped="" ref="0x40b6d618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Battery" ref="0x40b6fcd0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Battery" scoped="" ref="0x40b6fcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b71310"/>
        <function-ref name="readDone" scoped="" ref="0x40b71568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam9" ref="0x40b734b0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam9" scoped="" ref="0x40b734b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x40b73688"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam12" ref="0x40b720c8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam12" scoped="" ref="0x40b720c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x40b722a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC7" ref="0x40b50538" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC7" scoped="" ref="0x40b50538"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b50710"/>
        <function-ref name="readDone" scoped="" ref="0x40b507f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempHumControl" ref="0x40b71980" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempHumControl" scoped="" ref="0x40b71980"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40b71b58"/>
        <function-ref name="stopDone" scoped="" ref="0x40b71c38"/>
        <function-ref name="start" scoped="" ref="0x40b71d18"/>
        <function-ref name="stop" scoped="" ref="0x40b71df8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam1" ref="0x40b76400" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam1" scoped="" ref="0x40b76400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x40b765d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Sample" ref="0x40b58be0" loc="8:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sample" scoped="" ref="0x40b58be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Sample"/>
      </instance>
      <interface-functions>
        <function-ref name="readSample" scoped="" ref="0x40b572b0"/>
        <function-ref name="readDone" scoped="" ref="0x40b57390"/>
        <function-ref name="set_digital_output" scoped="" ref="0x40b57010"/>
        <function-ref name="getSample" scoped="" ref="0x40b570f0"/>
        <function-ref name="start" scoped="" ref="0x40b58e98"/>
        <function-ref name="reTask" scoped="" ref="0x40b571d0"/>
        <function-ref name="stop" scoped="" ref="0x40b58db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SamplerTimer" ref="0x40b56758" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SamplerTimer" scoped="" ref="0x40b56758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b53248"/>
        <function-ref name="fired" scoped="" ref="0x40b554e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b55bf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b55998"/>
        <function-ref name="getdt" scoped="" ref="0x40b536f8"/>
        <function-ref name="gett0" scoped="" ref="0x40b534a0"/>
        <function-ref name="isRunning" scoped="" ref="0x40b55740"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b56d80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b55f10"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b55010"/>
        <function-ref name="stop" scoped="" ref="0x40b55290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC1" ref="0x40b4f808" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC1" scoped="" ref="0x40b4f808"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b4f9e0"/>
        <function-ref name="readDone" scoped="" ref="0x40b4fac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC10" ref="0x40b78348" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC10" scoped="" ref="0x40b78348"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b78520"/>
        <function-ref name="readDone" scoped="" ref="0x40b78600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam4" ref="0x40b750e0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam4" scoped="" ref="0x40b750e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x40b752b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Dio3" ref="0x40b6ba88" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dio3" scoped="" ref="0x40b6ba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x40b6bc60"/>
        <function-ref name="high" scoped="" ref="0x40b6bd40"/>
        <function-ref name="Toggle" scoped="" ref="0x40b6be20"/>
        <function-ref name="read" scoped="" ref="0x40b6bf00"/>
        <function-ref name="setParam" scoped="" ref="0x40b6a010"/>
        <function-ref name="readDone" scoped="" ref="0x40b6a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SamplerInit" ref="0x40b58160" loc="6:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SamplerInit" scoped="" ref="0x40b58160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b58338"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DioInit" ref="0x40b6d998" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DioInit" scoped="" ref="0x40b6d998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b6db70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SamplerControl" ref="0x40b585c8" loc="7:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SamplerControl" scoped="" ref="0x40b585c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40b587a0"/>
        <function-ref name="stopDone" scoped="" ref="0x40b58880"/>
        <function-ref name="start" scoped="" ref="0x40b58960"/>
        <function-ref name="stop" scoped="" ref="0x40b58a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40b65010" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40b65010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x40b651e8"/>
        <function-ref name="high" scoped="" ref="0x40b652c8"/>
        <function-ref name="Toggle" scoped="" ref="0x40b653a8"/>
        <function-ref name="read" scoped="" ref="0x40b65488"/>
        <function-ref name="setParam" scoped="" ref="0x40b65568"/>
        <function-ref name="readDone" scoped="" ref="0x40b65648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC13" ref="0x40b77208" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC13" scoped="" ref="0x40b77208"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b773e0"/>
        <function-ref name="readDone" scoped="" ref="0x40b774c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam7" ref="0x40b75cb0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam7" scoped="" ref="0x40b75cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x40b75e88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40b57940" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40b57940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40b57b18"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40b57bf8"/>
        <function-ref name="led1On" scoped="" ref="0x40b57cd8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40b57db8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40b57e98"/>
        <function-ref name="get" scoped="" ref="0x40b56010"/>
        <function-ref name="led1Off" scoped="" ref="0x40b560f0"/>
        <function-ref name="led2Off" scoped="" ref="0x40b56470"/>
        <function-ref name="set" scoped="" ref="0x40b561d0"/>
        <function-ref name="led0On" scoped="" ref="0x40b562b0"/>
        <function-ref name="led2On" scoped="" ref="0x40b56390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC5" ref="0x40b51bd0" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC5" scoped="" ref="0x40b51bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b51da8"/>
        <function-ref name="readDone" scoped="" ref="0x40b51e88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam10" ref="0x40b738a8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam10" scoped="" ref="0x40b738a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x40b73a80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IBADCcontrol" ref="0x40b53e00" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IBADCcontrol" scoped="" ref="0x40b53e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40b52010"/>
        <function-ref name="stopDone" scoped="" ref="0x40b520f0"/>
        <function-ref name="start" scoped="" ref="0x40b521d0"/>
        <function-ref name="stop" scoped="" ref="0x40b522b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Temp" ref="0x40b700d8" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temp" scoped="" ref="0x40b700d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b70700"/>
        <function-ref name="readDone" scoped="" ref="0x40b70958"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Dio1" ref="0x40b68a18" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dio1" scoped="" ref="0x40b68a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x40b68bf0"/>
        <function-ref name="high" scoped="" ref="0x40b68cd0"/>
        <function-ref name="Toggle" scoped="" ref="0x40b68db0"/>
        <function-ref name="read" scoped="" ref="0x40b68e90"/>
        <function-ref name="setParam" scoped="" ref="0x40b6b010"/>
        <function-ref name="readDone" scoped="" ref="0x40b6b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterControl" ref="0x40b66948" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterControl" scoped="" ref="0x40b66948"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40b66b20"/>
        <function-ref name="stopDone" scoped="" ref="0x40b66c00"/>
        <function-ref name="start" scoped="" ref="0x40b66ce0"/>
        <function-ref name="stop" scoped="" ref="0x40b66dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DioControl" ref="0x40b6ddb8" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DioControl" scoped="" ref="0x40b6ddb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40b6c010"/>
        <function-ref name="stopDone" scoped="" ref="0x40b6c0f0"/>
        <function-ref name="start" scoped="" ref="0x40b6c1d0"/>
        <function-ref name="stop" scoped="" ref="0x40b6c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam13" ref="0x40b724c0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam13" scoped="" ref="0x40b724c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x40b72698"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC8" ref="0x40b509e0" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC8" scoped="" ref="0x40b509e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b50bb8"/>
        <function-ref name="readDone" scoped="" ref="0x40b50c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam2" ref="0x40b767f0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam2" scoped="" ref="0x40b767f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x40b76ac8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC2" ref="0x40b4fcb0" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC2" scoped="" ref="0x40b4fcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b4fe88"/>
        <function-ref name="readDone" scoped="" ref="0x40b51010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Dio4" ref="0x40b6a2a0" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dio4" scoped="" ref="0x40b6a2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x40b6a478"/>
        <function-ref name="high" scoped="" ref="0x40b6a558"/>
        <function-ref name="Toggle" scoped="" ref="0x40b6a638"/>
        <function-ref name="read" scoped="" ref="0x40b6a718"/>
        <function-ref name="setParam" scoped="" ref="0x40b6a7f8"/>
        <function-ref name="readDone" scoped="" ref="0x40b6a8d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADC11" ref="0x40b787f8" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADC11" scoped="" ref="0x40b787f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b789d0"/>
        <function-ref name="readDone" scoped="" ref="0x40b78ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SetParam5" ref="0x40b754d0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SamplerM.nc">
      <component-ref qname="SamplerM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam5" scoped="" ref="0x40b754d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x40b756a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40bd5758" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="SamplerC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40bd5758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40bd2248"/>
        <function-ref name="fired" scoped="" ref="0x40bd44e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40bd4bf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40bd4998"/>
        <function-ref name="getdt" scoped="" ref="0x40bd26f8"/>
        <function-ref name="gett0" scoped="" ref="0x40bd24a0"/>
        <function-ref name="isRunning" scoped="" ref="0x40bd4740"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40bd5d80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40bd4f10"/>
        <function-ref name="startOneShot" scoped="" ref="0x40bd4010"/>
        <function-ref name="stop" scoped="" ref="0x40bd4290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40cc3ef8" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageC.nc">
      <component-ref qname="SamplerC.VoltageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40cc3ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bd0558"/>
        <function-ref name="readDone" scoped="" ref="0x40bd07b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x41757150" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SamplerC.VoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x41757150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x41757328"/>
        <function-ref name="configure" scoped="" ref="0x41757408"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x417580a0" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SamplerC.VoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x417580a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x417586c8"/>
        <function-ref name="readDone" scoped="" ref="0x41758920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x41758c28" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SamplerC.VoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x41758c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x41758e00"/>
        <function-ref name="getChannel" scoped="" ref="0x41758ee0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x41757010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40bf3a90" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40bf3a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bee0d8"/>
        <function-ref name="readDone" scoped="" ref="0x40bee330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x40bebeb0" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x40bebeb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40bed508"/>
        <function-ref name="readDone" scoped="" ref="0x40bed780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x40bede38" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40bede38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40bec050"/>
        <function-ref name="getChannel" scoped="" ref="0x40bec130"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40bec210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40bec6b0" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40bec6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40bec888"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40bec968"/>
        <function-ref name="request" scoped="" ref="0x40beca48"/>
        <function-ref name="granted" scoped="" ref="0x40becb28"/>
        <function-ref name="isOwner" scoped="" ref="0x40becc08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40be6100" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40be6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40be62d8"/>
        <function-ref name="configure" scoped="" ref="0x40be63b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x40c08870" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x40c08870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40c08a48"/>
        <function-ref name="dataReady" scoped="" ref="0x40c08b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x40be2300" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40be2300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40be24d8"/>
        <function-ref name="cancel" scoped="" ref="0x40be25b8"/>
        <function-ref name="dataReady" scoped="" ref="0x40be2698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40be9698" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40be9698"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40be9870"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40be9950"/>
        <function-ref name="request" scoped="" ref="0x40be9a30"/>
        <function-ref name="granted" scoped="" ref="0x40be9b10"/>
        <function-ref name="isOwner" scoped="" ref="0x40be9bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40be6d78" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40be6d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c06010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x40c06c00" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x40c06c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40c06dd8"/>
        <function-ref name="dataReady" scoped="" ref="0x40c06eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x40c06678" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40c06678"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40c06850"/>
        <function-ref name="cancel" scoped="" ref="0x40c06930"/>
        <function-ref name="dataReady" scoped="" ref="0x40c06a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x40bfb498" loc="93:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x40bfb498"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x40bfb670"/>
        <function-ref name="getAdmux" scoped="" ref="0x40bfb750"/>
        <function-ref name="setPrescaler" scoped="" ref="0x40bfb830"/>
        <function-ref name="isEnabled" scoped="" ref="0x40bfb910"/>
        <function-ref name="enableAdc" scoped="" ref="0x40bfb9f0"/>
        <function-ref name="setAdmux" scoped="" ref="0x40bfbad0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x40bfbbb0"/>
        <function-ref name="isComplete" scoped="" ref="0x40bfbc90"/>
        <function-ref name="cancel" scoped="" ref="0x40bfbd70"/>
        <function-ref name="disableAdc" scoped="" ref="0x40bfbe50"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x40c04010"/>
        <function-ref name="disableInterruption" scoped="" ref="0x40c040f0"/>
        <function-ref name="startConversion" scoped="" ref="0x40c041d0"/>
        <function-ref name="isStarted" scoped="" ref="0x40c04330"/>
        <function-ref name="setAdcsra" scoped="" ref="0x40c04410"/>
        <function-ref name="setContinuous" scoped="" ref="0x40c044f0"/>
        <function-ref name="getAdcsra" scoped="" ref="0x40c045d0"/>
        <function-ref name="getValue" scoped="" ref="0x40c046b0"/>
        <function-ref name="dataReady" scoped="" ref="0x40c04790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40c061e8" loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40c061e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40c063c0"/>
        <function-ref name="stop" scoped="" ref="0x40c064a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x40c04968" loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40c04968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40c04b40"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40c04c20"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40c04d00"/>
        <function-ref name="actualMicro" scoped="" ref="0x40c04de0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40c04ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x40be5a00" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x40be5a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x40be5bd8"/>
        <function-ref name="getAdmux" scoped="" ref="0x40be5cb8"/>
        <function-ref name="setPrescaler" scoped="" ref="0x40be5d98"/>
        <function-ref name="isEnabled" scoped="" ref="0x40be5e78"/>
        <function-ref name="enableAdc" scoped="" ref="0x40c31010"/>
        <function-ref name="setAdmux" scoped="" ref="0x40c310f0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x40c311d0"/>
        <function-ref name="isComplete" scoped="" ref="0x40c312b0"/>
        <function-ref name="cancel" scoped="" ref="0x40c31390"/>
        <function-ref name="disableAdc" scoped="" ref="0x40c31470"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x40c31550"/>
        <function-ref name="disableInterruption" scoped="" ref="0x40c31630"/>
        <function-ref name="startConversion" scoped="" ref="0x40c31710"/>
        <function-ref name="isStarted" scoped="" ref="0x40c31870"/>
        <function-ref name="setAdcsra" scoped="" ref="0x40c31950"/>
        <function-ref name="setContinuous" scoped="" ref="0x40c31a30"/>
        <function-ref name="getAdcsra" scoped="" ref="0x40c31b10"/>
        <function-ref name="getValue" scoped="" ref="0x40c31bf0"/>
        <function-ref name="dataReady" scoped="" ref="0x40c31cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x40c30740" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x40c30740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x40c30918"/>
        <function-ref name="getAdmux" scoped="" ref="0x40c309f8"/>
        <function-ref name="setPrescaler" scoped="" ref="0x40c30ad8"/>
        <function-ref name="isEnabled" scoped="" ref="0x40c30bb8"/>
        <function-ref name="enableAdc" scoped="" ref="0x40c30c98"/>
        <function-ref name="setAdmux" scoped="" ref="0x40c30d78"/>
        <function-ref name="enableInterruption" scoped="" ref="0x40c30e58"/>
        <function-ref name="isComplete" scoped="" ref="0x40c2d010"/>
        <function-ref name="cancel" scoped="" ref="0x40c2d0f0"/>
        <function-ref name="disableAdc" scoped="" ref="0x40c2d1d0"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x40c2d2b0"/>
        <function-ref name="disableInterruption" scoped="" ref="0x40c2d390"/>
        <function-ref name="startConversion" scoped="" ref="0x40c2d470"/>
        <function-ref name="isStarted" scoped="" ref="0x40c2d5d0"/>
        <function-ref name="setAdcsra" scoped="" ref="0x40c2d6b0"/>
        <function-ref name="setContinuous" scoped="" ref="0x40c2d790"/>
        <function-ref name="getAdcsra" scoped="" ref="0x40c2d870"/>
        <function-ref name="getValue" scoped="" ref="0x40c2d950"/>
        <function-ref name="dataReady" scoped="" ref="0x40c2da30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40c2dc18" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40c2dc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40c2ddf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40c7e068" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40c7e068"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40c7e250"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40c7e330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40c7d010" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40c7d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40c7d1f8"/>
        <function-ref name="configure" scoped="" ref="0x40c7d2d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40c7e470" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40c7e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c7e648"/>
        <function-ref name="requested" scoped="" ref="0x40c7e728"/>
        <function-ref name="granted" scoped="" ref="0x40c7e808"/>
        <function-ref name="isOwner" scoped="" ref="0x40c7e8e8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40c7e9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40c3a910" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40c3a910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c3aaf8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c3abd8"/>
        <function-ref name="request" scoped="" ref="0x40c3acb8"/>
        <function-ref name="granted" scoped="" ref="0x40c3ad98"/>
        <function-ref name="isOwner" scoped="" ref="0x40c3ae78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40c7eb08" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40c7eb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40c7ece0"/>
        <function-ref name="userId" scoped="" ref="0x40c7edc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41750c70" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41750c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41750e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x4174e010" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x4174e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x4174e1e8"/>
        <function-ref name="isEmpty" scoped="" ref="0x4174e2c8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x4174e3a8"/>
        <function-ref name="dequeue" scoped="" ref="0x4174e488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x4174d8b0" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x4174d8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x4174da98"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4174db78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4174b8b0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4174b8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4174ba98"/>
        <function-ref name="configure" scoped="" ref="0x4174bb78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x4174bcd8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x4174bcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x4174beb0"/>
        <function-ref name="isEmpty" scoped="" ref="0x4174a010"/>
        <function-ref name="isEnqueued" scoped="" ref="0x4174a0f0"/>
        <function-ref name="dequeue" scoped="" ref="0x4174a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x4174dcb8" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x4174dcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4174de90"/>
        <function-ref name="requested" scoped="" ref="0x4174b010"/>
        <function-ref name="granted" scoped="" ref="0x4174b0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x4174b1d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4174b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4174a310" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4174a310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4174a4e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4174a5c8"/>
        <function-ref name="led1On" scoped="" ref="0x4174a6a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4174a788"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4174a868"/>
        <function-ref name="get" scoped="" ref="0x4174a948"/>
        <function-ref name="led1Off" scoped="" ref="0x4174aa28"/>
        <function-ref name="led0On" scoped="" ref="0x4174ada8"/>
        <function-ref name="set" scoped="" ref="0x4174abe8"/>
        <function-ref name="led2On" scoped="" ref="0x4174ab08"/>
        <function-ref name="led2Off" scoped="" ref="0x4174acc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4174d170" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4174d170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4174d358"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4174d438"/>
        <function-ref name="request" scoped="" ref="0x4174d518"/>
        <function-ref name="granted" scoped="" ref="0x4174d5f8"/>
        <function-ref name="isOwner" scoped="" ref="0x4174d6d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x4174b3f0" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x4174b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x4174b5c8"/>
        <function-ref name="userId" scoped="" ref="0x4174b6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x4174af28" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x4174af28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41749110"/>
        <function-ref name="runTask" scoped="" ref="0x417491f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x40c7cde8" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x40c7cde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x40c7b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x40c7b150" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40c7b150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c7b328"/>
        <function-ref name="requested" scoped="" ref="0x40c7b408"/>
        <function-ref name="granted" scoped="" ref="0x40c7b4e8"/>
        <function-ref name="isOwner" scoped="" ref="0x40c7b5c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40c7b6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x40c7c9f0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40c7c9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40c7cbc8"/>
        <function-ref name="stop" scoped="" ref="0x40c7cca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40c7b7e8" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40c7b7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40c7b9c0"/>
        <function-ref name="userId" scoped="" ref="0x40c7baa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x417877a8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x417877a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x41787980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x41787ac0" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41787ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41787c98"/>
        <function-ref name="requested" scoped="" ref="0x41787d78"/>
        <function-ref name="granted" scoped="" ref="0x41787e58"/>
        <function-ref name="isOwner" scoped="" ref="0x41786010"/>
        <function-ref name="immediateRequested" scoped="" ref="0x417860f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x417873b0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x417873b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41787588"/>
        <function-ref name="stop" scoped="" ref="0x41787668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x41786230" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41786230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41786408"/>
        <function-ref name="userId" scoped="" ref="0x417864e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40c951d8" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40c951d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c95800"/>
        <function-ref name="readDone" scoped="" ref="0x40c95a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x40c94178" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x40c94178"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c947c0"/>
        <function-ref name="readDone" scoped="" ref="0x40c94a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x40c926b0" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40c926b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40c92888"/>
        <function-ref name="getChannel" scoped="" ref="0x40c92968"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40c92a48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x40c94de8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40c94de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40c92010"/>
        <function-ref name="cancel" scoped="" ref="0x40c920f0"/>
        <function-ref name="dataReady" scoped="" ref="0x40c921d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x40cb6e90" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x40cb6e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40cb4080"/>
        <function-ref name="runTask" scoped="" ref="0x40cb4160"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40c96560" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40c96560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c96b98"/>
        <function-ref name="readDone" scoped="" ref="0x40c96e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x40cc9280" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x40cc9280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cc98b8"/>
        <function-ref name="readDone" scoped="" ref="0x40cc9b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40cc9ea0" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40cc9ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40cc80c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40cc81a0"/>
        <function-ref name="request" scoped="" ref="0x40cc8280"/>
        <function-ref name="granted" scoped="" ref="0x40cc8360"/>
        <function-ref name="isOwner" scoped="" ref="0x40cc8440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x40cc4468" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40cc4468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40cc4640"/>
        <function-ref name="getChannel" scoped="" ref="0x40cc4720"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40cc4800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40cbe6b0" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SensirionSht15C.nc">
      <component-ref qname="SamplerC.TempHumC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40cbe6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40cbe888"/>
        <function-ref name="stopDone" scoped="" ref="0x40cbe968"/>
        <function-ref name="start" scoped="" ref="0x40cbea48"/>
        <function-ref name="stop" scoped="" ref="0x40cbeb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x40dd1970" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SensirionSht15C.nc">
      <component-ref qname="SamplerC.TempHumC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x40dd1970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40dcf010"/>
        <function-ref name="readDone" scoped="" ref="0x40dcf268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x40cbed38" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SensirionSht15C.nc">
      <component-ref qname="SamplerC.TempHumC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x40cbed38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40dd1370"/>
        <function-ref name="readDone" scoped="" ref="0x40dd15c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht15Temp" ref="0x4177a350" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc">
      <component-ref qname="SamplerC.TempHumC.SensirionSht15ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sht15Temp" scoped="" ref="0x4177a350"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht15"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x4177a528"/>
        <function-ref name="measureHumidity" scoped="" ref="0x4177a608"/>
        <function-ref name="measureTemperature" scoped="" ref="0x4177a6e8"/>
        <function-ref name="reset" scoped="" ref="0x4177a7c8"/>
        <function-ref name="resetDone" scoped="" ref="0x4177a8a8"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x4177a988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0x4177d580" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc">
      <component-ref qname="SamplerC.TempHumC.SensirionSht15ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HumidityMetadata" scoped="" ref="0x4177d580"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x4177d758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x4177d968" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc">
      <component-ref qname="SamplerC.TempHumC.SensirionSht15ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x4177d968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4177b010"/>
        <function-ref name="readDone" scoped="" ref="0x4177b268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0x4177e520" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc">
      <component-ref qname="SamplerC.TempHumC.SensirionSht15ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TemperatureMetadata" scoped="" ref="0x4177e520"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x4177e6f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempResource" ref="0x4177b580" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc">
      <component-ref qname="SamplerC.TempHumC.SensirionSht15ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempResource" scoped="" ref="0x4177b580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4177b758"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4177b838"/>
        <function-ref name="request" scoped="" ref="0x4177b918"/>
        <function-ref name="granted" scoped="" ref="0x4177b9f8"/>
        <function-ref name="isOwner" scoped="" ref="0x4177bad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht15Hum" ref="0x4177ab08" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc">
      <component-ref qname="SamplerC.TempHumC.SensirionSht15ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Sht15Hum" scoped="" ref="0x4177ab08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht15"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x4177ace0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x4177adc0"/>
        <function-ref name="measureTemperature" scoped="" ref="0x4177aea0"/>
        <function-ref name="reset" scoped="" ref="0x41779010"/>
        <function-ref name="resetDone" scoped="" ref="0x417790f0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x417791d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HumResource" ref="0x4177bc58" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc">
      <component-ref qname="SamplerC.TempHumC.SensirionSht15ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HumResource" scoped="" ref="0x4177bc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4177be30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4177bf10"/>
        <function-ref name="request" scoped="" ref="0x4177a010"/>
        <function-ref name="granted" scoped="" ref="0x4177a0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x4177a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x4177e908" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15ReaderP.nc">
      <component-ref qname="SamplerC.TempHumC.SensirionSht15ReaderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x4177e908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4177d010"/>
        <function-ref name="readDone" scoped="" ref="0x4177d268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40cf42c8" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <component-ref qname="HalSensirionSht15C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40cf42c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40cf44a0"/>
        <function-ref name="stopDone" scoped="" ref="0x40cf4580"/>
        <function-ref name="start" scoped="" ref="0x40cf4660"/>
        <function-ref name="stop" scoped="" ref="0x40cf4740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht15" ref="0x40cf36c8" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <component-ref qname="HalSensirionSht15C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SensirionSht15" scoped="" ref="0x40cf36c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht15"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x40cf38a0"/>
        <function-ref name="measureHumidity" scoped="" ref="0x40cf3980"/>
        <function-ref name="measureTemperature" scoped="" ref="0x40cf3a60"/>
        <function-ref name="reset" scoped="" ref="0x40cf3b40"/>
        <function-ref name="resetDone" scoped="" ref="0x40cf3c20"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x40cf3d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40cf4c00" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalSensirionSht15C.nc">
      <component-ref qname="HalSensirionSht15C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40cf4c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40cf4dd8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40cf4eb8"/>
        <function-ref name="request" scoped="" ref="0x40cf3010"/>
        <function-ref name="granted" scoped="" ref="0x40cf30f0"/>
        <function-ref name="isOwner" scoped="" ref="0x40cf31d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht15" ref="0x40cef2d0" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
      <component-ref qname="HalSensirionSht15C.SensirionSht15LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SensirionSht15" scoped="" ref="0x40cef2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht15"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x40cef4b8"/>
        <function-ref name="measureHumidity" scoped="" ref="0x40cef598"/>
        <function-ref name="measureTemperature" scoped="" ref="0x40cef678"/>
        <function-ref name="reset" scoped="" ref="0x40cef758"/>
        <function-ref name="resetDone" scoped="" ref="0x40cef838"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x40cef918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptDATA" ref="0x40d16da8" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
      <component-ref qname="HalSensirionSht15C.SensirionSht15LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptDATA" scoped="" ref="0x40d16da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40d15010"/>
        <function-ref name="disable" scoped="" ref="0x40d150f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40d151d0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40d152b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readSensor" ref="0x40d40350" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
      <component-ref qname="HalSensirionSht15C.SensirionSht15LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="readSensor" scoped="" ref="0x40d40350"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d40528"/>
        <function-ref name="runTask" scoped="" ref="0x40d40608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CLOCK" ref="0x40d16430" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
      <component-ref qname="HalSensirionSht15C.SensirionSht15LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CLOCK" scoped="" ref="0x40d16430"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d16608"/>
        <function-ref name="isInput" scoped="" ref="0x40d166e8"/>
        <function-ref name="toggle" scoped="" ref="0x40d167c8"/>
        <function-ref name="isOutput" scoped="" ref="0x40d168a8"/>
        <function-ref name="get" scoped="" ref="0x40d16988"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d16a68"/>
        <function-ref name="set" scoped="" ref="0x40d16b48"/>
        <function-ref name="clr" scoped="" ref="0x40d16c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x40cefa98" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
      <component-ref qname="HalSensirionSht15C.SensirionSht15LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DATA" scoped="" ref="0x40cefa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cefc70"/>
        <function-ref name="isInput" scoped="" ref="0x40cefd50"/>
        <function-ref name="toggle" scoped="" ref="0x40cefe30"/>
        <function-ref name="isOutput" scoped="" ref="0x40ceff10"/>
        <function-ref name="get" scoped="" ref="0x40d16010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d160f0"/>
        <function-ref name="set" scoped="" ref="0x40d161d0"/>
        <function-ref name="clr" scoped="" ref="0x40d162b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40d416f0" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
      <component-ref qname="HalSensirionSht15C.SensirionSht15LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40d416f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40d418c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40d419a8"/>
        <function-ref name="led1On" scoped="" ref="0x40d41a88"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40d41b68"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40d41c48"/>
        <function-ref name="get" scoped="" ref="0x40d41d28"/>
        <function-ref name="led1Off" scoped="" ref="0x40d41e08"/>
        <function-ref name="led2On" scoped="" ref="0x40d401d0"/>
        <function-ref name="set" scoped="" ref="0x40d40010"/>
        <function-ref name="led2Off" scoped="" ref="0x40d41ee8"/>
        <function-ref name="led0On" scoped="" ref="0x40d400f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40d154a0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15LogicP.nc">
      <component-ref qname="HalSensirionSht15C.SensirionSht15LogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40d154a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d41010"/>
        <function-ref name="fired" scoped="" ref="0x40d13268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40d13970"/>
        <function-ref name="isOneShot" scoped="" ref="0x40d13718"/>
        <function-ref name="getdt" scoped="" ref="0x40d414c0"/>
        <function-ref name="gett0" scoped="" ref="0x40d41268"/>
        <function-ref name="isRunning" scoped="" ref="0x40d134c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40d15ac8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40d13c90"/>
        <function-ref name="startOneShot" scoped="" ref="0x40d15d48"/>
        <function-ref name="stop" scoped="" ref="0x40d13010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40d3c010" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <component-ref qname="HplSensirionSht15C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40d3c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40d3c1e8"/>
        <function-ref name="stopDone" scoped="" ref="0x40d3c2c8"/>
        <function-ref name="start" scoped="" ref="0x40d3c3a8"/>
        <function-ref name="stop" scoped="" ref="0x40d3c488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptDATA" ref="0x40d3a548" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <component-ref qname="HplSensirionSht15C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptDATA" scoped="" ref="0x40d3a548"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40d3a720"/>
        <function-ref name="disable" scoped="" ref="0x40d3a800"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40d3a8e0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40d3a9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCK" ref="0x40d3baa8" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <component-ref qname="HplSensirionSht15C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x40d3baa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d3bc80"/>
        <function-ref name="isInput" scoped="" ref="0x40d3bd60"/>
        <function-ref name="toggle" scoped="" ref="0x40d3be40"/>
        <function-ref name="isOutput" scoped="" ref="0x40d3bf20"/>
        <function-ref name="get" scoped="" ref="0x40d3a018"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d3a0f8"/>
        <function-ref name="set" scoped="" ref="0x40d3a1d8"/>
        <function-ref name="clr" scoped="" ref="0x40d3a2b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DATA" ref="0x40d3b0b0" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <component-ref qname="HplSensirionSht15C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DATA" scoped="" ref="0x40d3b0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d3b288"/>
        <function-ref name="isInput" scoped="" ref="0x40d3b368"/>
        <function-ref name="toggle" scoped="" ref="0x40d3b448"/>
        <function-ref name="isOutput" scoped="" ref="0x40d3b528"/>
        <function-ref name="get" scoped="" ref="0x40d3b608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d3b6e8"/>
        <function-ref name="set" scoped="" ref="0x40d3b7c8"/>
        <function-ref name="clr" scoped="" ref="0x40d3b8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40d3c920" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15C.nc">
      <component-ref qname="HplSensirionSht15C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40d3c920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d3caf8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40d3cbd8"/>
        <function-ref name="request" scoped="" ref="0x40d3ccb8"/>
        <function-ref name="granted" scoped="" ref="0x40d3cd98"/>
        <function-ref name="isOwner" scoped="" ref="0x40d3ce78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW0" ref="0x40d36200" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW0" scoped="" ref="0x40d36200"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d363d8"/>
        <function-ref name="isInput" scoped="" ref="0x40d364b8"/>
        <function-ref name="toggle" scoped="" ref="0x40d36598"/>
        <function-ref name="isOutput" scoped="" ref="0x40d36678"/>
        <function-ref name="get" scoped="" ref="0x40d36758"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d36838"/>
        <function-ref name="set" scoped="" ref="0x40d36918"/>
        <function-ref name="clr" scoped="" ref="0x40d369f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x40d2b468" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x40d2b468"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40d2b6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW3" ref="0x40d33050" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW3" scoped="" ref="0x40d33050"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d33228"/>
        <function-ref name="isInput" scoped="" ref="0x40d33308"/>
        <function-ref name="toggle" scoped="" ref="0x40d333e8"/>
        <function-ref name="isOutput" scoped="" ref="0x40d334c8"/>
        <function-ref name="get" scoped="" ref="0x40d335a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d33688"/>
        <function-ref name="set" scoped="" ref="0x40d33768"/>
        <function-ref name="clr" scoped="" ref="0x40d33848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW6" ref="0x40d32e68" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW6" scoped="" ref="0x40d32e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d31050"/>
        <function-ref name="isInput" scoped="" ref="0x40d31130"/>
        <function-ref name="toggle" scoped="" ref="0x40d31210"/>
        <function-ref name="isOutput" scoped="" ref="0x40d312f0"/>
        <function-ref name="get" scoped="" ref="0x40d313d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d314b0"/>
        <function-ref name="set" scoped="" ref="0x40d31590"/>
        <function-ref name="clr" scoped="" ref="0x40d31670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x40d2d090" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x40d2d090"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40d2d268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x40d2d830" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x40d2d830"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40d2da08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x40d30cc8" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x40d30cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d30ea0"/>
        <function-ref name="isInput" scoped="" ref="0x40d2f010"/>
        <function-ref name="toggle" scoped="" ref="0x40d2f0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d2f1d0"/>
        <function-ref name="get" scoped="" ref="0x40d2f2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d2f390"/>
        <function-ref name="set" scoped="" ref="0x40d2f470"/>
        <function-ref name="clr" scoped="" ref="0x40d2f550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW1" ref="0x40d36bd8" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW1" scoped="" ref="0x40d36bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d36db0"/>
        <function-ref name="isInput" scoped="" ref="0x40d36e90"/>
        <function-ref name="toggle" scoped="" ref="0x40d34010"/>
        <function-ref name="isOutput" scoped="" ref="0x40d340f0"/>
        <function-ref name="get" scoped="" ref="0x40d341d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d342b0"/>
        <function-ref name="set" scoped="" ref="0x40d34390"/>
        <function-ref name="clr" scoped="" ref="0x40d34470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW4" ref="0x40d33a28" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW4" scoped="" ref="0x40d33a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d33c00"/>
        <function-ref name="isInput" scoped="" ref="0x40d33ce0"/>
        <function-ref name="toggle" scoped="" ref="0x40d33dc0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d33ea0"/>
        <function-ref name="get" scoped="" ref="0x40d32010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d320f0"/>
        <function-ref name="set" scoped="" ref="0x40d321d0"/>
        <function-ref name="clr" scoped="" ref="0x40d322b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x40d2b8b8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x40d2b8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40d2ba90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW7" ref="0x40d31850" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW7" scoped="" ref="0x40d31850"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d31a28"/>
        <function-ref name="isInput" scoped="" ref="0x40d31b08"/>
        <function-ref name="toggle" scoped="" ref="0x40d31be8"/>
        <function-ref name="isOutput" scoped="" ref="0x40d31cc8"/>
        <function-ref name="get" scoped="" ref="0x40d31da8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d31e88"/>
        <function-ref name="set" scoped="" ref="0x40d30010"/>
        <function-ref name="clr" scoped="" ref="0x40d300f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x40d2dc00" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x40d2dc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40d2ddd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x40d2f740" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x40d2f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d2f918"/>
        <function-ref name="isInput" scoped="" ref="0x40d2f9f8"/>
        <function-ref name="toggle" scoped="" ref="0x40d2fad8"/>
        <function-ref name="isOutput" scoped="" ref="0x40d2fbb8"/>
        <function-ref name="get" scoped="" ref="0x40d2fc98"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d2fd78"/>
        <function-ref name="set" scoped="" ref="0x40d2fe58"/>
        <function-ref name="clr" scoped="" ref="0x40d2e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW2" ref="0x40d34650" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW2" scoped="" ref="0x40d34650"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d34828"/>
        <function-ref name="isInput" scoped="" ref="0x40d34908"/>
        <function-ref name="toggle" scoped="" ref="0x40d349e8"/>
        <function-ref name="isOutput" scoped="" ref="0x40d34ac8"/>
        <function-ref name="get" scoped="" ref="0x40d34ba8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d34c88"/>
        <function-ref name="set" scoped="" ref="0x40d34d68"/>
        <function-ref name="clr" scoped="" ref="0x40d34e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW5" ref="0x40d32490" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW5" scoped="" ref="0x40d32490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d32668"/>
        <function-ref name="isInput" scoped="" ref="0x40d32748"/>
        <function-ref name="toggle" scoped="" ref="0x40d32828"/>
        <function-ref name="isOutput" scoped="" ref="0x40d32908"/>
        <function-ref name="get" scoped="" ref="0x40d329e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d32ac8"/>
        <function-ref name="set" scoped="" ref="0x40d32ba8"/>
        <function-ref name="clr" scoped="" ref="0x40d32c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x40d2bc88" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x40d2bc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40d2be60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x40d302e0" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x40d302e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d304b8"/>
        <function-ref name="isInput" scoped="" ref="0x40d30598"/>
        <function-ref name="toggle" scoped="" ref="0x40d30678"/>
        <function-ref name="isOutput" scoped="" ref="0x40d30758"/>
        <function-ref name="get" scoped="" ref="0x40d30838"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d30918"/>
        <function-ref name="set" scoped="" ref="0x40d309f8"/>
        <function-ref name="clr" scoped="" ref="0x40d30ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x40d2d460" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x40d2d460"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40d2d638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x40d2c010" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x40d2c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40d2c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x40d2e200" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x40d2e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d2e3d8"/>
        <function-ref name="isInput" scoped="" ref="0x40d2e4b8"/>
        <function-ref name="toggle" scoped="" ref="0x40d2e598"/>
        <function-ref name="isOutput" scoped="" ref="0x40d2e678"/>
        <function-ref name="get" scoped="" ref="0x40d2e758"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d2e838"/>
        <function-ref name="set" scoped="" ref="0x40d2e918"/>
        <function-ref name="clr" scoped="" ref="0x40d2e9f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x40d2cb48" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x40d2cb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40d2cd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x40d586d0" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x40d586d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40d588a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x40d58e70" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x40d58e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40d57070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x40d2cf18" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x40d2cf18"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40d58108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x40d57268" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x40d57268"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40d57440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x40d58300" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x40d58300"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40d584d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x40d58aa0" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x40d58aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40d58c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x40d57638" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x40d57638"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40d57810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x40d4b678" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplSensirionSht15C.Int"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x40d4b678"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d4b850"/>
        <function-ref name="fired" scoped="" ref="0x40d4b930"/>
        <function-ref name="disable" scoped="" ref="0x40d4ba10"/>
        <function-ref name="edge" scoped="" ref="0x40d4baf0"/>
        <function-ref name="enable" scoped="" ref="0x40d4bbd0"/>
        <function-ref name="getValue" scoped="" ref="0x40d4bcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x40d4b080" loc="8:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplSensirionSht15C.Int"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x40d4b080"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40d4b258"/>
        <function-ref name="disable" scoped="" ref="0x40d4b338"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40d4b418"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40d4b4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x40d6a010" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x40d6a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d6a1e8"/>
        <function-ref name="fired" scoped="" ref="0x40d6a2c8"/>
        <function-ref name="disable" scoped="" ref="0x40d6a3a8"/>
        <function-ref name="edge" scoped="" ref="0x40d6a488"/>
        <function-ref name="enable" scoped="" ref="0x40d6a568"/>
        <function-ref name="getValue" scoped="" ref="0x40d6a648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x40d6d338" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x40d6d338"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d6d510"/>
        <function-ref name="fired" scoped="" ref="0x40d6d5f0"/>
        <function-ref name="disable" scoped="" ref="0x40d6d6d0"/>
        <function-ref name="edge" scoped="" ref="0x40d6d7b0"/>
        <function-ref name="enable" scoped="" ref="0x40d6d890"/>
        <function-ref name="getValue" scoped="" ref="0x40d6d970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x40d6cd78" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x40d6cd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d6b010"/>
        <function-ref name="fired" scoped="" ref="0x40d6b0f0"/>
        <function-ref name="disable" scoped="" ref="0x40d6b1d0"/>
        <function-ref name="edge" scoped="" ref="0x40d6b2b0"/>
        <function-ref name="enable" scoped="" ref="0x40d6b390"/>
        <function-ref name="getValue" scoped="" ref="0x40d6b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x40d6a890" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x40d6a890"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d6aa68"/>
        <function-ref name="fired" scoped="" ref="0x40d6ab48"/>
        <function-ref name="disable" scoped="" ref="0x40d6ac28"/>
        <function-ref name="edge" scoped="" ref="0x40d6ad08"/>
        <function-ref name="enable" scoped="" ref="0x40d6ade8"/>
        <function-ref name="getValue" scoped="" ref="0x40d6aec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x40d6dbb8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x40d6dbb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d6dd90"/>
        <function-ref name="fired" scoped="" ref="0x40d6de70"/>
        <function-ref name="disable" scoped="" ref="0x40d6c010"/>
        <function-ref name="edge" scoped="" ref="0x40d6c0f0"/>
        <function-ref name="enable" scoped="" ref="0x40d6c1d0"/>
        <function-ref name="getValue" scoped="" ref="0x40d6c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x40d6b6b8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x40d6b6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d6b890"/>
        <function-ref name="fired" scoped="" ref="0x40d6b970"/>
        <function-ref name="disable" scoped="" ref="0x40d6ba50"/>
        <function-ref name="edge" scoped="" ref="0x40d6bb30"/>
        <function-ref name="enable" scoped="" ref="0x40d6bc10"/>
        <function-ref name="getValue" scoped="" ref="0x40d6bcf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x40d4aa88" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x40d4aa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d4ac60"/>
        <function-ref name="fired" scoped="" ref="0x40d4ad40"/>
        <function-ref name="disable" scoped="" ref="0x40d4ae20"/>
        <function-ref name="edge" scoped="" ref="0x40d4af00"/>
        <function-ref name="enable" scoped="" ref="0x40d6d010"/>
        <function-ref name="getValue" scoped="" ref="0x40d6d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x40d6c4f8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x40d6c4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d6c6d0"/>
        <function-ref name="fired" scoped="" ref="0x40d6c7b0"/>
        <function-ref name="disable" scoped="" ref="0x40d6c890"/>
        <function-ref name="edge" scoped="" ref="0x40d6c970"/>
        <function-ref name="enable" scoped="" ref="0x40d6ca50"/>
        <function-ref name="getValue" scoped="" ref="0x40d6cb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x40d66f08" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x40d66f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40d650f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x40d64850" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x40d64850"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40d64a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x40d66618" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x40d66618"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40d667f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x40d65390" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x40d65390"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40d65568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x40d64cc8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x40d64cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40d64ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x40d66a90" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x40d66a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40d66c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x40d643d8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x40d643d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40d645b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x40d661a0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x40d661a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40d66378"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40d843b0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40d843b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d84588"/>
        <function-ref name="fired" scoped="" ref="0x40d84668"/>
        <function-ref name="disable" scoped="" ref="0x40d84748"/>
        <function-ref name="edge" scoped="" ref="0x40d84828"/>
        <function-ref name="enable" scoped="" ref="0x40d84908"/>
        <function-ref name="getValue" scoped="" ref="0x40d849e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40d84b68" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40d84b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40d84d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40d78538" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40d78538"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d78710"/>
        <function-ref name="fired" scoped="" ref="0x40d787f0"/>
        <function-ref name="disable" scoped="" ref="0x40d788d0"/>
        <function-ref name="edge" scoped="" ref="0x40d789b0"/>
        <function-ref name="enable" scoped="" ref="0x40d78a90"/>
        <function-ref name="getValue" scoped="" ref="0x40d78b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40d78cf0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40d78cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40d78ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40d766c0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40d766c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d76898"/>
        <function-ref name="fired" scoped="" ref="0x40d76978"/>
        <function-ref name="disable" scoped="" ref="0x40d76a58"/>
        <function-ref name="edge" scoped="" ref="0x40d76b38"/>
        <function-ref name="enable" scoped="" ref="0x40d76c18"/>
        <function-ref name="getValue" scoped="" ref="0x40d76cf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40d76e78" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40d76e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40d75070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40d737a8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40d737a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d73980"/>
        <function-ref name="fired" scoped="" ref="0x40d73a60"/>
        <function-ref name="disable" scoped="" ref="0x40d73b40"/>
        <function-ref name="edge" scoped="" ref="0x40d73c20"/>
        <function-ref name="enable" scoped="" ref="0x40d73d00"/>
        <function-ref name="getValue" scoped="" ref="0x40d73de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40d72010" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40d72010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40d721e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40da1920" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40da1920"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40da1af8"/>
        <function-ref name="fired" scoped="" ref="0x40da1bd8"/>
        <function-ref name="disable" scoped="" ref="0x40da1cb8"/>
        <function-ref name="edge" scoped="" ref="0x40da1d98"/>
        <function-ref name="enable" scoped="" ref="0x40da1e78"/>
        <function-ref name="getValue" scoped="" ref="0x40da0010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40da0190" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40da0190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40da0368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40d9fb68" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40d9fb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d9fd40"/>
        <function-ref name="fired" scoped="" ref="0x40d9fe20"/>
        <function-ref name="disable" scoped="" ref="0x40d9ff00"/>
        <function-ref name="edge" scoped="" ref="0x40d9e010"/>
        <function-ref name="enable" scoped="" ref="0x40d9e0f0"/>
        <function-ref name="getValue" scoped="" ref="0x40d9e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40d9e350" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40d9e350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40d9e528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40d9dc70" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40d9dc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d9de48"/>
        <function-ref name="fired" scoped="" ref="0x40d9df28"/>
        <function-ref name="disable" scoped="" ref="0x40d9c018"/>
        <function-ref name="edge" scoped="" ref="0x40d9c0f8"/>
        <function-ref name="enable" scoped="" ref="0x40d9c1d8"/>
        <function-ref name="getValue" scoped="" ref="0x40d9c2b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40d9c438" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40d9c438"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40d9c610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40d9ad60" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40d9ad60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d99010"/>
        <function-ref name="fired" scoped="" ref="0x40d990f0"/>
        <function-ref name="disable" scoped="" ref="0x40d991d0"/>
        <function-ref name="edge" scoped="" ref="0x40d992b0"/>
        <function-ref name="enable" scoped="" ref="0x40d99390"/>
        <function-ref name="getValue" scoped="" ref="0x40d99470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40d995f0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40d995f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40d997c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40d92270" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15P.nc">
      <component-ref qname="HplSensirionSht15P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40d92270"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40d92448"/>
        <function-ref name="stopDone" scoped="" ref="0x40d92528"/>
        <function-ref name="start" scoped="" ref="0x40d92608"/>
        <function-ref name="stop" scoped="" ref="0x40d926e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x40d8e4c8" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15P.nc">
      <component-ref qname="HplSensirionSht15P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x40d8e4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d8e6a0"/>
        <function-ref name="runTask" scoped="" ref="0x40d8e780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x40d8f670" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15P.nc">
      <component-ref qname="HplSensirionSht15P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x40d8f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d8f848"/>
        <function-ref name="isInput" scoped="" ref="0x40d8f928"/>
        <function-ref name="toggle" scoped="" ref="0x40d8fa08"/>
        <function-ref name="isOutput" scoped="" ref="0x40d8fae8"/>
        <function-ref name="get" scoped="" ref="0x40d8fbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d8fca8"/>
        <function-ref name="set" scoped="" ref="0x40d8fd88"/>
        <function-ref name="clr" scoped="" ref="0x40d8fe68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x40d90c58" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15P.nc">
      <component-ref qname="HplSensirionSht15P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DATA" scoped="" ref="0x40d90c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d90e30"/>
        <function-ref name="isInput" scoped="" ref="0x40d90f10"/>
        <function-ref name="toggle" scoped="" ref="0x40d8f010"/>
        <function-ref name="isOutput" scoped="" ref="0x40d8f0f0"/>
        <function-ref name="get" scoped="" ref="0x40d8f1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d8f2b0"/>
        <function-ref name="set" scoped="" ref="0x40d8f390"/>
        <function-ref name="clr" scoped="" ref="0x40d8f470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40d92950" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplSensirionSht15P.nc">
      <component-ref qname="HplSensirionSht15P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40d92950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d904c8"/>
        <function-ref name="fired" scoped="" ref="0x40d91768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40d91e70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40d91c18"/>
        <function-ref name="getdt" scoped="" ref="0x40d90978"/>
        <function-ref name="gett0" scoped="" ref="0x40d90720"/>
        <function-ref name="isRunning" scoped="" ref="0x40d919c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40d91010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40d901a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40d91290"/>
        <function-ref name="stop" scoped="" ref="0x40d91510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40db90a0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="HplSensirionSht15C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40db90a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40db8b88"/>
        <function-ref name="fired" scoped="" ref="0x40db9e20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40db8548"/>
        <function-ref name="isOneShot" scoped="" ref="0x40db82f0"/>
        <function-ref name="getdt" scoped="" ref="0x40db7048"/>
        <function-ref name="gett0" scoped="" ref="0x40db8de0"/>
        <function-ref name="isRunning" scoped="" ref="0x40db8098"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40db96c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40db8868"/>
        <function-ref name="startOneShot" scoped="" ref="0x40db9948"/>
        <function-ref name="stop" scoped="" ref="0x40db9bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40db51e8" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40db51e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40db53d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40db54b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40db5aa0" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40db5aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40db5c88"/>
        <function-ref name="configure" scoped="" ref="0x40db5d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40db6a70" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40db6a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40db6c58"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40db6d38"/>
        <function-ref name="request" scoped="" ref="0x40db6e18"/>
        <function-ref name="granted" scoped="" ref="0x40db6ef8"/>
        <function-ref name="isOwner" scoped="" ref="0x40db5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40db55f0" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40db55f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40db57c8"/>
        <function-ref name="userId" scoped="" ref="0x40db58a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x417d7b80" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x417d7b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x417d7d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x417d7eb8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x417d7eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x417d50c0"/>
        <function-ref name="isEmpty" scoped="" ref="0x417d51a0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x417d5280"/>
        <function-ref name="dequeue" scoped="" ref="0x417d5360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x417d3618" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x417d3618"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x417d3800"/>
        <function-ref name="immediateRequested" scoped="" ref="0x417d38e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x417d3ee0" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x417d3ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x417d20e0"/>
        <function-ref name="configure" scoped="" ref="0x417d21c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x417d2320" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x417d2320"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x417d24f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x417d25d8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x417d26b8"/>
        <function-ref name="dequeue" scoped="" ref="0x417d2798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x417d5ec8" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x417d5ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x417d30c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x417d31a0"/>
        <function-ref name="request" scoped="" ref="0x417d3280"/>
        <function-ref name="granted" scoped="" ref="0x417d3360"/>
        <function-ref name="isOwner" scoped="" ref="0x417d3440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x417d3a20" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x417d3a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x417d3bf8"/>
        <function-ref name="userId" scoped="" ref="0x417d3cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x417d2918" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="HplSensirionSht15C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x417d2918"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x417d2af0"/>
        <function-ref name="runTask" scoped="" ref="0x417d2bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40db1c18" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="HalSensirionSht15C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40db1c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40daf730"/>
        <function-ref name="fired" scoped="" ref="0x40db09b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40daf0f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40db0e60"/>
        <function-ref name="getdt" scoped="" ref="0x40dafbe0"/>
        <function-ref name="gett0" scoped="" ref="0x40daf988"/>
        <function-ref name="isRunning" scoped="" ref="0x40db0c08"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40db0258"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40daf410"/>
        <function-ref name="startOneShot" scoped="" ref="0x40db04d8"/>
        <function-ref name="stop" scoped="" ref="0x40db0758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40daeb10" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40daeb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40daece8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40daee78" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40daee78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40dab070"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40dab150"/>
        <function-ref name="led1On" scoped="" ref="0x40dab230"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40dab310"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40dab3f0"/>
        <function-ref name="get" scoped="" ref="0x40dab4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x40dab5b0"/>
        <function-ref name="led2Off" scoped="" ref="0x40dab930"/>
        <function-ref name="set" scoped="" ref="0x40dab690"/>
        <function-ref name="led0On" scoped="" ref="0x40dab770"/>
        <function-ref name="led2On" scoped="" ref="0x40dab850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40ec1220" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalC.nc">
      <component-ref qname="SamplerC.DioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40ec1220"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40ec13f8"/>
        <function-ref name="stopDone" scoped="" ref="0x40ec14d8"/>
        <function-ref name="start" scoped="" ref="0x40ec15b8"/>
        <function-ref name="stop" scoped="" ref="0x40ec1698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Dio" ref="0x40ec1890" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalC.nc">
      <component-ref qname="SamplerC.DioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dio" scoped="" ref="0x40ec1890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x40ec1a78"/>
        <function-ref name="high" scoped="" ref="0x40ec1b58"/>
        <function-ref name="Toggle" scoped="" ref="0x40ec1c38"/>
        <function-ref name="read" scoped="" ref="0x40ec1d18"/>
        <function-ref name="setParam" scoped="" ref="0x40ec1df8"/>
        <function-ref name="readDone" scoped="" ref="0x40ec1ed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40dcded8" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalC.nc">
      <component-ref qname="SamplerC.DioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40dcded8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ec10c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40dca738" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <component-ref qname="HalMDA300DigitalC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40dca738"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40dca910"/>
        <function-ref name="stopDone" scoped="" ref="0x40dca9f0"/>
        <function-ref name="start" scoped="" ref="0x40dcaad0"/>
        <function-ref name="stop" scoped="" ref="0x40dcabb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Dio" ref="0x40dc7100" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <component-ref qname="HalMDA300DigitalC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dio" scoped="" ref="0x40dc7100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x40dc72d8"/>
        <function-ref name="high" scoped="" ref="0x40dc73b8"/>
        <function-ref name="Toggle" scoped="" ref="0x40dc7498"/>
        <function-ref name="read" scoped="" ref="0x40dc7578"/>
        <function-ref name="setParam" scoped="" ref="0x40dc7658"/>
        <function-ref name="readDone" scoped="" ref="0x40dc7738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40dca380" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300DigitalC.nc">
      <component-ref qname="HalMDA300DigitalC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40dca380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40dca558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40dc43a8" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40dc43a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40dc4580"/>
        <function-ref name="stopDone" scoped="" ref="0x40dc4660"/>
        <function-ref name="start" scoped="" ref="0x40dc4740"/>
        <function-ref name="stop" scoped="" ref="0x40dc4820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x40dc3720" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40dc3720"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40dc3e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Dio" ref="0x40dc4c90" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dio" scoped="" ref="0x40dc4c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x40dc4e68"/>
        <function-ref name="high" scoped="" ref="0x40dc3010"/>
        <function-ref name="Toggle" scoped="" ref="0x40dc30f0"/>
        <function-ref name="read" scoped="" ref="0x40dc31d0"/>
        <function-ref name="setParam" scoped="" ref="0x40dc32b0"/>
        <function-ref name="readDone" scoped="" ref="0x40dc3390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="read_io" ref="0x40df4010" loc="233:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="read_io" scoped="" ref="0x40df4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40df4268"/>
        <function-ref name="runTask" scoped="" ref="0x40df4348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40dc4010" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40dc4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40dc41e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="init_io" ref="0x40de54d8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="init_io" scoped="" ref="0x40de54d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40de56b0"/>
        <function-ref name="runTask" scoped="" ref="0x40de5790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x40de9010" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x40de9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40de91e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40de92c8"/>
        <function-ref name="request" scoped="" ref="0x40de93a8"/>
        <function-ref name="granted" scoped="" ref="0x40de9488"/>
        <function-ref name="isOwner" scoped="" ref="0x40de9568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IntPin" ref="0x40de9768" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntPin" scoped="" ref="0x40de9768"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40de9940"/>
        <function-ref name="isInput" scoped="" ref="0x40de9a20"/>
        <function-ref name="toggle" scoped="" ref="0x40de9b00"/>
        <function-ref name="isOutput" scoped="" ref="0x40de9be0"/>
        <function-ref name="get" scoped="" ref="0x40de9cc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40de9da0"/>
        <function-ref name="set" scoped="" ref="0x40de9e80"/>
        <function-ref name="clr" scoped="" ref="0x40de8010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="set_io_low" ref="0x40dd7698" loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="set_io_low" scoped="" ref="0x40dd7698"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40dd7870"/>
        <function-ref name="runTask" scoped="" ref="0x40dd7950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="set_io_toggle" ref="0x40e04930" loc="149:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="set_io_toggle" scoped="" ref="0x40e04930"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e04b08"/>
        <function-ref name="runTask" scoped="" ref="0x40e04be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x40dc0010" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40dc0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40dc1748"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40dc18b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40dc0658"/>
        <function-ref name="writeDone" scoped="" ref="0x40dbf8e0"/>
        <function-ref name="write" scoped="" ref="0x40dc0c78"/>
        <function-ref name="readDone" scoped="" ref="0x40dbf2c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Interrupt" ref="0x40de8288" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x40de8288"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40de8460"/>
        <function-ref name="fired" scoped="" ref="0x40de8540"/>
        <function-ref name="disable" scoped="" ref="0x40de8620"/>
        <function-ref name="edge" scoped="" ref="0x40de8700"/>
        <function-ref name="enable" scoped="" ref="0x40de87e0"/>
        <function-ref name="getValue" scoped="" ref="0x40de88c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="set_io_high" ref="0x40ddb478" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300DigitalLogicP.nc">
      <component-ref qname="MDA300DigitalLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="set_io_high" scoped="" ref="0x40ddb478"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ddb650"/>
        <function-ref name="runTask" scoped="" ref="0x40ddb730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntPin" ref="0x40e108c0" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300DigitalC.nc">
      <component-ref qname="HplMDA300DigitalC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntPin" scoped="" ref="0x40e108c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e10a98"/>
        <function-ref name="isInput" scoped="" ref="0x40e10b78"/>
        <function-ref name="toggle" scoped="" ref="0x40e10c58"/>
        <function-ref name="isOutput" scoped="" ref="0x40e10d38"/>
        <function-ref name="get" scoped="" ref="0x40e10e18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e10ef8"/>
        <function-ref name="set" scoped="" ref="0x40e0d010"/>
        <function-ref name="clr" scoped="" ref="0x40e0d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CResource" ref="0x40e0bbf8" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300DigitalC.nc">
      <component-ref qname="HplMDA300DigitalC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x40e0bbf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40e0bdd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40e0beb0"/>
        <function-ref name="request" scoped="" ref="0x40e0a010"/>
        <function-ref name="granted" scoped="" ref="0x40e0a0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x40e0a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x40e0dc58" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300DigitalC.nc">
      <component-ref qname="HplMDA300DigitalC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40e0dc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40dc1748"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40dc18b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e0c2e8"/>
        <function-ref name="writeDone" scoped="" ref="0x40e0b558"/>
        <function-ref name="write" scoped="" ref="0x40e0c908"/>
        <function-ref name="readDone" scoped="" ref="0x40e0cf28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x40e0d368" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300DigitalC.nc">
      <component-ref qname="HplMDA300DigitalC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x40e0d368"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e0d540"/>
        <function-ref name="fired" scoped="" ref="0x40e0d620"/>
        <function-ref name="disable" scoped="" ref="0x40e0d700"/>
        <function-ref name="edge" scoped="" ref="0x40e0d7e0"/>
        <function-ref name="enable" scoped="" ref="0x40e0d8c0"/>
        <function-ref name="getValue" scoped="" ref="0x40e0d9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40e09a38" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplMDA300DigitalC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40e09a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40e09c10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40e09cf0"/>
        <function-ref name="request" scoped="" ref="0x40e09dd0"/>
        <function-ref name="granted" scoped="" ref="0x40e09eb0"/>
        <function-ref name="isOwner" scoped="" ref="0x40e08010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x40e08200" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplMDA300DigitalC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40e08200"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40dc1748"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40dc18b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e08848"/>
        <function-ref name="writeDone" scoped="" ref="0x40ec7ab8"/>
        <function-ref name="write" scoped="" ref="0x40e08e68"/>
        <function-ref name="readDone" scoped="" ref="0x40ec7498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40e338e8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40e338e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40e33ac0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40e33ba0"/>
        <function-ref name="request" scoped="" ref="0x40e33c80"/>
        <function-ref name="granted" scoped="" ref="0x40e33d60"/>
        <function-ref name="isOwner" scoped="" ref="0x40e33e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x40e30460" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40e30460"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40dc1748"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40dc18b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e30aa8"/>
        <function-ref name="writeDone" scoped="" ref="0x40e2fd68"/>
        <function-ref name="write" scoped="" ref="0x40e2f128"/>
        <function-ref name="readDone" scoped="" ref="0x40e2f748"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40e2ad38" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40e2ad38"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40e2af20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40e51018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40e51ca0" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40e51ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40e51e88"/>
        <function-ref name="configure" scoped="" ref="0x40e50010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40e51158" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40e51158"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40e51330"/>
        <function-ref name="requested" scoped="" ref="0x40e51410"/>
        <function-ref name="granted" scoped="" ref="0x40e514f0"/>
        <function-ref name="isOwner" scoped="" ref="0x40e515d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40e516b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40e2a5f8" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40e2a5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40e2a7e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40e2a8c0"/>
        <function-ref name="request" scoped="" ref="0x40e2a9a0"/>
        <function-ref name="granted" scoped="" ref="0x40e2aa80"/>
        <function-ref name="isOwner" scoped="" ref="0x40e2ab60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40e517f0" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40e517f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40e519c8"/>
        <function-ref name="userId" scoped="" ref="0x40e51aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4180d338" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4180d338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4180d510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x4180d670" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x4180d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x4180d848"/>
        <function-ref name="isEmpty" scoped="" ref="0x4180d928"/>
        <function-ref name="isEnqueued" scoped="" ref="0x4180da08"/>
        <function-ref name="dequeue" scoped="" ref="0x4180dae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x4180b010" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x4180b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x4180b1f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4180b2d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x41809010" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x41809010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x418091f8"/>
        <function-ref name="configure" scoped="" ref="0x418092d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x41809438" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x41809438"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41809610"/>
        <function-ref name="isEmpty" scoped="" ref="0x418096f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x418097d0"/>
        <function-ref name="dequeue" scoped="" ref="0x418098b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x4180b418" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x4180b418"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4180b5f0"/>
        <function-ref name="requested" scoped="" ref="0x4180b6d0"/>
        <function-ref name="granted" scoped="" ref="0x4180b7b0"/>
        <function-ref name="isOwner" scoped="" ref="0x4180b890"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4180b970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x418099f0" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x418099f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41809bc8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41809ca8"/>
        <function-ref name="led1On" scoped="" ref="0x41809d88"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41809e68"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41808010"/>
        <function-ref name="get" scoped="" ref="0x418080f0"/>
        <function-ref name="led1Off" scoped="" ref="0x418081d0"/>
        <function-ref name="led0On" scoped="" ref="0x41808550"/>
        <function-ref name="set" scoped="" ref="0x41808390"/>
        <function-ref name="led2On" scoped="" ref="0x418082b0"/>
        <function-ref name="led2Off" scoped="" ref="0x41808470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4180c7f0" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4180c7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4180c9d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4180cab8"/>
        <function-ref name="request" scoped="" ref="0x4180cb98"/>
        <function-ref name="granted" scoped="" ref="0x4180cc78"/>
        <function-ref name="isOwner" scoped="" ref="0x4180cd58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x4180bab0" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x4180bab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x4180bc88"/>
        <function-ref name="userId" scoped="" ref="0x4180bd68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x418086d0" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x418086d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x418088a8"/>
        <function-ref name="runTask" scoped="" ref="0x41808988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x40e4f2e0" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x40e4f2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x40e4f4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x40e4f5f8" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40e4f5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40e4f7d0"/>
        <function-ref name="requested" scoped="" ref="0x40e4f8b0"/>
        <function-ref name="granted" scoped="" ref="0x40e4f990"/>
        <function-ref name="isOwner" scoped="" ref="0x40e4fa70"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40e4fb50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x40e50eb8" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40e50eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e4f0c0"/>
        <function-ref name="stop" scoped="" ref="0x40e4f1a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40e4fc90" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40e4fc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40e4fe68"/>
        <function-ref name="userId" scoped="" ref="0x40e4e010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128I2C" ref="0x40e5ddd8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x40e5ddd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x40e5c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40e60f20" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40e60f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40dc1748"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40dc18b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e5f580"/>
        <function-ref name="writeDone" scoped="" ref="0x40e5d800"/>
        <function-ref name="write" scoped="" ref="0x40e5fba0"/>
        <function-ref name="readDone" scoped="" ref="0x40e5d1e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40e4d010" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40e4d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40e4d1f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40e4d2d8"/>
        <function-ref name="request" scoped="" ref="0x40e4d3b8"/>
        <function-ref name="granted" scoped="" ref="0x40e4d498"/>
        <function-ref name="isOwner" scoped="" ref="0x40e4d578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x40e4d800" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40e4d800"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40dc1748"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40dc18b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e4de58"/>
        <function-ref name="writeDone" scoped="" ref="0x40e60128"/>
        <function-ref name="write" scoped="" ref="0x40e61498"/>
        <function-ref name="readDone" scoped="" ref="0x40e61ac8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x40e607a8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x40e607a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40e60990"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40e60a70"/>
        <function-ref name="request" scoped="" ref="0x40e60b50"/>
        <function-ref name="granted" scoped="" ref="0x40e60c30"/>
        <function-ref name="isOwner" scoped="" ref="0x40e60d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128I2C" ref="0x40e8cd50" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x40e8cd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x40e8cf28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x40e8b0b8" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x40e8b0b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x40e8b290"/>
        <function-ref name="sendCommand" scoped="" ref="0x40e8b370"/>
        <function-ref name="setStart" scoped="" ref="0x40e8b450"/>
        <function-ref name="status" scoped="" ref="0x40e8b530"/>
        <function-ref name="hasAcks" scoped="" ref="0x40e8b610"/>
        <function-ref name="isEnabled" scoped="" ref="0x40e8b6f0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40e8b7d0"/>
        <function-ref name="read" scoped="" ref="0x40e8b8b0"/>
        <function-ref name="init" scoped="" ref="0x40e8b990"/>
        <function-ref name="enableAck" scoped="" ref="0x40e8ba70"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40e8bb50"/>
        <function-ref name="hasStart" scoped="" ref="0x40e8bc30"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40e8bd10"/>
        <function-ref name="commandComplete" scoped="" ref="0x40e8be70"/>
        <function-ref name="enable" scoped="" ref="0x40e8a010"/>
        <function-ref name="write" scoped="" ref="0x40e8a0f0"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x40e8a1d0"/>
        <function-ref name="off" scoped="" ref="0x40e8a2b0"/>
        <function-ref name="setStop" scoped="" ref="0x40e8a390"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x40e8a470"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40e8a550"/>
        <function-ref name="hasStop" scoped="" ref="0x40e8a630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadDebugLeds" ref="0x40e8a7b0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadDebugLeds" scoped="" ref="0x40e8a7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40e8a988"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40e8aa68"/>
        <function-ref name="led1On" scoped="" ref="0x40e8ab48"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40e8ac28"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40e8ad08"/>
        <function-ref name="get" scoped="" ref="0x40e8ade8"/>
        <function-ref name="led1Off" scoped="" ref="0x40e8aec8"/>
        <function-ref name="led2On" scoped="" ref="0x40e892b0"/>
        <function-ref name="set" scoped="" ref="0x40e890f0"/>
        <function-ref name="led2Off" scoped="" ref="0x40e89010"/>
        <function-ref name="led0On" scoped="" ref="0x40e891d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WriteDebugLeds" ref="0x40e89430" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WriteDebugLeds" scoped="" ref="0x40e89430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40e89608"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40e896e8"/>
        <function-ref name="led1On" scoped="" ref="0x40e897c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40e898a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40e89988"/>
        <function-ref name="get" scoped="" ref="0x40e89a68"/>
        <function-ref name="led1Off" scoped="" ref="0x40e89b48"/>
        <function-ref name="led2On" scoped="" ref="0x40e89ec8"/>
        <function-ref name="set" scoped="" ref="0x40e89d08"/>
        <function-ref name="led2Off" scoped="" ref="0x40e89c28"/>
        <function-ref name="led0On" scoped="" ref="0x40e89de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40e5b9e8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40e5b9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e5bbc0"/>
        <function-ref name="stop" scoped="" ref="0x40e5bca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x40e5be90" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40e5be90"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40dc1748"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40dc18b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e5a4f8"/>
        <function-ref name="writeDone" scoped="" ref="0x40e8c778"/>
        <function-ref name="write" scoped="" ref="0x40e5ab18"/>
        <function-ref name="readDone" scoped="" ref="0x40e8c158"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x40e869b8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <component-ref qname="HplAtm128I2CBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x40e869b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x40e86b90"/>
        <function-ref name="sendCommand" scoped="" ref="0x40e86c70"/>
        <function-ref name="setStart" scoped="" ref="0x40e86d50"/>
        <function-ref name="status" scoped="" ref="0x40e86e30"/>
        <function-ref name="hasAcks" scoped="" ref="0x40e86f10"/>
        <function-ref name="isEnabled" scoped="" ref="0x40eb7010"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40eb70f0"/>
        <function-ref name="read" scoped="" ref="0x40eb71d0"/>
        <function-ref name="init" scoped="" ref="0x40eb72b0"/>
        <function-ref name="enableAck" scoped="" ref="0x40eb7390"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40eb7470"/>
        <function-ref name="hasStart" scoped="" ref="0x40eb7550"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40eb7630"/>
        <function-ref name="commandComplete" scoped="" ref="0x40eb7790"/>
        <function-ref name="enable" scoped="" ref="0x40eb7870"/>
        <function-ref name="write" scoped="" ref="0x40eb7950"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x40eb7a30"/>
        <function-ref name="off" scoped="" ref="0x40eb7b10"/>
        <function-ref name="setStop" scoped="" ref="0x40eb7bf0"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x40eb7cd0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40eb7db0"/>
        <function-ref name="hasStop" scoped="" ref="0x40eb7e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x40eb6a88" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x40eb6a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x40eb6c60"/>
        <function-ref name="sendCommand" scoped="" ref="0x40eb6d40"/>
        <function-ref name="setStart" scoped="" ref="0x40eb6e20"/>
        <function-ref name="status" scoped="" ref="0x40eb6f00"/>
        <function-ref name="hasAcks" scoped="" ref="0x40eb3010"/>
        <function-ref name="isEnabled" scoped="" ref="0x40eb30f0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40eb31d0"/>
        <function-ref name="read" scoped="" ref="0x40eb32b0"/>
        <function-ref name="init" scoped="" ref="0x40eb3390"/>
        <function-ref name="enableAck" scoped="" ref="0x40eb3470"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40eb3550"/>
        <function-ref name="hasStart" scoped="" ref="0x40eb3630"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40eb3710"/>
        <function-ref name="commandComplete" scoped="" ref="0x40eb3870"/>
        <function-ref name="enable" scoped="" ref="0x40eb3950"/>
        <function-ref name="write" scoped="" ref="0x40eb3a30"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x40eb3b10"/>
        <function-ref name="off" scoped="" ref="0x40eb3bf0"/>
        <function-ref name="setStop" scoped="" ref="0x40eb3cd0"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x40eb3db0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40eb3e90"/>
        <function-ref name="hasStop" scoped="" ref="0x40eb2010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CClk" ref="0x40eb2240" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CClk" scoped="" ref="0x40eb2240"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40eb2418"/>
        <function-ref name="isInput" scoped="" ref="0x40eb24f8"/>
        <function-ref name="toggle" scoped="" ref="0x40eb25d8"/>
        <function-ref name="isOutput" scoped="" ref="0x40eb26b8"/>
        <function-ref name="get" scoped="" ref="0x40eb2798"/>
        <function-ref name="makeOutput" scoped="" ref="0x40eb2878"/>
        <function-ref name="set" scoped="" ref="0x40eb2958"/>
        <function-ref name="clr" scoped="" ref="0x40eb2a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CData" ref="0x40eb2c40" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CData" scoped="" ref="0x40eb2c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40eb2e18"/>
        <function-ref name="isInput" scoped="" ref="0x40eb2ef8"/>
        <function-ref name="toggle" scoped="" ref="0x40eb1010"/>
        <function-ref name="isOutput" scoped="" ref="0x40eb10f0"/>
        <function-ref name="get" scoped="" ref="0x40eb11d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40eb12b0"/>
        <function-ref name="set" scoped="" ref="0x40eb1390"/>
        <function-ref name="clr" scoped="" ref="0x40eb1470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40ec5c60" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="HplMDA300DigitalC.WarmupTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40ec5c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ec3790"/>
        <function-ref name="fired" scoped="" ref="0x40ec4a20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40ec3150"/>
        <function-ref name="isOneShot" scoped="" ref="0x40ec4ed0"/>
        <function-ref name="getdt" scoped="" ref="0x40ec3c40"/>
        <function-ref name="gett0" scoped="" ref="0x40ec39e8"/>
        <function-ref name="isRunning" scoped="" ref="0x40ec4c78"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40ec42c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40ec3470"/>
        <function-ref name="startOneShot" scoped="" ref="0x40ec4548"/>
        <function-ref name="stop" scoped="" ref="0x40ec47c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40ebe918" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
      <component-ref qname="SamplerC.IBADC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40ebe918"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40ebeaf0"/>
        <function-ref name="stopDone" scoped="" ref="0x40ebebd0"/>
        <function-ref name="start" scoped="" ref="0x40ebecb0"/>
        <function-ref name="stop" scoped="" ref="0x40ebed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EXITATION33" ref="0x40f65c10" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
      <component-ref qname="SamplerC.IBADC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EXITATION33" scoped="" ref="0x40f65c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Power"/>
      </instance>
      <interface-functions>
        <function-ref name="on" scoped="" ref="0x40f65de8"/>
        <function-ref name="off" scoped="" ref="0x40f65ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ebe600" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
      <component-ref qname="SamplerC.IBADC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ebe600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ebe7d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADConvert" ref="0x40f65010" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
      <component-ref qname="SamplerC.IBADC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADConvert" scoped="" ref="0x40f65010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f651f8"/>
        <function-ref name="readDone" scoped="" ref="0x40f652d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetParam" ref="0x40f654b0" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
      <component-ref qname="SamplerC.IBADC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam" scoped="" ref="0x40f654b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x40f65698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EXITATION50" ref="0x40f64050" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
      <component-ref qname="SamplerC.IBADC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EXITATION50" scoped="" ref="0x40f64050"/></type-interface>
      <instance>
        <interfacedef-ref qname="Power"/>
      </instance>
      <interface-functions>
        <function-ref name="on" scoped="" ref="0x40f64228"/>
        <function-ref name="off" scoped="" ref="0x40f64308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EXITATION25" ref="0x40f657f8" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCC.nc">
      <component-ref qname="SamplerC.IBADC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EXITATION25" scoped="" ref="0x40f657f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Power"/>
      </instance>
      <interface-functions>
        <function-ref name="on" scoped="" ref="0x40f659d0"/>
        <function-ref name="off" scoped="" ref="0x40f65ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40ebaa48" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <component-ref qname="HalMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40ebaa48"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40ebac20"/>
        <function-ref name="stopDone" scoped="" ref="0x40ebad00"/>
        <function-ref name="start" scoped="" ref="0x40ebade0"/>
        <function-ref name="stop" scoped="" ref="0x40ebaec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EXITATION33" ref="0x40eeb3c8" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <component-ref qname="HalMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EXITATION33" scoped="" ref="0x40eeb3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Power"/>
      </instance>
      <interface-functions>
        <function-ref name="on" scoped="" ref="0x40eeb5a0"/>
        <function-ref name="off" scoped="" ref="0x40eeb680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40eba6b0" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <component-ref qname="HalMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40eba6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40eba888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADConvert" ref="0x40eec3b8" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <component-ref qname="HalMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADConvert" scoped="" ref="0x40eec3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40eec590"/>
        <function-ref name="readDone" scoped="" ref="0x40eec670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetParam" ref="0x40eecb00" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <component-ref qname="HalMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam" scoped="" ref="0x40eecb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x40eeccd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EXITATION50" ref="0x40eeb888" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <component-ref qname="HalMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EXITATION50" scoped="" ref="0x40eeb888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Power"/>
      </instance>
      <interface-functions>
        <function-ref name="on" scoped="" ref="0x40eeba60"/>
        <function-ref name="off" scoped="" ref="0x40eebb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EXITATION25" ref="0x40eecee0" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300IBADCC.nc">
      <component-ref qname="HalMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EXITATION25" scoped="" ref="0x40eecee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Power"/>
      </instance>
      <interface-functions>
        <function-ref name="on" scoped="" ref="0x40eeb0e0"/>
        <function-ref name="off" scoped="" ref="0x40eeb1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VoltageBuffer" ref="0x40ee46d8" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VoltageBuffer" scoped="" ref="0x40ee46d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ee48b0"/>
        <function-ref name="isInput" scoped="" ref="0x40ee4990"/>
        <function-ref name="toggle" scoped="" ref="0x40ee4a70"/>
        <function-ref name="isOutput" scoped="" ref="0x40ee4b50"/>
        <function-ref name="get" scoped="" ref="0x40ee4c30"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ee4d10"/>
        <function-ref name="set" scoped="" ref="0x40ee4df0"/>
        <function-ref name="clr" scoped="" ref="0x40ee4ed0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Exitation33" ref="0x40ee5b98" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Exitation33" scoped="" ref="0x40ee5b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ee5d70"/>
        <function-ref name="isInput" scoped="" ref="0x40ee5e50"/>
        <function-ref name="toggle" scoped="" ref="0x40ee4010"/>
        <function-ref name="isOutput" scoped="" ref="0x40ee40f0"/>
        <function-ref name="get" scoped="" ref="0x40ee41d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ee42b0"/>
        <function-ref name="set" scoped="" ref="0x40ee4390"/>
        <function-ref name="clr" scoped="" ref="0x40ee4470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerStabalizingTimer" ref="0x40edf010" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerStabalizingTimer" scoped="" ref="0x40edf010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40eddb78"/>
        <function-ref name="fired" scoped="" ref="0x40edfe10"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40edd538"/>
        <function-ref name="isOneShot" scoped="" ref="0x40edd2e0"/>
        <function-ref name="getdt" scoped="" ref="0x40edc048"/>
        <function-ref name="gett0" scoped="" ref="0x40edddd0"/>
        <function-ref name="isRunning" scoped="" ref="0x40edd088"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40edf6b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40edd858"/>
        <function-ref name="startOneShot" scoped="" ref="0x40edf938"/>
        <function-ref name="stop" scoped="" ref="0x40edfbb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EXITATION33" ref="0x40ee6718" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EXITATION33" scoped="" ref="0x40ee6718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Power"/>
      </instance>
      <interface-functions>
        <function-ref name="on" scoped="" ref="0x40ee68f0"/>
        <function-ref name="off" scoped="" ref="0x40ee69d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADConvert" ref="0x40eea708" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ADConvert" scoped="" ref="0x40eea708"/></type-interface>
      <instance>
        <interfacedef-ref qname="ADConvert"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40eea8e0"/>
        <function-ref name="readDone" scoped="" ref="0x40eea9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetParam" ref="0x40eeae50" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetParam" scoped="" ref="0x40eeae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetParam"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setParam" scoped="" ref="0x40ee6050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Exitation50" ref="0x40ee5150" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Exitation50" scoped="" ref="0x40ee5150"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ee5328"/>
        <function-ref name="isInput" scoped="" ref="0x40ee5408"/>
        <function-ref name="toggle" scoped="" ref="0x40ee54e8"/>
        <function-ref name="isOutput" scoped="" ref="0x40ee55c8"/>
        <function-ref name="get" scoped="" ref="0x40ee56a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ee5788"/>
        <function-ref name="set" scoped="" ref="0x40ee5868"/>
        <function-ref name="clr" scoped="" ref="0x40ee5948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VoltageBooster" ref="0x40ee3170" loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VoltageBooster" scoped="" ref="0x40ee3170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ee3348"/>
        <function-ref name="isInput" scoped="" ref="0x40ee3428"/>
        <function-ref name="toggle" scoped="" ref="0x40ee3508"/>
        <function-ref name="isOutput" scoped="" ref="0x40ee35e8"/>
        <function-ref name="get" scoped="" ref="0x40ee36c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ee37a8"/>
        <function-ref name="set" scoped="" ref="0x40ee3888"/>
        <function-ref name="clr" scoped="" ref="0x40ee3968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Switch" ref="0x40ed76a8" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Switch" scoped="" ref="0x40ed76a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Switch"/>
      </instance>
      <interface-functions>
        <function-ref name="setDone" scoped="" ref="0x40ed7880"/>
        <function-ref name="get" scoped="" ref="0x40ed7960"/>
        <function-ref name="getDone" scoped="" ref="0x40ed7a40"/>
        <function-ref name="setAll" scoped="" ref="0x40ed7b20"/>
        <function-ref name="set" scoped="" ref="0x40ed7c00"/>
        <function-ref name="setAllDone" scoped="" ref="0x40ed7ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x40ee0708" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x40ee0708"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ee08e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ee09c0"/>
        <function-ref name="request" scoped="" ref="0x40ee0aa0"/>
        <function-ref name="granted" scoped="" ref="0x40ee0b80"/>
        <function-ref name="isOwner" scoped="" ref="0x40ee0c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40ed7e70" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40ed7e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40edb070"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40edb150"/>
        <function-ref name="led1On" scoped="" ref="0x40edb230"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40edb310"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40edb3f0"/>
        <function-ref name="get" scoped="" ref="0x40edb4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x40edb5b0"/>
        <function-ref name="led2Off" scoped="" ref="0x40edb930"/>
        <function-ref name="set" scoped="" ref="0x40edb690"/>
        <function-ref name="led0On" scoped="" ref="0x40edb770"/>
        <function-ref name="led2On" scoped="" ref="0x40edb850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EXITATION50" ref="0x40ee6bd8" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EXITATION50" scoped="" ref="0x40ee6bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Power"/>
      </instance>
      <interface-functions>
        <function-ref name="on" scoped="" ref="0x40ee6db0"/>
        <function-ref name="off" scoped="" ref="0x40ee6e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EXITATION25" ref="0x40ee6258" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EXITATION25" scoped="" ref="0x40ee6258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Power"/>
      </instance>
      <interface-functions>
        <function-ref name="on" scoped="" ref="0x40ee6430"/>
        <function-ref name="off" scoped="" ref="0x40ee6510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Amplifier" ref="0x40ee3ba8" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Amplifier" scoped="" ref="0x40ee3ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ee3d80"/>
        <function-ref name="isInput" scoped="" ref="0x40ee3e60"/>
        <function-ref name="toggle" scoped="" ref="0x40ee2010"/>
        <function-ref name="isOutput" scoped="" ref="0x40ee20f0"/>
        <function-ref name="get" scoped="" ref="0x40ee21d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ee22b0"/>
        <function-ref name="set" scoped="" ref="0x40ee2390"/>
        <function-ref name="clr" scoped="" ref="0x40ee2470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x40ee2748" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40ee2748"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40dc1748"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40dc18b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ee2d90"/>
        <function-ref name="writeDone" scoped="" ref="0x40ee0048"/>
        <function-ref name="write" scoped="" ref="0x40ee13c8"/>
        <function-ref name="readDone" scoped="" ref="0x40ee19e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="adc_get_data" ref="0x40ef7bd8" loc="161:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCLogicP.nc">
      <component-ref qname="MDA300IBADCLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="adc_get_data" scoped="" ref="0x40ef7bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ef7db0"/>
        <function-ref name="runTask" scoped="" ref="0x40ef7e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SwitchControl" ref="0x40f3d010" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchC.nc">
      <component-ref qname="MDA300IBADCSwitchC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SwitchControl" scoped="" ref="0x40f3d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40f3d1e8"/>
        <function-ref name="stopDone" scoped="" ref="0x40f3d2c8"/>
        <function-ref name="start" scoped="" ref="0x40f3d3a8"/>
        <function-ref name="stop" scoped="" ref="0x40f3d488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Switch" ref="0x40f3d608" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchC.nc">
      <component-ref qname="MDA300IBADCSwitchC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Switch" scoped="" ref="0x40f3d608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Switch"/>
      </instance>
      <interface-functions>
        <function-ref name="setDone" scoped="" ref="0x40f3d7e0"/>
        <function-ref name="get" scoped="" ref="0x40f3d8c0"/>
        <function-ref name="getDone" scoped="" ref="0x40f3d9a0"/>
        <function-ref name="setAll" scoped="" ref="0x40f3da80"/>
        <function-ref name="set" scoped="" ref="0x40f3db60"/>
        <function-ref name="setAllDone" scoped="" ref="0x40f3dc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40f3c520" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="MDA300IBADCSwitchC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40f3c520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40f3c6f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40f3c7d8"/>
        <function-ref name="request" scoped="" ref="0x40f3c8b8"/>
        <function-ref name="granted" scoped="" ref="0x40f3c998"/>
        <function-ref name="isOwner" scoped="" ref="0x40f3ca78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x40f3cc68" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="MDA300IBADCSwitchC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40f3cc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40dc1748"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40dc18b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f3b2e8"/>
        <function-ref name="writeDone" scoped="" ref="0x40f39558"/>
        <function-ref name="write" scoped="" ref="0x40f3b908"/>
        <function-ref name="readDone" scoped="" ref="0x40f3bf28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SwitchControl" ref="0x40f386f8" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchP.nc">
      <component-ref qname="MDA300IBADCSwitchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SwitchControl" scoped="" ref="0x40f386f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40f388d0"/>
        <function-ref name="stopDone" scoped="" ref="0x40f389b0"/>
        <function-ref name="start" scoped="" ref="0x40f38a90"/>
        <function-ref name="stop" scoped="" ref="0x40f38b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Switch" ref="0x40f38cf0" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchP.nc">
      <component-ref qname="MDA300IBADCSwitchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Switch" scoped="" ref="0x40f38cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Switch"/>
      </instance>
      <interface-functions>
        <function-ref name="setDone" scoped="" ref="0x40f38ec8"/>
        <function-ref name="get" scoped="" ref="0x40f35010"/>
        <function-ref name="getDone" scoped="" ref="0x40f350f0"/>
        <function-ref name="setAll" scoped="" ref="0x40f351d0"/>
        <function-ref name="set" scoped="" ref="0x40f352b0"/>
        <function-ref name="setAllDone" scoped="" ref="0x40f35390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x40f355e8" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchP.nc">
      <component-ref qname="MDA300IBADCSwitchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x40f355e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40f357c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40f358a0"/>
        <function-ref name="request" scoped="" ref="0x40f35980"/>
        <function-ref name="granted" scoped="" ref="0x40f35a60"/>
        <function-ref name="isOwner" scoped="" ref="0x40f35b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x40f35e18" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300IBADCSwitchP.nc">
      <component-ref qname="MDA300IBADCSwitchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40f35e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40dc1748"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40dc18b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f34488"/>
        <function-ref name="writeDone" scoped="" ref="0x40f33748"/>
        <function-ref name="write" scoped="" ref="0x40f34aa8"/>
        <function-ref name="readDone" scoped="" ref="0x40f33128"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40f366c8" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40f366c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40f368a0"/>
        <function-ref name="stopDone" scoped="" ref="0x40f36980"/>
        <function-ref name="start" scoped="" ref="0x40f36a60"/>
        <function-ref name="stop" scoped="" ref="0x40f36b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VoltageBuffer" ref="0x40f57338" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VoltageBuffer" scoped="" ref="0x40f57338"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f57510"/>
        <function-ref name="isInput" scoped="" ref="0x40f575f0"/>
        <function-ref name="toggle" scoped="" ref="0x40f576d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f577b0"/>
        <function-ref name="get" scoped="" ref="0x40f57890"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f57970"/>
        <function-ref name="set" scoped="" ref="0x40f57a50"/>
        <function-ref name="clr" scoped="" ref="0x40f57b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Exitation33" ref="0x40f58860" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Exitation33" scoped="" ref="0x40f58860"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f58a38"/>
        <function-ref name="isInput" scoped="" ref="0x40f58b18"/>
        <function-ref name="toggle" scoped="" ref="0x40f58bf8"/>
        <function-ref name="isOutput" scoped="" ref="0x40f58cd8"/>
        <function-ref name="get" scoped="" ref="0x40f58db8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f58e98"/>
        <function-ref name="set" scoped="" ref="0x40f57010"/>
        <function-ref name="clr" scoped="" ref="0x40f570f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PowerStabalizingTimer" ref="0x40f52bd8" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerStabalizingTimer" scoped="" ref="0x40f52bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40f506d8"/>
        <function-ref name="fired" scoped="" ref="0x40f51970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40f50098"/>
        <function-ref name="isOneShot" scoped="" ref="0x40f51e20"/>
        <function-ref name="getdt" scoped="" ref="0x40f50b88"/>
        <function-ref name="gett0" scoped="" ref="0x40f50930"/>
        <function-ref name="isRunning" scoped="" ref="0x40f51bc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40f51218"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40f503b8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40f51498"/>
        <function-ref name="stop" scoped="" ref="0x40f51718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40f36330" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40f36330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f36508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Exitation50" ref="0x40f36d70" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Exitation50" scoped="" ref="0x40f36d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f58010"/>
        <function-ref name="isInput" scoped="" ref="0x40f580f0"/>
        <function-ref name="toggle" scoped="" ref="0x40f581d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f582b0"/>
        <function-ref name="get" scoped="" ref="0x40f58390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f58470"/>
        <function-ref name="set" scoped="" ref="0x40f58550"/>
        <function-ref name="clr" scoped="" ref="0x40f58630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VoltageBooster" ref="0x40f57d80" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VoltageBooster" scoped="" ref="0x40f57d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f56010"/>
        <function-ref name="isInput" scoped="" ref="0x40f560f0"/>
        <function-ref name="toggle" scoped="" ref="0x40f561d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f562b0"/>
        <function-ref name="get" scoped="" ref="0x40f56390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f56470"/>
        <function-ref name="set" scoped="" ref="0x40f56550"/>
        <function-ref name="clr" scoped="" ref="0x40f56630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CResource" ref="0x40f52340" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x40f52340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40f52518"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40f525f8"/>
        <function-ref name="request" scoped="" ref="0x40f526d8"/>
        <function-ref name="granted" scoped="" ref="0x40f527b8"/>
        <function-ref name="isOwner" scoped="" ref="0x40f52898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchControl" ref="0x40f50ef0" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SwitchControl" scoped="" ref="0x40f50ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40f4e0e0"/>
        <function-ref name="stopDone" scoped="" ref="0x40f4e1c0"/>
        <function-ref name="start" scoped="" ref="0x40f4e2a0"/>
        <function-ref name="stop" scoped="" ref="0x40f4e380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Amplifier" ref="0x40f56850" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Amplifier" scoped="" ref="0x40f56850"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f56a28"/>
        <function-ref name="isInput" scoped="" ref="0x40f56b08"/>
        <function-ref name="toggle" scoped="" ref="0x40f56be8"/>
        <function-ref name="isOutput" scoped="" ref="0x40f56cc8"/>
        <function-ref name="get" scoped="" ref="0x40f56da8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f56e88"/>
        <function-ref name="set" scoped="" ref="0x40f54010"/>
        <function-ref name="clr" scoped="" ref="0x40f540f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x40f543a8" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCC.nc">
      <component-ref qname="HplMDA300IBADCC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40f543a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40dc1748"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40dc18b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f549f0"/>
        <function-ref name="writeDone" scoped="" ref="0x40f53c88"/>
        <function-ref name="write" scoped="" ref="0x40f53048"/>
        <function-ref name="readDone" scoped="" ref="0x40f53668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40f4d030" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplMDA300IBADCC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40f4d030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40f4d208"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40f4d2e8"/>
        <function-ref name="request" scoped="" ref="0x40f4d3c8"/>
        <function-ref name="granted" scoped="" ref="0x40f4d4a8"/>
        <function-ref name="isOwner" scoped="" ref="0x40f4d588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x40f4d778" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplMDA300IBADCC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40f4d778"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40dc1748"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40dc18b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f4ddc0"/>
        <function-ref name="writeDone" scoped="" ref="0x40f4b068"/>
        <function-ref name="write" scoped="" ref="0x40f4c400"/>
        <function-ref name="readDone" scoped="" ref="0x40f4ca20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40f4a1e8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="HplMDA300IBADCC.WarmupTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40f4a1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40f48d58"/>
        <function-ref name="fired" scoped="" ref="0x40f48010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40f48718"/>
        <function-ref name="isOneShot" scoped="" ref="0x40f484c0"/>
        <function-ref name="getdt" scoped="" ref="0x40f47268"/>
        <function-ref name="gett0" scoped="" ref="0x40f47010"/>
        <function-ref name="isRunning" scoped="" ref="0x40f48268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40f4a810"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40f48a38"/>
        <function-ref name="startOneShot" scoped="" ref="0x40f4aa90"/>
        <function-ref name="stop" scoped="" ref="0x40f4ad10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40f433c8" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <component-ref qname="HplMDA300IBADCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40f433c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40f435a0"/>
        <function-ref name="stopDone" scoped="" ref="0x40f43680"/>
        <function-ref name="start" scoped="" ref="0x40f43760"/>
        <function-ref name="stop" scoped="" ref="0x40f43840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VoltageBuffer" ref="0x40f79010" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <component-ref qname="HplMDA300IBADCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VoltageBuffer" scoped="" ref="0x40f79010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f791e8"/>
        <function-ref name="isInput" scoped="" ref="0x40f792c8"/>
        <function-ref name="toggle" scoped="" ref="0x40f793a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40f79488"/>
        <function-ref name="get" scoped="" ref="0x40f79568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f79648"/>
        <function-ref name="set" scoped="" ref="0x40f79728"/>
        <function-ref name="clr" scoped="" ref="0x40f79808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Exitation33" ref="0x40f42500" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <component-ref qname="HplMDA300IBADCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Exitation33" scoped="" ref="0x40f42500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f426d8"/>
        <function-ref name="isInput" scoped="" ref="0x40f427b8"/>
        <function-ref name="toggle" scoped="" ref="0x40f42898"/>
        <function-ref name="isOutput" scoped="" ref="0x40f42978"/>
        <function-ref name="get" scoped="" ref="0x40f42a58"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f42b38"/>
        <function-ref name="set" scoped="" ref="0x40f42c18"/>
        <function-ref name="clr" scoped="" ref="0x40f42cf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40f43010" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <component-ref qname="HplMDA300IBADCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40f43010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f431e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Exitation50" ref="0x40f43a90" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <component-ref qname="HplMDA300IBADCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Exitation50" scoped="" ref="0x40f43a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f43c68"/>
        <function-ref name="isInput" scoped="" ref="0x40f43d48"/>
        <function-ref name="toggle" scoped="" ref="0x40f43e28"/>
        <function-ref name="isOutput" scoped="" ref="0x40f43f08"/>
        <function-ref name="get" scoped="" ref="0x40f42010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f420f0"/>
        <function-ref name="set" scoped="" ref="0x40f421d0"/>
        <function-ref name="clr" scoped="" ref="0x40f422b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VoltageBooster" ref="0x40f79a78" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <component-ref qname="HplMDA300IBADCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VoltageBooster" scoped="" ref="0x40f79a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f79c50"/>
        <function-ref name="isInput" scoped="" ref="0x40f79d30"/>
        <function-ref name="toggle" scoped="" ref="0x40f79e10"/>
        <function-ref name="isOutput" scoped="" ref="0x40f79ef0"/>
        <function-ref name="get" scoped="" ref="0x40f78010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f780f0"/>
        <function-ref name="set" scoped="" ref="0x40f781d0"/>
        <function-ref name="clr" scoped="" ref="0x40f782b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchControl" ref="0x40f77998" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <component-ref qname="HplMDA300IBADCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SwitchControl" scoped="" ref="0x40f77998"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40f77b70"/>
        <function-ref name="stopDone" scoped="" ref="0x40f77c50"/>
        <function-ref name="start" scoped="" ref="0x40f77d30"/>
        <function-ref name="stop" scoped="" ref="0x40f77e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Power" ref="0x40f78f00" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <component-ref qname="HplMDA300IBADCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x40f78f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f770f0"/>
        <function-ref name="isInput" scoped="" ref="0x40f771d0"/>
        <function-ref name="toggle" scoped="" ref="0x40f772b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f77390"/>
        <function-ref name="get" scoped="" ref="0x40f77470"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f77550"/>
        <function-ref name="set" scoped="" ref="0x40f77630"/>
        <function-ref name="clr" scoped="" ref="0x40f77710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Amplifier" ref="0x40f784f0" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300IBADCP.nc">
      <component-ref qname="HplMDA300IBADCP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Amplifier" scoped="" ref="0x40f784f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f786c8"/>
        <function-ref name="isInput" scoped="" ref="0x40f787a8"/>
        <function-ref name="toggle" scoped="" ref="0x40f78888"/>
        <function-ref name="isOutput" scoped="" ref="0x40f78968"/>
        <function-ref name="get" scoped="" ref="0x40f78a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f78b28"/>
        <function-ref name="set" scoped="" ref="0x40f78c08"/>
        <function-ref name="clr" scoped="" ref="0x40f78ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterInit" ref="0x40f95988" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterC.nc">
      <component-ref qname="SamplerC.CounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterInit" scoped="" ref="0x40f95988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f95b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40f94350" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterC.nc">
      <component-ref qname="SamplerC.CounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40f94350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x40f94528"/>
        <function-ref name="high" scoped="" ref="0x40f94608"/>
        <function-ref name="Toggle" scoped="" ref="0x40f946e8"/>
        <function-ref name="read" scoped="" ref="0x40f947c8"/>
        <function-ref name="setParam" scoped="" ref="0x40f948a8"/>
        <function-ref name="readDone" scoped="" ref="0x40f94988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterControl" ref="0x40f95ce0" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterC.nc">
      <component-ref qname="SamplerC.CounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterControl" scoped="" ref="0x40f95ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40f95eb8"/>
        <function-ref name="stopDone" scoped="" ref="0x40f94010"/>
        <function-ref name="start" scoped="" ref="0x40f940f0"/>
        <function-ref name="stop" scoped="" ref="0x40f941d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterInit" ref="0x40f92e10" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <component-ref qname="HalMDA300CounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterInit" scoped="" ref="0x40f92e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f8f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40f8f900" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <component-ref qname="HalMDA300CounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40f8f900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x40f8fad8"/>
        <function-ref name="high" scoped="" ref="0x40f8fbb8"/>
        <function-ref name="Toggle" scoped="" ref="0x40f8fc98"/>
        <function-ref name="read" scoped="" ref="0x40f8fd78"/>
        <function-ref name="setParam" scoped="" ref="0x40f8fe58"/>
        <function-ref name="readDone" scoped="" ref="0x40f8e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterControl" ref="0x40f8f2a0" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HalMDA300CounterC.nc">
      <component-ref qname="HalMDA300CounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterControl" scoped="" ref="0x40f8f2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40f8f478"/>
        <function-ref name="stopDone" scoped="" ref="0x40f8f558"/>
        <function-ref name="start" scoped="" ref="0x40f8f638"/>
        <function-ref name="stop" scoped="" ref="0x40f8f718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x40f89128" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <component-ref qname="MDA300CounterLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40f89128"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40f89878"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Interrupt" ref="0x40f86010" loc="21:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <component-ref qname="MDA300CounterLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x40f86010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f861e8"/>
        <function-ref name="fired" scoped="" ref="0x40f862c8"/>
        <function-ref name="disable" scoped="" ref="0x40f863a8"/>
        <function-ref name="edge" scoped="" ref="0x40f86488"/>
        <function-ref name="enable" scoped="" ref="0x40f86568"/>
        <function-ref name="getValue" scoped="" ref="0x40f86648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="count_ready" ref="0x40fb0c28" loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <component-ref qname="MDA300CounterLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="count_ready" scoped="" ref="0x40fb0c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40fb0e00"/>
        <function-ref name="runTask" scoped="" ref="0x40fb0ee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterInit" ref="0x40f8ec78" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <component-ref qname="MDA300CounterLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterInit" scoped="" ref="0x40f8ec78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f8ee50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40f8b730" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <component-ref qname="MDA300CounterLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40f8b730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dio"/>
      </instance>
      <interface-functions>
        <function-ref name="low" scoped="" ref="0x40f8b908"/>
        <function-ref name="high" scoped="" ref="0x40f8b9e8"/>
        <function-ref name="Toggle" scoped="" ref="0x40f8bac8"/>
        <function-ref name="read" scoped="" ref="0x40f8bba8"/>
        <function-ref name="setParam" scoped="" ref="0x40f8bc88"/>
        <function-ref name="readDone" scoped="" ref="0x40f8bd68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterControl" ref="0x40f8b0f0" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <component-ref qname="MDA300CounterLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterControl" scoped="" ref="0x40f8b0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40f8b2c8"/>
        <function-ref name="stopDone" scoped="" ref="0x40f8b3a8"/>
        <function-ref name="start" scoped="" ref="0x40f8b488"/>
        <function-ref name="stop" scoped="" ref="0x40f8b568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40f8a308" loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <component-ref qname="MDA300CounterLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40f8a308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40f8a4e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40f8a5c0"/>
        <function-ref name="led1On" scoped="" ref="0x40f8a6a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40f8a780"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40f8a860"/>
        <function-ref name="get" scoped="" ref="0x40f8a940"/>
        <function-ref name="led1Off" scoped="" ref="0x40f8aa20"/>
        <function-ref name="led2Off" scoped="" ref="0x40f8ada0"/>
        <function-ref name="set" scoped="" ref="0x40f8ab00"/>
        <function-ref name="led0On" scoped="" ref="0x40f8abe0"/>
        <function-ref name="led2On" scoped="" ref="0x40f8acc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IntPin" ref="0x40f89b70" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <component-ref qname="MDA300CounterLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntPin" scoped="" ref="0x40f89b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f89d48"/>
        <function-ref name="isInput" scoped="" ref="0x40f89e28"/>
        <function-ref name="toggle" scoped="" ref="0x40f89f08"/>
        <function-ref name="isOutput" scoped="" ref="0x40f87010"/>
        <function-ref name="get" scoped="" ref="0x40f870f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f871d0"/>
        <function-ref name="set" scoped="" ref="0x40f872b0"/>
        <function-ref name="clr" scoped="" ref="0x40f87390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Power" ref="0x40f87588" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/MDA300CounterLogicP.nc">
      <component-ref qname="MDA300CounterLogicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x40f87588"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f87760"/>
        <function-ref name="isInput" scoped="" ref="0x40f87840"/>
        <function-ref name="toggle" scoped="" ref="0x40f87920"/>
        <function-ref name="isOutput" scoped="" ref="0x40f87a00"/>
        <function-ref name="get" scoped="" ref="0x40f87ae0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f87bc0"/>
        <function-ref name="set" scoped="" ref="0x40f87ca0"/>
        <function-ref name="clr" scoped="" ref="0x40f87d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntPin" ref="0x40fa8010" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300CounterC.nc">
      <component-ref qname="HplMDA300CounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntPin" scoped="" ref="0x40fa8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fa81e8"/>
        <function-ref name="isInput" scoped="" ref="0x40fa82c8"/>
        <function-ref name="toggle" scoped="" ref="0x40fa83a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40fa8488"/>
        <function-ref name="get" scoped="" ref="0x40fa8568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fa8648"/>
        <function-ref name="set" scoped="" ref="0x40fa8728"/>
        <function-ref name="clr" scoped="" ref="0x40fa8808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Power" ref="0x40fa8a00" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300CounterC.nc">
      <component-ref qname="HplMDA300CounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x40fa8a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fa8bd8"/>
        <function-ref name="isInput" scoped="" ref="0x40fa8cb8"/>
        <function-ref name="toggle" scoped="" ref="0x40fa8d98"/>
        <function-ref name="isOutput" scoped="" ref="0x40fa8e78"/>
        <function-ref name="get" scoped="" ref="0x40fa7010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fa70f0"/>
        <function-ref name="set" scoped="" ref="0x40fa71d0"/>
        <function-ref name="clr" scoped="" ref="0x40fa72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x40fa7528" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/HplMDA300CounterC.nc">
      <component-ref qname="HplMDA300CounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x40fa7528"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40fa7700"/>
        <function-ref name="fired" scoped="" ref="0x40fa77e0"/>
        <function-ref name="disable" scoped="" ref="0x40fa78c0"/>
        <function-ref name="edge" scoped="" ref="0x40fa79a0"/>
        <function-ref name="enable" scoped="" ref="0x40fa7a80"/>
        <function-ref name="getValue" scoped="" ref="0x40fa7b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40fa6b10" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplMDA300CounterC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40fa6b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40fa6ce8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40fa6dc8"/>
        <function-ref name="request" scoped="" ref="0x40fa6ea8"/>
        <function-ref name="granted" scoped="" ref="0x40fa5010"/>
        <function-ref name="isOwner" scoped="" ref="0x40fa50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x40fa52e0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplMDA300CounterC.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40fa52e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40dc1748"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40dc18b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fa5928"/>
        <function-ref name="writeDone" scoped="" ref="0x40fa4c50"/>
        <function-ref name="write" scoped="" ref="0x40fa4010"/>
        <function-ref name="readDone" scoped="" ref="0x40fa4630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x40feb5e0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x40feb5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x40feb7b8"/>
        <function-ref name="setRoot" scoped="" ref="0x40feb898"/>
        <function-ref name="unsetRoot" scoped="" ref="0x40feb978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x40fc7c28" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x40fc7c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40fc7e00"/>
        <function-ref name="setOrigin" scoped="" ref="0x40fc7ee0"/>
        <function-ref name="setType" scoped="" ref="0x40fc6010"/>
        <function-ref name="getOrigin" scoped="" ref="0x40fc60f0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40fc61d0"/>
        <function-ref name="getType" scoped="" ref="0x40fc62b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x40fe5550" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x40fe5550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x40fe57a8"/>
        <function-ref name="logEventMsg" scoped="" ref="0x40fe5888"/>
        <function-ref name="logEventSimple" scoped="" ref="0x40fe5968"/>
        <function-ref name="logEventRoute" scoped="" ref="0x40fe5a48"/>
        <function-ref name="logEventDbg" scoped="" ref="0x40fe5b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x40fc7190" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x40fc7190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x404b1b20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x40fc7368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40fc74e8" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40fc74e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40fc76c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40fc77a0"/>
        <function-ref name="getPayload" scoped="" ref="0x40fc7880"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fc7960"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40fc7a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40fc8598" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40fc8598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x404b1b20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40fc8770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40fc9488" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40fc9488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40fc9660"/>
        <function-ref name="getPayload" scoped="" ref="0x40fc9740"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fc9820"/>
        <function-ref name="cancel" scoped="" ref="0x40fc9900"/>
        <function-ref name="sendDone" scoped="" ref="0x40fc99e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x40fb3768" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x40fb3768"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x40fb3940"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x40fb3a20"/>
        <function-ref name="numNeighbors" scoped="" ref="0x40fb3b00"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x40fb3be0"/>
        <function-ref name="getEtx" scoped="" ref="0x40fb3cc0"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x40fb3da0"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x40fb3e80"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x40fc3010"/>
        <function-ref name="getParent" scoped="" ref="0x40fc30f0"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x40fc31d0"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x40fc32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40fc9e98" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40fc9e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x404b1b20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40fc80c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x40feb178" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x40feb178"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x40feb350"/>
        <function-ref name="setClientCongested" scoped="" ref="0x40feb430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x40fb9178" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x40fb9178"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40fb9350"/>
        <function-ref name="option" scoped="" ref="0x40fb9430"/>
        <function-ref name="setEtx" scoped="" ref="0x40fb9510"/>
        <function-ref name="setOrigin" scoped="" ref="0x40fb95f0"/>
        <function-ref name="clearOption" scoped="" ref="0x40fb96d0"/>
        <function-ref name="getEtx" scoped="" ref="0x40fb97b0"/>
        <function-ref name="getOrigin" scoped="" ref="0x40fb9890"/>
        <function-ref name="setType" scoped="" ref="0x40fb9970"/>
        <function-ref name="setOption" scoped="" ref="0x40fb9a50"/>
        <function-ref name="matchPacket" scoped="" ref="0x40fb9b30"/>
        <function-ref name="getThl" scoped="" ref="0x40fb9c10"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40fb9cf0"/>
        <function-ref name="matchInstance" scoped="" ref="0x40fb9dd0"/>
        <function-ref name="getType" scoped="" ref="0x40fc4010"/>
        <function-ref name="setThl" scoped="" ref="0x40fc40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40fcbca0" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40fcbca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40fcbe78"/>
        <function-ref name="stop" scoped="" ref="0x40fc9010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x40fea6c8" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x40fea6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x40fea8a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x40fdd478" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x40fdd478"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x40fdd650"/>
        <function-ref name="setRoot" scoped="" ref="0x40fdd730"/>
        <function-ref name="unsetRoot" scoped="" ref="0x40fdd810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x40fe2ce0" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x40fe2ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40fe2eb8"/>
        <function-ref name="setOrigin" scoped="" ref="0x40fe0010"/>
        <function-ref name="setType" scoped="" ref="0x40fe00f0"/>
        <function-ref name="getOrigin" scoped="" ref="0x40fe01d0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40fe02b0"/>
        <function-ref name="getType" scoped="" ref="0x40fe0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkEstimator" ref="0x40fd9580" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x40fd9580"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x40fd9758"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x40fd9838"/>
        <function-ref name="txNoAck" scoped="" ref="0x40fd9918"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x40fd99f8"/>
        <function-ref name="evicted" scoped="" ref="0x40fd9ad8"/>
        <function-ref name="clearDLQ" scoped="" ref="0x40fd9bb8"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x40fd9c98"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x40fd9d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x40fd81e8" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x40fd81e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x40fd83c0"/>
        <function-ref name="logEventMsg" scoped="" ref="0x40fd84a0"/>
        <function-ref name="logEventSimple" scoped="" ref="0x40fd8580"/>
        <function-ref name="logEventRoute" scoped="" ref="0x40fd8660"/>
        <function-ref name="logEventDbg" scoped="" ref="0x40fd8740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x40fe2248" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x40fe2248"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x404b1b20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x40fe2420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40fe25a0" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40fe25a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40fe2778"/>
        <function-ref name="payloadLength" scoped="" ref="0x40fe2858"/>
        <function-ref name="getPayload" scoped="" ref="0x40fe2938"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fe2a18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40fe2af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40fe3b78" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40fe3b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x404b1b20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40fe3d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40fe49e0" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40fe49e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40fe4bb8"/>
        <function-ref name="getPayload" scoped="" ref="0x40fe4c98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fe4d78"/>
        <function-ref name="cancel" scoped="" ref="0x40fe4e58"/>
        <function-ref name="sendDone" scoped="" ref="0x40fe3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x40fdf598" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x40fdf598"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x40fdf770"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x40fdf850"/>
        <function-ref name="numNeighbors" scoped="" ref="0x40fdf930"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x40fdfa10"/>
        <function-ref name="getEtx" scoped="" ref="0x40fdfaf0"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x40fdfbd0"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x40fdfcb0"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x40fdfd90"/>
        <function-ref name="getParent" scoped="" ref="0x40fdfe70"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x40fde010"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x40fde0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40fe34c8" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40fe34c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x404b1b20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40fe36a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x40fdd010" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x40fdd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x40fdd1e8"/>
        <function-ref name="setClientCongested" scoped="" ref="0x40fdd2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x40fe0530" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x40fe0530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40fe0708"/>
        <function-ref name="option" scoped="" ref="0x40fe07e8"/>
        <function-ref name="setEtx" scoped="" ref="0x40fe08c8"/>
        <function-ref name="setOrigin" scoped="" ref="0x40fe09a8"/>
        <function-ref name="clearOption" scoped="" ref="0x40fe0a88"/>
        <function-ref name="getEtx" scoped="" ref="0x40fe0b68"/>
        <function-ref name="getOrigin" scoped="" ref="0x40fe0c48"/>
        <function-ref name="setType" scoped="" ref="0x40fe0d28"/>
        <function-ref name="setOption" scoped="" ref="0x40fe0e08"/>
        <function-ref name="matchPacket" scoped="" ref="0x40fe0ee8"/>
        <function-ref name="getThl" scoped="" ref="0x40fdf010"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40fdf0f0"/>
        <function-ref name="matchInstance" scoped="" ref="0x40fdf1d0"/>
        <function-ref name="getType" scoped="" ref="0x40fdf330"/>
        <function-ref name="setThl" scoped="" ref="0x40fdf410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40fe42b0" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40fe42b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40fe4488"/>
        <function-ref name="stop" scoped="" ref="0x40fe4568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x40fddd18" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x40fddd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x40fd8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40fd4010" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40fd4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40fd41e8"/>
        <function-ref name="stopDone" scoped="" ref="0x40fd42c8"/>
        <function-ref name="start" scoped="" ref="0x40fd43a8"/>
        <function-ref name="stop" scoped="" ref="0x40fd4488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40fcff20" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40fcff20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x41007a38"/>
        <function-ref name="clear" scoped="" ref="0x41007de8"/>
        <function-ref name="isValid" scoped="" ref="0x41007688"/>
        <function-ref name="set" scoped="" ref="0x410061b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40fd48e8" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40fd48e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40fd4ac0"/>
        <function-ref name="getPayload" scoped="" ref="0x40fd4ba0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fd4c80"/>
        <function-ref name="cancel" scoped="" ref="0x40fd4d60"/>
        <function-ref name="sendDone" scoped="" ref="0x40fd4e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40fd3960" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40fd3960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40fd3b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40fd3cb8" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40fd3cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40fd3e90"/>
        <function-ref name="payloadLength" scoped="" ref="0x40fd2010"/>
        <function-ref name="getPayload" scoped="" ref="0x40fd20f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40fd21d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40fd22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40fd16c8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40fd16c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x40fd18a0"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x40fd1980"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x40fd1a60"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x40fd1b40"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x40fd1c20"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x40fd1d00"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x40fd1de0"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x40fd1ec0"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x40fd0010"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x40fd00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40fd32c8" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40fd32c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40fd34a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40fd1140" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40fd1140"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40fd1318"/>
        <function-ref name="noAck" scoped="" ref="0x40fd13f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40fd14d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40fd2448" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40fd2448"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40fd2620"/>
        <function-ref name="source" scoped="" ref="0x40fd2700"/>
        <function-ref name="address" scoped="" ref="0x40fd27e0"/>
        <function-ref name="destination" scoped="" ref="0x40fd28c0"/>
        <function-ref name="setSource" scoped="" ref="0x40fd29a0"/>
        <function-ref name="setDestination" scoped="" ref="0x40fd2a80"/>
        <function-ref name="type" scoped="" ref="0x40fd2b60"/>
        <function-ref name="setType" scoped="" ref="0x40fd2c40"/>
        <function-ref name="isForMe" scoped="" ref="0x40fd2d20"/>
        <function-ref name="setGroup" scoped="" ref="0x40fd2e00"/>
        <function-ref name="localGroup" scoped="" ref="0x40fd2ee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x40fd0570" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x40fd0570"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40fcf088"/>
        <function-ref name="clear" scoped="" ref="0x40fcf438"/>
        <function-ref name="isValid" scoped="" ref="0x40fd0cc0"/>
        <function-ref name="set" scoped="" ref="0x40fcf7e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x410a5c50" loc="144:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x410a5c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x410a5e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x410d0078" loc="164:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x410d0078"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x410d0250"/>
        <function-ref name="setRoot" scoped="" ref="0x410d0330"/>
        <function-ref name="unsetRoot" scoped="" ref="0x410d0410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x410a5598" loc="143:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x410a5598"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410a5770"/>
        <function-ref name="getPayload" scoped="" ref="0x410a5850"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410a5930"/>
        <function-ref name="cancel" scoped="" ref="0x410a5a10"/>
        <function-ref name="sendDone" scoped="" ref="0x410a5af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x410cf5b0" loc="167:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x410cf5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x410cf788"/>
        <function-ref name="logEventMsg" scoped="" ref="0x410cf868"/>
        <function-ref name="logEventSimple" scoped="" ref="0x410cf948"/>
        <function-ref name="logEventRoute" scoped="" ref="0x410cfa28"/>
        <function-ref name="logEventDbg" scoped="" ref="0x410cfb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x410a79d0" loc="138:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x410a79d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x410a7ba8"/>
        <function-ref name="setOrigin" scoped="" ref="0x410a7c88"/>
        <function-ref name="setType" scoped="" ref="0x410a7d68"/>
        <function-ref name="getOrigin" scoped="" ref="0x410a7e48"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x410a7f28"/>
        <function-ref name="getType" scoped="" ref="0x410a6018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkEstimator" ref="0x410d6010" loc="154:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x410d6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x410d61e8"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x410d62c8"/>
        <function-ref name="txNoAck" scoped="" ref="0x410d63a8"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x410d6488"/>
        <function-ref name="evicted" scoped="" ref="0x410d6568"/>
        <function-ref name="clearDLQ" scoped="" ref="0x410d6648"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x410d6728"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x410d6808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SentCache" ref="0x410d4c98" loc="160:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SentCache" scoped="" ref="0x410d4c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
              <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x410d22e8"/>
        <function-ref name="flush" scoped="" ref="0x410d27e8"/>
        <function-ref name="lookup" scoped="" ref="0x410d2568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x410a7010" loc="136:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x410a7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x404b1b20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x410a71f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x410a7338" loc="137:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x410a7338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x410a7510"/>
        <function-ref name="payloadLength" scoped="" ref="0x410a75f0"/>
        <function-ref name="getPayload" scoped="" ref="0x410a76d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410a77b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x410a7890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CongestionTimer" ref="0x410d69f8" loc="158:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CongestionTimer" scoped="" ref="0x410d69f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x410d4508"/>
        <function-ref name="fired" scoped="" ref="0x410d57a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x410d5ea8"/>
        <function-ref name="isOneShot" scoped="" ref="0x410d5c50"/>
        <function-ref name="getdt" scoped="" ref="0x410d49b8"/>
        <function-ref name="gett0" scoped="" ref="0x410d4760"/>
        <function-ref name="isRunning" scoped="" ref="0x410d59f8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x410d5048"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x410d41e8"/>
        <function-ref name="startOneShot" scoped="" ref="0x410d52c8"/>
        <function-ref name="stop" scoped="" ref="0x410d5548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x410a8b88" loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x410a8b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x404b1b20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x410a8d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x410d1c68" loc="163:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x410d1c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x410d1e40"/>
        <function-ref name="rand32" scoped="" ref="0x410d1f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x410a8068" loc="133:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x410a8068"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410a8250"/>
        <function-ref name="getPayload" scoped="" ref="0x410a8330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410a8410"/>
        <function-ref name="cancel" scoped="" ref="0x410a84f0"/>
        <function-ref name="sendDone" scoped="" ref="0x410a85d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x410a3050" loc="148:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x410a3050"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x410a3228"/>
        <function-ref name="stopDone" scoped="" ref="0x410a3308"/>
        <function-ref name="start" scoped="" ref="0x410a33e8"/>
        <function-ref name="stop" scoped="" ref="0x410a34c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RetxmitTimer" ref="0x410dad68" loc="152:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RetxmitTimer" scoped="" ref="0x410dad68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x410d88a8"/>
        <function-ref name="fired" scoped="" ref="0x410d9b18"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x410d8268"/>
        <function-ref name="isOneShot" scoped="" ref="0x410d8010"/>
        <function-ref name="getdt" scoped="" ref="0x410d8d58"/>
        <function-ref name="gett0" scoped="" ref="0x410d8b00"/>
        <function-ref name="isRunning" scoped="" ref="0x410d9d70"/>
        <function-ref name="startPeriodic" scoped="" ref="0x410d93c0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x410d8588"/>
        <function-ref name="startOneShot" scoped="" ref="0x410d9640"/>
        <function-ref name="stop" scoped="" ref="0x410d98c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x410ce890" loc="259:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x410ce890"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x410cea68"/>
        <function-ref name="runTask" scoped="" ref="0x410ceb48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x410a36d8" loc="149:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendQueue" scoped="" ref="0x410a36d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40ffc2f8"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x40ffc580"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x410a24c0"/>
        <function-ref name="enqueue" scoped="" ref="0x410a2ba0"/>
        <function-ref name="element" scoped="" ref="0x410a2ef0"/>
        <function-ref name="maxSize" scoped="" ref="0x410a2268"/>
        <function-ref name="dequeue" scoped="" ref="0x410a2830"/>
        <function-ref name="empty" scoped="" ref="0x410a3d00"/>
        <function-ref name="size" scoped="" ref="0x410a2010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpInfo" ref="0x410d29f8" loc="161:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x410d29f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x410d2bd0"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x410d2cb0"/>
        <function-ref name="numNeighbors" scoped="" ref="0x410d2d90"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x410d2e70"/>
        <function-ref name="getEtx" scoped="" ref="0x410d1010"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x410d10f0"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x410d11d0"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x410d12b0"/>
        <function-ref name="getParent" scoped="" ref="0x410d1390"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x410d1470"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x410d1550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x410a43c8" loc="146:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x410a43c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x410a45a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x410a4680"/>
        <function-ref name="getPayload" scoped="" ref="0x410a4760"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410a4840"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x410a4920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x410aa898" loc="131:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x410aa898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x410aaa70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x410a87a8" loc="134:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x410a87a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x404b1b20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x410a8990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x410a5150" loc="140:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x410a5150"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x410a5328"/>
        <function-ref name="setClientCongested" scoped="" ref="0x410a5408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnicastNameFreeRouting" ref="0x410a4a60" loc="147:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x410a4a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x410a4c38"/>
        <function-ref name="routeFound" scoped="" ref="0x410a4d18"/>
        <function-ref name="nextHop" scoped="" ref="0x410a4df8"/>
        <function-ref name="noRoute" scoped="" ref="0x410a4ed8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x410cfc48" loc="168:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x410cfc48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x410cfe20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x410cff00"/>
        <function-ref name="led1On" scoped="" ref="0x410ce010"/>
        <function-ref name="led1Toggle" scoped="" ref="0x410ce0f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x410ce1d0"/>
        <function-ref name="get" scoped="" ref="0x410ce2b0"/>
        <function-ref name="led1Off" scoped="" ref="0x410ce390"/>
        <function-ref name="led2On" scoped="" ref="0x410ce710"/>
        <function-ref name="set" scoped="" ref="0x410ce550"/>
        <function-ref name="led2Off" scoped="" ref="0x410ce470"/>
        <function-ref name="led0On" scoped="" ref="0x410ce630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x410d1690" loc="162:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x410d1690"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x410d1968"/>
        <function-ref name="noAck" scoped="" ref="0x410d1a48"/>
        <function-ref name="wasAcked" scoped="" ref="0x410d1b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x410a6158" loc="139:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x410a6158"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x410a6330"/>
        <function-ref name="option" scoped="" ref="0x410a6410"/>
        <function-ref name="setEtx" scoped="" ref="0x410a64f0"/>
        <function-ref name="setOrigin" scoped="" ref="0x410a65d0"/>
        <function-ref name="clearOption" scoped="" ref="0x410a66b0"/>
        <function-ref name="getEtx" scoped="" ref="0x410a6790"/>
        <function-ref name="getOrigin" scoped="" ref="0x410a6870"/>
        <function-ref name="setType" scoped="" ref="0x410a6950"/>
        <function-ref name="setOption" scoped="" ref="0x410a6a30"/>
        <function-ref name="matchPacket" scoped="" ref="0x410a6b10"/>
        <function-ref name="getThl" scoped="" ref="0x410a6bf0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x410a6cd0"/>
        <function-ref name="matchInstance" scoped="" ref="0x410a6db0"/>
        <function-ref name="getType" scoped="" ref="0x410a6f10"/>
        <function-ref name="setThl" scoped="" ref="0x410a5010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="QEntryPool" ref="0x410a0320" loc="150:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="QEntryPool" scoped="" ref="0x410a0320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40ffc2f8"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x40ffc580"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4109f3f8"/>
        <function-ref name="maxSize" scoped="" ref="0x410a0df8"/>
        <function-ref name="empty" scoped="" ref="0x410a0948"/>
        <function-ref name="put" scoped="" ref="0x4109f068"/>
        <function-ref name="size" scoped="" ref="0x410a0ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x410d0910" loc="166:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x410d0910"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x410d0ae8"/>
        <function-ref name="source" scoped="" ref="0x410d0bc8"/>
        <function-ref name="address" scoped="" ref="0x410d0ca8"/>
        <function-ref name="destination" scoped="" ref="0x410d0d88"/>
        <function-ref name="setSource" scoped="" ref="0x410d0e68"/>
        <function-ref name="setDestination" scoped="" ref="0x410cf010"/>
        <function-ref name="type" scoped="" ref="0x410cf0f0"/>
        <function-ref name="setType" scoped="" ref="0x410cf1d0"/>
        <function-ref name="isForMe" scoped="" ref="0x410cf2b0"/>
        <function-ref name="setGroup" scoped="" ref="0x410cf390"/>
        <function-ref name="localGroup" scoped="" ref="0x410cf470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x410aabb0" loc="132:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x410aabb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x410aad88"/>
        <function-ref name="stop" scoped="" ref="0x410aae68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSnoop" ref="0x410a4010" loc="145:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSnoop" scoped="" ref="0x410a4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x410a4268"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MessagePool" ref="0x4109f830" loc="151:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MessagePool" scoped="" ref="0x4109f830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
            <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x410da930"/>
        <function-ref name="maxSize" scoped="" ref="0x410da348"/>
        <function-ref name="empty" scoped="" ref="0x4109fe58"/>
        <function-ref name="put" scoped="" ref="0x410da5a0"/>
        <function-ref name="size" scoped="" ref="0x410da0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x410d05e8" loc="165:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x410d05e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x410d07d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x410c80a0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
      <component-ref qname="CtpP.MessagePoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x410c80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
            <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x410f0178"/>
        <function-ref name="maxSize" scoped="" ref="0x410c8b78"/>
        <function-ref name="empty" scoped="" ref="0x410c86c8"/>
        <function-ref name="put" scoped="" ref="0x410c8dd0"/>
        <function-ref name="size" scoped="" ref="0x410c8920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x41901810" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="CtpP.MessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x41901810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
            <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x419008f8"/>
        <function-ref name="maxSize" scoped="" ref="0x41900310"/>
        <function-ref name="empty" scoped="" ref="0x41901e38"/>
        <function-ref name="put" scoped="" ref="0x41900568"/>
        <function-ref name="size" scoped="" ref="0x419000b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41901468" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="CtpP.MessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41901468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41901640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x410ef478" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
      <component-ref qname="CtpP.QEntryPoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x410ef478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40ffc2f8"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x40ffc580"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x410ee5f8"/>
        <function-ref name="maxSize" scoped="" ref="0x410ee010"/>
        <function-ref name="empty" scoped="" ref="0x410efaa0"/>
        <function-ref name="put" scoped="" ref="0x410ee268"/>
        <function-ref name="size" scoped="" ref="0x410efcf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x418f6010" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="CtpP.QEntryPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x418f6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40ffc2f8"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x40ffc580"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x418f50e8"/>
        <function-ref name="maxSize" scoped="" ref="0x418f6ae8"/>
        <function-ref name="empty" scoped="" ref="0x418f6638"/>
        <function-ref name="put" scoped="" ref="0x418f6d40"/>
        <function-ref name="size" scoped="" ref="0x418f6890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x418f8bc8" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="CtpP.QEntryPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x418f8bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x418f8da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x410eb638" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
      <component-ref qname="CtpP.SendQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x410eb638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40ffc2f8"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x40ffc580"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x410ea388"/>
        <function-ref name="enqueue" scoped="" ref="0x410eaa68"/>
        <function-ref name="element" scoped="" ref="0x410eadb8"/>
        <function-ref name="maxSize" scoped="" ref="0x410ea130"/>
        <function-ref name="dequeue" scoped="" ref="0x410ea6f8"/>
        <function-ref name="empty" scoped="" ref="0x410ebc60"/>
        <function-ref name="size" scoped="" ref="0x410ebeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0x411170c0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <component-ref qname="CtpP.SentCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cache" scoped="" ref="0x411170c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
              <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x411176e8"/>
        <function-ref name="flush" scoped="" ref="0x41117be8"/>
        <function-ref name="lookup" scoped="" ref="0x41117968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0x418e8dc0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cache" scoped="" ref="0x418e8dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
              <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x418e7408"/>
        <function-ref name="flush" scoped="" ref="0x418e7908"/>
        <function-ref name="lookup" scoped="" ref="0x418e7688"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x418e89f8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x418e89f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x418e8bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpPacket" ref="0x418e7b48" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x418e7b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x418e7d20"/>
        <function-ref name="option" scoped="" ref="0x418e7e00"/>
        <function-ref name="setEtx" scoped="" ref="0x418e7ee0"/>
        <function-ref name="setOrigin" scoped="" ref="0x418e5010"/>
        <function-ref name="clearOption" scoped="" ref="0x418e50f0"/>
        <function-ref name="getEtx" scoped="" ref="0x418e51d0"/>
        <function-ref name="getOrigin" scoped="" ref="0x418e52b0"/>
        <function-ref name="setType" scoped="" ref="0x418e5390"/>
        <function-ref name="setOption" scoped="" ref="0x418e5470"/>
        <function-ref name="matchPacket" scoped="" ref="0x418e5550"/>
        <function-ref name="getThl" scoped="" ref="0x418e5630"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x418e5710"/>
        <function-ref name="matchInstance" scoped="" ref="0x418e57f0"/>
        <function-ref name="getType" scoped="" ref="0x418e5950"/>
        <function-ref name="setThl" scoped="" ref="0x418e5a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x410fcb98" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RoutingBeaconTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x410fcb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x410fa6a8"/>
        <function-ref name="fired" scoped="" ref="0x410fb938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x410fa068"/>
        <function-ref name="isOneShot" scoped="" ref="0x410fbde8"/>
        <function-ref name="getdt" scoped="" ref="0x410fab58"/>
        <function-ref name="gett0" scoped="" ref="0x410fa900"/>
        <function-ref name="isRunning" scoped="" ref="0x410fbb90"/>
        <function-ref name="startPeriodic" scoped="" ref="0x410fb1e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x410fa388"/>
        <function-ref name="startOneShot" scoped="" ref="0x410fb460"/>
        <function-ref name="stop" scoped="" ref="0x410fb6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x411369a0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RouteUpdateTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x411369a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x411344c8"/>
        <function-ref name="fired" scoped="" ref="0x41135768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41135e70"/>
        <function-ref name="isOneShot" scoped="" ref="0x41135c18"/>
        <function-ref name="getdt" scoped="" ref="0x41134978"/>
        <function-ref name="gett0" scoped="" ref="0x41134720"/>
        <function-ref name="isRunning" scoped="" ref="0x411359c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41135010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x411341a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x41135290"/>
        <function-ref name="stop" scoped="" ref="0x41135510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x41127a58" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x41127a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41127c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkEstimator" ref="0x4112a0e8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x4112a0e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x4112a2c0"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x4112a3a0"/>
        <function-ref name="txNoAck" scoped="" ref="0x4112a480"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x4112a560"/>
        <function-ref name="evicted" scoped="" ref="0x4112a640"/>
        <function-ref name="clearDLQ" scoped="" ref="0x4112a720"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x4112a800"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x4112a8e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4112ada8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4112ada8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41129010"/>
        <function-ref name="payloadLength" scoped="" ref="0x411290f0"/>
        <function-ref name="getPayload" scoped="" ref="0x411291d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411292b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41129390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x41126df0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41126df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41128010"/>
        <function-ref name="getPayload" scoped="" ref="0x411280f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411281d0"/>
        <function-ref name="cancel" scoped="" ref="0x411282b0"/>
        <function-ref name="sendDone" scoped="" ref="0x41128390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4112b620" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4112b620"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4112b7f8"/>
        <function-ref name="getPayload" scoped="" ref="0x4112b8d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4112b9b8"/>
        <function-ref name="cancel" scoped="" ref="0x4112ba98"/>
        <function-ref name="sendDone" scoped="" ref="0x4112bb78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x41124040" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x41124040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x41124298"/>
        <function-ref name="rand32" scoped="" ref="0x41124378"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x411272f0" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x411272f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411274c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x411275a8"/>
        <function-ref name="getPayload" scoped="" ref="0x41127688"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41127768"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41127848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4112aa50" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4112aa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4112ac28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMPacket" ref="0x411285b8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMPacket" scoped="" ref="0x411285b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41128790"/>
        <function-ref name="source" scoped="" ref="0x41128870"/>
        <function-ref name="address" scoped="" ref="0x41128950"/>
        <function-ref name="destination" scoped="" ref="0x41128a30"/>
        <function-ref name="setSource" scoped="" ref="0x41128b10"/>
        <function-ref name="setDestination" scoped="" ref="0x41128bf0"/>
        <function-ref name="type" scoped="" ref="0x41128cd0"/>
        <function-ref name="setType" scoped="" ref="0x41128db0"/>
        <function-ref name="isForMe" scoped="" ref="0x41128e90"/>
        <function-ref name="setGroup" scoped="" ref="0x41127010"/>
        <function-ref name="localGroup" scoped="" ref="0x411270f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4112bd00" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4112bd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4112bed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareBit" ref="0x41126a58" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareBit" scoped="" ref="0x41126a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CompareBit"/>
      </instance>
      <interface-functions>
        <function-ref name="shouldInsert" scoped="" ref="0x41126c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x4112b198" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x4112b198"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4112b370"/>
        <function-ref name="stop" scoped="" ref="0x4112b450"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkPacketMetadata" ref="0x41122cc8" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x41122cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x41122ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x411b79d8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x411b79d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x411b7bb0"/>
        <function-ref name="getPayload" scoped="" ref="0x411b7c90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411b7d70"/>
        <function-ref name="cancel" scoped="" ref="0x411b7e50"/>
        <function-ref name="sendDone" scoped="" ref="0x411f8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x411f8150" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x411f8150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411f8328"/>
        <function-ref name="payloadLength" scoped="" ref="0x411f8408"/>
        <function-ref name="getPayload" scoped="" ref="0x411f84e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411f85c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x411f86a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x411f87e8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x411f87e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x411f89c0"/>
        <function-ref name="source" scoped="" ref="0x411f8aa0"/>
        <function-ref name="address" scoped="" ref="0x411f8b80"/>
        <function-ref name="destination" scoped="" ref="0x411f8c60"/>
        <function-ref name="setSource" scoped="" ref="0x411f8d40"/>
        <function-ref name="setDestination" scoped="" ref="0x411f8e20"/>
        <function-ref name="type" scoped="" ref="0x411f8f00"/>
        <function-ref name="setType" scoped="" ref="0x411f7010"/>
        <function-ref name="isForMe" scoped="" ref="0x411f70f0"/>
        <function-ref name="setGroup" scoped="" ref="0x411f71d0"/>
        <function-ref name="localGroup" scoped="" ref="0x411f72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x411f7410" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x411f7410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x411f75e8"/>
        <function-ref name="noAck" scoped="" ref="0x411f76c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x411f77a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41930c88" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41930c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41930e60"/>
        <function-ref name="getPayload" scoped="" ref="0x4192d010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4192d0f0"/>
        <function-ref name="cancel" scoped="" ref="0x4192d1d0"/>
        <function-ref name="sendDone" scoped="" ref="0x4192d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x4192d420" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4192d420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4192d5f8"/>
        <function-ref name="getPayload" scoped="" ref="0x4192d6d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4192d7b8"/>
        <function-ref name="cancel" scoped="" ref="0x4192d898"/>
        <function-ref name="sendDone" scoped="" ref="0x4192d978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x4192dab8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4192dab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4192dc90"/>
        <function-ref name="source" scoped="" ref="0x4192dd70"/>
        <function-ref name="address" scoped="" ref="0x4192de50"/>
        <function-ref name="destination" scoped="" ref="0x4192c010"/>
        <function-ref name="setSource" scoped="" ref="0x4192c0f0"/>
        <function-ref name="setDestination" scoped="" ref="0x4192c1d0"/>
        <function-ref name="type" scoped="" ref="0x4192c2b0"/>
        <function-ref name="setType" scoped="" ref="0x4192c390"/>
        <function-ref name="isForMe" scoped="" ref="0x4192c470"/>
        <function-ref name="setGroup" scoped="" ref="0x4192c550"/>
        <function-ref name="localGroup" scoped="" ref="0x4192c630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x411a5100" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x411a5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x411a52d8"/>
        <function-ref name="getPayload" scoped="" ref="0x411a53b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411a5498"/>
        <function-ref name="cancel" scoped="" ref="0x411a5578"/>
        <function-ref name="sendDone" scoped="" ref="0x411a5658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x411bc780" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x411bc780"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404bdd68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x411bc968"/>
        <function-ref name="getPayload" scoped="" ref="0x411bca48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411bcb28"/>
        <function-ref name="cancel" scoped="" ref="0x411bcc08"/>
        <function-ref name="sendDone" scoped="" ref="0x411bcce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x411bc010" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x411bc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x411bc1f8"/>
        <function-ref name="getPayload" scoped="" ref="0x411bc2d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411bc3b8"/>
        <function-ref name="cancel" scoped="" ref="0x411bc498"/>
        <function-ref name="sendDone" scoped="" ref="0x411bc578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x411bba50" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x411bba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411bbc28"/>
        <function-ref name="payloadLength" scoped="" ref="0x411bbd08"/>
        <function-ref name="getPayload" scoped="" ref="0x411bbde8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411bbec8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x411ba010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x411ba190" loc="161:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x411ba190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x411ba368"/>
        <function-ref name="runTask" scoped="" ref="0x411ba448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x411ba5c8" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x411ba5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x411ba7a0"/>
        <function-ref name="runTask" scoped="" ref="0x411ba880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x411bce28" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x411bce28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x411bb050"/>
        <function-ref name="source" scoped="" ref="0x411bb130"/>
        <function-ref name="address" scoped="" ref="0x411bb210"/>
        <function-ref name="destination" scoped="" ref="0x411bb2f0"/>
        <function-ref name="setSource" scoped="" ref="0x411bb3d0"/>
        <function-ref name="setDestination" scoped="" ref="0x411bb4b0"/>
        <function-ref name="type" scoped="" ref="0x411bb590"/>
        <function-ref name="setType" scoped="" ref="0x411bb670"/>
        <function-ref name="isForMe" scoped="" ref="0x411bb750"/>
        <function-ref name="setGroup" scoped="" ref="0x411bb830"/>
        <function-ref name="localGroup" scoped="" ref="0x411bb910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x411f4150" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x411f4150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411f4328"/>
        <function-ref name="payloadLength" scoped="" ref="0x411f4408"/>
        <function-ref name="getPayload" scoped="" ref="0x411f44e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411f45c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x411f46a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x411f5e10" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x411f5e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x411f4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x411f47e8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x411f47e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x411f49c0"/>
        <function-ref name="source" scoped="" ref="0x411f4aa0"/>
        <function-ref name="address" scoped="" ref="0x411f4b80"/>
        <function-ref name="destination" scoped="" ref="0x411f4c60"/>
        <function-ref name="setSource" scoped="" ref="0x411f4d40"/>
        <function-ref name="setDestination" scoped="" ref="0x411f4e20"/>
        <function-ref name="type" scoped="" ref="0x411f4f00"/>
        <function-ref name="setType" scoped="" ref="0x411f0010"/>
        <function-ref name="isForMe" scoped="" ref="0x411f00f0"/>
        <function-ref name="setGroup" scoped="" ref="0x411f01d0"/>
        <function-ref name="localGroup" scoped="" ref="0x411f02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x411efb10" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x411efb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411efce8"/>
        <function-ref name="payloadLength" scoped="" ref="0x411efdc8"/>
        <function-ref name="getPayload" scoped="" ref="0x411efea8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411ee010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x411ee0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x411ef7f8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x411ef7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x411ef9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x411ee230" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x411ee230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x411ee408"/>
        <function-ref name="source" scoped="" ref="0x411ee4e8"/>
        <function-ref name="address" scoped="" ref="0x411ee5c8"/>
        <function-ref name="destination" scoped="" ref="0x411ee6a8"/>
        <function-ref name="setSource" scoped="" ref="0x411ee788"/>
        <function-ref name="setDestination" scoped="" ref="0x411ee868"/>
        <function-ref name="type" scoped="" ref="0x411ee948"/>
        <function-ref name="setType" scoped="" ref="0x411eea28"/>
        <function-ref name="isForMe" scoped="" ref="0x411eeb08"/>
        <function-ref name="setGroup" scoped="" ref="0x411eebe8"/>
        <function-ref name="localGroup" scoped="" ref="0x411eecc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x412603f0" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x412603f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x412605c8"/>
        <function-ref name="setRoot" scoped="" ref="0x412606a8"/>
        <function-ref name="unsetRoot" scoped="" ref="0x41260788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateRouteTask" ref="0x412988e0" loc="267:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateRouteTask" scoped="" ref="0x412988e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41298ab8"/>
        <function-ref name="runTask" scoped="" ref="0x41298b98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x41299618" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x41299618"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x412997f0"/>
        <function-ref name="logEventMsg" scoped="" ref="0x412998d0"/>
        <function-ref name="logEventSimple" scoped="" ref="0x412999b0"/>
        <function-ref name="logEventRoute" scoped="" ref="0x41299a90"/>
        <function-ref name="logEventDbg" scoped="" ref="0x41299b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkEstimator" ref="0x412a1010" loc="108:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x412a1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="txAck" scoped="" ref="0x412a11e8"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x412a12c8"/>
        <function-ref name="txNoAck" scoped="" ref="0x412a13a8"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x412a1488"/>
        <function-ref name="evicted" scoped="" ref="0x412a1568"/>
        <function-ref name="clearDLQ" scoped="" ref="0x412a1648"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x412a1728"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x412a1808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpRoutingPacket" ref="0x4125f8c8" loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpRoutingPacket" scoped="" ref="0x4125f8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpRoutingPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clearOptions" scoped="" ref="0x4125faa0"/>
        <function-ref name="setEtx" scoped="" ref="0x4125fb80"/>
        <function-ref name="clearOption" scoped="" ref="0x4125fc60"/>
        <function-ref name="getEtx" scoped="" ref="0x4125fd40"/>
        <function-ref name="setOption" scoped="" ref="0x4125fe20"/>
        <function-ref name="setParent" scoped="" ref="0x4125ff00"/>
        <function-ref name="getParent" scoped="" ref="0x4125e010"/>
        <function-ref name="getOption" scoped="" ref="0x4125e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x412a05d0" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x412a05d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x412a07a8"/>
        <function-ref name="stopDone" scoped="" ref="0x412a0888"/>
        <function-ref name="start" scoped="" ref="0x412a0968"/>
        <function-ref name="stop" scoped="" ref="0x412a0a48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x41299220" loc="113:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x41299220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x412993f8"/>
        <function-ref name="rand32" scoped="" ref="0x412994d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x412608c8" loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x412608c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x41260aa0"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x41260b80"/>
        <function-ref name="numNeighbors" scoped="" ref="0x41260c60"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x41260d40"/>
        <function-ref name="getEtx" scoped="" ref="0x41260e20"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x41260f00"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x4125f010"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x4125f0f0"/>
        <function-ref name="getParent" scoped="" ref="0x4125f1d0"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x4125f2b0"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x4125f390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendBeaconTask" ref="0x412984a8" loc="385:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendBeaconTask" scoped="" ref="0x412984a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41298680"/>
        <function-ref name="runTask" scoped="" ref="0x41298760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4125e230" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4125e230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4125e408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSend" ref="0x4125e598" loc="106:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSend" scoped="" ref="0x4125e598"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4125e770"/>
        <function-ref name="getPayload" scoped="" ref="0x4125e850"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4125e930"/>
        <function-ref name="cancel" scoped="" ref="0x4125ea10"/>
        <function-ref name="sendDone" scoped="" ref="0x4125eaf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconTimer" ref="0x412a0c38" loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconTimer" scoped="" ref="0x412a0c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4129d730"/>
        <function-ref name="fired" scoped="" ref="0x4129e9d0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4129d0f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x4129ee80"/>
        <function-ref name="getdt" scoped="" ref="0x4129dbe0"/>
        <function-ref name="gett0" scoped="" ref="0x4129d988"/>
        <function-ref name="isRunning" scoped="" ref="0x4129ec28"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4129e278"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4129d410"/>
        <function-ref name="startOneShot" scoped="" ref="0x4129e4f8"/>
        <function-ref name="stop" scoped="" ref="0x4129e778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteTimer" ref="0x4129dea0" loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteTimer" scoped="" ref="0x4129dea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4129bb00"/>
        <function-ref name="fired" scoped="" ref="0x4129cd30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4129b4c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x4129b268"/>
        <function-ref name="getdt" scoped="" ref="0x41299010"/>
        <function-ref name="gett0" scoped="" ref="0x4129bd58"/>
        <function-ref name="isRunning" scoped="" ref="0x4129b010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4129c5d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4129b7e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x4129c858"/>
        <function-ref name="stop" scoped="" ref="0x4129cad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpCongestion" ref="0x41299cb0" loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x41299cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x41299e88"/>
        <function-ref name="setClientCongested" scoped="" ref="0x41298010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareBit" ref="0x41298150" loc="117:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareBit" scoped="" ref="0x41298150"/></type-interface>
      <instance>
        <interfacedef-ref qname="CompareBit"/>
      </instance>
      <interface-functions>
        <function-ref name="shouldInsert" scoped="" ref="0x41298328"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconReceive" ref="0x4125ec50" loc="107:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconReceive" scoped="" ref="0x4125ec50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4125ee28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x412a1948" loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x412a1948"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x412a1b20"/>
        <function-ref name="source" scoped="" ref="0x412a1c00"/>
        <function-ref name="address" scoped="" ref="0x412a1ce0"/>
        <function-ref name="destination" scoped="" ref="0x412a1dc0"/>
        <function-ref name="setSource" scoped="" ref="0x412a1ea0"/>
        <function-ref name="setDestination" scoped="" ref="0x412a0010"/>
        <function-ref name="type" scoped="" ref="0x412a00f0"/>
        <function-ref name="setType" scoped="" ref="0x412a01d0"/>
        <function-ref name="isForMe" scoped="" ref="0x412a02b0"/>
        <function-ref name="setGroup" scoped="" ref="0x412a0390"/>
        <function-ref name="localGroup" scoped="" ref="0x412a0470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x4125f4d0" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x4125f4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4125f6a8"/>
        <function-ref name="stop" scoped="" ref="0x4125f788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Routing" ref="0x41261d60" loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Routing" scoped="" ref="0x41261d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x41260010"/>
        <function-ref name="routeFound" scoped="" ref="0x412600f0"/>
        <function-ref name="nextHop" scoped="" ref="0x412601d0"/>
        <function-ref name="noRoute" scoped="" ref="0x412602b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x41293a70" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RetxmitTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41293a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41291570"/>
        <function-ref name="fired" scoped="" ref="0x41292810"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41292f18"/>
        <function-ref name="isOneShot" scoped="" ref="0x41292cc0"/>
        <function-ref name="getdt" scoped="" ref="0x41291a20"/>
        <function-ref name="gett0" scoped="" ref="0x412917c8"/>
        <function-ref name="isRunning" scoped="" ref="0x41292a68"/>
        <function-ref name="startPeriodic" scoped="" ref="0x412920b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41291250"/>
        <function-ref name="startOneShot" scoped="" ref="0x41292338"/>
        <function-ref name="stop" scoped="" ref="0x412925b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4128fad0" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.CongestionTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4128fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034e590"/>
            <typename><typedef-ref name="TMilli" ref="0x4034e758"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4128d650"/>
        <function-ref name="fired" scoped="" ref="0x4128e860"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4128d010"/>
        <function-ref name="isOneShot" scoped="" ref="0x4128ed10"/>
        <function-ref name="getdt" scoped="" ref="0x4128db00"/>
        <function-ref name="gett0" scoped="" ref="0x4128d8a8"/>
        <function-ref name="isRunning" scoped="" ref="0x4128eab8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4128e108"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4128d330"/>
        <function-ref name="startOneShot" scoped="" ref="0x4128e388"/>
        <function-ref name="stop" scoped="" ref="0x4128e608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4128ae80" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4128ae80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41289070"/>
        <function-ref name="getPayload" scoped="" ref="0x41289150"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41289230"/>
        <function-ref name="cancel" scoped="" ref="0x41289310"/>
        <function-ref name="sendDone" scoped="" ref="0x412893f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41289530" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41289530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41289708"/>
        <function-ref name="payloadLength" scoped="" ref="0x412897e8"/>
        <function-ref name="getPayload" scoped="" ref="0x412898c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x412899a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41289a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41289bc8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41289bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41289da0"/>
        <function-ref name="source" scoped="" ref="0x41289e80"/>
        <function-ref name="address" scoped="" ref="0x41288010"/>
        <function-ref name="destination" scoped="" ref="0x412880f0"/>
        <function-ref name="setSource" scoped="" ref="0x412881d0"/>
        <function-ref name="setDestination" scoped="" ref="0x412882b0"/>
        <function-ref name="type" scoped="" ref="0x41288390"/>
        <function-ref name="setType" scoped="" ref="0x41288470"/>
        <function-ref name="isForMe" scoped="" ref="0x41288550"/>
        <function-ref name="setGroup" scoped="" ref="0x41288630"/>
        <function-ref name="localGroup" scoped="" ref="0x41288710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41288870" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41288870"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41288a48"/>
        <function-ref name="noAck" scoped="" ref="0x41288b28"/>
        <function-ref name="wasAcked" scoped="" ref="0x41288c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x419791f0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x419791f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x419793c8"/>
        <function-ref name="getPayload" scoped="" ref="0x419794a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41979588"/>
        <function-ref name="cancel" scoped="" ref="0x41979668"/>
        <function-ref name="sendDone" scoped="" ref="0x41979748"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x419798b8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x419798b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41979a90"/>
        <function-ref name="getPayload" scoped="" ref="0x41979b70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41979c50"/>
        <function-ref name="cancel" scoped="" ref="0x41979d30"/>
        <function-ref name="sendDone" scoped="" ref="0x41979e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41978010" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41978010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x419781e8"/>
        <function-ref name="source" scoped="" ref="0x419782c8"/>
        <function-ref name="address" scoped="" ref="0x419783a8"/>
        <function-ref name="destination" scoped="" ref="0x41978488"/>
        <function-ref name="setSource" scoped="" ref="0x41978568"/>
        <function-ref name="setDestination" scoped="" ref="0x41978648"/>
        <function-ref name="type" scoped="" ref="0x41978728"/>
        <function-ref name="setType" scoped="" ref="0x41978808"/>
        <function-ref name="isForMe" scoped="" ref="0x419788e8"/>
        <function-ref name="setGroup" scoped="" ref="0x419789c8"/>
        <function-ref name="localGroup" scoped="" ref="0x41978aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41285200" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41285200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x412853d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x412854b8"/>
        <function-ref name="getPayload" scoped="" ref="0x41285598"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41285678"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41285758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x41286ea8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x41286ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x412850c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41285898" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41285898"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41285a70"/>
        <function-ref name="source" scoped="" ref="0x41285b50"/>
        <function-ref name="address" scoped="" ref="0x41285c30"/>
        <function-ref name="destination" scoped="" ref="0x41285d10"/>
        <function-ref name="setSource" scoped="" ref="0x41285df0"/>
        <function-ref name="setDestination" scoped="" ref="0x41285ed0"/>
        <function-ref name="type" scoped="" ref="0x41284010"/>
        <function-ref name="setType" scoped="" ref="0x412840f0"/>
        <function-ref name="isForMe" scoped="" ref="0x412841d0"/>
        <function-ref name="setGroup" scoped="" ref="0x412842b0"/>
        <function-ref name="localGroup" scoped="" ref="0x41284390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x41283f00" loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/DummyActiveMessageP.nc">
      <component-ref qname="DummyActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x41283f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x412800f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x412b47b8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionSenderC.nc">
      <component-ref qname="uAgriAppC.CollectionSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x412b47b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x412b4990"/>
        <function-ref name="payloadLength" scoped="" ref="0x412b4a70"/>
        <function-ref name="getPayload" scoped="" ref="0x412b4b50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x412b4c30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x412b4d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x412b4120" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionSenderC.nc">
      <component-ref qname="uAgriAppC.CollectionSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x412b4120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x412b42f8"/>
        <function-ref name="getPayload" scoped="" ref="0x412b43d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x412b44b8"/>
        <function-ref name="cancel" scoped="" ref="0x412b4598"/>
        <function-ref name="sendDone" scoped="" ref="0x412b4678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4196bcd8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionSenderP.nc">
      <component-ref qname="uAgriAppC.CollectionSenderC.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4196bcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4196beb0"/>
        <function-ref name="payloadLength" scoped="" ref="0x419ca010"/>
        <function-ref name="getPayload" scoped="" ref="0x419ca0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x419ca1d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x419ca2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4196b640" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CollectionSenderP.nc">
      <component-ref qname="uAgriAppC.CollectionSenderC.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4196b640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4196b818"/>
        <function-ref name="getPayload" scoped="" ref="0x4196b8f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4196b9d8"/>
        <function-ref name="cancel" scoped="" ref="0x4196bab8"/>
        <function-ref name="sendDone" scoped="" ref="0x4196bb98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionId" ref="0x419c8de8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionIdP.nc">
      <component-ref qname="uAgriAppC.CollectionSenderC.CollectionSenderP.CollectionIdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x419c8de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x419c6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x412b3970" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x412b3970"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x412b3b48"/>
        <function-ref name="stopDone" scoped="" ref="0x412b3c28"/>
        <function-ref name="start" scoped="" ref="0x412b3d08"/>
        <function-ref name="stop" scoped="" ref="0x412b3de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x412a6258" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x412a6258"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404bdd68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x412a6430"/>
        <function-ref name="getPayload" scoped="" ref="0x412a6510"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x412a65f0"/>
        <function-ref name="cancel" scoped="" ref="0x412a66d0"/>
        <function-ref name="sendDone" scoped="" ref="0x412a67b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x412a5010" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x412a5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x412a51e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x412a52c8"/>
        <function-ref name="getPayload" scoped="" ref="0x412a53a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x412a5488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x412a5568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x412a6c18" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x412a6c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404bdd68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x412a6df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x412a4928" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x412a4928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x412a4b00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x412a4be0"/>
        <function-ref name="led1On" scoped="" ref="0x412a4cc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x412a4da0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x412a4e80"/>
        <function-ref name="get" scoped="" ref="0x412a2010"/>
        <function-ref name="led1Off" scoped="" ref="0x412a20f0"/>
        <function-ref name="led2Off" scoped="" ref="0x412a2470"/>
        <function-ref name="set" scoped="" ref="0x412a21d0"/>
        <function-ref name="led0On" scoped="" ref="0x412a22b0"/>
        <function-ref name="led2On" scoped="" ref="0x412a2390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x412a43f0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x412a43f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x412a45c8"/>
        <function-ref name="noAck" scoped="" ref="0x412a46a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x412a4788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x412a5700" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x412a5700"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x412a58d8"/>
        <function-ref name="source" scoped="" ref="0x412a59b8"/>
        <function-ref name="address" scoped="" ref="0x412a5a98"/>
        <function-ref name="destination" scoped="" ref="0x412a5b78"/>
        <function-ref name="setSource" scoped="" ref="0x412a5c58"/>
        <function-ref name="setDestination" scoped="" ref="0x412a5d38"/>
        <function-ref name="type" scoped="" ref="0x412a5e18"/>
        <function-ref name="setType" scoped="" ref="0x412a5ef8"/>
        <function-ref name="isForMe" scoped="" ref="0x412a4010"/>
        <function-ref name="setGroup" scoped="" ref="0x412a40f0"/>
        <function-ref name="localGroup" scoped="" ref="0x412a41d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x412fdd10" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x412fdd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x412fdee8"/>
        <function-ref name="getPayload" scoped="" ref="0x412fc010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x412fc0f0"/>
        <function-ref name="cancel" scoped="" ref="0x412fc1d0"/>
        <function-ref name="sendDone" scoped="" ref="0x412fc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x412fc410" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x412fc410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x412fc5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x412e9a10" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x412e9a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404bdd68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x412e9bf8"/>
        <function-ref name="getPayload" scoped="" ref="0x412e9cd8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x412e9db8"/>
        <function-ref name="cancel" scoped="" ref="0x412e9e98"/>
        <function-ref name="sendDone" scoped="" ref="0x412e7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x412fd150" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x412fd150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x412fd328"/>
        <function-ref name="payloadLength" scoped="" ref="0x412fd408"/>
        <function-ref name="getPayload" scoped="" ref="0x412fd4e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x412fd5c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x412fd6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x412e71e8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x412e71e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404bdd68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x412e73d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x412fd7e8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x412fd7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x412fd9c0"/>
        <function-ref name="noAck" scoped="" ref="0x412fdaa0"/>
        <function-ref name="wasAcked" scoped="" ref="0x412fdb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x412e7510" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x412e7510"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x412e76e8"/>
        <function-ref name="source" scoped="" ref="0x412e77c8"/>
        <function-ref name="address" scoped="" ref="0x412e78a8"/>
        <function-ref name="destination" scoped="" ref="0x412e7988"/>
        <function-ref name="setSource" scoped="" ref="0x412e7a68"/>
        <function-ref name="setDestination" scoped="" ref="0x412e7b48"/>
        <function-ref name="type" scoped="" ref="0x412e7c28"/>
        <function-ref name="setType" scoped="" ref="0x412e7d08"/>
        <function-ref name="isForMe" scoped="" ref="0x412e7de8"/>
        <function-ref name="setGroup" scoped="" ref="0x412e7ec8"/>
        <function-ref name="localGroup" scoped="" ref="0x412fd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x412fbb78" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x412fbb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x412fbd50"/>
        <function-ref name="stopDone" scoped="" ref="0x412fbe30"/>
        <function-ref name="start" scoped="" ref="0x412fbf10"/>
        <function-ref name="stop" scoped="" ref="0x412f8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x412f8a60" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x412f8a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404c9d90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x412f8c38"/>
        <function-ref name="getPayload" scoped="" ref="0x412f8d18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x412f8df8"/>
        <function-ref name="cancel" scoped="" ref="0x412f8ed8"/>
        <function-ref name="sendDone" scoped="" ref="0x412f7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x412fb7e0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x412fb7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x412fb9b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x412f8458" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x412f8458"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404c9d90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x412f8630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x412f6660" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x412f6660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x412f6838"/>
        <function-ref name="led0Toggle" scoped="" ref="0x412f6918"/>
        <function-ref name="led1On" scoped="" ref="0x412f69f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x412f6ad8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x412f6bb8"/>
        <function-ref name="get" scoped="" ref="0x412f6c98"/>
        <function-ref name="led1Off" scoped="" ref="0x412f6d78"/>
        <function-ref name="led2Off" scoped="" ref="0x412f51d0"/>
        <function-ref name="set" scoped="" ref="0x412f6e58"/>
        <function-ref name="led0On" scoped="" ref="0x412f5010"/>
        <function-ref name="led2On" scoped="" ref="0x412f50f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x412f6158" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x412f6158"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404c9d90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x412f6330"/>
        <function-ref name="offset" scoped="" ref="0x412f6410"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x412f64f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x41328b88" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x41328b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41328d60"/>
        <function-ref name="stopDone" scoped="" ref="0x41328e40"/>
        <function-ref name="start" scoped="" ref="0x41328f20"/>
        <function-ref name="stop" scoped="" ref="0x41327018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x413348b0" loc="326:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x413348b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41334a88"/>
        <function-ref name="runTask" scoped="" ref="0x41334b68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x41326d28" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x41326d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41326f00"/>
        <function-ref name="stop" scoped="" ref="0x41325010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x41353300" loc="189:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x41353300"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x413534d8"/>
        <function-ref name="runTask" scoped="" ref="0x413535b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x413287f0" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x413287f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x413289c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x41325d60" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x41325d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x4131b010"/>
        <function-ref name="flush" scoped="" ref="0x4131b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x413356a8" loc="320:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x413356a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41335880"/>
        <function-ref name="runTask" scoped="" ref="0x41335960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x4131c790" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x4131c790"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x4131c968"/>
        <function-ref name="resetSend" scoped="" ref="0x4131ca48"/>
        <function-ref name="dataReceived" scoped="" ref="0x4131cb28"/>
        <function-ref name="resetReceive" scoped="" ref="0x4131cc08"/>
        <function-ref name="putData" scoped="" ref="0x4131cce8"/>
        <function-ref name="putDone" scoped="" ref="0x4131cdc8"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x4131cea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41326040" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41326040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41326218"/>
        <function-ref name="led0Toggle" scoped="" ref="0x413262f8"/>
        <function-ref name="led1On" scoped="" ref="0x413263d8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x413264b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41326598"/>
        <function-ref name="get" scoped="" ref="0x41326678"/>
        <function-ref name="led1Off" scoped="" ref="0x41326758"/>
        <function-ref name="led2Off" scoped="" ref="0x41326ad8"/>
        <function-ref name="set" scoped="" ref="0x41326838"/>
        <function-ref name="led0On" scoped="" ref="0x41326918"/>
        <function-ref name="led2On" scoped="" ref="0x413269f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x41332550" loc="335:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x41332550"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41332728"/>
        <function-ref name="runTask" scoped="" ref="0x41332808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x41322348" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x41322348"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x41322520"/>
        <function-ref name="nextByte" scoped="" ref="0x41322600"/>
        <function-ref name="startSend" scoped="" ref="0x413226e0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x413227c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x41320430" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x41320430"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x41320608"/>
        <function-ref name="byteReceived" scoped="" ref="0x413206e8"/>
        <function-ref name="endPacket" scoped="" ref="0x413207c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x413e3510" loc="264:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x413e3510"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x413e36e8"/>
        <function-ref name="runTask" scoped="" ref="0x413e37c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4139c108" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4139c108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404c9d90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4139c2f0"/>
        <function-ref name="getPayload" scoped="" ref="0x4139c3d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4139c4b0"/>
        <function-ref name="cancel" scoped="" ref="0x4139c590"/>
        <function-ref name="sendDone" scoped="" ref="0x4139c670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x413e3948" loc="147:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x413e3948"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x413e3b20"/>
        <function-ref name="runTask" scoped="" ref="0x413e3c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4138cd10" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4138cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404c9d90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4138cef8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x4139c898" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x4139c898"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404c9d90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x4139ca80"/>
        <function-ref name="offset" scoped="" ref="0x4139cb60"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x4139cc40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x413e48c8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x413e48c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x413e4aa0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x413e4b80"/>
        <function-ref name="led1On" scoped="" ref="0x413e4c60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x413e4d40"/>
        <function-ref name="led2Toggle" scoped="" ref="0x413e4e20"/>
        <function-ref name="get" scoped="" ref="0x413e4f00"/>
        <function-ref name="led1Off" scoped="" ref="0x413e3010"/>
        <function-ref name="led2On" scoped="" ref="0x413e3390"/>
        <function-ref name="set" scoped="" ref="0x413e31d0"/>
        <function-ref name="led2Off" scoped="" ref="0x413e30f0"/>
        <function-ref name="led0On" scoped="" ref="0x413e32b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x413e4310" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x413e4310"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x413e44e8"/>
        <function-ref name="nextByte" scoped="" ref="0x413e45c8"/>
        <function-ref name="startSend" scoped="" ref="0x413e46a8"/>
        <function-ref name="sendCompleted" scoped="" ref="0x413e4788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x4139cd80" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x4139cd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x413e4010"/>
        <function-ref name="byteReceived" scoped="" ref="0x413e40f0"/>
        <function-ref name="endPacket" scoped="" ref="0x413e41d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x413d50f0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x413d50f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413d52c8"/>
        <function-ref name="receivedByte" scoped="" ref="0x413d53a8"/>
        <function-ref name="receive" scoped="" ref="0x413d5488"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x413d5568"/>
        <function-ref name="receiveDone" scoped="" ref="0x413d5648"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x413d5728"/>
        <function-ref name="sendDone" scoped="" ref="0x413d5808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x413e2d40" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x413e2d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x413e2f18"/>
        <function-ref name="resetSend" scoped="" ref="0x413df010"/>
        <function-ref name="dataReceived" scoped="" ref="0x413df0f0"/>
        <function-ref name="resetReceive" scoped="" ref="0x413df1d0"/>
        <function-ref name="putData" scoped="" ref="0x413df2b0"/>
        <function-ref name="putDone" scoped="" ref="0x413df390"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x413df470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x413d5978" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x413d5978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x413d5b50"/>
        <function-ref name="led0Toggle" scoped="" ref="0x413d5c30"/>
        <function-ref name="led1On" scoped="" ref="0x413d5d10"/>
        <function-ref name="led1Toggle" scoped="" ref="0x413d5df0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x413d5ed0"/>
        <function-ref name="get" scoped="" ref="0x413de010"/>
        <function-ref name="led1Off" scoped="" ref="0x413de0f0"/>
        <function-ref name="led2Off" scoped="" ref="0x413de470"/>
        <function-ref name="set" scoped="" ref="0x413de1d0"/>
        <function-ref name="led0On" scoped="" ref="0x413de2b0"/>
        <function-ref name="led2On" scoped="" ref="0x413de390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x413c58f0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x413c58f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413c5ac8"/>
        <function-ref name="receive" scoped="" ref="0x413c5ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x413e1aa0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x413e1aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413e1c78"/>
        <function-ref name="receivedByte" scoped="" ref="0x413e1d58"/>
        <function-ref name="receive" scoped="" ref="0x413e1e38"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x413e1f18"/>
        <function-ref name="receiveDone" scoped="" ref="0x413c8010"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x413c80f0"/>
        <function-ref name="sendDone" scoped="" ref="0x413c81d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x413e1620" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x413e1620"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x413e17f8"/>
        <function-ref name="stop" scoped="" ref="0x413e18d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x413c77a8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x413c77a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413c7980"/>
        <function-ref name="receive" scoped="" ref="0x413c7a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x413c7c28" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x413c7c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413c7e00"/>
        <function-ref name="receivedByte" scoped="" ref="0x413c7ee0"/>
        <function-ref name="receive" scoped="" ref="0x413c2010"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x413c20f0"/>
        <function-ref name="receiveDone" scoped="" ref="0x413c21d0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x413c22b0"/>
        <function-ref name="sendDone" scoped="" ref="0x413c2390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x413c26f0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x413c26f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x413c2e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x413c1350"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x413c10d8"/>
        <function-ref name="overflow" scoped="" ref="0x413c15c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x413c7338" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x413c7338"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x413c7510"/>
        <function-ref name="stop" scoped="" ref="0x413c75f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x413c0e80" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x413c0e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4142d070"/>
        <function-ref name="receive" scoped="" ref="0x4142d150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x4142db48" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x4142db48"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4142dd20"/>
        <function-ref name="stop" scoped="" ref="0x4142de00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x413c0730" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x413c0730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x413c0908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x4142d2b0" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x4142d2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4142d488"/>
        <function-ref name="receivedByte" scoped="" ref="0x4142d568"/>
        <function-ref name="receive" scoped="" ref="0x4142d648"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x4142d728"/>
        <function-ref name="receiveDone" scoped="" ref="0x4142d808"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x4142d8e8"/>
        <function-ref name="sendDone" scoped="" ref="0x4142d9c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x4142b0a0" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4142b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4142b7f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4142bce0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4142ba68"/>
        <function-ref name="overflow" scoped="" ref="0x4142a010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x4142c448" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x4142c448"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x4142c620"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x4142c700"/>
        <function-ref name="rxDone" scoped="" ref="0x4142c7e0"/>
        <function-ref name="txDone" scoped="" ref="0x4142c8c0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x4142c9a0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x4142ca80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x4142cb60"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x4142cc40"/>
        <function-ref name="tx" scoped="" ref="0x4142cd20"/>
        <function-ref name="rx" scoped="" ref="0x4142ce00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x413c0a68" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x413c0a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x413c0c40"/>
        <function-ref name="stop" scoped="" ref="0x413c0d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x4142c010" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x4142c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4142c1e8"/>
        <function-ref name="stop" scoped="" ref="0x4142c2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x4141a370" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x4141a370"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x4141a548"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x4141a628"/>
        <function-ref name="rxDone" scoped="" ref="0x4141a708"/>
        <function-ref name="txDone" scoped="" ref="0x4141a7e8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x4141a8c8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x4141a9a8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x4141aa88"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x4141ab68"/>
        <function-ref name="tx" scoped="" ref="0x4141ac48"/>
        <function-ref name="rx" scoped="" ref="0x4141ad28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x41419a18" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x41419a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x41419bf0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x41419cd0"/>
        <function-ref name="rxDone" scoped="" ref="0x41419db0"/>
        <function-ref name="txDone" scoped="" ref="0x41419e90"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x41418010"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x414180f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x414181d0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x414182b0"/>
        <function-ref name="tx" scoped="" ref="0x41418390"/>
        <function-ref name="rx" scoped="" ref="0x41418470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x4141be28" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x4141be28"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4141a050"/>
        <function-ref name="stop" scoped="" ref="0x4141a130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x41419010" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x41419010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x414191e8"/>
        <function-ref name="stop" scoped="" ref="0x414192c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x41419520" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x41419520"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x414196f8"/>
        <function-ref name="stop" scoped="" ref="0x414197d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x4141b918" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x4141b918"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4141baf0"/>
        <function-ref name="stop" scoped="" ref="0x4141bbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x41418ca0" loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x41418ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41418e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x41415b58" loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x41415b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x41415d30"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x41415e10"/>
        <function-ref name="rxDone" scoped="" ref="0x41415ef0"/>
        <function-ref name="txDone" scoped="" ref="0x41414010"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x414140f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x414141d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x414142b0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x41414390"/>
        <function-ref name="tx" scoped="" ref="0x41414470"/>
        <function-ref name="rx" scoped="" ref="0x41414550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x41414760" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x41414760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41414938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x41413628" loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x41413628"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x41413800"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x414138e0"/>
        <function-ref name="rxDone" scoped="" ref="0x414139c0"/>
        <function-ref name="txDone" scoped="" ref="0x41413aa0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x41413b80"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x41413c60"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x41413d40"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x41413e20"/>
        <function-ref name="tx" scoped="" ref="0x41413f00"/>
        <function-ref name="rx" scoped="" ref="0x41412010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x41415640" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x41415640"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41415818"/>
        <function-ref name="stop" scoped="" ref="0x414158f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x41414bb0" loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x41414bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41414d88"/>
        <function-ref name="stop" scoped="" ref="0x41414e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x41413110" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x41413110"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x414132e8"/>
        <function-ref name="stop" scoped="" ref="0x414133c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x41412208" loc="104:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x41412208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x414123e0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x414124c0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x414125a0"/>
        <function-ref name="actualMicro" scoped="" ref="0x41412680"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x41412760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x41412948" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x41412948"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x41412b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x41415110" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x41415110"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x414152e8"/>
        <function-ref name="stop" scoped="" ref="0x414153c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x413c3878" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x413c3878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41473010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x41473500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x41473288"/>
        <function-ref name="overflow" scoped="" ref="0x41473778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4146f3c0" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/CounterThree16C.nc">
      <component-ref qname="CounterThree16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4146f3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TThree" ref="0x40374518"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4146fb10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4146d010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4146fd88"/>
        <function-ref name="overflow" scoped="" ref="0x4146d288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x41468090" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x41468090"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x41468268"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x41468348"/>
        <function-ref name="getControlA" scoped="" ref="0x41468428"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x41468508"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x414685e8"/>
        <function-ref name="setControlB" scoped="" ref="0x414686c8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x414687a8"/>
        <function-ref name="getControlB" scoped="" ref="0x41468888"/>
        <function-ref name="setControlC" scoped="" ref="0x41468968"/>
        <function-ref name="setControlA" scoped="" ref="0x41468a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x41468d80" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x41468d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x41465810"/>
        <function-ref name="test" scoped="" ref="0x41465320"/>
        <function-ref name="get" scoped="" ref="0x414673e0"/>
        <function-ref name="captured" scoped="" ref="0x414678f8"/>
        <function-ref name="reset" scoped="" ref="0x41467b98"/>
        <function-ref name="isOn" scoped="" ref="0x41465598"/>
        <function-ref name="set" scoped="" ref="0x41467658"/>
        <function-ref name="start" scoped="" ref="0x41467e10"/>
        <function-ref name="stop" scoped="" ref="0x414650a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x41465f20" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x41465f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x41463500"/>
        <function-ref name="fired" scoped="" ref="0x41464a98"/>
        <function-ref name="get" scoped="" ref="0x41464580"/>
        <function-ref name="reset" scoped="" ref="0x41464d10"/>
        <function-ref name="isOn" scoped="" ref="0x41463778"/>
        <function-ref name="set" scoped="" ref="0x414647f8"/>
        <function-ref name="start" scoped="" ref="0x41463010"/>
        <function-ref name="stop" scoped="" ref="0x41463288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4146dd20" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128Timer3C.nc">
      <component-ref qname="HplAtm128Timer3C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4146dd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x414697b0"/>
        <function-ref name="test" scoped="" ref="0x414692c0"/>
        <function-ref name="get" scoped="" ref="0x4146a390"/>
        <function-ref name="setScale" scoped="" ref="0x41469a28"/>
        <function-ref name="getScale" scoped="" ref="0x41469cc8"/>
        <function-ref name="reset" scoped="" ref="0x4146ab20"/>
        <function-ref name="overflow" scoped="" ref="0x4146a8a8"/>
        <function-ref name="isOn" scoped="" ref="0x41469538"/>
        <function-ref name="set" scoped="" ref="0x4146a608"/>
        <function-ref name="start" scoped="" ref="0x4146ad98"/>
        <function-ref name="stop" scoped="" ref="0x41469048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x4145d770" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x4145d770"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getControlC" scoped="" ref="0x4145d948"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x4145da28"/>
        <function-ref name="getControlA" scoped="" ref="0x4145db08"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x4145dbe8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x4145dcc8"/>
        <function-ref name="setControlB" scoped="" ref="0x4145dda8"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x4145de88"/>
        <function-ref name="getControlB" scoped="" ref="0x4145c010"/>
        <function-ref name="setControlC" scoped="" ref="0x4145c0f0"/>
        <function-ref name="setControlA" scoped="" ref="0x4145c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x41459450" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x41459450"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x414589f0"/>
        <function-ref name="fired" scoped="" ref="0x41458010"/>
        <function-ref name="get" scoped="" ref="0x41459a98"/>
        <function-ref name="reset" scoped="" ref="0x41458288"/>
        <function-ref name="isOn" scoped="" ref="0x41458c68"/>
        <function-ref name="set" scoped="" ref="0x41459d10"/>
        <function-ref name="start" scoped="" ref="0x41458500"/>
        <function-ref name="stop" scoped="" ref="0x41458778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x4145c508" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x4145c508"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x41459010"/>
        <function-ref name="test" scoped="" ref="0x4145aa90"/>
        <function-ref name="get" scoped="" ref="0x4145cb50"/>
        <function-ref name="captured" scoped="" ref="0x4145a088"/>
        <function-ref name="reset" scoped="" ref="0x4145a328"/>
        <function-ref name="isOn" scoped="" ref="0x4145ad08"/>
        <function-ref name="set" scoped="" ref="0x4145cdc8"/>
        <function-ref name="start" scoped="" ref="0x4145a5a0"/>
        <function-ref name="stop" scoped="" ref="0x4145a818"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x414560b8" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x414560b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x41455620"/>
        <function-ref name="fired" scoped="" ref="0x41456c18"/>
        <function-ref name="get" scoped="" ref="0x41456700"/>
        <function-ref name="reset" scoped="" ref="0x41456e90"/>
        <function-ref name="isOn" scoped="" ref="0x41455898"/>
        <function-ref name="set" scoped="" ref="0x41456978"/>
        <function-ref name="start" scoped="" ref="0x41455130"/>
        <function-ref name="stop" scoped="" ref="0x414553a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x41455cb0" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x41455cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4149e288"/>
        <function-ref name="fired" scoped="" ref="0x414a0820"/>
        <function-ref name="get" scoped="" ref="0x414a0308"/>
        <function-ref name="reset" scoped="" ref="0x414a0a98"/>
        <function-ref name="isOn" scoped="" ref="0x4149e500"/>
        <function-ref name="set" scoped="" ref="0x414a0580"/>
        <function-ref name="start" scoped="" ref="0x414a0d10"/>
        <function-ref name="stop" scoped="" ref="0x4149e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4145f438" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm1281Timer3P.nc">
      <component-ref qname="HplAtm1281Timer3P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4145f438"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4145eee0"/>
        <function-ref name="test" scoped="" ref="0x4145e9f0"/>
        <function-ref name="get" scoped="" ref="0x4145fa80"/>
        <function-ref name="setScale" scoped="" ref="0x4145d170"/>
        <function-ref name="getScale" scoped="" ref="0x4145d410"/>
        <function-ref name="reset" scoped="" ref="0x4145e288"/>
        <function-ref name="overflow" scoped="" ref="0x4145e010"/>
        <function-ref name="isOn" scoped="" ref="0x4145ec68"/>
        <function-ref name="set" scoped="" ref="0x4145fcf8"/>
        <function-ref name="start" scoped="" ref="0x4145e500"/>
        <function-ref name="stop" scoped="" ref="0x4145e778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x414a8860" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x414a8860"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402f55d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402f55d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x414a8a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x414a8c48" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitThreeP.InitThree"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x414a8c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x414a56a0"/>
        <function-ref name="test" scoped="" ref="0x414a51b0"/>
        <function-ref name="get" scoped="" ref="0x414a72a8"/>
        <function-ref name="setScale" scoped="" ref="0x414a5918"/>
        <function-ref name="getScale" scoped="" ref="0x414a5bb8"/>
        <function-ref name="reset" scoped="" ref="0x414a7a38"/>
        <function-ref name="overflow" scoped="" ref="0x414a77c0"/>
        <function-ref name="isOn" scoped="" ref="0x414a5428"/>
        <function-ref name="set" scoped="" ref="0x414a7520"/>
        <function-ref name="start" scoped="" ref="0x414a7cb0"/>
        <function-ref name="stop" scoped="" ref="0x414a7f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x414aae40" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x414aae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TThree" ref="0x40374518"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414a95e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x414a9ad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x414a9858"/>
        <function-ref name="overflow" scoped="" ref="0x414a9d48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x414a2050" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterThree16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x414a2050"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x414a1a98"/>
        <function-ref name="test" scoped="" ref="0x414a15a8"/>
        <function-ref name="get" scoped="" ref="0x414a2698"/>
        <function-ref name="setScale" scoped="" ref="0x414a1d10"/>
        <function-ref name="getScale" scoped="" ref="0x414ed010"/>
        <function-ref name="reset" scoped="" ref="0x414a2e28"/>
        <function-ref name="overflow" scoped="" ref="0x414a2bb0"/>
        <function-ref name="isOn" scoped="" ref="0x414a1820"/>
        <function-ref name="set" scoped="" ref="0x414a2910"/>
        <function-ref name="start" scoped="" ref="0x414a10b8"/>
        <function-ref name="stop" scoped="" ref="0x414a1330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x414ea0e0" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x414ea0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TThree" ref="0x40374518"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414ea830"/>
        <function-ref name="clearOverflow" scoped="" ref="0x414ead20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x414eaaa8"/>
        <function-ref name="overflow" scoped="" ref="0x414e9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x41471e68" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x41471e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4034ee10"/>
            <typename><typedef-ref name="TMicro" ref="0x4034d338"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414eb5e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x414ebad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x414eb858"/>
        <function-ref name="overflow" scoped="" ref="0x414ebd48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x414e7930" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x414e7930"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x414e7b08"/>
        <function-ref name="offset" scoped="" ref="0x414e7be8"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x414e7cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x414dd760" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="uAgriAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x414dd760"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x414dd938"/>
        <function-ref name="getPayload" scoped="" ref="0x414dda18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x414ddaf8"/>
        <function-ref name="cancel" scoped="" ref="0x414ddbd8"/>
        <function-ref name="sendDone" scoped="" ref="0x414ddcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x414dddf8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="uAgriAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x414dddf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x414cc010"/>
        <function-ref name="payloadLength" scoped="" ref="0x414cc0f0"/>
        <function-ref name="getPayload" scoped="" ref="0x414cc1d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x414cc2b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x414cc390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x414cc4d0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="uAgriAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x414cc4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x414cc6a8"/>
        <function-ref name="source" scoped="" ref="0x414cc788"/>
        <function-ref name="address" scoped="" ref="0x414cc868"/>
        <function-ref name="destination" scoped="" ref="0x414cc948"/>
        <function-ref name="setSource" scoped="" ref="0x414cca28"/>
        <function-ref name="setDestination" scoped="" ref="0x414ccb08"/>
        <function-ref name="type" scoped="" ref="0x414ccbe8"/>
        <function-ref name="setType" scoped="" ref="0x414cccc8"/>
        <function-ref name="isForMe" scoped="" ref="0x414ccda8"/>
        <function-ref name="setGroup" scoped="" ref="0x414cce88"/>
        <function-ref name="localGroup" scoped="" ref="0x414cb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x414cb170" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="uAgriAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x414cb170"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x414cb348"/>
        <function-ref name="noAck" scoped="" ref="0x414cb428"/>
        <function-ref name="wasAcked" scoped="" ref="0x414cb508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41a3c2d8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="uAgriAppC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41a3c2d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41a3c4b0"/>
        <function-ref name="getPayload" scoped="" ref="0x41a3c590"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41a3c670"/>
        <function-ref name="cancel" scoped="" ref="0x41a3c750"/>
        <function-ref name="sendDone" scoped="" ref="0x41a3c830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41a3c9a0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="uAgriAppC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41a3c9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41a3cb78"/>
        <function-ref name="getPayload" scoped="" ref="0x41a3cc58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41a3cd38"/>
        <function-ref name="cancel" scoped="" ref="0x41a3ce18"/>
        <function-ref name="sendDone" scoped="" ref="0x41a3cef8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41a3b070" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="uAgriAppC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41a3b070"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41a3b248"/>
        <function-ref name="source" scoped="" ref="0x41a3b328"/>
        <function-ref name="address" scoped="" ref="0x41a3b408"/>
        <function-ref name="destination" scoped="" ref="0x41a3b4e8"/>
        <function-ref name="setSource" scoped="" ref="0x41a3b5c8"/>
        <function-ref name="setDestination" scoped="" ref="0x41a3b6a8"/>
        <function-ref name="type" scoped="" ref="0x41a3b788"/>
        <function-ref name="setType" scoped="" ref="0x41a3b868"/>
        <function-ref name="isForMe" scoped="" ref="0x41a3b948"/>
        <function-ref name="setGroup" scoped="" ref="0x41a3ba28"/>
        <function-ref name="localGroup" scoped="" ref="0x41a3bb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x414d76f0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x414d76f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x414d78c8"/>
        <function-ref name="getPayload" scoped="" ref="0x414d79a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x414d7a88"/>
        <function-ref name="cancel" scoped="" ref="0x414d7b68"/>
        <function-ref name="sendDone" scoped="" ref="0x414d7c48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x414d3598" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x414d3598"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404bdd68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x414d3780"/>
        <function-ref name="getPayload" scoped="" ref="0x414d3860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x414d3940"/>
        <function-ref name="cancel" scoped="" ref="0x414d3a20"/>
        <function-ref name="sendDone" scoped="" ref="0x414d3b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x414d4db8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x414d4db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x414d3010"/>
        <function-ref name="getPayload" scoped="" ref="0x414d30f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x414d31d0"/>
        <function-ref name="cancel" scoped="" ref="0x414d32b0"/>
        <function-ref name="sendDone" scoped="" ref="0x414d3390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x414d1850" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x414d1850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x414d1a28"/>
        <function-ref name="payloadLength" scoped="" ref="0x414d1b08"/>
        <function-ref name="getPayload" scoped="" ref="0x414d1be8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x414d1cc8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x414d1da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x414d1f28" loc="161:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x414d1f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x414d0110"/>
        <function-ref name="runTask" scoped="" ref="0x414d01f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x414d0370" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x414d0370"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x414d0548"/>
        <function-ref name="runTask" scoped="" ref="0x414d0628"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x414d3c40" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x414d3c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x414d3e18"/>
        <function-ref name="source" scoped="" ref="0x414d3ef8"/>
        <function-ref name="address" scoped="" ref="0x414d1010"/>
        <function-ref name="destination" scoped="" ref="0x414d10f0"/>
        <function-ref name="setSource" scoped="" ref="0x414d11d0"/>
        <function-ref name="setDestination" scoped="" ref="0x414d12b0"/>
        <function-ref name="type" scoped="" ref="0x414d1390"/>
        <function-ref name="setType" scoped="" ref="0x414d1470"/>
        <function-ref name="isForMe" scoped="" ref="0x414d1550"/>
        <function-ref name="setGroup" scoped="" ref="0x414d1630"/>
        <function-ref name="localGroup" scoped="" ref="0x414d1710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x414c9d60" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolC.nc">
      <component-ref qname="uAgriAppC.UARTMessagePoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x414c9d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
            <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414c8e58"/>
        <function-ref name="maxSize" scoped="" ref="0x414c8870"/>
        <function-ref name="empty" scoped="" ref="0x414c83c0"/>
        <function-ref name="put" scoped="" ref="0x414c8ac8"/>
        <function-ref name="size" scoped="" ref="0x414c8618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x41a145a0" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="uAgriAppC.UARTMessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x41a145a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
            <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41a13680"/>
        <function-ref name="maxSize" scoped="" ref="0x41a13098"/>
        <function-ref name="empty" scoped="" ref="0x41a14bc8"/>
        <function-ref name="put" scoped="" ref="0x41a132f0"/>
        <function-ref name="size" scoped="" ref="0x41a14e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41a141f8" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="uAgriAppC.UARTMessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41a141f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41a143d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x415140a0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/system/QueueC.nc">
      <component-ref qname="uAgriAppC.UARTQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x415140a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
              <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x41514dd0"/>
        <function-ref name="enqueue" scoped="" ref="0x415124c0"/>
        <function-ref name="element" scoped="" ref="0x41512810"/>
        <function-ref name="maxSize" scoped="" ref="0x41514b78"/>
        <function-ref name="dequeue" scoped="" ref="0x41512150"/>
        <function-ref name="empty" scoped="" ref="0x415146c8"/>
        <function-ref name="size" scoped="" ref="0x41514920"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Init.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x403b2ed8" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Boot.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x403b2360" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x403b4010" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x403b5dd8" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x403b65c0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x403b6bf8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x403b6aa0" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x403b52d8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x403b5180" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x403b5830" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x403c6e00" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x403c5210" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x403c6670" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x403c59e0" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x403c6a30" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x403c55e8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x403c1f08" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x403c62c0" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x402f8390" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x402f8c98" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x402f87d0" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x402f9b68" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x402fe090" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuSleep.nc">
      <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x40379d38" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x4038db28" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x40337d78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerState.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x4038e408" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RootControl" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/RootControl.nc">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/RootControl.nc">
        <short> Controls whether the current node is a root of the tree&#10;  </short>
        <long> Controls whether the current node is a root of the tree&#10;  @author Rodrigo Fonseca&#10;  @date   $Date: 2006/12/12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isRoot" ref="0x404e2010" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRoot" ref="0x404d7790" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="unsetRoot" ref="0x404d7b88" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
      <function command="" provided="0" name="send" ref="0x404ce9b0" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404ce670" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404ce850" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x404d8558" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="104:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404d81f8" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404d83d8" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x404cdc88" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x404cc610" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404cc4b8" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x404cd368" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404cd010" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x404cd208" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionPacket" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x404e67b8" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404e6460" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x404e6658" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x404dbc00" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404db898" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x404dbaa0" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x404d9970" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x404b1b20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404d95e8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x404d9810" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x404b1b20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x404db498" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404db340" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x404e6010" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404d9e08" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x404d9200" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x404b1b20"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404d90a8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
      <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x404ad238" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x404ad0e0" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x404ac010" loc="117:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x404ade28" loc="117:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x404b09d8" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x404ad748" loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getLocalSleepInterval" ref="0x404f9010" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's sleep interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRxDutyCycle" ref="0x40502640" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's duty cycle configured in this message&#10;     in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405024e8" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sleepIntervalToDutyCycle" ref="0x40501848" loc="130:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10; in units of [percentage*100]&#10; </short>
          <long>&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10; in units of [percentage*100]&#10; @param sleepInterval The sleep interval in units of [ms]&#10; @return The duty cycle in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepInterval" ref="0x405016f0" loc="130:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalDutyCycle" ref="0x404f9c78" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return this node's radio duty cycle rate, in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRxSleepInterval" ref="0x404f7550" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx sleep interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx sleep interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param sleepInterval The receiving node's sleep interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404f7188" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="sleepIntervalMs" ref="0x404f73f0" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalDutyCycle" ref="0x404f9620" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this node's radio duty cycle rate, in units of [percentage*100].</short>
          <long>&#10; Set this node's radio duty cycle rate, in units of [percentage*100].&#10; For example, to get a 0.05% duty cycle,&#10; &#60;code>&#10;   call LowPowerListening.setDutyCycle(5);&#10; &#60;/code>&#10;&#10; For a 100% duty cycle (always on),&#10; &#60;code>&#10;   call LowPowerListening.setDutyCycle(10000);&#10; &#60;/code>&#10;&#10; This is the equivalent of setting the local sleep interval explicitly.&#10; &#10; @param dutyCycle The duty cycle percentage, in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0x404f94c8" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRxDutyCycle" ref="0x404f6b58" loc="107:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx duty cycle rate.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx duty cycle rate.&#10; Duty cycle is in units of [percentage*100], i.e. 0.25% duty cycle = 25.&#10; &#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param dutyCycle The duty cycle of the receiving mote, in units of &#10;     [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404f67c8" loc="107:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dutyCycle" ref="0x404f69f8" loc="107:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dutyCycleToSleepInterval" ref="0x40501058" loc="122:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="116:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Convert a duty cycle, in units of [percentage*100], to&#10; the sleep interval of the mote in milliseconds&#10; </short>
          <long>&#10; Convert a duty cycle, in units of [percentage*100], to&#10; the sleep interval of the mote in milliseconds&#10; @param dutyCycle The duty cycle in units of [percentage*100]&#10; @return The equivalent sleep interval, in units of [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0x40502ee8" loc="122:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRxSleepInterval" ref="0x404f6010" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's sleep interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404f7e88" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalSleepInterval" ref="0x404f4920" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio sleep interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio sleep interval, in milliseconds.&#10; Once every interval, the node will sleep and perform an Rx check &#10; on the radio.  Setting the sleep interval to 0 will keep the radio&#10; always on.&#10;&#10; This is the equivalent of setting the local duty cycle rate.&#10;&#10; @param sleepIntervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepIntervalMs" ref="0x404f47c8" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008/06/04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x404ecb80" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404ecb80"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x404e88c8" loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404ecb80"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x404e9a80" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x404e9038" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x404e8168" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404ecb80"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x404e8010" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404ecb80"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x404e9548" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x404d4010" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x404d3a70" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x404d3c88" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404d3e68" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x404dddd0" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404dda70" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404ddc50" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x404dd510" loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x404d4cb0" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404d4b58" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x404d2bf8" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404d28a0" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x404d2a98" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Sample" loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
      <function command="" provided="0" name="stop" ref="0x404b3168" loc="8:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
        <interfacedef-ref qname="Sample"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="signed char" size="I:1" alignment="I:1">
              <typename><typedef-ref name="int8_t" ref="0x40034630"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="record" ref="0x404b3010" loc="8:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="signed char" size="I:1" alignment="I:1">
              <typename><typedef-ref name="int8_t" ref="0x40034630"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x404b3538" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
        <interfacedef-ref qname="Sample"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set_digital_output" ref="0x404b54d0" loc="4:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
        <interfacedef-ref qname="Sample"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x404b5178" loc="4:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
          <variable name="state" ref="0x404b5370" loc="4:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSample" ref="0x404abcb0" loc="3:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
        <interfacedef-ref qname="Sample"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x40034630"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x404ab4f0" loc="3:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
          <variable name="channelType" ref="0x404ab720" loc="3:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
          <variable name="interval" ref="0x404ab948" loc="3:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </variable>
          <variable name="param" ref="0x404abb40" loc="3:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reTask" ref="0x404b4670" loc="6:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
        <interfacedef-ref qname="Sample"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="signed char" size="I:1" alignment="I:1">
              <typename><typedef-ref name="int8_t" ref="0x40034630"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="record" ref="0x404b42e8" loc="6:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="signed char" size="I:1" alignment="I:1">
              <typename><typedef-ref name="int8_t" ref="0x40034630"/></typename>
            </type-int>
          </variable>
          <variable name="interval" ref="0x404b4510" loc="6:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readSample" ref="0x404b4bf8" loc="7:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
        <interfacedef-ref qname="Sample"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="signed char" size="I:1" alignment="I:1">
              <typename><typedef-ref name="int8_t" ref="0x40034630"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="record" ref="0x404b4aa0" loc="7:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="signed char" size="I:1" alignment="I:1">
              <typename><typedef-ref name="int8_t" ref="0x40034630"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x404b5e98" loc="5:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
        <interfacedef-ref qname="Sample"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x404b5900" loc="5:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
          <variable name="channelType" ref="0x404b5b30" loc="5:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x404b5d30" loc="5:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Sample.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
      <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x404af808" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x404afcd0" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x404d5298" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
              <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404b6d08" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x404b6ee8" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404d5110" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
      <documentation loc="22:/opt/CVSTinyOS/tinyos-2.x/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x404f1560" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x404f19a8" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x404f1e28" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x404ef6c0" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x404ee458" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x404ee900" loc="106:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x404ef278" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x404fb058" loc="123:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x404eeee8" loc="123:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x404f1138" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x404efb40" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x404ee010" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008/06/04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x404e2a50" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404e2a50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x404e1c38" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404e2a50"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x404edb08" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404e2a50"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x404ed9b0" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404e2a50"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x40032840"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:1"><attribute-ref name="one" ref="0x40032840"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x404e0418" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404e2a50"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x404e02c0" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x404e1808" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x404ed2f8" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404e2a50"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x404e2ef0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x404e1350" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x4058d708" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4058d708"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x405a79d8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a7880" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x405a73b8" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
        <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4058d708"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a7260" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x4058dd80" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4058dc28" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x405a6190" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4058d708"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a7e08" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x405a6030" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4058d708"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x4058fdb8" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4058fc60" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x4058a798" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4058a640" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40589828" loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405894c8" loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x405896a8" loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4058bda0" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x4058b408" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4058b0c8" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4058b2a8" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x405a2240" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405a2240"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x405a23a8" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405a23a8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x405af5b0" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405a23a8"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405af458" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x405b0088" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405afef0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x405a2a30" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405a28d8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x405b0b48" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405a23a8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b07d8" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x405b09e8" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405a23a8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x4059c710" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4059c5b8" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x4059b220" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4059b0c8" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x4059bca8" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4059bb50" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x405a09e8" loc="166:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="153:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404c9010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x405a0890" loc="166:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x405952b0" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40595158" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x405971c8" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x40597860" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40597708" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x40594bd8" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40594870" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40594a78" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x40595e98" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40595b30" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40595d38" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x40593310" loc="136:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="127:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404bdd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x405931b8" loc="136:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x40593e48" loc="151:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404bdd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40593b18" loc="151:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x40593ce8" loc="151:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404bdd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x405917c0" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40591668" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x4059f688" loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="168:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404c9010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4059f328" loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x4059f528" loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404c9010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x4059ff00" loc="184:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="178:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404c9010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
      <function event="" provided="0" name="getNeighborAverage" ref="0x405cb678" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) number of neighbors &#10; whose messages this component receives during one update period.</short>
          <long>&#10; Returns the averaged (exponential decay) number of neighbors &#10; whose messages this component receives during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="channelError" ref="0x405cc598" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; This event should be fired if we notice some anomalies in the operation&#10; of the channel, such as not receiving acknowledgements, missing&#10; sequence numbers or packets with corrupted CRC.</short>
          <long>&#10; This event should be fired if we notice some anomalies in the operation&#10; of the channel, such as not receiving acknowledgements, missing&#10; sequence numbers or packets with corrupted CRC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUpdatePeriod" ref="0x405bb320" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the frequency (in milliseconds) when the traffic averages&#10; should be updated.</short>
          <long>&#10; Returns the frequency (in milliseconds) when the traffic averages&#10; should be updated. &#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannelTime" ref="0x405bb9e8" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the amount of time this message has occupied the channel.</short>
          <long>&#10; Returns the amount of time this message has occupied the channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405bb890" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getErrorAverage" ref="0x405cbbe8" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged error events during one update period.</short>
          <long>&#10; Returns the averaged error events during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="getTransmitAverage" ref="0x405ccba8" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) transmit channel time &#10; during one update period.</short>
          <long>&#10; Returns the averaged (exponential decay) transmit channel time &#10; during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="timerTick" ref="0x405c9070" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; This command is periodically called when the timer is fired and&#10; the averages are updated&#10;</short>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x405cc088" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the sender address of the message so we can calculate the&#10; average number of neighbors that send messages per update period.</short>
          <long>&#10; Returns the sender address of the message so we can calculate the&#10; average number of neighbors that send messages per update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405bbf08" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="getReceiveAverage" ref="0x405cb138" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/TrafficMonitorConfig.nc">
          <short>&#10; Returns the averaged (exponential decay) receive channel time &#10; during one update period.</short>
          <long>&#10; Returns the averaged (exponential decay) receive channel time &#10; during one update period.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x405b3750" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x405b3d58" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
          <long>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x405c4380" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
          <long>&#10; Returns the size of the collision window for this received message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c4228" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="timerTick" ref="0x405c47f0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10; This event should be called periodically to indicate the passing of&#10; time (maybe we should use a timer)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x405c54c8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
          <long>&#10; This command must return the time when the message was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c5370" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x405c5bc0" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c5a68" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageConfig.nc">
      <function command="" provided="0" name="checkPacket" ref="0x405bc958" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageConfig.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageConfig.nc">
          <short>&#10; This command is called when the message first enters the radio stack&#10; via the Send.send command.</short>
          <long>&#10; This command is called when the message first enters the radio stack&#10; via the Send.send command. This should clear the packet if the user&#10; forgot to do so (or return EINVAL to be strict).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405bc800" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x405c6490" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyConfig.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x405b8690" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/CsmaConfig.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b8538" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x405c0010" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x405c1ae0" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405c1768" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x405c1980" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x405b22a0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b2148" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x405c31c0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c3068" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x405c3af8" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405c3780" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x405c3998" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x405b9b98" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckReceived" ref="0x405b2b40" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Sets for the transmitted message whether it was acknowledged or not.</short>
          <long>&#10; Sets for the transmitted message whether it was acknowledged or not.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b2800" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="acked" ref="0x405b29e0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x405c1220" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
        <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
          <long>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c10c8" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IEEE154Packet" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x405dbef0" loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="131:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405dbd98" loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x405db168" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="121:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405db010" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x405cf028" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d1cc0" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x405d1eb0" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x405ce420" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405ce2c8" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set6LowPan" ref="0x405d61c8" loc="172:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="169:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the value of the 6LowPan network field.</short>
          <long>&#10; Sets the value of the 6LowPan network field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d7e28" loc="172:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="network" ref="0x405d6068" loc="172:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x405d7370" loc="160:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="157:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d7010" loc="160:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x405d7210" loc="160:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x405cfd30" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405cfbd8" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x405db8e0" loc="129:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="126:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405db5a0" loc="129:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x405db780" loc="129:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x405cd388" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405cd010" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x405cd228" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x405d23d8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the IEEE 802.15.4 header including the length field.</short>
          <long>&#10; Returns the IEEE 802.15.4 header including the length field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="ieee154_header_t" ref="0x404b7690"/>
              <typename><typedef-ref name="ieee154_header_t" ref="0x404c3698"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d2260" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x405d8b80" loc="155:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="152:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d8a28" loc="155:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x405cf690" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405cf538" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x405e6098" loc="184:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="181:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the active message type&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404bdd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d6d30" loc="184:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="type" ref="0x405d6f20" loc="184:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404bdd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x405dd350" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405dd1f8" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x405cdc90" loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x405cd918" loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x405cdb30" loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLength" ref="0x405d1228" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the length field&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d2e98" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x405d10c8" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get6LowPan" ref="0x405d7980" loc="167:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="164:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the value of the 6LowPan network field.</short>
          <long>&#10; Returns the value of the 6LowPan network field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d7828" loc="167:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x405e66a8" loc="190:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="186:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405e6550" loc="190:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x405d8558" loc="150:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="147:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d81f8" loc="150:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x405d83f8" loc="150:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x405cea50" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405ce8f8" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x405dcad8" loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="116:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405dc788" loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x405dc978" loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLength" ref="0x405d2a28" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the raw value (unadjusted) of the length field&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d28d0" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x405d9718" loc="140:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="137:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d93c8" loc="140:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x405d95b8" loc="140:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x405ddb58" loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405dd830" loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x405dd9f8" loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x405d1808" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d16b0" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x405d68e0" loc="179:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="176:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the active message type of the message&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404bdd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d6788" loc="179:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x405e6db8" loc="196:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="192:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405e6c60" loc="196:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x405d9d48" loc="145:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="142:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405d9bf0" loc="145:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x405dc2a0" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
        <documentation loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IEEE154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405dc148" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/IEEE154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x405e29c8" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x405e2168" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x405e2010" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x405e25b0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x405e5a50" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x405e2e70" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x405be228" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
        <documentation loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405bfe88" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x405be0c8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x405be6c0" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x405bf370" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405bf218" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x405bf9b8" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
        <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405bf860" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x405c8be0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
        <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c8a88" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x405c8500" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
        <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c83a8" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x405c70f8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
          <long>&#10; Returns the minimum ticks before the message could be sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x405c77b0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
          <long>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405c7658" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RF230Config" loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
      <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <short>&#10; This interface needs to be implemented by the MAC to control the behaviour &#10; of the RF230LayerC component.</short>
        <long>&#10; This interface needs to be implemented by the MAC to control the behaviour &#10; of the RF230LayerC component.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getHeaderLength" ref="0x405b5628" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The last touch event is not signaled &#10; for packets whose length is less than or equal to this header length.&#10; The header length must be at least 1.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x405b47d0" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
          <long>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b4678" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x405b50a8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10; Returns a pointer to the start of the PHY payload that contains &#10; getLength()-2 number of bytes.</short>
          <long>&#10; Returns a pointer to the start of the PHY payload that contains &#10; getLength()-2 number of bytes. The FCF field (CRC-16) is not stored,&#10; but automatically appended / verified.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b7f18" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLength" ref="0x405b7a48" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10; Sets the length of the PHY payload.</short>
          <long>&#10; Sets the length of the PHY payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b7708" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x405b78e8" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLength" ref="0x405b7220" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10; Returns the length of the PHY payload (including the FCF field).</short>
          <long>&#10; Returns the length of the PHY payload (including the FCF field).&#10; This value must be in the range [3, 127].&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405b70c8" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMaxLength" ref="0x405b5c20" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10; Returns the maximum PHY length that can be set via the setLength command&#10;</short>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDefaultChannel" ref="0x405b4138" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RF230Config.nc">
          <short>&#10; This command is used at power up to set the default channel.</short>
          <long>&#10; This command is used at power up to set the default channel.&#10; The default CC2420 channel is 26.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RF230Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40642038" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40642038"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40642518" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x40678370" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x40678be0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x406787e0" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404c9010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x4067de58" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404c9010"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x4067daf0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404c9010"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x4067dcf8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x406bfb38" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406bfb38"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x406bfca0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406bfca0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x406d01a8" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406bfca0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x406d0bd0" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
          <long>&#10; Cancel a pending overflow interrupt.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x406d06d0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x406ce010" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControlC" ref="0x406d8bc0" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x406d60f8" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x406d8348" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x406d6b28" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x406d66b8" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x406d6560" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x406d76e0" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x406d7588" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x406d5168" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x406d5010" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x406d8798" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlC" ref="0x406d7c58" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x406d7b00" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x406d7168" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x406d7010" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl16.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x406da2f8" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406da2f8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x406e7e18" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x406e7cc0" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x406e7430" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x406da7f0" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406da2f8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x406e8350" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406da2f8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x406e81f8" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406da2f8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x406e8790" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x406e7890" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x406dad68" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406da2f8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x406dac10" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406da2f8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x406e8b98" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x406e7010" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x406e5320" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406e5320"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x406e1260" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x406e2210" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x406e5818" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406e5320"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x406e2618" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x406e16c0" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x406e5da0" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406e5320"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x406e5c48" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406e5320"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x406e2a20" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x406e2e18" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x406ca3e8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x406ca3e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x406ddba0" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x406dd310" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x406ca8d8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x406ca3e8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x406dc168" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x406dc010" loc="95:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x406dc5f8" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x406df6c8" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x406df2a8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x406dd778" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x406cae50" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x406ca3e8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x406cacf8" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x406ca3e8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x406dfad0" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x406dfec8" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4076a810" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4076a810"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x4077a038" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="121:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4077ee28" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x4077b010" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x4077dc48" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x4077de30" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x4077d7a0" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x4077a9b0" loc="140:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="135:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x4077a480" loc="133:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="127:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x4077d2e0" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x4076ae68" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4076ad10" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x4077b9f8" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x4077b6b0" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x4077b898" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x4077e590" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4077e438" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4077ea60" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4078a4a8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4078a4a8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4078a610" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4078a610"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x407878c8" loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4078a610"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40789598" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x40787280" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4078a610"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4078a610"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40789f10" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4078a610"/></type-var>
          </variable>
          <variable name="dt" ref="0x40787120" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4078a610"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40789a08" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x40787d58" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4078a610"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4078ac40" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4078a610"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4078aae8" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4078a610"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40789138" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x4079fec0" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x4079f490" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x407a00c8" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x4079fa50" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x4079f8f8" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x4079f020" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x407a0eb0" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x4079e4a0" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x4079e348" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x407a0518" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x407a0a90" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x407a0938" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x407b01f0" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x4079aee0" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x407b2330" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x407b2810" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x407b06b0" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x407b2cf0" loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x4079a408" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4035dd68"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x4035c010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x4079aa00" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4035dd68"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x4035c010"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x4079a8a8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4035dd68"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x4035c010"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
      <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x4087b8a8" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x4087be78" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x4087a4f8" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x4087b480" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
          <long>&#10; This method is executed atomically. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x408aae98" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x408aad40" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x408aa860" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x408ab870" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408ab718" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x408a6528" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x408a6010" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x408abe90" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x408a92c0" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x408a9cf8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x408a8360" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x408a8208" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x408a87d0" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x408a9800" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x408c3c08" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
              <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c3a90" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x408c3418" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
        <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c32c0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
      <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x4091b3f0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x4091b298" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x4091b870" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40903908" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
        <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x409037b0" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40903e68" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x40903d10" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
      <documentation loc="26:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x40901238" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x409010e0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x40900010" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40901de0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x40901920" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x409017c8" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x409006e0" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="index" ref="0x40900588" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x40904b88" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
        <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40904a30" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/rf230/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x4098ba10" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x4098b568" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40035848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x40994760" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40994760"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x40994db0" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40994760"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x40994c58" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40994760"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
      <documentation loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x409dcba8" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x409dcba8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x409dcd10" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409dcd10"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x409d7348" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409dcd10"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x409d71f0" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409dcd10"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplRF230" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
      <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <short>&#10; There should be standard interfaces/commands for these&#10;</short>
      </documentation>
      <function command="" provided="0" name="spiSplitRead" ref="0x409dfb90" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplRF230"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="spiSplitReadWrite" ref="0x409de2b8" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <documentation loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplRF230"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x409de160" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="spiWrite" ref="0x409de8b8" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <documentation loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we shuold not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we shuold not need to adjust the power state there.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplRF230"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x409de760" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="spiSplitWrite" ref="0x409df630" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A spiSplitRead command must follow this command even if the&#10; result is unimportant. The SpiByte interface should be &#10; extended with this protocol.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplRF230"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x409df4d8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="crcByte" ref="0x409df028" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
        <documentation loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
          <short>&#10; Calculates the crc.</short>
          <long>&#10; Calculates the crc. For some unknown reason the standard&#10; tinyos crcByte command swiches endianness.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplRF230"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="crc" ref="0x409becc0" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x409beeb0" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/iris/chips/rf230/HplRF230.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x409be168" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <documentation loc="29:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x409be010" loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
      <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2007/04/15 20:05:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x409c0858" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x409c3f28" loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x409c3928" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x409c03e8" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x409bf010" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x409d92c8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x409d9c78" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x409d9830" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x409d96d8" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x409c1d60" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
      <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.7 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40a5a788" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40a5a218" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40a5a430" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40a5a620" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40a7bdd0" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40a7b650" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40a7b868" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40a7ba58" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40a7bc60" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
      <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <short>&#10; HPL-level access to the Atmega128 SPI bus.</short>
        <long>&#10; HPL-level access to the Atmega128 SPI bus. Refer to pages 162-9&#10; of the Atmega128 datasheet (rev. 2467M-AVR-11/04) for details.&#10;&#10; &#60;pre>&#10;  $Id: Atm128Spi.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   September 8 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="initSlave" ref="0x40a74348" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x40a6fa38" loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x40a72b80" loc="100:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x40a6e058" loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x40a6fec8" loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x40a77ee0" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x40a70b30" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x40a709d8" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x40a73d98" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x40a73c40" loc="96:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x40a74bd8" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x40a8f168" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40a8f010" loc="125:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x40a72210" loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x40a6e9e0" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x40a6e888" loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x40a6c2c8" loc="120:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x40a6f5f0" loc="108:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x40a6f498" loc="108:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x40a6cb90" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x40a70168" loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x40a70010" loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40a73188" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a73030" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x40a72760" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x40a72608" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x40a6f010" loc="106:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x40a6e480" loc="112:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x40a6edf0" loc="115:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x40a6c720" loc="122:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x40a705a0" loc="103:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x40a74770" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40a73750" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a735f8" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x40a75ef0" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x40a8c430" loc="88:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40aa7660" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40aa7b48" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.4 $&#10; @date $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x40aec458" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x40aeca30" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x40ae9750" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x40ae9290" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x40ae3088" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a cleint id&#10;&#10; </short>
          <long>&#10; Enqueue a cleint id&#10;&#10; @param cleintId - the cleint id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40aeda20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40ae4ef8" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40aeda20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x40ae7cd8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x40ae43b8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40aeda20"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40ae4260" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40aeda20"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x40ae4968" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the cleint id of the next resource in the queue.</short>
          <long>&#10; Retreive the cleint id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The cleint id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x40aeda20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SetParam" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SetParam.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SetParam.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <function command="" provided="0" name="setParam" ref="0x40b77e00" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SetParam.nc">
        <interfacedef-ref qname="SetParam"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x40b77ca8" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/SetParam.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ADConvert" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/ADConvert.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/ADConvert.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x40b52a50" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/ADConvert.nc">
        <documentation loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/ADConvert.nc">
          <short>&#10; Initiates an ADC conversion on a given port.</short>
          <long>&#10; Initiates an ADC conversion on a given port.&#10;&#10; @return SUCCESS if the ADC is free and available to accept the request&#10;</long>
        </documentation>
        <interfacedef-ref qname="ADConvert"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40b4f088" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/ADConvert.nc">
        <documentation loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/ADConvert.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="ADConvert"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40b52ef0" loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/ADConvert.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Dio" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
        <short>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300DigitalC is a top-level access component for the &#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <function command="" provided="0" name="low" ref="0x40b69168" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
        <interfacedef-ref qname="Dio"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="high" ref="0x40b6cd98" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
        <interfacedef-ref qname="Dio"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="Toggle" ref="0x40b69540" loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
        <interfacedef-ref qname="Dio"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x40b6c9d0" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
        <interfacedef-ref qname="Dio"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setParam" ref="0x40b69ae0" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
        <interfacedef-ref qname="Dio"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="modeToSet" ref="0x40b69988" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40b68058" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
        <interfacedef-ref qname="Dio"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40b69ec0" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Dio.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x40b72cc0" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40b72cc0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x40b6f1a8" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40b6f958" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40b72cc0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40b6f628" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x40b6f7f8" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40b72cc0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x40bf0010" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x40bcaad8" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x40bf0500" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/06/16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x40beebe0" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40beebe0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x40beb0c8" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40beb898" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40beebe0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40beb568" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x40beb738" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40beebe0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x40be0070" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40be1860" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x40be1a88" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x40be1cb0" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x40be1ed0" loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40c083f0" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="94:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40be0990" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x40be0b80" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x40be0d88" loc="110:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x40c08010" loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x40c08278" loc="111:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x40be4cf8" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40be4518" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x40be4740" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x40be4968" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x40be4b88" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40be2010" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40be39a8" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40be3658" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x40be3848" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x40bfe158" loc="105:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="102:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x40c05880" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403438f0"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x40343b78"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x40bfd6b8" loc="131:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="126:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x40bfd560" loc="131:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x40bfe618" loc="113:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="109:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x40c01300" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x40c05e98" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403438f0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x40343b78"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x40c05d40" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403438f0"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x40343b78"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x40c01b50" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x40bfd010" loc="124:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="119:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40bfdb60" loc="141:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="133:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x40c01700" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x40bff440" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="87:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x40bff010" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x40bff878" loc="97:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x40bfea88" loc="118:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="114:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x40c029d0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40348bc8"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x4034f010"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x40c02878" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40348bc8"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x4034f010"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x40bffd40" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="98:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x40c023a0" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40348bc8"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x4034f010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x40c02e80" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40bfb2c8" loc="147:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="143:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40bfb170" loc="147:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007/02/04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x40c35938" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x40c343b0" loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x40c35408" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x40c35e48" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x40c34988" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x40c774d8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SensirionSht15" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
      <documentation loc="2:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
        <short>&#10; SensirionSht15 is the rich interface to the Sensirion SHT15&#10; temperature/humidity sensor.</short>
        <long>&#10; SensirionSht15 is the rich interface to the Sensirion SHT15&#10; temperature/humidity sensor. &#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="measureHumidityDone" ref="0x40cddc30" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
        <documentation loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
          <short>&#10; Presents the result of a humidity measurement.</short>
          <long>&#10; Presents the result of a humidity measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the humidity reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht15"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40cdd8e0" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x40cddad0" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="measureHumidity" ref="0x40cdd408" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
          <short>&#10; Starts a humidity measurement.</short>
          <long>&#10; Starts a humidity measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht15"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureTemperature" ref="0x40cde678" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
        <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
          <short>&#10; Starts a temperature measurement.</short>
          <long>&#10; Starts a temperature measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht15"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40ce1bc8" loc="18:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
        <documentation loc="13:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
          <short>&#10; Resets the sensor.</short>
          <long>&#10; Resets the sensor.&#10;&#10; @return SUCCESS if the sensor will be reset&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht15"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="resetDone" ref="0x40cde188" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
        <documentation loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
          <short>&#10; Signals that the sensor has been reset.</short>
          <long>&#10; Signals that the sensor has been reset.&#10;&#10; @param result SUCCESS if the reset succeeded&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht15"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40cde030" loc="25:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="measureTemperatureDone" ref="0x40cdeec0" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
          <short>&#10; Presents the result of a temperature measurement.</short>
          <long>&#10; Presents the result of a temperature measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the temperature reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht15"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40cdeb70" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x40cded60" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/sht15/SensirionSht15.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DeviceMetadata" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/DeviceMetadata.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/DeviceMetadata.nc">
        <short>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID.</short>
        <long>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID. See TEP109 and TEP114 for details.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getSignificantBits" ref="0x40ce3010" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/DeviceMetadata.nc">
        <interfacedef-ref qname="DeviceMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.4 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x40cead10" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x40cea8b0" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x40cea4a0" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x40cedf20" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MicaBusAdc" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusAdc.nc">
      <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusAdc.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus. Just provides the PW0-PW7 digital I/O pins.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getChannel" ref="0x40d2b210" loc="20:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusAdc.nc">
        <documentation loc="17:/opt/CVSTinyOS/tinyos-2.x/tos/platforms/mica/MicaBusAdc.nc">
          <short>&#10; Return the A/D channel number to use for one of the ADCn pins.</short>
          <long>&#10; Return the A/D channel number to use for one of the ADCn pins.&#10;</long>
        </documentation>
        <interfacedef-ref qname="MicaBusAdc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x40d46b48" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40d45ae8" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x40d46750" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x40d45620" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x40d454c8" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x40d46348" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x40d45010" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="28:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x40d641c8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="I2CPacket" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
      <parameters>
        <typedef name="addr_size" ref="0x40dbe498" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
          <interfacedef-ref qname="I2CPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="addr_size" scoped="" ref="0x40dbe498"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x40dbd180" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
        <documentation loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C read operation&#10;&#10; </short>
          <long>&#10; Perform an I2C read operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_ACK_END - ACK the last byte if set. Otherwise NACK last byte. This&#10;                   flag cannot be used with the I2C_STOP flag.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x40dc1b10"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40dbe9c0" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x40dc1b10"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40dbebc0" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x40dbedc0" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40dbd010" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x40deb790" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
        <documentation loc="93:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the write operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the write operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, written&#10; @param 'uint8_t* COUNT(length) data' Pointer to the data buffer written&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40deb010" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40deb210" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x40deb410" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40deb620" loc="101:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40dbc448" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C write operation&#10;&#10; </short>
          <long>&#10; Perform an I2C write operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x40dc1b10"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40dbdca0" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x40dc1b10"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40dbdea0" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x40dbc0c8" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40dbc2d8" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40dec638" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
        <documentation loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the read operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the read operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, read&#10; @param 'uint8_t* COUNT(length) data' Pointer to the received data buffer&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40dbce90" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40dec0b8" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x40dec2b8" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40dec4c8" loc="91:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128I2C" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2C.nc">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2C.nc">
        <short>&#10; An interface for stopping the I2C bus.</short>
        <long>&#10; An interface for stopping the I2C bus. Needed by the resource&#10; reservation system, so that when a client releases you're sure&#10; there's a stop.&#10;&#10; @author Philip Levis&#10;&#10; @version  $Id: Atm128I2C.nc,v 1.4 2006/12/12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x40e44cb8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2C.nc">
        <interfacedef-ref qname="Atm128I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128I2CBus" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
      <documentation loc="30:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version  $Id: HplAtm128I2CBus.nc,v 1.4 2006/12/12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="readCurrent" ref="0x40e54f08" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sendCommand" ref="0x40e52310" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStart" ref="0x40e52c40" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40e52ae8" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="status" ref="0x40e54b28" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasAcks" ref="0x40e842a8" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x40e81568" loc="77:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x40e84828" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x40e846d0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x40e802e8" loc="82:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x40e543a0" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hasExternalPulldown" ref="0x40e54248" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAck" ref="0x40e85ea8" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x40e85d50" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x40e84d00" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStart" ref="0x40e85070" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x40e82630" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="commandComplete" ref="0x40e52718" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x40e81168" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40e81010" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40e81ee8" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40e81d90" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRealInterruptPending" ref="0x40e821c8" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x40e54730" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStop" ref="0x40e85578" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40e85420" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptPending" ref="0x40e82bf0" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40e82a98" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x40e819b0" loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStop" ref="0x40e85960" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Power" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Power.nc">
      <function command="" provided="0" name="on" ref="0x40ebbd18" loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Power.nc">
        <interfacedef-ref qname="Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x40eee0c8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Power.nc">
        <interfacedef-ref qname="Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Switch" loc="9:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
        <short>&#10; MDA300IBADCC is a top-level access component for the&#10; ADC channels available on the mda300ca sensorboard&#10;&#10; </short>
        <long>&#10; MDA300IBADCC is a top-level access component for the&#10; ADC channels available on the mda300ca sensorboard&#10;&#10; @author P Sowjanya &#60;sowjanyap@cdac.in>&#10; @version $Revision: 1.0&#10;</long>
      </documentation>
      <function event="" provided="0" name="setDone" ref="0x40ed7010" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
        <interfacedef-ref qname="Switch"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40ed9e48" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40edc878" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
        <interfacedef-ref qname="Switch"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="getDone" ref="0x40ed9a90" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
        <interfacedef-ref qname="Switch"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40ed9938" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAll" ref="0x40ed9570" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
        <interfacedef-ref qname="Switch"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40ed9418" loc="12:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40ed9010" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
        <interfacedef-ref qname="Switch"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="position" ref="0x40edcc80" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
          <variable name="value" ref="0x40edce78" loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="setAllDone" ref="0x40ed7540" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
        <interfacedef-ref qname="Switch"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40ed73e8" loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/sensorboards/mda300/Switch.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionDebug" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
      <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
        <short> &#10;  The CollectionDebug is an interface for sending debugging events to&#10;  a logging infrastructure.</short>
        <long> &#10;  The CollectionDebug is an interface for sending debugging events to&#10;  a logging infrastructure. An implementer can choose to send the event&#10;  information to different destinations. Primary examples can include:&#10;  &#60;ul>&#10;    &#60;li> logging to the UART, in case of a testbed of network-connected&#10;         nodes;&#10;    &#60;li> logging to flash, if the logs are to be retrieved later&#10;    &#60;li> logging to the standard output, in the case of TOSSIM.&#10;  &#60;/ul>&#10;  &#10;  The interface does not specify in what format the log is to be produced,&#10;  or if other information, like timestamps, should be added, and this is&#10;  up to the implementer.&#10; &#10;  Some commands are generic, like Event, EventSimple, and EventDbg, while others&#10;  are for more specific events related to collection, like EventRoute and EventMsg.&#10;&#10; @author Rodrigo Fonseca&#10; @author Kyle Jamieson&#10; @date   $Date: 2006/12/12 18:23:28 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="logEvent" ref="0x40fe9800" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40fe96a8" loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventMsg" ref="0x40fe67b0" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40fe6030" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40fe6220" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
          <variable name="origin" ref="0x40fe6438" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
            </type-int>
          </variable>
          <variable name="node" ref="0x40fe6640" loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventSimple" ref="0x40fe8010" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40fe9c60" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
          <variable name="arg" ref="0x40fe9e50" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventRoute" ref="0x40fe53e8" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40fe6c08" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
          <variable name="parent" ref="0x40fe6e20" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
            </type-int>
          </variable>
          <variable name="hopcount" ref="0x40fe5068" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
          <variable name="metric" ref="0x40fe5278" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventDbg" ref="0x40fe8bc0" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40fe8450" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
          <variable name="arg1" ref="0x40fe8650" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
          <variable name="arg2" ref="0x40fe8850" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
          <variable name="arg3" ref="0x40fe8a50" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Intercept" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Intercept.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="forward" ref="0x40fc5438" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Intercept.nc">
        <documentation loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Intercept.nc">
          <short>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination.</short>
          <long>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination. &#10;&#10; @param 'message_t* ONE msg' The complete message received.&#10;&#10; @param 'void* COUNT(len) payload' The payload portion of the packet for this&#10; protocol layer.&#10;&#10; @param len The length of the payload buffer.&#10;&#10; @return TRUE indicates the packet should be forwarded, FALSE&#10; indicates that it should not be forwarded.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Intercept"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40fc8ef0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x40fc50f0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40fc52d0" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Intercept.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpInfo" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
      <function command="" provided="0" name="getNeighborLinkQuality" ref="0x40fb5978" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40fb5820" loc="84:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="recomputeRoutes" ref="0x40fb6070" loc="71:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
          <short> &#10; Tell the routing engine it might want to recompute its routes.</short>
          <long> &#10; Tell the routing engine it might want to recompute its routes.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="numNeighbors" ref="0x40fb5348" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerRouteUpdate" ref="0x40fb75d0" loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; This informs the routing engine that sending a beacon soon is&#10; advisable, e.g., in response to a pull bit.</short>
          <long>&#10; This informs the routing engine that sending a beacon soon is&#10; advisable, e.g., in response to a pull bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x40fb7010" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Get the path quality metric for the current path to the root&#10; through the current parent.</short>
          <long>&#10; Get the path quality metric for the current path to the root&#10; through the current parent.  The pointer is allocated by the&#10; caller.  If the parent is invalid, return FAIL (no info).  The&#10; caller MUST NOT use the value in parent if the return is not&#10; SUCCESS. Calling getEtx at the root will set the etx argument to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="etx" ref="0x40fc4e80" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerImmediateRouteUpdate" ref="0x40fb7b20" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; This informs the routing engine that sending a beacon as soon&#10; as possible is advisable, e.g., due to queue overflow or&#10; a detected loop.</short>
          <long>&#10; This informs the routing engine that sending a beacon as soon&#10; as possible is advisable, e.g., due to queue overflow or&#10; a detected loop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setNeighborCongested" ref="0x40fb68b8" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="73:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Informs the routing engine that a neighbor is congested&#10;</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40fb6550" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
            </type-int>
          </variable>
          <variable name="congested" ref="0x40fb6758" loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborAddr" ref="0x40fb3600" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40fb34a8" loc="86:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x40fc4950" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Get the parent of the node in the tree.</short>
          <long>&#10; Get the parent of the node in the tree.  The pointer is allocated&#10; by the caller.  If the parent is invalid, return FAIL.  The&#10; caller MUST NOT use the value in parent if the return is not&#10; SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="parent" ref="0x40fc47f8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborRouteQuality" ref="0x40fb3010" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40fb5e58" loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isNeighborCongested" ref="0x40fb6ec0" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="78:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10;  Returns the currently known state about a neighbor's congestion state&#10;</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40fb6d68" loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpCongestion" loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpCongestion.nc">
      <function command="" provided="0" name="isCongested" ref="0x40fc3998" loc="7:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpCongestion.nc">
        <interfacedef-ref qname="CtpCongestion"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClientCongested" ref="0x40feb010" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpCongestion.nc">
        <interfacedef-ref qname="CtpCongestion"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="congested" ref="0x40fc3df0" loc="14:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpCongestion.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpPacket" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
        <short>&#10;  ADT for CTP data frames.</short>
        <long>&#10;  ADT for CTP data frames.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2007/11/28 04:42:52 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSequenceNumber" ref="0x40fbc288" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40fbdef0" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x40fbc128" loc="64:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="option" ref="0x40fc1d58" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40fcd710"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40fc19d8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x40fc1bf8" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40fcd710"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEtx" ref="0x40fbf740" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40fbf3f0" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etx" ref="0x40fbf5e0" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x40fbd4b0" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40fbd148" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40fbd350" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOption" ref="0x40fc15b8" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40fcd710"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40fc1218" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="option" ref="0x40fc1458" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40fcd710"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x40fbf010" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40fc0e58" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x40fbfcf8" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40fbfba0" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x40fbb010" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40fbcbf8" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x40fbcdd0" loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOption" ref="0x40fc6de8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40fcd710"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40fc6a48" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="option" ref="0x40fc6c88" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40fcd710"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchPacket" ref="0x40fb9010" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m1" ref="0x40fbbc88" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m2" ref="0x40fbbe98" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getThl" ref="0x40fc0300" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40fc01a8" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x40fbdaa0" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40fbd948" loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchInstance" ref="0x40fbb850" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m1" ref="0x40fbb4e0" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m2" ref="0x40fbb6f0" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x40fbc810" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40fbc6b8" loc="66:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setThl" ref="0x40fc0a20" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40fc06e0" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="thl" ref="0x40fc08c0" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionId" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionId.nc">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionId.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006/12/12 18:23:28 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="fetch" ref="0x40fea248" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/CollectionId.nc">
        <interfacedef-ref qname="CollectionId"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x404b1b20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkEstimator" loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimator.nc">
      <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimator.nc">
        <short> Provides an additive quality measure for a neighbor.</short>
        <long> Provides an additive quality measure for a neighbor. The&#10; provided quality increases when the true link quality increases.&#10;  @author Rodrigo Fonseca&#10;  @author Omprakash Gnawali&#10;  @date   $Date: 2007/11/16 23:14:49 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="txAck" ref="0x40fda2f8" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40fda1a0" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pinNeighbor" ref="0x40fdb740" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40fdb5e8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="txNoAck" ref="0x40fda8a8" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40fda750" loc="55:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNeighbor" ref="0x40fdb168" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40fdb010" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x40fd9418" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40fd92c0" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearDLQ" ref="0x40fdae68" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40fdad10" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="unpinNeighbor" ref="0x40fdbd30" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40fdbbd8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLinkQuality" ref="0x40fdeb30" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40fde9d8" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/4bitle/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Cache" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Cache.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Cache.nc">
        <short>&#10; A data item cache.</short>
        <long>&#10; A data item cache. The cache does not own the items it caches:&#10; there is no allocation/deallocation policy, or notification of&#10; eviction. Correspondingly, using references (pointers) as data&#10; items can be difficult.&#10; &#10; @author Rodrigo Fonseca&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x410178a0" loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Cache.nc">
          <interfacedef-ref qname="Cache"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x410178a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="insert" ref="0x41017e60" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Cache.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Cache.nc">
          <short>&#10; Inserts an item in the cache, evicting if necessary.</short>
          <long>&#10; Inserts an item in the cache, evicting if necessary.&#10; An atomic lookup after insert should return true.&#10;&#10; @param item - the data item to insert.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x410178a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x41017d08" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x410178a0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x41013930" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Cache.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Cache.nc">
          <short>&#10; Flush the cache of all entries.</short>
          <long>&#10; Flush the cache of all entries.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="lookup" ref="0x410134e0" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Cache.nc">
        <documentation loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Cache.nc">
          <short>&#10; Return whether the data item is in the cache.</short>
          <long>&#10; Return whether the data item is in the cache.&#10;&#10; @param item - the data item to query&#10; @return Whether the item is in the cache.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x410178a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x41013388" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x410178a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UnicastNameFreeRouting" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/UnicastNameFreeRouting.nc">
      <documentation loc="35:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/UnicastNameFreeRouting.nc">
        <short>&#10;  Provides a single next hop on a name-free protocol.</short>
        <long>&#10;  Provides a single next hop on a name-free protocol.&#10;&#10;  @author Philip Levis&#10;  @date   $Date: 2006/12/12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="hasRoute" ref="0x410232e8" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="routeFound" ref="0x410236a0" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="nextHop" ref="0x40fecde8" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/UnicastNameFreeRouting.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/UnicastNameFreeRouting.nc">
          <short>&#10; Get the address of the best next hop set to the destination.</short>
          <long>&#10; Get the address of the best next hop set to the destination.&#10; If there is not best next hop, the address is the local address.&#10; @return : The next best hop, or the local address if there is no route.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="noRoute" ref="0x41023a38" loc="52:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CompareBit" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CompareBit.nc">
      <documentation loc="27:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CompareBit.nc">
        <short> Link estimator asks the routing engine if this entry&#10; should be inserted into the neighbor table given the&#10; white bit.</short>
        <long> Link estimator asks the routing engine if this entry&#10; should be inserted into the neighbor table given the&#10; white bit. The return value is the &#34;pin bit&#34; - if true&#10; insert into the neighbor table. In the reference implementation&#10; the router will return true if the path through the source&#10; will be better than a path through at least one current neighbor.&#10;@ author Omprakash Gnawali&#10;@ Created: September 16, 2006&#10;@date   $Date: 2008/06/04 04:30:41 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="shouldInsert" ref="0x411268f0" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CompareBit.nc">
        <interfacedef-ref qname="CompareBit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41129eb8" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CompareBit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x41126398" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CompareBit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x41126578" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CompareBit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
          <variable name="white_bit" ref="0x41126780" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CompareBit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x411226a0" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41122548" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpRoutingPacket" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingPacket.nc">
      <documentation loc="33:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <short>&#10;  ADT for CTP routing frames.</short>
        <long>&#10;  ADT for CTP routing frames.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008/06/04 04:30:41 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearOptions" ref="0x411dcbf0" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x411dca98" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEtx" ref="0x411d9cd0" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x411d9990" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etx" ref="0x411d9b70" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOption" ref="0x411dc4b0" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40fcd710"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x411dc130" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x411dc350" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40fcd710"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x411d93f8" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x411d92a0" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOption" ref="0x411ddb40" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40fcd710"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x411dd7c0" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x411dd9e0" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40fcd710"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setParent" ref="0x411dac90" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x411da928" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x411dab30" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x411da370" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404c9270"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x411da218" loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOption" ref="0x411dd208" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40fcd710"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x411e0e58" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x411dd0a8" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x40fcd710"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x412f4b68" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x412f47d8" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x412f4a08" loc="31:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x412f78c8" loc="15:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x412f41c8" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x412f7e20" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404cf400"/>
                <typename><typedef-ref name="message_t" ref="0x404ce1e8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x412f4068" loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x41325b68" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
          <long> &#10; Split phase event to indicate that the serial hardware is now idle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x41325730" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <documentation loc="34:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="36:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x4131f1a8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x4131fe08" loc="61:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x4131c010" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="76:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4131ee50" loc="83:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x4131e3f0" loc="68:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="63:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x4131f8d8" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4131f780" loc="54:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x4131c518" loc="89:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="85:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
          <long>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x4131e950" loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x41323290" loc="60:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x41323858" loc="70:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="62:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x41327c18" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x41327ac0" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x41322010" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x41323e38" loc="80:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="23:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x413211a8" loc="51:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x41321990" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="53:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x41321838" loc="58:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x41320058" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x41321ed0" loc="69:/opt/CVSTinyOS/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/06/04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x413db010" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x413dfc00" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x413dfdf0" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x413d9410" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x413d92b8" loc="79:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x413d9c18" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x413d98c8" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x413d9ab8" loc="90:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x413da850" loc="65:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x413d7aa8" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x413d7558" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x413d7748" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x413d7940" loc="99:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x413dadd8" loc="72:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x413dbe70" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x413db920" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x413dbb10" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400351e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x413dbd08" loc="57:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/06/04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x413c8a78" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x413c8920" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x413c5378" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x413c5010" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x413c5218" loc="56:/opt/CVSTinyOS/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x414039e8" loc="44:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x414031a8" loc="42:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x41400010" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x41401e80" loc="49:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x414016d8" loc="47:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x414068e8" loc="40:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x41406d28" loc="41:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x414035e8" loc="43:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402fa628"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x41403de8" loc="45:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f16e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x41401328" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x414011d0" loc="46:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x41401aa8" loc="48:/opt/CVSTinyOS/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40034b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
