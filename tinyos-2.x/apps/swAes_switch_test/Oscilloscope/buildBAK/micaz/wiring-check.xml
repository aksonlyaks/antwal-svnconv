<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="28:OscilloscopeAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x4033a2c8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x4039b010"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x4039b010"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x4048e2a8"/></to>
    </wire>
    <wire loc="29:OscilloscopeAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40363ab0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40b10080"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40b10080"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40494768"/>
      <arguments>
        <value cst="I:147">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403567d0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="30:OscilloscopeAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4033e010"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40aee010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40aee010"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40e23a58"/></to>
    </wire>
    <wire loc="31:OscilloscopeAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4036f358"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40a1d9f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40a1d9f0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40a37e38"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:OscilloscopeAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40377548"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40861158"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40861158"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40860e88"/></to>
    </wire>
    <wire loc="33:OscilloscopeAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4037f588"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4049dca8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4049dca8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x404b4ab8"/></to>
    </wire>
    <wire loc="36:OscilloscopeAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x40338d28"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40b74070"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x40b74070"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40e5a5d8"/></to>
    </wire>
    <wire loc="38:OscilloscopeAppC.nc">
      <from><interface-ref name="AFWA_AESI" scoped="" ref="0x40382d98"/></from>
      <to><interface-ref name="AFWA_AESI" scoped="" ref="0x40b74628"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AFWA_AESI" scoped="" ref="0x40b74628"/></from>
      <to><interface-ref name="AFWA_AESI" scoped="" ref="0x40e5ab90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a08f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40e5a2c0"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a08f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a30198"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a08f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x409d2670"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a08f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x409c29c8"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a08f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x409b7cb0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a08f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4093d3d8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a08f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408d1630"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a08f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4059ae88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a08f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40d62d18"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a08f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407a6718"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403a08f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4054d078"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x4048e5f0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x402bacc0"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x402bacc0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x4030e0a0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x4048eb20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4039e8d0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4039e8d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403a6ad0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4048ee90"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x403a08f8"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403a1bf0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40675860"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x403a14f8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x40479338"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x403a51e8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40479010"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x403a6e40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40866970"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x403a6e40"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x403aa8b8"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x403aa8b8"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x403af010"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403aac20"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x403a1bf0"/></to>
    </wire>
    <wire loc="25:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x403b48e0"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x403b8348"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x403b8348"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x403ffac8"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x403ae280"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x403aac20"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x403d9e78"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40451d38"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x403c9010"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4041a250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4041a250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c09718"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x403cc188"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40425c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40425c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c510f8"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x403d2e78"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40427170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40427170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c776c0"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x403c16c8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40408e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40408e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b7aac8"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x403d3b00"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40429d90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40429d90"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c7a228"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x403c09d8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40404b38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40404b38"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ba12b0"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x403c4b00"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4040e4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4040e4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40be6c08"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x403c8cb8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40419f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40419f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c2e570"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x403d5e78"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40423988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40423988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c4c010"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x403ba5e8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40401e70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40401e70"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b838a0"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x403be7a8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4040c7d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4040c7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40bc40f8"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x403c2808"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40416170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40416170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40be1a88"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x403d09d8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40421ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40421ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c29538"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x403dab00"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4042fe48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4042fe48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c9e538"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x403d7d98"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40454538"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x403cfd98"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40426968"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40426968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c55c78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x403ffac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b7d718"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x403c6508"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404094f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404094f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40bbf010"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x403d8aa0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40459010"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x403c5808"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4040f228"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4040f228"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40bea7f8"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x403c9980"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4041aba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4041aba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c310f8"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x403ccaf8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404246b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404246b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c50ac8"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x403d1808"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40427ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40427ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c750b0"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x403c0068"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404077d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x404077d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ba0570"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x403bf428"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4040d4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4040d4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40bc8c78"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x403c3508"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4040ee48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4040ee48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40be46c0"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x403c76c8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40418890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40418890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c2c010"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x403d4808"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40422330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40422330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c4b9e8"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x403b9010"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404007f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404007f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b812d0"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x403bd188"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4040a170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4040a170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40bc3ac8"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x403cb190"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40416ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40416ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40bdf538"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x403d9508"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4042e7d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4042e7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c9c010"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x403ca508"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4041b870"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4041b870"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c0dd08"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x403cd7a8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40425330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40425330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c53718"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x403d2508"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40428790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40428790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c79c08"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x403d67a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4045e7f8"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x403b8cb8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404084f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x404084f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b7b0f8"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x403c6e78"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40409e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40409e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40bbe9e8"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x403d3190"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40429438"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40429438"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c7c7f8"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x403c4190"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4040fb80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4040fb80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40be8228"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x403c8348"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404195d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x404195d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c30ac8"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x403d5508"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40423030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40423030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c4e570"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x403da190"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4042f4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4042f4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c74a88"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x403bbc28"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40401518"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40401518"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b88ed8"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x403bfd98"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4040de48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4040de48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40bc6718"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x403c3e78"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404177d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404177d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40be20b0"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x403d0068"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40421250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40421250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c2b9e8"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x403d7428"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404572b0"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x403cf428"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40426010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40426010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c572b0"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x403cbb00"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404154f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x404154f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c07010"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x403b9980"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x403ff170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x403ff170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40b80c90"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x403bdb78"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4040aac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4040aac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40bc1570"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x402bb100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4030e838"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x40311d50"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x4031b488"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x40322df0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x405f38d8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4046e598"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4049fe78"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4049fe78"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x409fca10"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4046ede8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4049e6e8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4049e6e8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x404b5488"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40494f00"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x4049d7c0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x4049d7c0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x404b45d0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x404997f0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4049c938"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4049c938"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x404b3778"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40494768"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4049d028"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4049d028"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x404b5db8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40495d60"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x404a5168"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x404a5168"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x4099e350"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40499e98"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4049dca8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x409fca10"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x409fa420"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x404a9c38"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x404fe5d0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x404fe5d0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x404f9bb0"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x404a2b68"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x4099fcd8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x404a1040"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x409fdee0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x409fdee0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x409f7970"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x404b7578"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40a0c240"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x40a0c240"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40a0bf28"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x409fa420"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x404ff0c8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x404ff0c8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x404fcc30"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x404ba828"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x409c6530"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x409c6530"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x409c2328"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x409c6c38"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x409feb78"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x409feb78"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40a0c948"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40a0c948"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x409fd350"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x409fd350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x409fb818"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x409fb818"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40a01a40"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40a01a40"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40a00bb0"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40a00bb0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x404ff6a8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x404ff6a8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x404f9258"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x404baef8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409fd9f0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x409fd9f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x409fbee8"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x409fbee8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409d7750"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x409d7750"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409d3c60"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x409d61d0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40a00158"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40a00158"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40a006a8"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40a006a8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x404ffd68"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x404ffd68"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40924408"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x404caab8"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x408a13b0"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x404bf3f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x4099fcd8"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x404c5360"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x4099e840"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x404cede0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x40547a68"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x40547a68"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x4054da88"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40924408"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4093c060"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4050b260"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4049dca8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40502918"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x405473a0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x405473a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4054d3c0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x40504010"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x40546900"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x40546900"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x4054c900"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x405091c8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x408afd60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x405091c8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40927ac8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40927ac8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x4093d720"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x408afd60"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x408d1978"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x405149f0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x408ae240"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x408ae240"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408d1dc8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x405011b0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x408ae8e8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x408ae8e8"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x408d0500"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40512a80"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x4099fcd8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40510088"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x4099e840"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40511dd0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x409b59e0"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x409b59e0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x409b2990"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x4051ab70"/></from>
      <to><interface-ref name="State" scoped="" ref="0x409bb870"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x409bb870"/></from>
      <to><interface-ref name="State" scoped="" ref="0x407aa9a8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4050be60"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40861158"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x40518618"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402bb100"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x4050eeb8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402bb100"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x4050e568"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402bb100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x40544070"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x4054b408"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40566868"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4049dca8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x405549d0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x40599340"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x40599340"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x405a5dd8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x40548200"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x406e5428"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x406e5428"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x403c09d8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40548b90"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x406e3188"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x406e3188"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x403c16c8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x40552530"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x406e2508"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x406e2508"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x403b8cb8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x4055eac8"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x406f10d8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x406f10d8"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x4074d250"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40565530"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40879ea8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40879ea8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4075e380"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x40564a50"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x408774e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x408774e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40564dc0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x40877840"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40877840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40566520"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x40876260"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40876260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x405661b0"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x408765b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x408765b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x405582c8"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x40876c68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40876c68"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40558798"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x40874190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40874190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40558be8"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x408745c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x408745c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x4055d070"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x40874a00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40874a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x4055d4c8"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x40874e38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40874e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x4055bd68"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x4088ca00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x4088ca00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x4055d918"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x4088f6e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x4088f6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x4055dd68"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x4088fb20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x4088fb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x40563450"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40886a58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40886a58"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4075e380"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x40565d28"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40894348"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40894348"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4075e380"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40550188"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x408a13b0"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x4056e5a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402bb100"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="112:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x40560e40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402bb100"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4059ae88"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x406e9528"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x406e9528"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x406d4c50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x405a5dd8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40cea4c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40cea4c0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40ce47d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x40d13078"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40ce7010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40ce7010"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40d0f488"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x40ce2010"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40699788"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40699788"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406ac0c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x40d0ec10"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x405c1b10"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x405c1b10"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4061d220"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x40d0ba18"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x405c5010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x405cc530"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x4061b010"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x405c7530"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x4061bbe8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x405c5010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40618730"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x405c5010"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40627010"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x405c5010"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x406267a8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x40625ec0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x405da6f8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x405da6f8"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x405e49b0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x405e9ca8"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x405f3c38"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x405de010"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x405e3228"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x405d0d70"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x405e6be0"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.x/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40675c48"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x405c1b10"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x406c8150"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40696cd8"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40696cd8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406a7900"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x406b18d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x405c1b10"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x406e5d98"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x403c6e78"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x406e47a8"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x403d5e78"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x406e69f8"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x403d0068"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x406e3af8"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x403c8cb8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x406eeab0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x406ed3f0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x406f16f0"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x406f7288"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0x406eda78"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x405c7530"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x406f7880"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x40713948"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x40713948"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40740880"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0x4074d880"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x406e69f8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x40715190"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x407356c0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x40714948"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x4072e718"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x40712190"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x4073d8f0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x40715948"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x407326c0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x40713190"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x4072c788"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x40700980"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x407106f8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x40714190"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x407306c0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40710eb0"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x4070cc20"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40735e78"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x4070d010"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40732e78"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x4070d388"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40730e78"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x4070d700"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x4072eed0"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x4070da78"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40741010"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x4070ddf0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x4073f050"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x4070b1b0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x4073c0b8"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x4070b528"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0x4074cdf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402bb100"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x4088e448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXNONCE" scoped="" ref="0x4088d030"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY0" scoped="" ref="0x4088d568"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40877ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x4088a2b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x4088f2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x408785a0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x4075ea48"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x4075ea48"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x4075ac10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40878e10"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x40876910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x4088c190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXNONCE" scoped="" ref="0x4088ebd8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x4088ce38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x4088a6e8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4075d258"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x40877190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x4088e010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x4088ddd8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x4088e880"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x4088c5c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40878ab8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SABUF" scoped="" ref="0x4088d9a0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x40877b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x4088adc0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4075d258"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x4075d258"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4076fd50"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4076e6c8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4076ed88"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4075e380"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4076f3f0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4076d4f8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x40766e50"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40798010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x40798010"/></from>
      <to><interface-ref name="State" scoped="" ref="0x407aa9a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x4076d890"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x407abcf0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x407abcf0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x407c6aa0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x40769188"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x407a7410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiByte" scoped="" ref="0x407a7410"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x407c60a0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x40766a20"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x407a7748"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiPacket" scoped="" ref="0x407a7748"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x407c63e8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4076b5f8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40861158"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x4077de78"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402bb100"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x407aa9a8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x407a6cc8"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x407c63e8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x407c29d0"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x407c60a0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x407c26a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x407ab9b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407b0d50"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x407b0d50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407c2388"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x407c6aa0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x407c1100"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x407bf500"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4082eb98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4082eb98"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40d5f088"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x407c72f0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x4082d7b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x4082d7b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40d5fbd0"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x407cc998"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x407f5290"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x407f5290"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x407f00f8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x407c76f8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x4031e9d8"/></to>
    </wire>
    <wire loc="207:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x407d7010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402bb100"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x40807cb8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x4031e9d8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x408055e8"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x403c09d8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x407ee010"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x403bf428"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x407ee980"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x403bfd98"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x40807348"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x403be7a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x4082d3a8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x40d5f7c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40d5e0a8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x4082dc60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x40d5e4d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x40d60090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x40d5eac8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402bb100"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40866970"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40860b68"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x4085dae8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x40868bc0"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40868bc0"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x403b9010"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x4085c508"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x40867608"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40867608"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x403ba5e8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x4085ce78"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x40866010"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40866010"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x403bbc28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x4089c2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x4089d5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x4089b010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXNONCE" scoped="" ref="0x4089bbd8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY0" scoped="" ref="0x4089a190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40884ab8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40899f18"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x4089de38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x4089c6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40883cf8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40885170"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x4075ea48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x408859e0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x408834e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40883190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x4089ad58"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x4089da00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40884e10"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXNONCE" scoped="" ref="0x4089b7a0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x40899ae0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40898368"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4075d258"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x40885d38"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x4089d190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40883840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x408840b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x4089cb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x4089aa00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x4089b448"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x408996a8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40899270"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40885688"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SABUF" scoped="" ref="0x4089a5c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x40884760"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40884408"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40898a40"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4075d258"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40890b90"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40891eb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x408aa880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXNONCE" scoped="" ref="0x408a9468"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY0" scoped="" ref="0x408a99a0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40892368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x408a76e8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40890758"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x408aa010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40891648"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40894a00"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x4075ea48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40893288"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x40892d70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40892a18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x408a85c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40890320"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x408926c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXNONCE" scoped="" ref="0x408a9030"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x408a72b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x408a7b20"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4075d258"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x408935e0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40891a80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40891190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x40893938"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x408aa448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x408a8270"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x408aacb8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x408a8e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x408a8a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40894f18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SABUF" scoped="" ref="0x408a9dd8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x40892010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40893c90"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x408a6270"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4075d258"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x408c5528"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x408cf538"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x408c51c8"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x408cf1b8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioTimeStamping" scoped="" ref="0x408c7bf8"/></from>
      <to><interface-ref name="TimeStamp" scoped="" ref="0x408d0ce0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x408cf9e0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x40599340"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x408cc288"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x406e69f8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x408ccc18"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x406e5428"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x408cb6e8"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x406e3af8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x408cdc20"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x406eeab0"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x408c9090"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x409188e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x409188e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4075e380"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x408c9758"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40917010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40917010"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x4075ea48"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x408e6cf0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x40917bd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x40917bd8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x408e5088"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x409166c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x409166c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x408e5400"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x40916a18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40916a18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x408e5778"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x40917880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40917880"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x408e68a0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x40914e38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40914e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x408c9c88"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x4092ca40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x4092ca40"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4075d258"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x408e6450"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x4092df18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x4092df18"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x408e5af0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x40914a00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40914a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x408e1d78"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x40927ef0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x40927ef0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x4093db48"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x408cd1d8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x4099fcd8"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x408cd7c8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x4099e840"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x408e3398"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40861158"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x409302b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x409145c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x4092f010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXNONCE" scoped="" ref="0x4092fbd8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY0" scoped="" ref="0x4092e190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x409306e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40915cf8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x409154e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40915190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x4092ed58"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40916d70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXNONCE" scoped="" ref="0x4092f7a0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x4092dae0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x4092c368"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4075d258"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40914190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40915840"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x40916010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40930b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x4092ea00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x4092f448"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x4092d6a8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x4092d270"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40917528"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SABUF" scoped="" ref="0x4092e5c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40916368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x40924948"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x4093c5a0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="AesSecurity" scoped="" ref="0x40940010"/></from>
      <to><interface-ref name="AesSecurity" scoped="" ref="0x4093c8e8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x409356f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40861158"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x4093cc58"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x406e5428"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x4093b608"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x406e5d98"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x4093a010"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x406e47a8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x4093a9a8"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x406f16f0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40939010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40992e30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40992e30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4075e380"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40939700"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x409a96e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x409a96e8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4075d258"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40938210"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x40981a48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40981a48"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x40939df0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x409b0910"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x409b0910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40938558"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x4099fcd8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40938b48"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x4099e840"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x40937010"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x40547a68"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40936e28"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x409ad010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x409ad010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x409352d0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x409ad448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x409ad448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40936ab0"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x409acdd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x409acdd8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x40937e80"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x409ac030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXNONCE" scoped="" ref="0x409ac030"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x409362f0"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x409aa190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x409aa190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x40936740"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x409a0190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x409a0190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x4094b668"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402bb100"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="259:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="waitDecTask" scoped="" ref="0x4095cf10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402bb100"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="237:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="waitTask" scoped="" ref="0x4095f6e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402bb100"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x409ae6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x409afa00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY0" scoped="" ref="0x409ac568"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x409a0ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x409a92b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x409ae2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x409aeb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x409af190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40981530"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x4075ea48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40981da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x409b05b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x409afe38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x409b0260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXNONCE" scoped="" ref="0x409adbd8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x409aae38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x409af5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x409b0c68"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x409a04e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x409ad880"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x409aaa00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x409aa5c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SABUF" scoped="" ref="0x409ac9a0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x409a0b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x409a0840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x409a9dc0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4075d258"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x409b2990"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x409cf9e0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x409b5130"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x409b20e0"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x409b20e0"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x409cf130"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x409b92e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x409b7cb0"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x409b7cb0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x409b1ce8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x409c2d50"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x409c6c38"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x409c1400"/></from>
      <to><interface-ref name="State" scoped="" ref="0x409c4d58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x409c4d58"/></from>
      <to><interface-ref name="State" scoped="" ref="0x407aa9a8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x409c1b80"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x409b59e0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x409e2010"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x4099e840"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x409d7c68"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x409d2190"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x409d2a00"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x409d61d0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x409d2ef0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x4099e840"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x409fb030"/></from>
      <to><interface-ref name="State" scoped="" ref="0x409f9528"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x409f9528"/></from>
      <to><interface-ref name="State" scoped="" ref="0x407aa9a8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40a08628"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40495d60"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40a37e38"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40a30830"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40a30830"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40aa9b98"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40a30198"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a27ab8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40a29120"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40ac5460"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40a27ab8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a7c010"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x40aa7bc0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40a28b78"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40a86b60"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x40a49010"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x40a49010"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40a7c448"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40ac5d80"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x40a48878"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x40a48878"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40a7bc40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x40a7bc40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40df3130"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x40a7c010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40df6488"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40a7c448"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40df68c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40df2120"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x405d0d70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40df1ea0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x405da6f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x40def710"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x405de010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0x40deee68"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x405e9ca8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x40a842d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402bb100"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x40aa4aa0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402bb100"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40aee6a8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x404997f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40aeed40"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40499e98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40b13950"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40495d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x40e1f180"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40acd848"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40e1f818"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40499e98"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40acd848"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40af4068"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40af47d8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4046ede8"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40af4e80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40499e98"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40af3a70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x404997f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x40af2190"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402bb100"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x40af25c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402bb100"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40b10558"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x404997f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40b10bf0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40499e98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="CC2420_RAM_KEY0" scoped="" ref="0x40e58320"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CC2420_RAM_KEY1" scoped="" ref="0x40e58738"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CC2420_RAM_SABUF" scoped="" ref="0x40e58b50"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CC2420_SECCTRL0" scoped="" ref="0x40e59ae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CC2420_SECCTRL1" scoped="" ref="0x40e59ef8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CC2420_SNOP" scoped="" ref="0x40e57b78"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CC2420_SAES" scoped="" ref="0x40e57840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CC2420_STXENC" scoped="" ref="0x40e55010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CC2420_STXON" scoped="" ref="0x40e55348"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CC2420_RAM_TXFIFO" scoped="" ref="0x40e57010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CC2420_RAM_RXFIFO" scoped="" ref="0x40e57428"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CC2420_SRXDEC" scoped="" ref="0x40e55680"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CC2420_RAM_TXNONCE" scoped="" ref="0x40e55cf0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CC2420_RAM_RXNONCE" scoped="" ref="0x40e54170"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40e59428"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40e4fe90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40e4fe90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4075e380"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CC2420Control" scoped="" ref="0x40e54588"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4046e598"/></to>
    </wire>
    <wire>
      <from><interface-ref name="CSN" scoped="" ref="0x40e54b60"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x406e5428"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Leds" scoped="" ref="0x40e534d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40861158"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40e52150"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40e75650"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40e75650"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40e9fce8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40e527e8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x4099e840"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AesSecurity" scoped="" ref="0x40e52be0"/></from>
      <to><interface-ref name="AesSecurity" scoped="" ref="0x40940010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="inline_encryption" scoped="" ref="0x40e51050"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402bb100"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="standAlone_encryption" scoped="" ref="0x40e51488"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402bb100"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateKey" scoped="" ref="0x40e518c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402bb100"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40e496e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40e4aa00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40e48448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXNONCE" scoped="" ref="0x40e46030"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="KEY0" scoped="" ref="0x40e46568"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40e4def0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40e442b0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40e492b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x40e49b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40e4a190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40e4e560"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x4075ea48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40e4edd0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x40e4b910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40e4b5b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40e45190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40e4ae38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40e4b260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXNONCE" scoped="" ref="0x40e48bd8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x40e45e38"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40e446e8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4075d258"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x40e4d190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40e4a5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40e4bc68"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x40e4d4e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40e48010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40e46dd8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x40e48880"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x40e45a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40e455c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40e4ea78"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SABUF" scoped="" ref="0x40e469a0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x40e4db98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40e4d840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40e44dc0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4075d258"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40e75ce8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x404997f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40e743f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40499e98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40e73010"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40495d60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x40e9b420"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40acd848"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40e9bab8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40499e98"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="OscilloscopeC" loc="21:OscilloscopeC.nc">
      <module/>
    </component>
    <component qname="MainC" loc="45:/opt/tinyos-2.x/tos/system/MainC.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/system/MainC.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.5 2006/12/12 18:23:43 vlahan Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.5 2006/12/12 18:23:43 vlahan Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.5 2006/12/12 18:23:43 vlahan Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="15:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10;</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <documentation loc="18:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10;</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10;</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="45:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10;</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="35:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="43:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.8 2007/04/08 01:17:12 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="47:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <documentation loc="47:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the micaZ platform.</short>
        <long>&#10;&#10; The Active Message layer on the micaZ platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @date June 19 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
        <short>&#10; The Active Message layer for the CC2420 radio.</short>
        <long>&#10; The Active Message layer for the CC2420 radio. This configuration&#10; just layers the AM dispatch (CC2420ActiveMessageM) on top of the&#10; underlying CC2420 radio packet (CC2420CsmaCsmaCC), which is&#10; inherently an AM packet (acknowledgements based on AM destination&#10; addr and group). Note that snooping may not work, due to CC2420&#10; early packet rejection if acknowledgements are enabled.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @version $Revision: 1.8 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.8 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.2 $ $Date: 2007/07/06 18:09:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="43:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="66(AlarmMultiplexC.Alarm):/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="66(AlarmMultiplexC.Alarm):/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.&#10;&#10;</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10;</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128Timer1P" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10;</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="35(InitOneP.InitOne):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="35(InitOneP.InitOne):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="42(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="42(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10;</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402ec820"/>
            <typename><typedef-ref name="TOne" ref="0x4030a220"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="22:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="33(CounterOne16C.NCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="33(CounterOne16C.NCounter):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10;</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402ec820"/>
            <typename><typedef-ref name="TOne" ref="0x4030a220"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="43(Counter32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="43(Counter32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10;</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402ec820"/>
            <typename><typedef-ref name="T32khz" ref="0x402ec9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40032340"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402ec820"/>
            <typename><typedef-ref name="T32khz" ref="0x402ec9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x4030a5c8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="40(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="40(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm. </short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402ec820"/>
            <typename><typedef-ref name="T32khz" ref="0x402ec9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40032340"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402ec820"/>
            <typename><typedef-ref name="TOne" ref="0x4030a220"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/opt/tinyos-2.x/tos/system/NoInitC.nc">
      <documentation loc="16:/opt/tinyos-2.x/tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="64:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="64:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10;</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.4 2006/12/12 18:23:44 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007/04/30 17:31:08 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="33(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="33(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10;</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.&#10;</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="30(HplAtm128InterruptC.IntPin0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="30(HplAtm128InterruptC.IntPin1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="30(HplAtm128InterruptC.IntPin2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="30(HplAtm128InterruptC.IntPin3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="30(HplAtm128InterruptC.IntPin4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="30(HplAtm128InterruptC.IntPin5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="30(HplAtm128InterruptC.IntPin6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="30(HplAtm128InterruptC.IntPin7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="45:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.5 2007/04/30 17:31:08 rincon Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @author David Moss&#10; @version @version $Revision: 1.5 $ $Date: 2007/04/30 17:31:08 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="39(CC2420ControlC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/opt/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="65(CC2420SpiWireC.WorkingStateC):/opt/tinyos-2.x/tos/system/StateC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/opt/tinyos-2.x/tos/system/StateImplC.nc">
      <documentation loc="64:/opt/tinyos-2.x/tos/system/StateImplC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/opt/tinyos-2.x/tos/system/StateImplP.nc">
      <documentation loc="64:/opt/tinyos-2.x/tos/system/StateImplP.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="37(CC2420SpiWireC.HplCC2420SpiC):/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="37(CC2420SpiWireC.HplCC2420SpiC):/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.&#10;&#10;</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="75:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <documentation loc="75:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller. </short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.6 2007/02/28 17:33:59 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="58:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="58:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10;</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="56:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <documentation loc="56:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10;</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="73(Atm128SpiC.Arbiter):/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="73(Atm128SpiC.Arbiter):/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="32(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="LedsC" loc="34:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10;</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10;</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.5 2006/12/12 18:23:43 vlahan Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="39(CC2420ControlC.RssiResource):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="41:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.&#10;&#10;</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="39(CC2420TransmitC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Trilok Inakota &#10; @version $Revision: 1.2 $ $Date: 2007/07/06 18:09:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author Trilok Inakota&#10; @version $Revision: 1.2 $ $Date: 2007/07/06 18:09:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="39(CC2420ReceiveC.Spi):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="32:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="31:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
        <short>&#10; This is the configuration for RandomMlcgC, a &#10; multiplicative linear congruential generator. &#10;&#10;</short>
        <long>&#10; This is the configuration for RandomMlcgC, a &#10; multiplicative linear congruential generator. &#10;&#10; @author  Barbara Hohlt&#10; @author  Philip Levis&#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgP" loc="34:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers. </short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;		S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/opt/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="65(CC2420CsmaC.StateC):/opt/tinyos-2.x/tos/system/StateC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10;</short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10;</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/opt/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="65(UniqueSendC.StateC):/opt/tinyos-2.x/tos/system/StateC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10;</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10;</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="61:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks. </short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplC" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10;</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10;</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/opt/tinyos-2.x/tos/system/StateC.nc">
      <documentation loc="65(DummyLplC.StateC):/opt/tinyos-2.x/tos/system/StateC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10;</short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10;</short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OscilloscopeAppC.TimerMilliC" loc="36(OscilloscopeAppC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="36(OscilloscopeAppC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="33:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="25:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer. </short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402ec450"/>
            <typename><typedef-ref name="TMilli" ref="0x402ec620"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40a43a00"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10;</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402ec450"/>
            <typename><typedef-ref name="TMilli" ref="0x402ec620"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10;</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402ec450"/>
            <typename><typedef-ref name="TMilli" ref="0x402ec620"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10;</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402ec450"/>
            <typename><typedef-ref name="TMilli" ref="0x402ec620"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OscilloscopeAppC.AMSenderC" loc="39(OscilloscopeAppC.AMSenderC):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="39(OscilloscopeAppC.AMSenderC):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:147">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.AMSenderC.AMQueueEntryP" loc="35(OscilloscopeAppC.AMSenderC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="35(OscilloscopeAppC.AMSenderC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10;</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403567d0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="34:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.&#10;&#10;</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="37(AMQueueP.AMQueueImplP):/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <documentation loc="37(AMQueueP.AMQueueImplP):/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OscilloscopeAppC.AMReceiverC" loc="35(OscilloscopeAppC.AMReceiverC):/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <documentation loc="35(OscilloscopeAppC.AMReceiverC):/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.&#10;&#10;</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:147">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.AFWA_AESC" loc="24(OscilloscopeAppC.AFWA_AESC):./AES/AFWA_AESC.nc">
      <documentation loc="24(OscilloscopeAppC.AFWA_AESC):./AES/AFWA_AESC.nc">
        <short>&#10; Description          :  &#10;                         &#10;&#10;&#10;</short>
      </documentation>
      <instance number="0">
        <component-ref qname="AFWA_AESC"/>
        <arguments>
          <value cst="I:147">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.AFWA_AESC.AFWA_AESP" loc="24(OscilloscopeAppC.AFWA_AESC.AFWA_AESP):./AES/AFWA_AESP.nc">
      <documentation loc="24(OscilloscopeAppC.AFWA_AESC.AFWA_AESP):./AES/AFWA_AESP.nc">
        <short>&#10; Description          :  &#10;                         &#10;&#10;&#10;</short>
      </documentation>
      <instance number="0">
        <component-ref qname="AFWA_AESP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403567d0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OscilloscopeAppC.AFWA_AESC.SpiC" loc="39(OscilloscopeAppC.AFWA_AESC.SpiC):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="39(OscilloscopeAppC.AFWA_AESC.SpiC):/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.AFWA_AESC.AMSenderC" loc="39(OscilloscopeAppC.AFWA_AESC.AMSenderC):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <documentation loc="39(OscilloscopeAppC.AFWA_AESC.AMSenderC):/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403567d0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.AFWA_AESC.AMSenderC.AMQueueEntryP" loc="35(OscilloscopeAppC.AFWA_AESC.AMSenderC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="35(OscilloscopeAppC.AFWA_AESC.AMSenderC.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10;</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403567d0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x403decb8" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x403dee48" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x403db010" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x403e63f8" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x403e6598" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x403e6738" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x403e68d0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x40432010" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x404321b0" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40432350" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x404324e8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="66:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="66:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="26:/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="28:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40676c70" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40676c70"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x40676e00" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10;</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x4067e0b0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x4067e0b0"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x4067e368" loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4067e368"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x4067e4f8" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10;</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x406a5090" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x406a5090"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x406a5348" loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x406a5348"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="43:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc" abstract="">
      <documentation loc="43:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10;</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x406ab140" loc="44:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x406ab140"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x406ab3f8" loc="45:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x406ab3f8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x406ab5c0" loc="46:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x406ab5c0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x406ab878" loc="47:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x406ab878"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x406aba18" loc="48:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x406abcd8" loc="49:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x406abcd8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="40:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc" abstract="">
      <documentation loc="40:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm. </short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x406c4490" loc="41:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x406c4490"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x406c4748" loc="42:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x406c4748"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x406c4910" loc="43:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x406c4910"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x406c4bc8" loc="44:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x406c4bc8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x406c4d68" loc="45:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10;</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="">
      <documentation loc="6:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="">
      <documentation loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x40711bc8" loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x40711d68" loc="31:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x40711f08" loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x407280b8" loc="33:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/opt/tinyos-2.x/tos/system/StateC.nc" abstract="">
      <documentation loc="65:/opt/tinyos-2.x/tos/system/StateC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="37:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="73:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="73:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x4082c1d8" loc="73:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="32:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc" abstract="">
      <parameters>
        <constant name="size" ref="0x408238b0" loc="32:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc" abstract="">
      <documentation loc="49:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="36:/opt/tinyos-2.x/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="36:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40a43a00" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40a43a00"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40a43b80" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="">
      <documentation loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40a3edf0" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40a3edf0"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40a3b010" loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10;</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40a76408" loc="35:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40a76408"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10;</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40a83e20" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40a83e20"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x40a80010" loc="35:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10;</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40ac3ba8" loc="35:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40ac3ba8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="39:/opt/tinyos-2.x/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="39:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40ab90f0" loc="39:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403567d0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="35:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10;</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40ad97b8" loc="35:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403567d0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="37:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc" abstract="">
      <documentation loc="37:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x40ac8970" loc="37:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="35:/opt/tinyos-2.x/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.&#10;&#10;</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40b0f9d0" loc="35:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403567d0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AFWA_AESC" loc="24:./AES/AFWA_AESC.nc" abstract="">
      <documentation loc="24:./AES/AFWA_AESC.nc">
        <short>&#10; Description          :  &#10;                         &#10;&#10;&#10;</short>
      </documentation>
      <parameters>
        <constant name="id" ref="0x40b08010" loc="24:./AES/AFWA_AESC.nc">
          <component-ref qname="AFWA_AESC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403567d0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AFWA_AESP" loc="24:./AES/AFWA_AESP.nc" abstract="">
      <documentation loc="24:./AES/AFWA_AESP.nc">
        <short>&#10; Description          :  &#10;                         &#10;&#10;&#10;</short>
      </documentation>
      <parameters>
        <constant name="id" ref="0x40b04328" loc="24:./AES/AFWA_AESP.nc">
          <component-ref qname="AFWA_AESP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403567d0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="Boot" ref="0x4033a2c8" loc="24:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x4033a2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x4033a4a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x4033e010" loc="27:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4033e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4033e1e8"/>
        <function-ref name="getPayload" scoped="" ref="0x4033e2c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4033e3a8"/>
        <function-ref name="cancel" scoped="" ref="0x4033e488"/>
        <function-ref name="sendDone" scoped="" ref="0x4033e568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x40338d28" loc="25:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x40338d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40338f00"/>
        <function-ref name="stopDone" scoped="" ref="0x40334010"/>
        <function-ref name="start" scoped="" ref="0x403340f0"/>
        <function-ref name="stop" scoped="" ref="0x403341d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AFWA_AESI" ref="0x40382d98" loc="31:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AFWA_AESI" scoped="" ref="0x40382d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="AFWA_AESI"/>
      </instance>
      <interface-functions>
        <function-ref name="AFWAenc" scoped="" ref="0x40376010"/>
        <function-ref name="AFWAsetTransmitMode" scoped="" ref="0x403760f0"/>
        <function-ref name="updateKeyDone" scoped="" ref="0x403761d0"/>
        <function-ref name="AFWAsend" scoped="" ref="0x403762b0"/>
        <function-ref name="AFWAsendDone" scoped="" ref="0x40376390"/>
        <function-ref name="AFWAsetReceiveMode" scoped="" ref="0x40376470"/>
        <function-ref name="AFWAupdateKey" scoped="" ref="0x40376550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x40363ab0" loc="26:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40363ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x40363c88"/>
        <function-ref name="receive" scoped="" ref="0x40363d68"/>
        <function-ref name="getPayload" scoped="" ref="0x40363e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40377548" loc="29:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40377548"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40377720"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40377800"/>
        <function-ref name="led1On" scoped="" ref="0x403778e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x403779c0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40377aa0"/>
        <function-ref name="get" scoped="" ref="0x40377b80"/>
        <function-ref name="led1Off" scoped="" ref="0x40377c60"/>
        <function-ref name="led2Off" scoped="" ref="0x4036e010"/>
        <function-ref name="set" scoped="" ref="0x40377d40"/>
        <function-ref name="led0On" scoped="" ref="0x40377e20"/>
        <function-ref name="led2On" scoped="" ref="0x40377f00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x4037f588" loc="30:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4037f588"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4037f760"/>
        <function-ref name="source" scoped="" ref="0x4037f840"/>
        <function-ref name="address" scoped="" ref="0x4037f920"/>
        <function-ref name="destination" scoped="" ref="0x4037fa00"/>
        <function-ref name="setSource" scoped="" ref="0x4037fae0"/>
        <function-ref name="setDestination" scoped="" ref="0x4037fbc0"/>
        <function-ref name="type" scoped="" ref="0x4037fca0"/>
        <function-ref name="setType" scoped="" ref="0x4037fd80"/>
        <function-ref name="isForMe" scoped="" ref="0x4037fe60"/>
        <function-ref name="setGroup" scoped="" ref="0x4036d010"/>
        <function-ref name="localGroup" scoped="" ref="0x4036d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x4036f358" loc="28:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4036f358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402ec450"/>
            <typename><typedef-ref name="TMilli" ref="0x402ec620"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40362c68"/>
        <function-ref name="fired" scoped="" ref="0x40362088"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40362628"/>
        <function-ref name="isOneShot" scoped="" ref="0x40362448"/>
        <function-ref name="getdt" scoped="" ref="0x40365048"/>
        <function-ref name="gett0" scoped="" ref="0x40362e48"/>
        <function-ref name="isRunning" scoped="" ref="0x40362268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4036f980"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40362948"/>
        <function-ref name="startOneShot" scoped="" ref="0x4036fc00"/>
        <function-ref name="stop" scoped="" ref="0x4036fe80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x403a08f8" loc="47:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x403a08f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403a0ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x4039b010" loc="46:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x4039b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x4039b1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x403a1bf0" loc="43:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x403a1bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403a1dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4039e8d0" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4039e8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4039eaa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x403a14f8" loc="41:/opt/tinyos-2.x/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x403a14f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x403a16d0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x403a17b0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x403a1890"/>
        <function-ref name="actualMicro" scoped="" ref="0x403a1970"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x403a1a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x403a6e40" loc="36:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x403a6e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403a5050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x403a6ad0" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403a6ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403a6ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x403a51e8" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x403a51e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403a53c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x403aac20" loc="18:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x403aac20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403aadf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x403aa8b8" loc="17:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x403aa8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403aaa90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x403ae280" loc="22:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x403ae280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403ae458"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x403b48e0" loc="21:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x403b48e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b4ab8"/>
        <function-ref name="isInput" scoped="" ref="0x403b4b98"/>
        <function-ref name="toggle" scoped="" ref="0x403b4c78"/>
        <function-ref name="isOutput" scoped="" ref="0x403b4d58"/>
        <function-ref name="get" scoped="" ref="0x403b4e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b4f18"/>
        <function-ref name="set" scoped="" ref="0x403ae010"/>
        <function-ref name="clr" scoped="" ref="0x403ae0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x403af010" loc="20:/opt/tinyos-2.x/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x403af010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403af1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x403d9e78" loc="91:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x403d9e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d8308"/>
        <function-ref name="isInput" scoped="" ref="0x403d83e8"/>
        <function-ref name="toggle" scoped="" ref="0x403d84c8"/>
        <function-ref name="isOutput" scoped="" ref="0x403d85a8"/>
        <function-ref name="get" scoped="" ref="0x403d8688"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d8768"/>
        <function-ref name="set" scoped="" ref="0x403d8848"/>
        <function-ref name="clr" scoped="" ref="0x403d8928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x403c9010" loc="65:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x403c9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c91e8"/>
        <function-ref name="isInput" scoped="" ref="0x403c92c8"/>
        <function-ref name="toggle" scoped="" ref="0x403c93a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403c9488"/>
        <function-ref name="get" scoped="" ref="0x403c9568"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c9648"/>
        <function-ref name="set" scoped="" ref="0x403c9728"/>
        <function-ref name="clr" scoped="" ref="0x403c9808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x403cc188" loc="76:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x403cc188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403cc360"/>
        <function-ref name="isInput" scoped="" ref="0x403cc440"/>
        <function-ref name="toggle" scoped="" ref="0x403cc520"/>
        <function-ref name="isOutput" scoped="" ref="0x403cc600"/>
        <function-ref name="get" scoped="" ref="0x403cc6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cc7c0"/>
        <function-ref name="set" scoped="" ref="0x403cc8a0"/>
        <function-ref name="clr" scoped="" ref="0x403cc980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x403d2e78" loc="85:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x403d2e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d1070"/>
        <function-ref name="isInput" scoped="" ref="0x403d1150"/>
        <function-ref name="toggle" scoped="" ref="0x403d1230"/>
        <function-ref name="isOutput" scoped="" ref="0x403d1310"/>
        <function-ref name="get" scoped="" ref="0x403d13f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d14d0"/>
        <function-ref name="set" scoped="" ref="0x403d15b0"/>
        <function-ref name="clr" scoped="" ref="0x403d1690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x403c16c8" loc="43:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x403c16c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c18a0"/>
        <function-ref name="isInput" scoped="" ref="0x403c1980"/>
        <function-ref name="toggle" scoped="" ref="0x403c1a60"/>
        <function-ref name="isOutput" scoped="" ref="0x403c1b40"/>
        <function-ref name="get" scoped="" ref="0x403c1c20"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c1d00"/>
        <function-ref name="set" scoped="" ref="0x403c1de0"/>
        <function-ref name="clr" scoped="" ref="0x403c1ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x403d3b00" loc="83:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x403d3b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d3cd8"/>
        <function-ref name="isInput" scoped="" ref="0x403d3db8"/>
        <function-ref name="toggle" scoped="" ref="0x403d3e98"/>
        <function-ref name="isOutput" scoped="" ref="0x403d2010"/>
        <function-ref name="get" scoped="" ref="0x403d20f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d21d0"/>
        <function-ref name="set" scoped="" ref="0x403d22b0"/>
        <function-ref name="clr" scoped="" ref="0x403d2390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x403c09d8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x403c09d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c0bb0"/>
        <function-ref name="isInput" scoped="" ref="0x403c0c90"/>
        <function-ref name="toggle" scoped="" ref="0x403c0d70"/>
        <function-ref name="isOutput" scoped="" ref="0x403c0e50"/>
        <function-ref name="get" scoped="" ref="0x403bf010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403bf0f0"/>
        <function-ref name="set" scoped="" ref="0x403bf1d0"/>
        <function-ref name="clr" scoped="" ref="0x403bf2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x403c4b00" loc="57:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x403c4b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c4cd8"/>
        <function-ref name="isInput" scoped="" ref="0x403c4db8"/>
        <function-ref name="toggle" scoped="" ref="0x403c4e98"/>
        <function-ref name="isOutput" scoped="" ref="0x403c3010"/>
        <function-ref name="get" scoped="" ref="0x403c30f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c31d0"/>
        <function-ref name="set" scoped="" ref="0x403c32b0"/>
        <function-ref name="clr" scoped="" ref="0x403c3390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x403c8cb8" loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x403c8cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c8e90"/>
        <function-ref name="isInput" scoped="" ref="0x403c7010"/>
        <function-ref name="toggle" scoped="" ref="0x403c70f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403c71d0"/>
        <function-ref name="get" scoped="" ref="0x403c72b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c7390"/>
        <function-ref name="set" scoped="" ref="0x403c7470"/>
        <function-ref name="clr" scoped="" ref="0x403c7550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x403d5e78" loc="79:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x403d5e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d4070"/>
        <function-ref name="isInput" scoped="" ref="0x403d4150"/>
        <function-ref name="toggle" scoped="" ref="0x403d4230"/>
        <function-ref name="isOutput" scoped="" ref="0x403d4310"/>
        <function-ref name="get" scoped="" ref="0x403d43f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d44d0"/>
        <function-ref name="set" scoped="" ref="0x403d45b0"/>
        <function-ref name="clr" scoped="" ref="0x403d4690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x403ba5e8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x403ba5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ba7c0"/>
        <function-ref name="isInput" scoped="" ref="0x403ba8a0"/>
        <function-ref name="toggle" scoped="" ref="0x403ba980"/>
        <function-ref name="isOutput" scoped="" ref="0x403baa60"/>
        <function-ref name="get" scoped="" ref="0x403bab40"/>
        <function-ref name="makeOutput" scoped="" ref="0x403bac20"/>
        <function-ref name="set" scoped="" ref="0x403bad00"/>
        <function-ref name="clr" scoped="" ref="0x403bade0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x403be7a8" loc="49:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x403be7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403be980"/>
        <function-ref name="isInput" scoped="" ref="0x403bea60"/>
        <function-ref name="toggle" scoped="" ref="0x403beb40"/>
        <function-ref name="isOutput" scoped="" ref="0x403bec20"/>
        <function-ref name="get" scoped="" ref="0x403bed00"/>
        <function-ref name="makeOutput" scoped="" ref="0x403bede0"/>
        <function-ref name="set" scoped="" ref="0x403beec0"/>
        <function-ref name="clr" scoped="" ref="0x403bd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x403c2808" loc="60:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x403c2808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c29e0"/>
        <function-ref name="isInput" scoped="" ref="0x403c2ac0"/>
        <function-ref name="toggle" scoped="" ref="0x403c2ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x403c2c80"/>
        <function-ref name="get" scoped="" ref="0x403c2d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c2e40"/>
        <function-ref name="set" scoped="" ref="0x403c2f20"/>
        <function-ref name="clr" scoped="" ref="0x403cb018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x403d09d8" loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x403d09d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d0bb0"/>
        <function-ref name="isInput" scoped="" ref="0x403d0c90"/>
        <function-ref name="toggle" scoped="" ref="0x403d0d70"/>
        <function-ref name="isOutput" scoped="" ref="0x403d0e50"/>
        <function-ref name="get" scoped="" ref="0x403cf010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cf0f0"/>
        <function-ref name="set" scoped="" ref="0x403cf1d0"/>
        <function-ref name="clr" scoped="" ref="0x403cf2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x403dab00" loc="88:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x403dab00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403dacd8"/>
        <function-ref name="isInput" scoped="" ref="0x403dadb8"/>
        <function-ref name="toggle" scoped="" ref="0x403dae98"/>
        <function-ref name="isOutput" scoped="" ref="0x403d9010"/>
        <function-ref name="get" scoped="" ref="0x403d90f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d91d0"/>
        <function-ref name="set" scoped="" ref="0x403d92b0"/>
        <function-ref name="clr" scoped="" ref="0x403d9390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x403d7d98" loc="94:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x403d7d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d6010"/>
        <function-ref name="isInput" scoped="" ref="0x403d60f0"/>
        <function-ref name="toggle" scoped="" ref="0x403d61d0"/>
        <function-ref name="isOutput" scoped="" ref="0x403d62b0"/>
        <function-ref name="get" scoped="" ref="0x403d6390"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d6470"/>
        <function-ref name="set" scoped="" ref="0x403d6550"/>
        <function-ref name="clr" scoped="" ref="0x403d6630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x403cfd98" loc="74:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x403cfd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403cd010"/>
        <function-ref name="isInput" scoped="" ref="0x403cd0f0"/>
        <function-ref name="toggle" scoped="" ref="0x403cd1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x403cd2b0"/>
        <function-ref name="get" scoped="" ref="0x403cd390"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cd470"/>
        <function-ref name="set" scoped="" ref="0x403cd550"/>
        <function-ref name="clr" scoped="" ref="0x403cd630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x403b8348" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x403b8348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b8520"/>
        <function-ref name="isInput" scoped="" ref="0x403b8600"/>
        <function-ref name="toggle" scoped="" ref="0x403b86e0"/>
        <function-ref name="isOutput" scoped="" ref="0x403b87c0"/>
        <function-ref name="get" scoped="" ref="0x403b88a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b8980"/>
        <function-ref name="set" scoped="" ref="0x403b8a60"/>
        <function-ref name="clr" scoped="" ref="0x403b8b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x403c6508" loc="52:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x403c6508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c66e0"/>
        <function-ref name="isInput" scoped="" ref="0x403c67c0"/>
        <function-ref name="toggle" scoped="" ref="0x403c68a0"/>
        <function-ref name="isOutput" scoped="" ref="0x403c6980"/>
        <function-ref name="get" scoped="" ref="0x403c6a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c6b40"/>
        <function-ref name="set" scoped="" ref="0x403c6c20"/>
        <function-ref name="clr" scoped="" ref="0x403c6d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x403d8aa0" loc="92:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x403d8aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d8c78"/>
        <function-ref name="isInput" scoped="" ref="0x403d8d58"/>
        <function-ref name="toggle" scoped="" ref="0x403d8e38"/>
        <function-ref name="isOutput" scoped="" ref="0x403d8f18"/>
        <function-ref name="get" scoped="" ref="0x403d7010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d70f0"/>
        <function-ref name="set" scoped="" ref="0x403d71d0"/>
        <function-ref name="clr" scoped="" ref="0x403d72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x403c5808" loc="55:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x403c5808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c59e0"/>
        <function-ref name="isInput" scoped="" ref="0x403c5ac0"/>
        <function-ref name="toggle" scoped="" ref="0x403c5ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x403c5c80"/>
        <function-ref name="get" scoped="" ref="0x403c5d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c5e40"/>
        <function-ref name="set" scoped="" ref="0x403c5f20"/>
        <function-ref name="clr" scoped="" ref="0x403c4018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x403c9980" loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x403c9980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c9b58"/>
        <function-ref name="isInput" scoped="" ref="0x403c9c38"/>
        <function-ref name="toggle" scoped="" ref="0x403c9d18"/>
        <function-ref name="isOutput" scoped="" ref="0x403c9df8"/>
        <function-ref name="get" scoped="" ref="0x403c9ed8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c8010"/>
        <function-ref name="set" scoped="" ref="0x403c80f0"/>
        <function-ref name="clr" scoped="" ref="0x403c81d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x403ccaf8" loc="77:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x403ccaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403cccd0"/>
        <function-ref name="isInput" scoped="" ref="0x403ccdb0"/>
        <function-ref name="toggle" scoped="" ref="0x403cce90"/>
        <function-ref name="isOutput" scoped="" ref="0x403d5010"/>
        <function-ref name="get" scoped="" ref="0x403d50f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d51d0"/>
        <function-ref name="set" scoped="" ref="0x403d52b0"/>
        <function-ref name="clr" scoped="" ref="0x403d5390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x403d1808" loc="86:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x403d1808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d19e0"/>
        <function-ref name="isInput" scoped="" ref="0x403d1ac0"/>
        <function-ref name="toggle" scoped="" ref="0x403d1ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x403d1c80"/>
        <function-ref name="get" scoped="" ref="0x403d1d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d1e40"/>
        <function-ref name="set" scoped="" ref="0x403d1f20"/>
        <function-ref name="clr" scoped="" ref="0x403da018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x403c0068" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x403c0068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c0240"/>
        <function-ref name="isInput" scoped="" ref="0x403c0320"/>
        <function-ref name="toggle" scoped="" ref="0x403c0400"/>
        <function-ref name="isOutput" scoped="" ref="0x403c04e0"/>
        <function-ref name="get" scoped="" ref="0x403c05c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c06a0"/>
        <function-ref name="set" scoped="" ref="0x403c0780"/>
        <function-ref name="clr" scoped="" ref="0x403c0860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x403bf428" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x403bf428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403bf600"/>
        <function-ref name="isInput" scoped="" ref="0x403bf6e0"/>
        <function-ref name="toggle" scoped="" ref="0x403bf7c0"/>
        <function-ref name="isOutput" scoped="" ref="0x403bf8a0"/>
        <function-ref name="get" scoped="" ref="0x403bf980"/>
        <function-ref name="makeOutput" scoped="" ref="0x403bfa60"/>
        <function-ref name="set" scoped="" ref="0x403bfb40"/>
        <function-ref name="clr" scoped="" ref="0x403bfc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x403c3508" loc="58:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x403c3508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c36e0"/>
        <function-ref name="isInput" scoped="" ref="0x403c37c0"/>
        <function-ref name="toggle" scoped="" ref="0x403c38a0"/>
        <function-ref name="isOutput" scoped="" ref="0x403c3980"/>
        <function-ref name="get" scoped="" ref="0x403c3a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c3b40"/>
        <function-ref name="set" scoped="" ref="0x403c3c20"/>
        <function-ref name="clr" scoped="" ref="0x403c3d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x403c76c8" loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x403c76c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c78a0"/>
        <function-ref name="isInput" scoped="" ref="0x403c7980"/>
        <function-ref name="toggle" scoped="" ref="0x403c7a60"/>
        <function-ref name="isOutput" scoped="" ref="0x403c7b40"/>
        <function-ref name="get" scoped="" ref="0x403c7c20"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c7d00"/>
        <function-ref name="set" scoped="" ref="0x403c7de0"/>
        <function-ref name="clr" scoped="" ref="0x403c7ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x403d4808" loc="80:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x403d4808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d49e0"/>
        <function-ref name="isInput" scoped="" ref="0x403d4ac0"/>
        <function-ref name="toggle" scoped="" ref="0x403d4ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x403d4c80"/>
        <function-ref name="get" scoped="" ref="0x403d4d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d4e40"/>
        <function-ref name="set" scoped="" ref="0x403d4f20"/>
        <function-ref name="clr" scoped="" ref="0x403d3018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x403b9010" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x403b9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b91e8"/>
        <function-ref name="isInput" scoped="" ref="0x403b92c8"/>
        <function-ref name="toggle" scoped="" ref="0x403b93a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403b9488"/>
        <function-ref name="get" scoped="" ref="0x403b9568"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b9648"/>
        <function-ref name="set" scoped="" ref="0x403b9728"/>
        <function-ref name="clr" scoped="" ref="0x403b9808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x403bd188" loc="50:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x403bd188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403bd3e0"/>
        <function-ref name="isInput" scoped="" ref="0x403bd4c0"/>
        <function-ref name="toggle" scoped="" ref="0x403bd5a0"/>
        <function-ref name="isOutput" scoped="" ref="0x403bd680"/>
        <function-ref name="get" scoped="" ref="0x403bd760"/>
        <function-ref name="makeOutput" scoped="" ref="0x403bd840"/>
        <function-ref name="set" scoped="" ref="0x403bd920"/>
        <function-ref name="clr" scoped="" ref="0x403bda00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x403cb190" loc="61:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x403cb190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403cb368"/>
        <function-ref name="isInput" scoped="" ref="0x403cb448"/>
        <function-ref name="toggle" scoped="" ref="0x403cb528"/>
        <function-ref name="isOutput" scoped="" ref="0x403cb608"/>
        <function-ref name="get" scoped="" ref="0x403cb6e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cb7c8"/>
        <function-ref name="set" scoped="" ref="0x403cb8a8"/>
        <function-ref name="clr" scoped="" ref="0x403cb988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x403d9508" loc="89:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x403d9508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d96e0"/>
        <function-ref name="isInput" scoped="" ref="0x403d97c0"/>
        <function-ref name="toggle" scoped="" ref="0x403d98a0"/>
        <function-ref name="isOutput" scoped="" ref="0x403d9980"/>
        <function-ref name="get" scoped="" ref="0x403d9a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d9b40"/>
        <function-ref name="set" scoped="" ref="0x403d9c20"/>
        <function-ref name="clr" scoped="" ref="0x403d9d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x403ca508" loc="64:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x403ca508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ca7e0"/>
        <function-ref name="isInput" scoped="" ref="0x403ca8c0"/>
        <function-ref name="toggle" scoped="" ref="0x403ca9a0"/>
        <function-ref name="isOutput" scoped="" ref="0x403caa80"/>
        <function-ref name="get" scoped="" ref="0x403cab60"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cac40"/>
        <function-ref name="set" scoped="" ref="0x403cad20"/>
        <function-ref name="clr" scoped="" ref="0x403cae00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x403cd7a8" loc="75:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x403cd7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403cd980"/>
        <function-ref name="isInput" scoped="" ref="0x403cda60"/>
        <function-ref name="toggle" scoped="" ref="0x403cdb40"/>
        <function-ref name="isOutput" scoped="" ref="0x403cdc20"/>
        <function-ref name="get" scoped="" ref="0x403cdd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cdde0"/>
        <function-ref name="set" scoped="" ref="0x403cdec0"/>
        <function-ref name="clr" scoped="" ref="0x403cc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x403d2508" loc="84:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x403d2508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d26e0"/>
        <function-ref name="isInput" scoped="" ref="0x403d27c0"/>
        <function-ref name="toggle" scoped="" ref="0x403d28a0"/>
        <function-ref name="isOutput" scoped="" ref="0x403d2980"/>
        <function-ref name="get" scoped="" ref="0x403d2a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d2b40"/>
        <function-ref name="set" scoped="" ref="0x403d2c20"/>
        <function-ref name="clr" scoped="" ref="0x403d2d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x403d67a8" loc="95:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x403d67a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d6980"/>
        <function-ref name="isInput" scoped="" ref="0x403d6a60"/>
        <function-ref name="toggle" scoped="" ref="0x403d6b40"/>
        <function-ref name="isOutput" scoped="" ref="0x403d6c20"/>
        <function-ref name="get" scoped="" ref="0x403d6d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d6de0"/>
        <function-ref name="set" scoped="" ref="0x403d6ec0"/>
        <function-ref name="clr" scoped="" ref="0x403df010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x403b8cb8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x403b8cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b8e90"/>
        <function-ref name="isInput" scoped="" ref="0x403c1010"/>
        <function-ref name="toggle" scoped="" ref="0x403c10f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403c11d0"/>
        <function-ref name="get" scoped="" ref="0x403c12b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c1390"/>
        <function-ref name="set" scoped="" ref="0x403c1470"/>
        <function-ref name="clr" scoped="" ref="0x403c1550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x403c6e78" loc="53:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x403c6e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c5070"/>
        <function-ref name="isInput" scoped="" ref="0x403c5150"/>
        <function-ref name="toggle" scoped="" ref="0x403c5230"/>
        <function-ref name="isOutput" scoped="" ref="0x403c5310"/>
        <function-ref name="get" scoped="" ref="0x403c53f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c54d0"/>
        <function-ref name="set" scoped="" ref="0x403c55b0"/>
        <function-ref name="clr" scoped="" ref="0x403c5690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x403d3190" loc="82:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x403d3190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d3368"/>
        <function-ref name="isInput" scoped="" ref="0x403d3448"/>
        <function-ref name="toggle" scoped="" ref="0x403d3528"/>
        <function-ref name="isOutput" scoped="" ref="0x403d3608"/>
        <function-ref name="get" scoped="" ref="0x403d36e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d37c8"/>
        <function-ref name="set" scoped="" ref="0x403d38a8"/>
        <function-ref name="clr" scoped="" ref="0x403d3988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x403c4190" loc="56:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x403c4190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c4368"/>
        <function-ref name="isInput" scoped="" ref="0x403c4448"/>
        <function-ref name="toggle" scoped="" ref="0x403c4528"/>
        <function-ref name="isOutput" scoped="" ref="0x403c4608"/>
        <function-ref name="get" scoped="" ref="0x403c46e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c47c8"/>
        <function-ref name="set" scoped="" ref="0x403c48a8"/>
        <function-ref name="clr" scoped="" ref="0x403c4988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x403c8348" loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x403c8348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c8520"/>
        <function-ref name="isInput" scoped="" ref="0x403c8600"/>
        <function-ref name="toggle" scoped="" ref="0x403c86e0"/>
        <function-ref name="isOutput" scoped="" ref="0x403c87c0"/>
        <function-ref name="get" scoped="" ref="0x403c88a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c8980"/>
        <function-ref name="set" scoped="" ref="0x403c8a60"/>
        <function-ref name="clr" scoped="" ref="0x403c8b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x403d5508" loc="78:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x403d5508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d56e0"/>
        <function-ref name="isInput" scoped="" ref="0x403d57c0"/>
        <function-ref name="toggle" scoped="" ref="0x403d58a0"/>
        <function-ref name="isOutput" scoped="" ref="0x403d5980"/>
        <function-ref name="get" scoped="" ref="0x403d5a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d5b40"/>
        <function-ref name="set" scoped="" ref="0x403d5c20"/>
        <function-ref name="clr" scoped="" ref="0x403d5d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x403da190" loc="87:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x403da190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403da368"/>
        <function-ref name="isInput" scoped="" ref="0x403da448"/>
        <function-ref name="toggle" scoped="" ref="0x403da528"/>
        <function-ref name="isOutput" scoped="" ref="0x403da608"/>
        <function-ref name="get" scoped="" ref="0x403da6e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403da7c8"/>
        <function-ref name="set" scoped="" ref="0x403da8a8"/>
        <function-ref name="clr" scoped="" ref="0x403da988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x403bbc28" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x403bbc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403bbe00"/>
        <function-ref name="isInput" scoped="" ref="0x403bbee0"/>
        <function-ref name="toggle" scoped="" ref="0x403ba010"/>
        <function-ref name="isOutput" scoped="" ref="0x403ba0f0"/>
        <function-ref name="get" scoped="" ref="0x403ba1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ba2b0"/>
        <function-ref name="set" scoped="" ref="0x403ba390"/>
        <function-ref name="clr" scoped="" ref="0x403ba470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x403bfd98" loc="48:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x403bfd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403be010"/>
        <function-ref name="isInput" scoped="" ref="0x403be0f0"/>
        <function-ref name="toggle" scoped="" ref="0x403be1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x403be2b0"/>
        <function-ref name="get" scoped="" ref="0x403be390"/>
        <function-ref name="makeOutput" scoped="" ref="0x403be470"/>
        <function-ref name="set" scoped="" ref="0x403be550"/>
        <function-ref name="clr" scoped="" ref="0x403be630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x403c3e78" loc="59:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x403c3e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403c2070"/>
        <function-ref name="isInput" scoped="" ref="0x403c2150"/>
        <function-ref name="toggle" scoped="" ref="0x403c2230"/>
        <function-ref name="isOutput" scoped="" ref="0x403c2310"/>
        <function-ref name="get" scoped="" ref="0x403c23f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c24d0"/>
        <function-ref name="set" scoped="" ref="0x403c25b0"/>
        <function-ref name="clr" scoped="" ref="0x403c2690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x403d0068" loc="70:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x403d0068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d0240"/>
        <function-ref name="isInput" scoped="" ref="0x403d0320"/>
        <function-ref name="toggle" scoped="" ref="0x403d0400"/>
        <function-ref name="isOutput" scoped="" ref="0x403d04e0"/>
        <function-ref name="get" scoped="" ref="0x403d05c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d06a0"/>
        <function-ref name="set" scoped="" ref="0x403d0780"/>
        <function-ref name="clr" scoped="" ref="0x403d0860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x403d7428" loc="93:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x403d7428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403d7600"/>
        <function-ref name="isInput" scoped="" ref="0x403d76e0"/>
        <function-ref name="toggle" scoped="" ref="0x403d77c0"/>
        <function-ref name="isOutput" scoped="" ref="0x403d78a0"/>
        <function-ref name="get" scoped="" ref="0x403d7980"/>
        <function-ref name="makeOutput" scoped="" ref="0x403d7a60"/>
        <function-ref name="set" scoped="" ref="0x403d7b40"/>
        <function-ref name="clr" scoped="" ref="0x403d7c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x403cf428" loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x403cf428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403cf600"/>
        <function-ref name="isInput" scoped="" ref="0x403cf6e0"/>
        <function-ref name="toggle" scoped="" ref="0x403cf7c0"/>
        <function-ref name="isOutput" scoped="" ref="0x403cf8a0"/>
        <function-ref name="get" scoped="" ref="0x403cf980"/>
        <function-ref name="makeOutput" scoped="" ref="0x403cfa60"/>
        <function-ref name="set" scoped="" ref="0x403cfb40"/>
        <function-ref name="clr" scoped="" ref="0x403cfc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x403cbb00" loc="62:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x403cbb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403cbcd8"/>
        <function-ref name="isInput" scoped="" ref="0x403cbdb8"/>
        <function-ref name="toggle" scoped="" ref="0x403cbe98"/>
        <function-ref name="isOutput" scoped="" ref="0x403ca010"/>
        <function-ref name="get" scoped="" ref="0x403ca0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ca1d0"/>
        <function-ref name="set" scoped="" ref="0x403ca2b0"/>
        <function-ref name="clr" scoped="" ref="0x403ca390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x403b9980" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x403b9980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b9b58"/>
        <function-ref name="isInput" scoped="" ref="0x403b9c38"/>
        <function-ref name="toggle" scoped="" ref="0x403b9d18"/>
        <function-ref name="isOutput" scoped="" ref="0x403b9df8"/>
        <function-ref name="get" scoped="" ref="0x403b9ed8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b8010"/>
        <function-ref name="set" scoped="" ref="0x403b80f0"/>
        <function-ref name="clr" scoped="" ref="0x403b81d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x403bdb78" loc="51:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x403bdb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403bdd50"/>
        <function-ref name="isInput" scoped="" ref="0x403bde30"/>
        <function-ref name="toggle" scoped="" ref="0x403bdf10"/>
        <function-ref name="isOutput" scoped="" ref="0x403c6010"/>
        <function-ref name="get" scoped="" ref="0x403c60f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403c61d0"/>
        <function-ref name="set" scoped="" ref="0x403c62b0"/>
        <function-ref name="clr" scoped="" ref="0x403c6390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404007f0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404007f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404009c8"/>
        <function-ref name="isInput" scoped="" ref="0x40400aa8"/>
        <function-ref name="toggle" scoped="" ref="0x40400b88"/>
        <function-ref name="isOutput" scoped="" ref="0x40400c68"/>
        <function-ref name="get" scoped="" ref="0x40400d48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40400e28"/>
        <function-ref name="set" scoped="" ref="0x40400f08"/>
        <function-ref name="clr" scoped="" ref="0x403ff010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404084f0" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404084f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404086c8"/>
        <function-ref name="isInput" scoped="" ref="0x404087a8"/>
        <function-ref name="toggle" scoped="" ref="0x40408888"/>
        <function-ref name="isOutput" scoped="" ref="0x40408968"/>
        <function-ref name="get" scoped="" ref="0x40408a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40408b28"/>
        <function-ref name="set" scoped="" ref="0x40408c08"/>
        <function-ref name="clr" scoped="" ref="0x40408ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40401518" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40401518"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404016f0"/>
        <function-ref name="isInput" scoped="" ref="0x404017d0"/>
        <function-ref name="toggle" scoped="" ref="0x404018b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40401990"/>
        <function-ref name="get" scoped="" ref="0x40401a70"/>
        <function-ref name="makeOutput" scoped="" ref="0x40401b50"/>
        <function-ref name="set" scoped="" ref="0x40401c30"/>
        <function-ref name="clr" scoped="" ref="0x40401d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x403ff170" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x403ff170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ff348"/>
        <function-ref name="isInput" scoped="" ref="0x403ff428"/>
        <function-ref name="toggle" scoped="" ref="0x403ff508"/>
        <function-ref name="isOutput" scoped="" ref="0x403ff5e8"/>
        <function-ref name="get" scoped="" ref="0x403ff6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ff7a8"/>
        <function-ref name="set" scoped="" ref="0x403ff888"/>
        <function-ref name="clr" scoped="" ref="0x403ff968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40408e48" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40408e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40407050"/>
        <function-ref name="isInput" scoped="" ref="0x40407130"/>
        <function-ref name="toggle" scoped="" ref="0x40407210"/>
        <function-ref name="isOutput" scoped="" ref="0x404072f0"/>
        <function-ref name="get" scoped="" ref="0x404073d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404074b0"/>
        <function-ref name="set" scoped="" ref="0x40407590"/>
        <function-ref name="clr" scoped="" ref="0x40407670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40401e70" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40401e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40400070"/>
        <function-ref name="isInput" scoped="" ref="0x40400150"/>
        <function-ref name="toggle" scoped="" ref="0x40400230"/>
        <function-ref name="isOutput" scoped="" ref="0x40400310"/>
        <function-ref name="get" scoped="" ref="0x404003f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404004d0"/>
        <function-ref name="set" scoped="" ref="0x404005b0"/>
        <function-ref name="clr" scoped="" ref="0x40400690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x403ffac8" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x403ffac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ffca0"/>
        <function-ref name="isInput" scoped="" ref="0x403ffd80"/>
        <function-ref name="toggle" scoped="" ref="0x403ffe60"/>
        <function-ref name="isOutput" scoped="" ref="0x40408010"/>
        <function-ref name="get" scoped="" ref="0x404080f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404081d0"/>
        <function-ref name="set" scoped="" ref="0x404082b0"/>
        <function-ref name="clr" scoped="" ref="0x40408390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404077d0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404077d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404079a8"/>
        <function-ref name="isInput" scoped="" ref="0x40407a88"/>
        <function-ref name="toggle" scoped="" ref="0x40407b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40407c48"/>
        <function-ref name="get" scoped="" ref="0x40407d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40407e08"/>
        <function-ref name="set" scoped="" ref="0x40407ee8"/>
        <function-ref name="clr" scoped="" ref="0x40406010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b88ed8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b88ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b840c0"/>
        <function-ref name="isInput" scoped="" ref="0x40b841a0"/>
        <function-ref name="toggle" scoped="" ref="0x40b84280"/>
        <function-ref name="isOutput" scoped="" ref="0x40b84360"/>
        <function-ref name="get" scoped="" ref="0x40b84440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b84520"/>
        <function-ref name="set" scoped="" ref="0x40b84600"/>
        <function-ref name="clr" scoped="" ref="0x40b846e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b838a0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b838a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b83a78"/>
        <function-ref name="isInput" scoped="" ref="0x40b83b58"/>
        <function-ref name="toggle" scoped="" ref="0x40b83c38"/>
        <function-ref name="isOutput" scoped="" ref="0x40b83d18"/>
        <function-ref name="get" scoped="" ref="0x40b83df8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b83ed8"/>
        <function-ref name="set" scoped="" ref="0x40b82010"/>
        <function-ref name="clr" scoped="" ref="0x40b820f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b812d0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b812d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b814a8"/>
        <function-ref name="isInput" scoped="" ref="0x40b81588"/>
        <function-ref name="toggle" scoped="" ref="0x40b81668"/>
        <function-ref name="isOutput" scoped="" ref="0x40b81748"/>
        <function-ref name="get" scoped="" ref="0x40b81828"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b81908"/>
        <function-ref name="set" scoped="" ref="0x40b819e8"/>
        <function-ref name="clr" scoped="" ref="0x40b81ac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b80c90" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b80c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b80e68"/>
        <function-ref name="isInput" scoped="" ref="0x40b7e010"/>
        <function-ref name="toggle" scoped="" ref="0x40b7e0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x40b7e1d0"/>
        <function-ref name="get" scoped="" ref="0x40b7e2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b7e390"/>
        <function-ref name="set" scoped="" ref="0x40b7e470"/>
        <function-ref name="clr" scoped="" ref="0x40b7e550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b7d718" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b7d718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b7d8f0"/>
        <function-ref name="isInput" scoped="" ref="0x40b7d9d0"/>
        <function-ref name="toggle" scoped="" ref="0x40b7dab0"/>
        <function-ref name="isOutput" scoped="" ref="0x40b7db90"/>
        <function-ref name="get" scoped="" ref="0x40b7dc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b7dd50"/>
        <function-ref name="set" scoped="" ref="0x40b7de30"/>
        <function-ref name="clr" scoped="" ref="0x40b7df10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b7b0f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b7b0f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b7b2d0"/>
        <function-ref name="isInput" scoped="" ref="0x40b7b3b0"/>
        <function-ref name="toggle" scoped="" ref="0x40b7b490"/>
        <function-ref name="isOutput" scoped="" ref="0x40b7b570"/>
        <function-ref name="get" scoped="" ref="0x40b7b650"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b7b730"/>
        <function-ref name="set" scoped="" ref="0x40b7b810"/>
        <function-ref name="clr" scoped="" ref="0x40b7b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40b7aac8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40b7aac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40b7aca0"/>
        <function-ref name="isInput" scoped="" ref="0x40b7ad80"/>
        <function-ref name="toggle" scoped="" ref="0x40b7ae60"/>
        <function-ref name="isOutput" scoped="" ref="0x40b79010"/>
        <function-ref name="get" scoped="" ref="0x40b790f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40b791d0"/>
        <function-ref name="set" scoped="" ref="0x40b792b0"/>
        <function-ref name="clr" scoped="" ref="0x40b79390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ba0570" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ba0570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ba0748"/>
        <function-ref name="isInput" scoped="" ref="0x40ba0828"/>
        <function-ref name="toggle" scoped="" ref="0x40ba0908"/>
        <function-ref name="isOutput" scoped="" ref="0x40ba09e8"/>
        <function-ref name="get" scoped="" ref="0x40ba0ac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ba0ba8"/>
        <function-ref name="set" scoped="" ref="0x40ba0c88"/>
        <function-ref name="clr" scoped="" ref="0x40ba0d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4040de48" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4040de48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040c050"/>
        <function-ref name="isInput" scoped="" ref="0x4040c130"/>
        <function-ref name="toggle" scoped="" ref="0x4040c210"/>
        <function-ref name="isOutput" scoped="" ref="0x4040c2f0"/>
        <function-ref name="get" scoped="" ref="0x4040c3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040c4b0"/>
        <function-ref name="set" scoped="" ref="0x4040c590"/>
        <function-ref name="clr" scoped="" ref="0x4040c670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4040aac8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4040aac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040aca0"/>
        <function-ref name="isInput" scoped="" ref="0x4040ad80"/>
        <function-ref name="toggle" scoped="" ref="0x4040ae60"/>
        <function-ref name="isOutput" scoped="" ref="0x40409010"/>
        <function-ref name="get" scoped="" ref="0x404090f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404091d0"/>
        <function-ref name="set" scoped="" ref="0x404092b0"/>
        <function-ref name="clr" scoped="" ref="0x40409390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40404b38" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40404b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40404d10"/>
        <function-ref name="isInput" scoped="" ref="0x40404df0"/>
        <function-ref name="toggle" scoped="" ref="0x40404ed0"/>
        <function-ref name="isOutput" scoped="" ref="0x4040d010"/>
        <function-ref name="get" scoped="" ref="0x4040d0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040d1d0"/>
        <function-ref name="set" scoped="" ref="0x4040d2b0"/>
        <function-ref name="clr" scoped="" ref="0x4040d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4040c7d0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4040c7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040c9a8"/>
        <function-ref name="isInput" scoped="" ref="0x4040ca88"/>
        <function-ref name="toggle" scoped="" ref="0x4040cb68"/>
        <function-ref name="isOutput" scoped="" ref="0x4040cc48"/>
        <function-ref name="get" scoped="" ref="0x4040cd28"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040ce08"/>
        <function-ref name="set" scoped="" ref="0x4040cee8"/>
        <function-ref name="clr" scoped="" ref="0x4040a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404094f0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404094f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404096c8"/>
        <function-ref name="isInput" scoped="" ref="0x404097a8"/>
        <function-ref name="toggle" scoped="" ref="0x40409888"/>
        <function-ref name="isOutput" scoped="" ref="0x40409968"/>
        <function-ref name="get" scoped="" ref="0x40409a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40409b28"/>
        <function-ref name="set" scoped="" ref="0x40409c08"/>
        <function-ref name="clr" scoped="" ref="0x40409ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4040d4f0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4040d4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040d6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4040d7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4040d888"/>
        <function-ref name="isOutput" scoped="" ref="0x4040d968"/>
        <function-ref name="get" scoped="" ref="0x4040da48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040db28"/>
        <function-ref name="set" scoped="" ref="0x4040dc08"/>
        <function-ref name="clr" scoped="" ref="0x4040dce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4040a170" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4040a170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040a348"/>
        <function-ref name="isInput" scoped="" ref="0x4040a428"/>
        <function-ref name="toggle" scoped="" ref="0x4040a508"/>
        <function-ref name="isOutput" scoped="" ref="0x4040a5e8"/>
        <function-ref name="get" scoped="" ref="0x4040a6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040a7a8"/>
        <function-ref name="set" scoped="" ref="0x4040a888"/>
        <function-ref name="clr" scoped="" ref="0x4040a968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40409e48" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40409e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40412050"/>
        <function-ref name="isInput" scoped="" ref="0x40412130"/>
        <function-ref name="toggle" scoped="" ref="0x40412210"/>
        <function-ref name="isOutput" scoped="" ref="0x404122f0"/>
        <function-ref name="get" scoped="" ref="0x404123d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404124b0"/>
        <function-ref name="set" scoped="" ref="0x40412590"/>
        <function-ref name="clr" scoped="" ref="0x40412670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ba12b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ba12b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ba1488"/>
        <function-ref name="isInput" scoped="" ref="0x40ba1568"/>
        <function-ref name="toggle" scoped="" ref="0x40ba1648"/>
        <function-ref name="isOutput" scoped="" ref="0x40ba1728"/>
        <function-ref name="get" scoped="" ref="0x40ba1808"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ba18e8"/>
        <function-ref name="set" scoped="" ref="0x40ba19c8"/>
        <function-ref name="clr" scoped="" ref="0x40ba1aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40bc8c78" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40bc8c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bc8e50"/>
        <function-ref name="isInput" scoped="" ref="0x40bc7010"/>
        <function-ref name="toggle" scoped="" ref="0x40bc70f0"/>
        <function-ref name="isOutput" scoped="" ref="0x40bc71d0"/>
        <function-ref name="get" scoped="" ref="0x40bc72b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bc7390"/>
        <function-ref name="set" scoped="" ref="0x40bc7470"/>
        <function-ref name="clr" scoped="" ref="0x40bc7550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40bc6718" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40bc6718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bc68f0"/>
        <function-ref name="isInput" scoped="" ref="0x40bc69d0"/>
        <function-ref name="toggle" scoped="" ref="0x40bc6ab0"/>
        <function-ref name="isOutput" scoped="" ref="0x40bc6b90"/>
        <function-ref name="get" scoped="" ref="0x40bc6c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bc6d50"/>
        <function-ref name="set" scoped="" ref="0x40bc6e30"/>
        <function-ref name="clr" scoped="" ref="0x40bc6f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40bc40f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40bc40f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bc42d0"/>
        <function-ref name="isInput" scoped="" ref="0x40bc43b0"/>
        <function-ref name="toggle" scoped="" ref="0x40bc4490"/>
        <function-ref name="isOutput" scoped="" ref="0x40bc4570"/>
        <function-ref name="get" scoped="" ref="0x40bc4650"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bc4730"/>
        <function-ref name="set" scoped="" ref="0x40bc4810"/>
        <function-ref name="clr" scoped="" ref="0x40bc48f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40bc3ac8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40bc3ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bc3ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40bc3d80"/>
        <function-ref name="toggle" scoped="" ref="0x40bc3e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40bc2010"/>
        <function-ref name="get" scoped="" ref="0x40bc20f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bc21d0"/>
        <function-ref name="set" scoped="" ref="0x40bc22b0"/>
        <function-ref name="clr" scoped="" ref="0x40bc2390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40bc1570" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40bc1570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bc1748"/>
        <function-ref name="isInput" scoped="" ref="0x40bc1828"/>
        <function-ref name="toggle" scoped="" ref="0x40bc1908"/>
        <function-ref name="isOutput" scoped="" ref="0x40bc19e8"/>
        <function-ref name="get" scoped="" ref="0x40bc1ac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bc1ba8"/>
        <function-ref name="set" scoped="" ref="0x40bc1c88"/>
        <function-ref name="clr" scoped="" ref="0x40bc1d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40bbf010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40bbf010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bbf1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40bbf2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40bbf3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40bbf488"/>
        <function-ref name="get" scoped="" ref="0x40bbf568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bbf648"/>
        <function-ref name="set" scoped="" ref="0x40bbf728"/>
        <function-ref name="clr" scoped="" ref="0x40bbf808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40bbe9e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40bbe9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bbebc0"/>
        <function-ref name="isInput" scoped="" ref="0x40bbeca0"/>
        <function-ref name="toggle" scoped="" ref="0x40bbed80"/>
        <function-ref name="isOutput" scoped="" ref="0x40bbee60"/>
        <function-ref name="get" scoped="" ref="0x40bbd010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bbd0f0"/>
        <function-ref name="set" scoped="" ref="0x40bbd1d0"/>
        <function-ref name="clr" scoped="" ref="0x40bbd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4040e4f0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4040e4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040e6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4040e7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4040e888"/>
        <function-ref name="isOutput" scoped="" ref="0x4040e968"/>
        <function-ref name="get" scoped="" ref="0x4040ea48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040eb28"/>
        <function-ref name="set" scoped="" ref="0x4040ec08"/>
        <function-ref name="clr" scoped="" ref="0x4040ece8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40416170" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40416170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40416348"/>
        <function-ref name="isInput" scoped="" ref="0x40416428"/>
        <function-ref name="toggle" scoped="" ref="0x40416508"/>
        <function-ref name="isOutput" scoped="" ref="0x404165e8"/>
        <function-ref name="get" scoped="" ref="0x404166c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404167a8"/>
        <function-ref name="set" scoped="" ref="0x40416888"/>
        <function-ref name="clr" scoped="" ref="0x40416968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4040f228" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4040f228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040f400"/>
        <function-ref name="isInput" scoped="" ref="0x4040f4e0"/>
        <function-ref name="toggle" scoped="" ref="0x4040f5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4040f6a0"/>
        <function-ref name="get" scoped="" ref="0x4040f780"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040f860"/>
        <function-ref name="set" scoped="" ref="0x4040f940"/>
        <function-ref name="clr" scoped="" ref="0x4040fa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4040ee48" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4040ee48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40417050"/>
        <function-ref name="isInput" scoped="" ref="0x40417130"/>
        <function-ref name="toggle" scoped="" ref="0x40417210"/>
        <function-ref name="isOutput" scoped="" ref="0x404172f0"/>
        <function-ref name="get" scoped="" ref="0x404173d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404174b0"/>
        <function-ref name="set" scoped="" ref="0x40417590"/>
        <function-ref name="clr" scoped="" ref="0x40417670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40416ac8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40416ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40416ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40416d80"/>
        <function-ref name="toggle" scoped="" ref="0x40416e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40415010"/>
        <function-ref name="get" scoped="" ref="0x404150f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404151d0"/>
        <function-ref name="set" scoped="" ref="0x404152b0"/>
        <function-ref name="clr" scoped="" ref="0x40415390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4040fb80" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4040fb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040fd58"/>
        <function-ref name="isInput" scoped="" ref="0x4040fe38"/>
        <function-ref name="toggle" scoped="" ref="0x4040ff18"/>
        <function-ref name="isOutput" scoped="" ref="0x4040e010"/>
        <function-ref name="get" scoped="" ref="0x4040e0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040e1d0"/>
        <function-ref name="set" scoped="" ref="0x4040e2b0"/>
        <function-ref name="clr" scoped="" ref="0x4040e390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404177d0" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404177d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404179a8"/>
        <function-ref name="isInput" scoped="" ref="0x40417a88"/>
        <function-ref name="toggle" scoped="" ref="0x40417b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40417c48"/>
        <function-ref name="get" scoped="" ref="0x40417d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40417e08"/>
        <function-ref name="set" scoped="" ref="0x40417ee8"/>
        <function-ref name="clr" scoped="" ref="0x40416010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404154f0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404154f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404156c8"/>
        <function-ref name="isInput" scoped="" ref="0x404157a8"/>
        <function-ref name="toggle" scoped="" ref="0x40415888"/>
        <function-ref name="isOutput" scoped="" ref="0x40415968"/>
        <function-ref name="get" scoped="" ref="0x40415a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40415b28"/>
        <function-ref name="set" scoped="" ref="0x40415c08"/>
        <function-ref name="clr" scoped="" ref="0x40415ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40bea7f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40bea7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bea9d0"/>
        <function-ref name="isInput" scoped="" ref="0x40beaab0"/>
        <function-ref name="toggle" scoped="" ref="0x40beab90"/>
        <function-ref name="isOutput" scoped="" ref="0x40beac70"/>
        <function-ref name="get" scoped="" ref="0x40bead50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40beae30"/>
        <function-ref name="set" scoped="" ref="0x40beaf10"/>
        <function-ref name="clr" scoped="" ref="0x40be9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40be8228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40be8228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40be8400"/>
        <function-ref name="isInput" scoped="" ref="0x40be84e0"/>
        <function-ref name="toggle" scoped="" ref="0x40be85c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40be86a0"/>
        <function-ref name="get" scoped="" ref="0x40be8780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40be8860"/>
        <function-ref name="set" scoped="" ref="0x40be8940"/>
        <function-ref name="clr" scoped="" ref="0x40be8a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40be6c08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40be6c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40be6de0"/>
        <function-ref name="isInput" scoped="" ref="0x40be6ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40be5010"/>
        <function-ref name="isOutput" scoped="" ref="0x40be50f0"/>
        <function-ref name="get" scoped="" ref="0x40be51d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40be52b0"/>
        <function-ref name="set" scoped="" ref="0x40be5390"/>
        <function-ref name="clr" scoped="" ref="0x40be5470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40be46c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40be46c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40be4898"/>
        <function-ref name="isInput" scoped="" ref="0x40be4978"/>
        <function-ref name="toggle" scoped="" ref="0x40be4a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40be4b38"/>
        <function-ref name="get" scoped="" ref="0x40be4c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40be4cf8"/>
        <function-ref name="set" scoped="" ref="0x40be4dd8"/>
        <function-ref name="clr" scoped="" ref="0x40be4eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40be20b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40be20b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40be2288"/>
        <function-ref name="isInput" scoped="" ref="0x40be2368"/>
        <function-ref name="toggle" scoped="" ref="0x40be2448"/>
        <function-ref name="isOutput" scoped="" ref="0x40be2528"/>
        <function-ref name="get" scoped="" ref="0x40be2608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40be26e8"/>
        <function-ref name="set" scoped="" ref="0x40be27c8"/>
        <function-ref name="clr" scoped="" ref="0x40be28a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40be1a88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40be1a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40be1c60"/>
        <function-ref name="isInput" scoped="" ref="0x40be1d40"/>
        <function-ref name="toggle" scoped="" ref="0x40be1e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40be1f00"/>
        <function-ref name="get" scoped="" ref="0x40be0010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40be00f0"/>
        <function-ref name="set" scoped="" ref="0x40be01d0"/>
        <function-ref name="clr" scoped="" ref="0x40be02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40bdf538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40bdf538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bdf710"/>
        <function-ref name="isInput" scoped="" ref="0x40bdf7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40bdf8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40bdf9b0"/>
        <function-ref name="get" scoped="" ref="0x40bdfa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bdfb70"/>
        <function-ref name="set" scoped="" ref="0x40bdfc50"/>
        <function-ref name="clr" scoped="" ref="0x40bdfd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c07010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c07010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c071e8"/>
        <function-ref name="isInput" scoped="" ref="0x40c072c8"/>
        <function-ref name="toggle" scoped="" ref="0x40c073a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40c07488"/>
        <function-ref name="get" scoped="" ref="0x40c07568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c07648"/>
        <function-ref name="set" scoped="" ref="0x40c07728"/>
        <function-ref name="clr" scoped="" ref="0x40c07808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4041aba8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4041aba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041ad80"/>
        <function-ref name="isInput" scoped="" ref="0x4041ae60"/>
        <function-ref name="toggle" scoped="" ref="0x40419010"/>
        <function-ref name="isOutput" scoped="" ref="0x404190f0"/>
        <function-ref name="get" scoped="" ref="0x404191d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404192b0"/>
        <function-ref name="set" scoped="" ref="0x40419390"/>
        <function-ref name="clr" scoped="" ref="0x40419470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40418890" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40418890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40418a68"/>
        <function-ref name="isInput" scoped="" ref="0x40418b48"/>
        <function-ref name="toggle" scoped="" ref="0x40418c28"/>
        <function-ref name="isOutput" scoped="" ref="0x40418d08"/>
        <function-ref name="get" scoped="" ref="0x40418de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40418ec8"/>
        <function-ref name="set" scoped="" ref="0x40421010"/>
        <function-ref name="clr" scoped="" ref="0x404210f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4041b870" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4041b870"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041ba48"/>
        <function-ref name="isInput" scoped="" ref="0x4041bb28"/>
        <function-ref name="toggle" scoped="" ref="0x4041bc08"/>
        <function-ref name="isOutput" scoped="" ref="0x4041bce8"/>
        <function-ref name="get" scoped="" ref="0x4041bdc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041bea8"/>
        <function-ref name="set" scoped="" ref="0x4041a010"/>
        <function-ref name="clr" scoped="" ref="0x4041a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404195d0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404195d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404197a8"/>
        <function-ref name="isInput" scoped="" ref="0x40419888"/>
        <function-ref name="toggle" scoped="" ref="0x40419968"/>
        <function-ref name="isOutput" scoped="" ref="0x40419a48"/>
        <function-ref name="get" scoped="" ref="0x40419b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40419c08"/>
        <function-ref name="set" scoped="" ref="0x40419ce8"/>
        <function-ref name="clr" scoped="" ref="0x40419dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40421250" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40421250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40421428"/>
        <function-ref name="isInput" scoped="" ref="0x40421508"/>
        <function-ref name="toggle" scoped="" ref="0x404215e8"/>
        <function-ref name="isOutput" scoped="" ref="0x404216c8"/>
        <function-ref name="get" scoped="" ref="0x404217a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40421888"/>
        <function-ref name="set" scoped="" ref="0x40421968"/>
        <function-ref name="clr" scoped="" ref="0x40421a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4041a250" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4041a250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041a428"/>
        <function-ref name="isInput" scoped="" ref="0x4041a508"/>
        <function-ref name="toggle" scoped="" ref="0x4041a5e8"/>
        <function-ref name="isOutput" scoped="" ref="0x4041a6c8"/>
        <function-ref name="get" scoped="" ref="0x4041a7a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041a888"/>
        <function-ref name="set" scoped="" ref="0x4041a968"/>
        <function-ref name="clr" scoped="" ref="0x4041aa48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40419f28" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40419f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40418110"/>
        <function-ref name="isInput" scoped="" ref="0x404181f0"/>
        <function-ref name="toggle" scoped="" ref="0x404182d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404183b0"/>
        <function-ref name="get" scoped="" ref="0x40418490"/>
        <function-ref name="makeOutput" scoped="" ref="0x40418570"/>
        <function-ref name="set" scoped="" ref="0x40418650"/>
        <function-ref name="clr" scoped="" ref="0x40418730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40421ba8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40421ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40421d80"/>
        <function-ref name="isInput" scoped="" ref="0x40421e60"/>
        <function-ref name="toggle" scoped="" ref="0x40420010"/>
        <function-ref name="isOutput" scoped="" ref="0x404200f0"/>
        <function-ref name="get" scoped="" ref="0x404201d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404202b0"/>
        <function-ref name="set" scoped="" ref="0x40420390"/>
        <function-ref name="clr" scoped="" ref="0x40420470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c0dd08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c0dd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c0dee0"/>
        <function-ref name="isInput" scoped="" ref="0x40c0a010"/>
        <function-ref name="toggle" scoped="" ref="0x40c0a0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c0a1d0"/>
        <function-ref name="get" scoped="" ref="0x40c0a2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c0a390"/>
        <function-ref name="set" scoped="" ref="0x40c0a470"/>
        <function-ref name="clr" scoped="" ref="0x40c0a550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c09718" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c09718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c098f0"/>
        <function-ref name="isInput" scoped="" ref="0x40c099d0"/>
        <function-ref name="toggle" scoped="" ref="0x40c09ab0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c09b90"/>
        <function-ref name="get" scoped="" ref="0x40c09c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c09d50"/>
        <function-ref name="set" scoped="" ref="0x40c09e30"/>
        <function-ref name="clr" scoped="" ref="0x40c09f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c310f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c310f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c312d0"/>
        <function-ref name="isInput" scoped="" ref="0x40c313b0"/>
        <function-ref name="toggle" scoped="" ref="0x40c31490"/>
        <function-ref name="isOutput" scoped="" ref="0x40c31570"/>
        <function-ref name="get" scoped="" ref="0x40c31650"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c31730"/>
        <function-ref name="set" scoped="" ref="0x40c31810"/>
        <function-ref name="clr" scoped="" ref="0x40c318f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c30ac8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c30ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c30ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40c30d80"/>
        <function-ref name="toggle" scoped="" ref="0x40c30e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40c2f010"/>
        <function-ref name="get" scoped="" ref="0x40c2f0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c2f1d0"/>
        <function-ref name="set" scoped="" ref="0x40c2f2b0"/>
        <function-ref name="clr" scoped="" ref="0x40c2f390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c2e570" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c2e570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c2e748"/>
        <function-ref name="isInput" scoped="" ref="0x40c2e828"/>
        <function-ref name="toggle" scoped="" ref="0x40c2e908"/>
        <function-ref name="isOutput" scoped="" ref="0x40c2e9e8"/>
        <function-ref name="get" scoped="" ref="0x40c2eac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c2eba8"/>
        <function-ref name="set" scoped="" ref="0x40c2ec88"/>
        <function-ref name="clr" scoped="" ref="0x40c2ed68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c2c010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c2c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c2c1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40c2c2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40c2c3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40c2c488"/>
        <function-ref name="get" scoped="" ref="0x40c2c568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c2c648"/>
        <function-ref name="set" scoped="" ref="0x40c2c728"/>
        <function-ref name="clr" scoped="" ref="0x40c2c808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c2b9e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c2b9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c2bbc0"/>
        <function-ref name="isInput" scoped="" ref="0x40c2bca0"/>
        <function-ref name="toggle" scoped="" ref="0x40c2bd80"/>
        <function-ref name="isOutput" scoped="" ref="0x40c2be60"/>
        <function-ref name="get" scoped="" ref="0x40c2a010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c2a0f0"/>
        <function-ref name="set" scoped="" ref="0x40c2a1d0"/>
        <function-ref name="clr" scoped="" ref="0x40c2a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c29538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c29538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c29710"/>
        <function-ref name="isInput" scoped="" ref="0x40c297f0"/>
        <function-ref name="toggle" scoped="" ref="0x40c298d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c299b0"/>
        <function-ref name="get" scoped="" ref="0x40c29a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c29b70"/>
        <function-ref name="set" scoped="" ref="0x40c29c50"/>
        <function-ref name="clr" scoped="" ref="0x40c29d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40425330" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40425330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40425508"/>
        <function-ref name="isInput" scoped="" ref="0x404255e8"/>
        <function-ref name="toggle" scoped="" ref="0x404256c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404257a8"/>
        <function-ref name="get" scoped="" ref="0x40425888"/>
        <function-ref name="makeOutput" scoped="" ref="0x40425968"/>
        <function-ref name="set" scoped="" ref="0x40425a48"/>
        <function-ref name="clr" scoped="" ref="0x40425b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40423030" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40423030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40423208"/>
        <function-ref name="isInput" scoped="" ref="0x404232e8"/>
        <function-ref name="toggle" scoped="" ref="0x404233c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404234a8"/>
        <function-ref name="get" scoped="" ref="0x40423588"/>
        <function-ref name="makeOutput" scoped="" ref="0x40423668"/>
        <function-ref name="set" scoped="" ref="0x40423748"/>
        <function-ref name="clr" scoped="" ref="0x40423828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40426010" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40426010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404261e8"/>
        <function-ref name="isInput" scoped="" ref="0x404262c8"/>
        <function-ref name="toggle" scoped="" ref="0x404263a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40426488"/>
        <function-ref name="get" scoped="" ref="0x40426568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40426648"/>
        <function-ref name="set" scoped="" ref="0x40426728"/>
        <function-ref name="clr" scoped="" ref="0x40426808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40425c88" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40425c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40425e60"/>
        <function-ref name="isInput" scoped="" ref="0x40424010"/>
        <function-ref name="toggle" scoped="" ref="0x404240f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404241d0"/>
        <function-ref name="get" scoped="" ref="0x404242b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40424390"/>
        <function-ref name="set" scoped="" ref="0x40424470"/>
        <function-ref name="clr" scoped="" ref="0x40424550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40423988" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40423988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40423b60"/>
        <function-ref name="isInput" scoped="" ref="0x40423c40"/>
        <function-ref name="toggle" scoped="" ref="0x40423d20"/>
        <function-ref name="isOutput" scoped="" ref="0x40423e00"/>
        <function-ref name="get" scoped="" ref="0x40423ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40422010"/>
        <function-ref name="set" scoped="" ref="0x404220f0"/>
        <function-ref name="clr" scoped="" ref="0x404221d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40426968" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40426968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40426b40"/>
        <function-ref name="isInput" scoped="" ref="0x40426c20"/>
        <function-ref name="toggle" scoped="" ref="0x40426d00"/>
        <function-ref name="isOutput" scoped="" ref="0x40426de0"/>
        <function-ref name="get" scoped="" ref="0x40426ec0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40425010"/>
        <function-ref name="set" scoped="" ref="0x404250f0"/>
        <function-ref name="clr" scoped="" ref="0x404251d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404246b0" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404246b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40424888"/>
        <function-ref name="isInput" scoped="" ref="0x40424968"/>
        <function-ref name="toggle" scoped="" ref="0x40424a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40424b28"/>
        <function-ref name="get" scoped="" ref="0x40424c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40424ce8"/>
        <function-ref name="set" scoped="" ref="0x40424dc8"/>
        <function-ref name="clr" scoped="" ref="0x40424ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40422330" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40422330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40422508"/>
        <function-ref name="isInput" scoped="" ref="0x404225e8"/>
        <function-ref name="toggle" scoped="" ref="0x404226c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404227a8"/>
        <function-ref name="get" scoped="" ref="0x40422888"/>
        <function-ref name="makeOutput" scoped="" ref="0x40422968"/>
        <function-ref name="set" scoped="" ref="0x40422a48"/>
        <function-ref name="clr" scoped="" ref="0x40422b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c572b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c572b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c57488"/>
        <function-ref name="isInput" scoped="" ref="0x40c57568"/>
        <function-ref name="toggle" scoped="" ref="0x40c57648"/>
        <function-ref name="isOutput" scoped="" ref="0x40c57728"/>
        <function-ref name="get" scoped="" ref="0x40c57808"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c578e8"/>
        <function-ref name="set" scoped="" ref="0x40c579c8"/>
        <function-ref name="clr" scoped="" ref="0x40c57aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c55c78" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c55c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c55e50"/>
        <function-ref name="isInput" scoped="" ref="0x40c54010"/>
        <function-ref name="toggle" scoped="" ref="0x40c540f0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c541d0"/>
        <function-ref name="get" scoped="" ref="0x40c542b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c54390"/>
        <function-ref name="set" scoped="" ref="0x40c54470"/>
        <function-ref name="clr" scoped="" ref="0x40c54550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c53718" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c53718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c538f0"/>
        <function-ref name="isInput" scoped="" ref="0x40c539d0"/>
        <function-ref name="toggle" scoped="" ref="0x40c53ab0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c53b90"/>
        <function-ref name="get" scoped="" ref="0x40c53c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c53d50"/>
        <function-ref name="set" scoped="" ref="0x40c53e30"/>
        <function-ref name="clr" scoped="" ref="0x40c53f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c510f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c510f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c512d0"/>
        <function-ref name="isInput" scoped="" ref="0x40c513b0"/>
        <function-ref name="toggle" scoped="" ref="0x40c51490"/>
        <function-ref name="isOutput" scoped="" ref="0x40c51570"/>
        <function-ref name="get" scoped="" ref="0x40c51650"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c51730"/>
        <function-ref name="set" scoped="" ref="0x40c51810"/>
        <function-ref name="clr" scoped="" ref="0x40c518f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c50ac8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c50ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c50ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40c50d80"/>
        <function-ref name="toggle" scoped="" ref="0x40c50e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40c4f010"/>
        <function-ref name="get" scoped="" ref="0x40c4f0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c4f1d0"/>
        <function-ref name="set" scoped="" ref="0x40c4f2b0"/>
        <function-ref name="clr" scoped="" ref="0x40c4f390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c4e570" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c4e570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c4e748"/>
        <function-ref name="isInput" scoped="" ref="0x40c4e828"/>
        <function-ref name="toggle" scoped="" ref="0x40c4e908"/>
        <function-ref name="isOutput" scoped="" ref="0x40c4e9e8"/>
        <function-ref name="get" scoped="" ref="0x40c4eac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c4eba8"/>
        <function-ref name="set" scoped="" ref="0x40c4ec88"/>
        <function-ref name="clr" scoped="" ref="0x40c4ed68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c4c010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c4c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c4c1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40c4c2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40c4c3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40c4c488"/>
        <function-ref name="get" scoped="" ref="0x40c4c568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c4c648"/>
        <function-ref name="set" scoped="" ref="0x40c4c728"/>
        <function-ref name="clr" scoped="" ref="0x40c4c808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c4b9e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c4b9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c4bbc0"/>
        <function-ref name="isInput" scoped="" ref="0x40c4bca0"/>
        <function-ref name="toggle" scoped="" ref="0x40c4bd80"/>
        <function-ref name="isOutput" scoped="" ref="0x40c4be60"/>
        <function-ref name="get" scoped="" ref="0x40c4a010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c4a0f0"/>
        <function-ref name="set" scoped="" ref="0x40c4a1d0"/>
        <function-ref name="clr" scoped="" ref="0x40c4a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40428790" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40428790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40428968"/>
        <function-ref name="isInput" scoped="" ref="0x40428a48"/>
        <function-ref name="toggle" scoped="" ref="0x40428b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40428c08"/>
        <function-ref name="get" scoped="" ref="0x40428ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40428dc8"/>
        <function-ref name="set" scoped="" ref="0x40428ea8"/>
        <function-ref name="clr" scoped="" ref="0x40427010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4042f4f0" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4042f4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042f6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4042f7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4042f888"/>
        <function-ref name="isOutput" scoped="" ref="0x4042f968"/>
        <function-ref name="get" scoped="" ref="0x4042fa48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042fb28"/>
        <function-ref name="set" scoped="" ref="0x4042fc08"/>
        <function-ref name="clr" scoped="" ref="0x4042fce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40429438" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40429438"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40429610"/>
        <function-ref name="isInput" scoped="" ref="0x404296f0"/>
        <function-ref name="toggle" scoped="" ref="0x404297d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404298b0"/>
        <function-ref name="get" scoped="" ref="0x40429990"/>
        <function-ref name="makeOutput" scoped="" ref="0x40429a70"/>
        <function-ref name="set" scoped="" ref="0x40429b50"/>
        <function-ref name="clr" scoped="" ref="0x40429c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40427170" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40427170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40427348"/>
        <function-ref name="isInput" scoped="" ref="0x40427428"/>
        <function-ref name="toggle" scoped="" ref="0x40427508"/>
        <function-ref name="isOutput" scoped="" ref="0x404275e8"/>
        <function-ref name="get" scoped="" ref="0x404276c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404277a8"/>
        <function-ref name="set" scoped="" ref="0x40427888"/>
        <function-ref name="clr" scoped="" ref="0x40427968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4042fe48" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4042fe48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042e050"/>
        <function-ref name="isInput" scoped="" ref="0x4042e130"/>
        <function-ref name="toggle" scoped="" ref="0x4042e210"/>
        <function-ref name="isOutput" scoped="" ref="0x4042e2f0"/>
        <function-ref name="get" scoped="" ref="0x4042e3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042e4b0"/>
        <function-ref name="set" scoped="" ref="0x4042e590"/>
        <function-ref name="clr" scoped="" ref="0x4042e670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40429d90" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40429d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40428010"/>
        <function-ref name="isInput" scoped="" ref="0x404280f0"/>
        <function-ref name="toggle" scoped="" ref="0x404281d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404282b0"/>
        <function-ref name="get" scoped="" ref="0x40428390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40428470"/>
        <function-ref name="set" scoped="" ref="0x40428550"/>
        <function-ref name="clr" scoped="" ref="0x40428630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40427ac8" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40427ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40427ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40427d80"/>
        <function-ref name="toggle" scoped="" ref="0x40427e60"/>
        <function-ref name="isOutput" scoped="" ref="0x4042f010"/>
        <function-ref name="get" scoped="" ref="0x4042f0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042f1d0"/>
        <function-ref name="set" scoped="" ref="0x4042f2b0"/>
        <function-ref name="clr" scoped="" ref="0x4042f390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4042e7d0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4042e7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042e9a8"/>
        <function-ref name="isInput" scoped="" ref="0x4042ea88"/>
        <function-ref name="toggle" scoped="" ref="0x4042eb68"/>
        <function-ref name="isOutput" scoped="" ref="0x4042ec48"/>
        <function-ref name="get" scoped="" ref="0x4042ed28"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042ee08"/>
        <function-ref name="set" scoped="" ref="0x4042eee8"/>
        <function-ref name="clr" scoped="" ref="0x4042d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c7c7f8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c7c7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c7c9d0"/>
        <function-ref name="isInput" scoped="" ref="0x40c7cab0"/>
        <function-ref name="toggle" scoped="" ref="0x40c7cb90"/>
        <function-ref name="isOutput" scoped="" ref="0x40c7cc70"/>
        <function-ref name="get" scoped="" ref="0x40c7cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c7ce30"/>
        <function-ref name="set" scoped="" ref="0x40c7cf10"/>
        <function-ref name="clr" scoped="" ref="0x40c7b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c7a228" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c7a228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c7a400"/>
        <function-ref name="isInput" scoped="" ref="0x40c7a4e0"/>
        <function-ref name="toggle" scoped="" ref="0x40c7a5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c7a6a0"/>
        <function-ref name="get" scoped="" ref="0x40c7a780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c7a860"/>
        <function-ref name="set" scoped="" ref="0x40c7a940"/>
        <function-ref name="clr" scoped="" ref="0x40c7aa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c79c08" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c79c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c79de0"/>
        <function-ref name="isInput" scoped="" ref="0x40c79ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40c78010"/>
        <function-ref name="isOutput" scoped="" ref="0x40c780f0"/>
        <function-ref name="get" scoped="" ref="0x40c781d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c782b0"/>
        <function-ref name="set" scoped="" ref="0x40c78390"/>
        <function-ref name="clr" scoped="" ref="0x40c78470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c776c0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c776c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c77898"/>
        <function-ref name="isInput" scoped="" ref="0x40c77978"/>
        <function-ref name="toggle" scoped="" ref="0x40c77a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40c77b38"/>
        <function-ref name="get" scoped="" ref="0x40c77c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c77cf8"/>
        <function-ref name="set" scoped="" ref="0x40c77dd8"/>
        <function-ref name="clr" scoped="" ref="0x40c77eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c750b0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c750b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c75288"/>
        <function-ref name="isInput" scoped="" ref="0x40c75368"/>
        <function-ref name="toggle" scoped="" ref="0x40c75448"/>
        <function-ref name="isOutput" scoped="" ref="0x40c75528"/>
        <function-ref name="get" scoped="" ref="0x40c75608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c756e8"/>
        <function-ref name="set" scoped="" ref="0x40c757c8"/>
        <function-ref name="clr" scoped="" ref="0x40c758a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c74a88" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c74a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c74c60"/>
        <function-ref name="isInput" scoped="" ref="0x40c74d40"/>
        <function-ref name="toggle" scoped="" ref="0x40c74e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40c74f00"/>
        <function-ref name="get" scoped="" ref="0x40c73010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c730f0"/>
        <function-ref name="set" scoped="" ref="0x40c731d0"/>
        <function-ref name="clr" scoped="" ref="0x40c732b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c9e538" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c9e538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c9e710"/>
        <function-ref name="isInput" scoped="" ref="0x40c9e7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40c9e8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c9e9b0"/>
        <function-ref name="get" scoped="" ref="0x40c9ea90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c9eb70"/>
        <function-ref name="set" scoped="" ref="0x40c9ec50"/>
        <function-ref name="clr" scoped="" ref="0x40c9ed30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c9c010" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c9c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c9c1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40c9c2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40c9c3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40c9c488"/>
        <function-ref name="get" scoped="" ref="0x40c9c568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c9c648"/>
        <function-ref name="set" scoped="" ref="0x40c9c728"/>
        <function-ref name="clr" scoped="" ref="0x40c9c808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40433010" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40433010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404331e8"/>
        <function-ref name="isInput" scoped="" ref="0x404332c8"/>
        <function-ref name="toggle" scoped="" ref="0x404333a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40433488"/>
        <function-ref name="get" scoped="" ref="0x40433568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40433648"/>
        <function-ref name="set" scoped="" ref="0x40433728"/>
        <function-ref name="clr" scoped="" ref="0x40433808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4043e3b0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4043e3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043e588"/>
        <function-ref name="isInput" scoped="" ref="0x4043e668"/>
        <function-ref name="toggle" scoped="" ref="0x4043e748"/>
        <function-ref name="isOutput" scoped="" ref="0x4043e828"/>
        <function-ref name="get" scoped="" ref="0x4043e908"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043e9e8"/>
        <function-ref name="set" scoped="" ref="0x4043eac8"/>
        <function-ref name="clr" scoped="" ref="0x4043eba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4043c718" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4043c718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043c8f0"/>
        <function-ref name="isInput" scoped="" ref="0x4043c9d0"/>
        <function-ref name="toggle" scoped="" ref="0x4043cab0"/>
        <function-ref name="isOutput" scoped="" ref="0x4043cb90"/>
        <function-ref name="get" scoped="" ref="0x4043cc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043cd50"/>
        <function-ref name="set" scoped="" ref="0x4043ce30"/>
        <function-ref name="clr" scoped="" ref="0x4043cf10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40446a88" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40446a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40446c60"/>
        <function-ref name="isInput" scoped="" ref="0x40446d40"/>
        <function-ref name="toggle" scoped="" ref="0x40446e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40446f00"/>
        <function-ref name="get" scoped="" ref="0x40444010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404440f0"/>
        <function-ref name="set" scoped="" ref="0x404441d0"/>
        <function-ref name="clr" scoped="" ref="0x404442b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40443e18" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40443e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40442010"/>
        <function-ref name="isInput" scoped="" ref="0x404420f0"/>
        <function-ref name="toggle" scoped="" ref="0x404421d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404422b0"/>
        <function-ref name="get" scoped="" ref="0x40442390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40442470"/>
        <function-ref name="set" scoped="" ref="0x40442550"/>
        <function-ref name="clr" scoped="" ref="0x40442630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4044c228" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4044c228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044c400"/>
        <function-ref name="isInput" scoped="" ref="0x4044c4e0"/>
        <function-ref name="toggle" scoped="" ref="0x4044c5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4044c6a0"/>
        <function-ref name="get" scoped="" ref="0x4044c780"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044c860"/>
        <function-ref name="set" scoped="" ref="0x4044c940"/>
        <function-ref name="clr" scoped="" ref="0x4044ca20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404496c0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404496c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40449898"/>
        <function-ref name="isInput" scoped="" ref="0x40449978"/>
        <function-ref name="toggle" scoped="" ref="0x40449a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40449b38"/>
        <function-ref name="get" scoped="" ref="0x40449c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40449cf8"/>
        <function-ref name="set" scoped="" ref="0x40449dd8"/>
        <function-ref name="clr" scoped="" ref="0x40449eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40453a30" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40453a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40453c08"/>
        <function-ref name="isInput" scoped="" ref="0x40453ce8"/>
        <function-ref name="toggle" scoped="" ref="0x40453dc8"/>
        <function-ref name="isOutput" scoped="" ref="0x40453ea8"/>
        <function-ref name="get" scoped="" ref="0x40452010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404520f0"/>
        <function-ref name="set" scoped="" ref="0x404521d0"/>
        <function-ref name="clr" scoped="" ref="0x404522b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40451d38" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40451d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40451f10"/>
        <function-ref name="isInput" scoped="" ref="0x40450010"/>
        <function-ref name="toggle" scoped="" ref="0x404500f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404501d0"/>
        <function-ref name="get" scoped="" ref="0x404502b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40450390"/>
        <function-ref name="set" scoped="" ref="0x40450470"/>
        <function-ref name="clr" scoped="" ref="0x40450550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40459010" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40459010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404591e8"/>
        <function-ref name="isInput" scoped="" ref="0x404592c8"/>
        <function-ref name="toggle" scoped="" ref="0x404593a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40459488"/>
        <function-ref name="get" scoped="" ref="0x40459568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40459648"/>
        <function-ref name="set" scoped="" ref="0x40459728"/>
        <function-ref name="clr" scoped="" ref="0x40459808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404572b0" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404572b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40457488"/>
        <function-ref name="isInput" scoped="" ref="0x40457568"/>
        <function-ref name="toggle" scoped="" ref="0x40457648"/>
        <function-ref name="isOutput" scoped="" ref="0x40457728"/>
        <function-ref name="get" scoped="" ref="0x40457808"/>
        <function-ref name="makeOutput" scoped="" ref="0x404578e8"/>
        <function-ref name="set" scoped="" ref="0x404579c8"/>
        <function-ref name="clr" scoped="" ref="0x40457aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40454538" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40454538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40454710"/>
        <function-ref name="isInput" scoped="" ref="0x404547f0"/>
        <function-ref name="toggle" scoped="" ref="0x404548d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404549b0"/>
        <function-ref name="get" scoped="" ref="0x40454a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40454b70"/>
        <function-ref name="set" scoped="" ref="0x40454c50"/>
        <function-ref name="clr" scoped="" ref="0x40454d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4045e7f8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4045e7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045e9d0"/>
        <function-ref name="isInput" scoped="" ref="0x4045eab0"/>
        <function-ref name="toggle" scoped="" ref="0x4045eb90"/>
        <function-ref name="isOutput" scoped="" ref="0x4045ec70"/>
        <function-ref name="get" scoped="" ref="0x4045ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045ee30"/>
        <function-ref name="set" scoped="" ref="0x4045ef10"/>
        <function-ref name="clr" scoped="" ref="0x4045d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40479010" loc="27:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40479010"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402b80e0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402b80e0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404791e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x40479338" loc="28:/opt/tinyos-2.x/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40479338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40479510"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x404795f0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x404796d0"/>
        <function-ref name="actualMicro" scoped="" ref="0x404797b0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40479890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x4048ee90" loc="49:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x4048ee90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4048d080"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x4048e2a8" loc="46:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x4048e2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x4048e480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x4048eb20" loc="48:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x4048eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4048ecf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x4048e5f0" loc="47:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x4048e5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4048e7c8"/>
        <function-ref name="taskLoop" scoped="" ref="0x4048e8a8"/>
        <function-ref name="runNextTask" scoped="" ref="0x4048e988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x402bb100" loc="37:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x402bb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x402bb2d8"/>
        <function-ref name="runTask" scoped="" ref="0x402bb3b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x402bacc0" loc="36:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x402bacc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x402bae98"/>
        <function-ref name="taskLoop" scoped="" ref="0x402b6010"/>
        <function-ref name="runNextTask" scoped="" ref="0x402b60f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x4030e838" loc="45:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x4030e838"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4030ea10"/>
        <function-ref name="runTask" scoped="" ref="0x4030eaf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x40311d50" loc="46:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x40311d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x40311f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x4030e0a0" loc="44:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x4030e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4030e278"/>
        <function-ref name="taskLoop" scoped="" ref="0x4030e358"/>
        <function-ref name="runNextTask" scoped="" ref="0x4030e438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x40322df0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40322df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x4031f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x4031b488" loc="42:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x4031b488"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x4031b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x4031e9d8" loc="43:/opt/tinyos-2.x/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x4031e9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x4031ebb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4046e598" loc="49:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4046e598"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4046e770"/>
        <function-ref name="stopDone" scoped="" ref="0x4046e850"/>
        <function-ref name="start" scoped="" ref="0x4046e930"/>
        <function-ref name="stop" scoped="" ref="0x4046ea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4046ede8" loc="51:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4046ede8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40494010"/>
        <function-ref name="getPayload" scoped="" ref="0x404940f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x404941d0"/>
        <function-ref name="cancel" scoped="" ref="0x404942b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40494390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40494f00" loc="53:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40494f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x404920f0"/>
        <function-ref name="receive" scoped="" ref="0x404921d0"/>
        <function-ref name="getPayload" scoped="" ref="0x404922b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x404997f0" loc="55:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x404997f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x404999c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40499aa8"/>
        <function-ref name="getPayload" scoped="" ref="0x40499b88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40499c68"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40499d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40494768" loc="52:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40494768"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x40494940"/>
        <function-ref name="receive" scoped="" ref="0x40494a20"/>
        <function-ref name="getPayload" scoped="" ref="0x40494b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40495d60" loc="57:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40495d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40490010"/>
        <function-ref name="noAck" scoped="" ref="0x404900f0"/>
        <function-ref name="wasAcked" scoped="" ref="0x404901d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40499e98" loc="56:/opt/tinyos-2.x/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40499e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x404910c0"/>
        <function-ref name="source" scoped="" ref="0x404911a0"/>
        <function-ref name="address" scoped="" ref="0x40491280"/>
        <function-ref name="destination" scoped="" ref="0x40491360"/>
        <function-ref name="setSource" scoped="" ref="0x40491440"/>
        <function-ref name="setDestination" scoped="" ref="0x40491520"/>
        <function-ref name="type" scoped="" ref="0x40491600"/>
        <function-ref name="setType" scoped="" ref="0x404916e0"/>
        <function-ref name="isForMe" scoped="" ref="0x404917c0"/>
        <function-ref name="setGroup" scoped="" ref="0x404918a0"/>
        <function-ref name="localGroup" scoped="" ref="0x40491980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4049fe78" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4049fe78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4049e070"/>
        <function-ref name="stopDone" scoped="" ref="0x4049e150"/>
        <function-ref name="start" scoped="" ref="0x4049e230"/>
        <function-ref name="stop" scoped="" ref="0x4049e310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x404a9c38" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x404a9c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403567d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x404a9e10"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x404a9ef0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x404a4010"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x404a40f0"/>
        <function-ref name="setCca" scoped="" ref="0x404a41d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x404a42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4049e6e8" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4049e6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403567d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4049e8c0"/>
        <function-ref name="getPayload" scoped="" ref="0x4049e9a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4049ea80"/>
        <function-ref name="cancel" scoped="" ref="0x4049eb60"/>
        <function-ref name="sendDone" scoped="" ref="0x4049ec40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x4049d7c0" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x4049d7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403567d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x4049d998"/>
        <function-ref name="receive" scoped="" ref="0x4049da78"/>
        <function-ref name="getPayload" scoped="" ref="0x4049db58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4049c938" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4049c938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4049cb10"/>
        <function-ref name="payloadLength" scoped="" ref="0x4049cbf0"/>
        <function-ref name="getPayload" scoped="" ref="0x4049ccd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4049cdb0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4049ce90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x404a2b68" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x404a2b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x404a2d40"/>
        <function-ref name="getRssi" scoped="" ref="0x404a2e20"/>
        <function-ref name="getPower" scoped="" ref="0x404a2f00"/>
        <function-ref name="getLqi" scoped="" ref="0x404a5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x404a1040" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x404a1040"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x404a1218"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x404a12f8"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x404a13d8"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x404a14b8"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x404a1598"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x404a1678"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x404a1758"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x404a1838"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x404a1918"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x404a19f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4049d028" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4049d028"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403567d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x4049d200"/>
        <function-ref name="receive" scoped="" ref="0x4049d2e0"/>
        <function-ref name="getPayload" scoped="" ref="0x4049d3c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x404a5168" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x404a5168"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x404a5340"/>
        <function-ref name="noAck" scoped="" ref="0x404a5420"/>
        <function-ref name="wasAcked" scoped="" ref="0x404a5500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x404b7578" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x404b7578"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x404b7750"/>
        <function-ref name="setRetries" scoped="" ref="0x404b7830"/>
        <function-ref name="getRetries" scoped="" ref="0x404b7910"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x404b79f0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x404b7ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4049dca8" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4049dca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4049de80"/>
        <function-ref name="source" scoped="" ref="0x4049c010"/>
        <function-ref name="address" scoped="" ref="0x4049c0f0"/>
        <function-ref name="destination" scoped="" ref="0x4049c1d0"/>
        <function-ref name="setSource" scoped="" ref="0x4049c2b0"/>
        <function-ref name="setDestination" scoped="" ref="0x4049c390"/>
        <function-ref name="type" scoped="" ref="0x4049c470"/>
        <function-ref name="setType" scoped="" ref="0x4049c550"/>
        <function-ref name="isForMe" scoped="" ref="0x4049c630"/>
        <function-ref name="setGroup" scoped="" ref="0x4049c710"/>
        <function-ref name="localGroup" scoped="" ref="0x4049c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x404ba828" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x404ba828"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404baa00"/>
        <function-ref name="getPayload" scoped="" ref="0x404baae0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x404babc0"/>
        <function-ref name="cancel" scoped="" ref="0x404baca0"/>
        <function-ref name="sendDone" scoped="" ref="0x404bad80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x404baef8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x404baef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x404bf0e0"/>
        <function-ref name="receive" scoped="" ref="0x404bf1c0"/>
        <function-ref name="getPayload" scoped="" ref="0x404bf2a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x404cede0" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x404cede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x404be010"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x404be0f0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x404be1d0"/>
        <function-ref name="syncDone" scoped="" ref="0x404be2b0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x404be390"/>
        <function-ref name="setChannel" scoped="" ref="0x404be470"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x404be550"/>
        <function-ref name="setPanAddr" scoped="" ref="0x404be630"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x404be710"/>
        <function-ref name="getShortAddr" scoped="" ref="0x404be7f0"/>
        <function-ref name="sync" scoped="" ref="0x404be8d0"/>
        <function-ref name="getChannel" scoped="" ref="0x404be9b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x404bea90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x404b5488" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x404b5488"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403567d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404b5660"/>
        <function-ref name="getPayload" scoped="" ref="0x404b5740"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x404b5820"/>
        <function-ref name="cancel" scoped="" ref="0x404b5900"/>
        <function-ref name="sendDone" scoped="" ref="0x404b59e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x404b45d0" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x404b45d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403567d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x404b47a8"/>
        <function-ref name="receive" scoped="" ref="0x404b4888"/>
        <function-ref name="getPayload" scoped="" ref="0x404b4968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x404b3778" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x404b3778"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x404b3950"/>
        <function-ref name="payloadLength" scoped="" ref="0x404b3a30"/>
        <function-ref name="getPayload" scoped="" ref="0x404b3b10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x404b3bf0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x404b3cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x404bf3f0" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x404bf3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x404bf5c8"/>
        <function-ref name="getRssi" scoped="" ref="0x404bf6a8"/>
        <function-ref name="getPower" scoped="" ref="0x404bf788"/>
        <function-ref name="getLqi" scoped="" ref="0x404bf868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x404c5360" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x404c5360"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x404c5538"/>
        <function-ref name="getMetadata" scoped="" ref="0x404c5618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x404b5db8" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x404b5db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403567d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x404b4010"/>
        <function-ref name="receive" scoped="" ref="0x404b40f0"/>
        <function-ref name="getPayload" scoped="" ref="0x404b41d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x404caab8" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x404caab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x404cac90"/>
        <function-ref name="changed" scoped="" ref="0x404cad70"/>
        <function-ref name="amGroup" scoped="" ref="0x404cae50"/>
        <function-ref name="setAddress" scoped="" ref="0x404cc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x404b4ab8" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x404b4ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x404b4c90"/>
        <function-ref name="source" scoped="" ref="0x404b4d70"/>
        <function-ref name="address" scoped="" ref="0x404b4e50"/>
        <function-ref name="destination" scoped="" ref="0x404b3010"/>
        <function-ref name="setSource" scoped="" ref="0x404b30f0"/>
        <function-ref name="setDestination" scoped="" ref="0x404b31d0"/>
        <function-ref name="type" scoped="" ref="0x404b32b0"/>
        <function-ref name="setType" scoped="" ref="0x404b3390"/>
        <function-ref name="isForMe" scoped="" ref="0x404b3470"/>
        <function-ref name="setGroup" scoped="" ref="0x404b3550"/>
        <function-ref name="localGroup" scoped="" ref="0x404b3630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x404ff0c8" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x404ff0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x404ff2a0"/>
        <function-ref name="stopDone" scoped="" ref="0x404ff380"/>
        <function-ref name="start" scoped="" ref="0x404ff460"/>
        <function-ref name="stop" scoped="" ref="0x404ff540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x404fe5d0" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x404fe5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403567d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x404fe7a8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x404fe888"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x404fe968"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x404fea48"/>
        <function-ref name="setCca" scoped="" ref="0x404feb28"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x404fec08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x404ff6a8" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x404ff6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404ff880"/>
        <function-ref name="getPayload" scoped="" ref="0x404ff960"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x404ffa40"/>
        <function-ref name="cancel" scoped="" ref="0x404ffb20"/>
        <function-ref name="sendDone" scoped="" ref="0x404ffc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x404ffd68" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x404ffd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x404fe010"/>
        <function-ref name="receive" scoped="" ref="0x404fe0f0"/>
        <function-ref name="getPayload" scoped="" ref="0x404fe1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x404fcc30" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x404fcc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x404fce08"/>
        <function-ref name="stopDone" scoped="" ref="0x404fcee8"/>
        <function-ref name="start" scoped="" ref="0x404f9010"/>
        <function-ref name="stop" scoped="" ref="0x404f90f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x404f9bb0" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x404f9bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403567d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x404f9d88"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x404f9e68"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x40506010"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x405060f0"/>
        <function-ref name="setCca" scoped="" ref="0x405061d0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x405062b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x405011b0" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x405011b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x40501388"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x40501468"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x40501548"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x40501628"/>
        <function-ref name="setCca" scoped="" ref="0x40501708"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x405017e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x40512a80" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40512a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40512c58"/>
        <function-ref name="getRssi" scoped="" ref="0x40512d38"/>
        <function-ref name="getPower" scoped="" ref="0x40512e18"/>
        <function-ref name="getLqi" scoped="" ref="0x40512ef8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x405149f0" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x405149f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40514bc8"/>
        <function-ref name="cancel" scoped="" ref="0x40514ca8"/>
        <function-ref name="modify" scoped="" ref="0x40514d88"/>
        <function-ref name="sendDone" scoped="" ref="0x40514e68"/>
        <function-ref name="resend" scoped="" ref="0x40501010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x404f9258" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x404f9258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404f9430"/>
        <function-ref name="getPayload" scoped="" ref="0x404f9510"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x404f95f0"/>
        <function-ref name="cancel" scoped="" ref="0x404f96d0"/>
        <function-ref name="sendDone" scoped="" ref="0x404f97b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40511dd0" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40511dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x4050b010"/>
        <function-ref name="rand32" scoped="" ref="0x4050b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x405091c8" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x405091c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x405093a0"/>
        <function-ref name="stop" scoped="" ref="0x40509480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40510088" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40510088"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x405102e0"/>
        <function-ref name="getMetadata" scoped="" ref="0x405103c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x40504010" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x40504010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x405041e8"/>
        <function-ref name="rfOff" scoped="" ref="0x405042c8"/>
        <function-ref name="rxOn" scoped="" ref="0x405043a8"/>
        <function-ref name="startVReg" scoped="" ref="0x40504488"/>
        <function-ref name="stopVReg" scoped="" ref="0x40504568"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x40504648"/>
        <function-ref name="stopOscillator" scoped="" ref="0x40504728"/>
        <function-ref name="startVRegDone" scoped="" ref="0x40504808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4050be60" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4050be60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40512050"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40512130"/>
        <function-ref name="led1On" scoped="" ref="0x40512210"/>
        <function-ref name="led1Toggle" scoped="" ref="0x405122f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x405123d0"/>
        <function-ref name="get" scoped="" ref="0x405124b0"/>
        <function-ref name="led1Off" scoped="" ref="0x40512590"/>
        <function-ref name="led2Off" scoped="" ref="0x40512910"/>
        <function-ref name="set" scoped="" ref="0x40512670"/>
        <function-ref name="led0On" scoped="" ref="0x40512750"/>
        <function-ref name="led2On" scoped="" ref="0x40512830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40502918" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40502918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40502af0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40502bd0"/>
        <function-ref name="request" scoped="" ref="0x40502cb0"/>
        <function-ref name="granted" scoped="" ref="0x40502d90"/>
        <function-ref name="isOwner" scoped="" ref="0x40502e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x4051ab70" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0x4051ab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x4051ad48"/>
        <function-ref name="toIdle" scoped="" ref="0x4051ae28"/>
        <function-ref name="isState" scoped="" ref="0x4051af08"/>
        <function-ref name="isIdle" scoped="" ref="0x4050f010"/>
        <function-ref name="requestState" scoped="" ref="0x4050f0f0"/>
        <function-ref name="forceState" scoped="" ref="0x4050f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x4050b260" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4050b260"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4050b438"/>
        <function-ref name="source" scoped="" ref="0x4050b518"/>
        <function-ref name="address" scoped="" ref="0x4050b5f8"/>
        <function-ref name="destination" scoped="" ref="0x4050b6d8"/>
        <function-ref name="setSource" scoped="" ref="0x4050b7b8"/>
        <function-ref name="setDestination" scoped="" ref="0x4050b898"/>
        <function-ref name="type" scoped="" ref="0x4050b978"/>
        <function-ref name="setType" scoped="" ref="0x4050ba58"/>
        <function-ref name="isForMe" scoped="" ref="0x4050bb38"/>
        <function-ref name="setGroup" scoped="" ref="0x4050bc18"/>
        <function-ref name="localGroup" scoped="" ref="0x4050bcf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x40518618" loc="78:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0x40518618"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405187f0"/>
        <function-ref name="runTask" scoped="" ref="0x405188d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x4050eeb8" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0x4050eeb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405180c0"/>
        <function-ref name="runTask" scoped="" ref="0x405181a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x4050e568" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0x4050e568"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4050e740"/>
        <function-ref name="runTask" scoped="" ref="0x4050e820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x40547a68" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x40547a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x40547c40"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x40547d20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x40547e00"/>
        <function-ref name="syncDone" scoped="" ref="0x40547ee0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40546010"/>
        <function-ref name="setChannel" scoped="" ref="0x405460f0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x405461d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x405462b0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x40546390"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40546470"/>
        <function-ref name="sync" scoped="" ref="0x40546550"/>
        <function-ref name="getChannel" scoped="" ref="0x40546630"/>
        <function-ref name="getPanAddr" scoped="" ref="0x40546710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x40544070" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x40544070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40544698"/>
        <function-ref name="readDone" scoped="" ref="0x40544878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x40546900" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x40546900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x40546ad8"/>
        <function-ref name="rfOff" scoped="" ref="0x40546bb8"/>
        <function-ref name="rxOn" scoped="" ref="0x40546c98"/>
        <function-ref name="startVReg" scoped="" ref="0x40546d78"/>
        <function-ref name="stopVReg" scoped="" ref="0x40546e58"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x40545010"/>
        <function-ref name="stopOscillator" scoped="" ref="0x405450f0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x405451d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x405473a0" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x405473a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40547578"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40547658"/>
        <function-ref name="request" scoped="" ref="0x40547738"/>
        <function-ref name="granted" scoped="" ref="0x40547818"/>
        <function-ref name="isOwner" scoped="" ref="0x405478f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x4054da88" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x4054da88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x4054dc60"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x4054dd40"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x4054de20"/>
        <function-ref name="syncDone" scoped="" ref="0x4054df00"/>
        <function-ref name="setShortAddr" scoped="" ref="0x4054c010"/>
        <function-ref name="setChannel" scoped="" ref="0x4054c0f0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x4054c1d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x4054c2b0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x4054c390"/>
        <function-ref name="getShortAddr" scoped="" ref="0x4054c470"/>
        <function-ref name="sync" scoped="" ref="0x4054c550"/>
        <function-ref name="getChannel" scoped="" ref="0x4054c630"/>
        <function-ref name="getPanAddr" scoped="" ref="0x4054c710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x4055d918" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x4055d918"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4055daf0"/>
        <function-ref name="write" scoped="" ref="0x4055dbd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x405549d0" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0x405549d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402ec820"/>
            <typename><typedef-ref name="T32khz" ref="0x402ec9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40032340"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40549de0"/>
        <function-ref name="fired" scoped="" ref="0x405496a0"/>
        <function-ref name="startAt" scoped="" ref="0x40549aa0"/>
        <function-ref name="isRunning" scoped="" ref="0x405498a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40548010"/>
        <function-ref name="start" scoped="" ref="0x40549200"/>
        <function-ref name="stop" scoped="" ref="0x405494a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x4055d070" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x4055d070"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4055d248"/>
        <function-ref name="write" scoped="" ref="0x4055d328"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x40548b90" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x40548b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40548d68"/>
        <function-ref name="isInput" scoped="" ref="0x40548e48"/>
        <function-ref name="toggle" scoped="" ref="0x40548f28"/>
        <function-ref name="isOutput" scoped="" ref="0x40552018"/>
        <function-ref name="get" scoped="" ref="0x405520f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405521d8"/>
        <function-ref name="set" scoped="" ref="0x405522b8"/>
        <function-ref name="clr" scoped="" ref="0x40552398"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x4054b408" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x4054b408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4054ba30"/>
        <function-ref name="readDone" scoped="" ref="0x4054bc10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x4056e5a8" loc="113:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone" scoped="" ref="0x4056e5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4056e780"/>
        <function-ref name="runTask" scoped="" ref="0x4056e860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x4055dd68" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x4055dd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4055a010"/>
        <function-ref name="write" scoped="" ref="0x4055a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x40558798" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40558798"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40558970"/>
        <function-ref name="write" scoped="" ref="0x40558a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x40550188" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40550188"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40550360"/>
        <function-ref name="changed" scoped="" ref="0x40550440"/>
        <function-ref name="amGroup" scoped="" ref="0x40550520"/>
        <function-ref name="setAddress" scoped="" ref="0x40550600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x40548200" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x40548200"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405483d8"/>
        <function-ref name="isInput" scoped="" ref="0x405484b8"/>
        <function-ref name="toggle" scoped="" ref="0x40548598"/>
        <function-ref name="isOutput" scoped="" ref="0x40548678"/>
        <function-ref name="get" scoped="" ref="0x40548758"/>
        <function-ref name="makeOutput" scoped="" ref="0x40548838"/>
        <function-ref name="set" scoped="" ref="0x40548918"/>
        <function-ref name="clr" scoped="" ref="0x405489f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x405661b0" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x405661b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40566388"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x40552530" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x40552530"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40552708"/>
        <function-ref name="isInput" scoped="" ref="0x405527e8"/>
        <function-ref name="toggle" scoped="" ref="0x405528c8"/>
        <function-ref name="isOutput" scoped="" ref="0x405529a8"/>
        <function-ref name="get" scoped="" ref="0x40552a88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40552b68"/>
        <function-ref name="set" scoped="" ref="0x40552c48"/>
        <function-ref name="clr" scoped="" ref="0x40552d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4054d078" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4054d078"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4054d250"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x4055d4c8" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x4055d4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4055d6a0"/>
        <function-ref name="write" scoped="" ref="0x4055d780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x40566520" loc="67:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40566520"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x405666f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40565530" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40565530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40565808"/>
        <function-ref name="immediateRequest" scoped="" ref="0x405658e8"/>
        <function-ref name="request" scoped="" ref="0x405659c8"/>
        <function-ref name="granted" scoped="" ref="0x40565aa8"/>
        <function-ref name="isOwner" scoped="" ref="0x40565b88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x40563450" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0x40563450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40563628"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40563708"/>
        <function-ref name="request" scoped="" ref="0x405637e8"/>
        <function-ref name="granted" scoped="" ref="0x405638c8"/>
        <function-ref name="isOwner" scoped="" ref="0x405639a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x4054c900" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x4054c900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x4054cad8"/>
        <function-ref name="rfOff" scoped="" ref="0x4054cbb8"/>
        <function-ref name="rxOn" scoped="" ref="0x4054cc98"/>
        <function-ref name="startVReg" scoped="" ref="0x4054cd78"/>
        <function-ref name="stopVReg" scoped="" ref="0x4054ce58"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x4054b010"/>
        <function-ref name="stopOscillator" scoped="" ref="0x4054b0f0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x4054b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x40558be8" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40558be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40558dc0"/>
        <function-ref name="write" scoped="" ref="0x40558ea0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x405582c8" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x405582c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40558520"/>
        <function-ref name="write" scoped="" ref="0x40558600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x40564a50" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40564a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40564c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40563b10" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40563b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40563ce8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40563dc8"/>
        <function-ref name="led1On" scoped="" ref="0x40563ea8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40562010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x405620f0"/>
        <function-ref name="get" scoped="" ref="0x405621d0"/>
        <function-ref name="led1Off" scoped="" ref="0x405622b0"/>
        <function-ref name="led2Off" scoped="" ref="0x40562630"/>
        <function-ref name="set" scoped="" ref="0x40562390"/>
        <function-ref name="led0On" scoped="" ref="0x40562470"/>
        <function-ref name="led2On" scoped="" ref="0x40562550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x40560e40" loc="112:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sync" scoped="" ref="0x40560e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4056e050"/>
        <function-ref name="runTask" scoped="" ref="0x4056e130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4054d3c0" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4054d3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4054d598"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4054d678"/>
        <function-ref name="request" scoped="" ref="0x4054d758"/>
        <function-ref name="granted" scoped="" ref="0x4054d838"/>
        <function-ref name="isOwner" scoped="" ref="0x4054d918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x4055bd68" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x4055bd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4055f010"/>
        <function-ref name="write" scoped="" ref="0x4055f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x4055eac8" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x4055eac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4055eca0"/>
        <function-ref name="disable" scoped="" ref="0x4055ed80"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x4055ee60"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40550010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40566868" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40566868"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40566a40"/>
        <function-ref name="source" scoped="" ref="0x40566b20"/>
        <function-ref name="address" scoped="" ref="0x40566c00"/>
        <function-ref name="destination" scoped="" ref="0x40566ce0"/>
        <function-ref name="setSource" scoped="" ref="0x40566dc0"/>
        <function-ref name="setDestination" scoped="" ref="0x40566ea0"/>
        <function-ref name="type" scoped="" ref="0x40565010"/>
        <function-ref name="setType" scoped="" ref="0x405650f0"/>
        <function-ref name="isForMe" scoped="" ref="0x405651d0"/>
        <function-ref name="setGroup" scoped="" ref="0x405652b0"/>
        <function-ref name="localGroup" scoped="" ref="0x40565390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x40565d28" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x40565d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40565f00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40563010"/>
        <function-ref name="request" scoped="" ref="0x405630f0"/>
        <function-ref name="granted" scoped="" ref="0x405631d0"/>
        <function-ref name="isOwner" scoped="" ref="0x405632b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x40564dc0" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40564dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40566010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4059ae88" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4059ae88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40599070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x40599340" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0x40599340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402ec820"/>
            <typename><typedef-ref name="T32khz" ref="0x402ec9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40032340"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x405a7750"/>
        <function-ref name="fired" scoped="" ref="0x405a7010"/>
        <function-ref name="startAt" scoped="" ref="0x405a7410"/>
        <function-ref name="isRunning" scoped="" ref="0x405a7210"/>
        <function-ref name="getAlarm" scoped="" ref="0x405a7950"/>
        <function-ref name="start" scoped="" ref="0x40599a90"/>
        <function-ref name="stop" scoped="" ref="0x40599d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x405a5dd8" loc="67:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x405a5dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402ec820"/>
            <typename><typedef-ref name="T32khz" ref="0x402ec9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40032340"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406e9170"/>
        <function-ref name="fired" scoped="" ref="0x405a4a10"/>
        <function-ref name="startAt" scoped="" ref="0x405a4e10"/>
        <function-ref name="isRunning" scoped="" ref="0x405a4c10"/>
        <function-ref name="getAlarm" scoped="" ref="0x406e9370"/>
        <function-ref name="start" scoped="" ref="0x405a4570"/>
        <function-ref name="stop" scoped="" ref="0x405a4810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x406e9528" loc="68:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x406e9528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406e9700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40cea4c0" loc="28:/opt/tinyos-2.x/tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40cea4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402ec820"/>
            <typename><typedef-ref name="T32khz" ref="0x402ec9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40032340"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ce9818"/>
        <function-ref name="fired" scoped="" ref="0x40ce90d8"/>
        <function-ref name="startAt" scoped="" ref="0x40ce94d8"/>
        <function-ref name="isRunning" scoped="" ref="0x40ce92d8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40ce9a18"/>
        <function-ref name="start" scoped="" ref="0x40ceac10"/>
        <function-ref name="stop" scoped="" ref="0x40ceaeb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40ce7010" loc="30:/opt/tinyos-2.x/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40ce7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402ec820"/>
            <typename><typedef-ref name="TOne" ref="0x4030a220"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ce5350"/>
        <function-ref name="fired" scoped="" ref="0x40ce7c00"/>
        <function-ref name="startAt" scoped="" ref="0x40ce5010"/>
        <function-ref name="isRunning" scoped="" ref="0x40ce7e00"/>
        <function-ref name="getAlarm" scoped="" ref="0x40ce5550"/>
        <function-ref name="start" scoped="" ref="0x40ce7760"/>
        <function-ref name="stop" scoped="" ref="0x40ce7a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x405cc530" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x405cc530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x405cc708"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x405cc7e8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x405cc8c8"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x405cc9a8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x405cca88"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x405ccb68"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x405ccc48"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x405ccd28"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x405cce08"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x405ccee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x405c7530" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x405c7530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x405bece8"/>
        <function-ref name="test" scoped="" ref="0x405be8e8"/>
        <function-ref name="get" scoped="" ref="0x405c7b78"/>
        <function-ref name="captured" scoped="" ref="0x405be048"/>
        <function-ref name="reset" scoped="" ref="0x405be2e8"/>
        <function-ref name="isOn" scoped="" ref="0x405beae8"/>
        <function-ref name="set" scoped="" ref="0x405c7d78"/>
        <function-ref name="start" scoped="" ref="0x405be4e8"/>
        <function-ref name="stop" scoped="" ref="0x405be6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x405c5010" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x405c5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x405d6328"/>
        <function-ref name="fired" scoped="" ref="0x405c5af8"/>
        <function-ref name="get" scoped="" ref="0x405c5658"/>
        <function-ref name="reset" scoped="" ref="0x405c5cf8"/>
        <function-ref name="isOn" scoped="" ref="0x405d6528"/>
        <function-ref name="set" scoped="" ref="0x405c5858"/>
        <function-ref name="start" scoped="" ref="0x405c5ef8"/>
        <function-ref name="stop" scoped="" ref="0x405d6128"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x405c1b10" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x405c1b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x405b22b8"/>
        <function-ref name="test" scoped="" ref="0x405b3ea0"/>
        <function-ref name="get" scoped="" ref="0x405b3200"/>
        <function-ref name="setScale" scoped="" ref="0x405b24b8"/>
        <function-ref name="getScale" scoped="" ref="0x405b2758"/>
        <function-ref name="reset" scoped="" ref="0x405b38a0"/>
        <function-ref name="overflow" scoped="" ref="0x405b36a0"/>
        <function-ref name="isOn" scoped="" ref="0x405b20b8"/>
        <function-ref name="set" scoped="" ref="0x405b3400"/>
        <function-ref name="start" scoped="" ref="0x405b3aa0"/>
        <function-ref name="stop" scoped="" ref="0x405b3ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x405da6f8" loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x405da6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x405da8d0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x405da9b0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x405daa90"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x405dab70"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x405dac50"/>
        <function-ref name="setControl" scoped="" ref="0x405dad30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x405e9ca8" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x405e9ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x405e9e80"/>
        <function-ref name="compareBusy" scoped="" ref="0x405d8010"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x405d80f0"/>
        <function-ref name="countBusy" scoped="" ref="0x405d81d0"/>
        <function-ref name="getAssr" scoped="" ref="0x405d82b0"/>
        <function-ref name="setAssr" scoped="" ref="0x405d8390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x405de010" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x405de010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x405dd328"/>
        <function-ref name="fired" scoped="" ref="0x405deaf8"/>
        <function-ref name="get" scoped="" ref="0x405de658"/>
        <function-ref name="reset" scoped="" ref="0x405decf8"/>
        <function-ref name="isOn" scoped="" ref="0x405dd528"/>
        <function-ref name="set" scoped="" ref="0x405de858"/>
        <function-ref name="start" scoped="" ref="0x405deef8"/>
        <function-ref name="stop" scoped="" ref="0x405dd128"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x405d0d70" loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x405d0d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x405df4a8"/>
        <function-ref name="test" scoped="" ref="0x405df0a8"/>
        <function-ref name="get" scoped="" ref="0x405cf3e0"/>
        <function-ref name="setScale" scoped="" ref="0x405df6a8"/>
        <function-ref name="getScale" scoped="" ref="0x405df948"/>
        <function-ref name="reset" scoped="" ref="0x405cfa80"/>
        <function-ref name="overflow" scoped="" ref="0x405cf880"/>
        <function-ref name="isOn" scoped="" ref="0x405df2a8"/>
        <function-ref name="set" scoped="" ref="0x405cf5e0"/>
        <function-ref name="start" scoped="" ref="0x405cfc80"/>
        <function-ref name="stop" scoped="" ref="0x405cfe80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x405e49b0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x405e49b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x405e4b88"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x405e4c68"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x405e4d48"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x405e4e28"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x405e4f08"/>
        <function-ref name="setControl" scoped="" ref="0x405e3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x405f38d8" loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x405f38d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x405f3ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x405f3c38" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x405f3c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x405f3e10"/>
        <function-ref name="compareBusy" scoped="" ref="0x405f3ef0"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x405f2010"/>
        <function-ref name="countBusy" scoped="" ref="0x405f20f0"/>
        <function-ref name="getAssr" scoped="" ref="0x405f21d0"/>
        <function-ref name="setAssr" scoped="" ref="0x405f22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x405e3228" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x405e3228"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x405f3528"/>
        <function-ref name="fired" scoped="" ref="0x405e3d10"/>
        <function-ref name="get" scoped="" ref="0x405e3870"/>
        <function-ref name="reset" scoped="" ref="0x405e3f10"/>
        <function-ref name="isOn" scoped="" ref="0x405f3728"/>
        <function-ref name="set" scoped="" ref="0x405e3a70"/>
        <function-ref name="start" scoped="" ref="0x405f3128"/>
        <function-ref name="stop" scoped="" ref="0x405f3328"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x405e6be0" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x405e6be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x405e4330"/>
        <function-ref name="test" scoped="" ref="0x405e5f18"/>
        <function-ref name="get" scoped="" ref="0x405e5278"/>
        <function-ref name="setScale" scoped="" ref="0x405e4530"/>
        <function-ref name="getScale" scoped="" ref="0x405e47d0"/>
        <function-ref name="reset" scoped="" ref="0x405e5918"/>
        <function-ref name="overflow" scoped="" ref="0x405e5718"/>
        <function-ref name="isOn" scoped="" ref="0x405e4130"/>
        <function-ref name="set" scoped="" ref="0x405e5478"/>
        <function-ref name="start" scoped="" ref="0x405e5b18"/>
        <function-ref name="stop" scoped="" ref="0x405e5d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x4061b010" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x4061b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x4061b1e8"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x4061b2c8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x4061b3a8"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x4061b488"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x4061b568"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x4061b648"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x4061b728"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x4061b808"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x4061b8e8"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x4061b9c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x40625ec0" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x40625ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x406230c0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x406231a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40623280"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40623360"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40623440"/>
        <function-ref name="setControl" scoped="" ref="0x40623520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40618730" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40618730"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40629ab0"/>
        <function-ref name="fired" scoped="" ref="0x406292b0"/>
        <function-ref name="get" scoped="" ref="0x40618d78"/>
        <function-ref name="reset" scoped="" ref="0x406294b0"/>
        <function-ref name="isOn" scoped="" ref="0x40629cb0"/>
        <function-ref name="set" scoped="" ref="0x40629010"/>
        <function-ref name="start" scoped="" ref="0x406296b0"/>
        <function-ref name="stop" scoped="" ref="0x406298b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x4061bbe8" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x4061bbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x40618410"/>
        <function-ref name="test" scoped="" ref="0x40618010"/>
        <function-ref name="get" scoped="" ref="0x4061a278"/>
        <function-ref name="captured" scoped="" ref="0x4061a718"/>
        <function-ref name="reset" scoped="" ref="0x4061a9b8"/>
        <function-ref name="isOn" scoped="" ref="0x40618210"/>
        <function-ref name="set" scoped="" ref="0x4061a478"/>
        <function-ref name="start" scoped="" ref="0x4061abb8"/>
        <function-ref name="stop" scoped="" ref="0x4061adb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40627010" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40627010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40626328"/>
        <function-ref name="fired" scoped="" ref="0x40627af8"/>
        <function-ref name="get" scoped="" ref="0x40627658"/>
        <function-ref name="reset" scoped="" ref="0x40627cf8"/>
        <function-ref name="isOn" scoped="" ref="0x40626528"/>
        <function-ref name="set" scoped="" ref="0x40627858"/>
        <function-ref name="start" scoped="" ref="0x40627ef8"/>
        <function-ref name="stop" scoped="" ref="0x40626128"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x406267a8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x406267a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40625ab0"/>
        <function-ref name="fired" scoped="" ref="0x406252b0"/>
        <function-ref name="get" scoped="" ref="0x40626df0"/>
        <function-ref name="reset" scoped="" ref="0x406254b0"/>
        <function-ref name="isOn" scoped="" ref="0x40625cb0"/>
        <function-ref name="set" scoped="" ref="0x40625010"/>
        <function-ref name="start" scoped="" ref="0x406256b0"/>
        <function-ref name="stop" scoped="" ref="0x406258b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4061d220" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4061d220"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4061c928"/>
        <function-ref name="test" scoped="" ref="0x4061c528"/>
        <function-ref name="get" scoped="" ref="0x4061d868"/>
        <function-ref name="setScale" scoped="" ref="0x4061cb28"/>
        <function-ref name="getScale" scoped="" ref="0x4061cdc8"/>
        <function-ref name="reset" scoped="" ref="0x4061df08"/>
        <function-ref name="overflow" scoped="" ref="0x4061dd08"/>
        <function-ref name="isOn" scoped="" ref="0x4061c728"/>
        <function-ref name="set" scoped="" ref="0x4061da68"/>
        <function-ref name="start" scoped="" ref="0x4061c128"/>
        <function-ref name="stop" scoped="" ref="0x4061c328"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40675860" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40675860"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402b3e78"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402b3e78"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40675a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40675c48" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40675c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40681410"/>
        <function-ref name="test" scoped="" ref="0x40681010"/>
        <function-ref name="get" scoped="" ref="0x406742a8"/>
        <function-ref name="setScale" scoped="" ref="0x40681610"/>
        <function-ref name="getScale" scoped="" ref="0x406818b0"/>
        <function-ref name="reset" scoped="" ref="0x40674948"/>
        <function-ref name="overflow" scoped="" ref="0x40674748"/>
        <function-ref name="isOn" scoped="" ref="0x40681210"/>
        <function-ref name="set" scoped="" ref="0x406744a8"/>
        <function-ref name="start" scoped="" ref="0x40674b48"/>
        <function-ref name="stop" scoped="" ref="0x40674d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40d0f488" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40d0f488"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x402b3ce0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x402b3ce0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402ec820"/>
            <typename><typedef-ref name="TOne" ref="0x4030a220"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d0e7c8"/>
        <function-ref name="fired" scoped="" ref="0x40d0e088"/>
        <function-ref name="startAt" scoped="" ref="0x40d0e488"/>
        <function-ref name="isRunning" scoped="" ref="0x40d0e288"/>
        <function-ref name="getAlarm" scoped="" ref="0x40d0e9c8"/>
        <function-ref name="start" scoped="" ref="0x40d0fbd8"/>
        <function-ref name="stop" scoped="" ref="0x40d0fe78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x40d0ba18" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x40d0ba18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40d0ad28"/>
        <function-ref name="fired" scoped="" ref="0x40d0a528"/>
        <function-ref name="get" scoped="" ref="0x40d0a088"/>
        <function-ref name="reset" scoped="" ref="0x40d0a728"/>
        <function-ref name="isOn" scoped="" ref="0x40d0af28"/>
        <function-ref name="set" scoped="" ref="0x40d0a288"/>
        <function-ref name="start" scoped="" ref="0x40d0a928"/>
        <function-ref name="stop" scoped="" ref="0x40d0ab28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x40d0ec10" loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x40d0ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40d0b330"/>
        <function-ref name="test" scoped="" ref="0x40d0cf18"/>
        <function-ref name="get" scoped="" ref="0x40d0c278"/>
        <function-ref name="setScale" scoped="" ref="0x40d0b530"/>
        <function-ref name="getScale" scoped="" ref="0x40d0b7d0"/>
        <function-ref name="reset" scoped="" ref="0x40d0c918"/>
        <function-ref name="overflow" scoped="" ref="0x40d0c718"/>
        <function-ref name="isOn" scoped="" ref="0x40d0b130"/>
        <function-ref name="set" scoped="" ref="0x40d0c478"/>
        <function-ref name="start" scoped="" ref="0x40d0cb18"/>
        <function-ref name="stop" scoped="" ref="0x40d0cd18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40699788" loc="24:/opt/tinyos-2.x/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40699788"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402ec820"/>
            <typename><typedef-ref name="T32khz" ref="0x402ec9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40032340"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40699ed8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4069c2f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4069c0f8"/>
        <function-ref name="overflow" scoped="" ref="0x4069c4f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40696cd8" loc="24:/opt/tinyos-2.x/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40696cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402ec820"/>
            <typename><typedef-ref name="TOne" ref="0x4030a220"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406a9478"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406a9878"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406a9678"/>
        <function-ref name="overflow" scoped="" ref="0x406a9a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x406a7900" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406a7900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402ec820"/>
            <typename><typedef-ref name="TOne" ref="0x4030a220"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406b1068"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406b1468"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406b1268"/>
        <function-ref name="overflow" scoped="" ref="0x406b1668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x406b18d0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406b18d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x406ae010"/>
        <function-ref name="test" scoped="" ref="0x406b0bd0"/>
        <function-ref name="get" scoped="" ref="0x406b1f18"/>
        <function-ref name="setScale" scoped="" ref="0x406ae210"/>
        <function-ref name="getScale" scoped="" ref="0x406ae4b0"/>
        <function-ref name="reset" scoped="" ref="0x406b05d0"/>
        <function-ref name="overflow" scoped="" ref="0x406b03d0"/>
        <function-ref name="isOn" scoped="" ref="0x406b0dd0"/>
        <function-ref name="set" scoped="" ref="0x406b0130"/>
        <function-ref name="start" scoped="" ref="0x406b07d0"/>
        <function-ref name="stop" scoped="" ref="0x406b09d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x406c8150" loc="52:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x406c8150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402ec820"/>
            <typename><typedef-ref name="T32khz" ref="0x402ec9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406c88a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406c8ca0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406c8aa0"/>
        <function-ref name="overflow" scoped="" ref="0x406c8ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x406ac0c0" loc="51:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406ac0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402ec820"/>
            <typename><typedef-ref name="T32khz" ref="0x402ec9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40032340"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406ac810"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406acc10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406aca10"/>
        <function-ref name="overflow" scoped="" ref="0x406ace10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40ce47d0" loc="50:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40ce47d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402ec820"/>
            <typename><typedef-ref name="T32khz" ref="0x402ec9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40032340"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ce3b18"/>
        <function-ref name="fired" scoped="" ref="0x40ce33d8"/>
        <function-ref name="startAt" scoped="" ref="0x40ce37d8"/>
        <function-ref name="isRunning" scoped="" ref="0x40ce35d8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40ce3d18"/>
        <function-ref name="start" scoped="" ref="0x40ce4f20"/>
        <function-ref name="stop" scoped="" ref="0x40ce31d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x40d13078" loc="62:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x40d13078"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402ec820"/>
            <typename><typedef-ref name="TOne" ref="0x4030a220"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d123c8"/>
        <function-ref name="fired" scoped="" ref="0x40d13c68"/>
        <function-ref name="startAt" scoped="" ref="0x40d12088"/>
        <function-ref name="isRunning" scoped="" ref="0x40d13e68"/>
        <function-ref name="getAlarm" scoped="" ref="0x40d125c8"/>
        <function-ref name="start" scoped="" ref="0x40d137c8"/>
        <function-ref name="stop" scoped="" ref="0x40d13a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40ce2010" loc="57:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40ce2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402ec820"/>
            <typename><typedef-ref name="T32khz" ref="0x402ec9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40032340"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ce2760"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40ce2b60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40ce2960"/>
        <function-ref name="overflow" scoped="" ref="0x40ce2d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x406d4c50" loc="18:/opt/tinyos-2.x/tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x406d4c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406d4e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x406e5d98" loc="68:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x406e5d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406e4010"/>
        <function-ref name="isInput" scoped="" ref="0x406e40f0"/>
        <function-ref name="toggle" scoped="" ref="0x406e41d0"/>
        <function-ref name="isOutput" scoped="" ref="0x406e42b0"/>
        <function-ref name="get" scoped="" ref="0x406e4390"/>
        <function-ref name="makeOutput" scoped="" ref="0x406e4470"/>
        <function-ref name="set" scoped="" ref="0x406e4550"/>
        <function-ref name="clr" scoped="" ref="0x406e4630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x406e47a8" loc="69:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x406e47a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406e4980"/>
        <function-ref name="isInput" scoped="" ref="0x406e4a60"/>
        <function-ref name="toggle" scoped="" ref="0x406e4b40"/>
        <function-ref name="isOutput" scoped="" ref="0x406e4c20"/>
        <function-ref name="get" scoped="" ref="0x406e4d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x406e4de0"/>
        <function-ref name="set" scoped="" ref="0x406e4ec0"/>
        <function-ref name="clr" scoped="" ref="0x406e3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x406e3188" loc="70:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x406e3188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406e3360"/>
        <function-ref name="isInput" scoped="" ref="0x406e3440"/>
        <function-ref name="toggle" scoped="" ref="0x406e3520"/>
        <function-ref name="isOutput" scoped="" ref="0x406e3600"/>
        <function-ref name="get" scoped="" ref="0x406e36e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406e37c0"/>
        <function-ref name="set" scoped="" ref="0x406e38a0"/>
        <function-ref name="clr" scoped="" ref="0x406e3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x406e5428" loc="67:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x406e5428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406e5600"/>
        <function-ref name="isInput" scoped="" ref="0x406e56e0"/>
        <function-ref name="toggle" scoped="" ref="0x406e57c0"/>
        <function-ref name="isOutput" scoped="" ref="0x406e58a0"/>
        <function-ref name="get" scoped="" ref="0x406e5980"/>
        <function-ref name="makeOutput" scoped="" ref="0x406e5a60"/>
        <function-ref name="set" scoped="" ref="0x406e5b40"/>
        <function-ref name="clr" scoped="" ref="0x406e5c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x406e2508" loc="72:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x406e2508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406e26e0"/>
        <function-ref name="isInput" scoped="" ref="0x406e27c0"/>
        <function-ref name="toggle" scoped="" ref="0x406e28a0"/>
        <function-ref name="isOutput" scoped="" ref="0x406e2980"/>
        <function-ref name="get" scoped="" ref="0x406e2a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x406e2b40"/>
        <function-ref name="set" scoped="" ref="0x406e2c20"/>
        <function-ref name="clr" scoped="" ref="0x406e2d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x406e69f8" loc="66:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x406e69f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406e6bd0"/>
        <function-ref name="isInput" scoped="" ref="0x406e6cb0"/>
        <function-ref name="toggle" scoped="" ref="0x406e6d90"/>
        <function-ref name="isOutput" scoped="" ref="0x406e6e70"/>
        <function-ref name="get" scoped="" ref="0x406e5010"/>
        <function-ref name="makeOutput" scoped="" ref="0x406e50f0"/>
        <function-ref name="set" scoped="" ref="0x406e51d0"/>
        <function-ref name="clr" scoped="" ref="0x406e52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x406e3af8" loc="71:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x406e3af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406e3cd0"/>
        <function-ref name="isInput" scoped="" ref="0x406e3db0"/>
        <function-ref name="toggle" scoped="" ref="0x406e3e90"/>
        <function-ref name="isOutput" scoped="" ref="0x406e2010"/>
        <function-ref name="get" scoped="" ref="0x406e20f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406e21d0"/>
        <function-ref name="set" scoped="" ref="0x406e22b0"/>
        <function-ref name="clr" scoped="" ref="0x406e2390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x406eeab0" loc="39:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x406eeab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x406eec88"/>
        <function-ref name="disable" scoped="" ref="0x406eed68"/>
        <function-ref name="captured" scoped="" ref="0x406eee48"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x406eef28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x406f10d8" loc="40:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x406f10d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x406f12b0"/>
        <function-ref name="disable" scoped="" ref="0x406f1390"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x406f1470"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x406f1550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x406f16f0" loc="41:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x406f16f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x406f18c8"/>
        <function-ref name="disable" scoped="" ref="0x406f19a8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x406f1a88"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x406f1b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x406ed3f0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x406ed3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x406ed5c8"/>
        <function-ref name="disable" scoped="" ref="0x406ed6a8"/>
        <function-ref name="captured" scoped="" ref="0x406ed788"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x406ed868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0x406eda78" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0x406eda78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x406f9248"/>
        <function-ref name="test" scoped="" ref="0x406ece18"/>
        <function-ref name="get" scoped="" ref="0x406ec0d8"/>
        <function-ref name="captured" scoped="" ref="0x406ec578"/>
        <function-ref name="reset" scoped="" ref="0x406ec818"/>
        <function-ref name="isOn" scoped="" ref="0x406f9048"/>
        <function-ref name="set" scoped="" ref="0x406ec2d8"/>
        <function-ref name="start" scoped="" ref="0x406eca18"/>
        <function-ref name="stop" scoped="" ref="0x406ecc18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x406f7880" loc="9:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x406f7880"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406f7a58"/>
        <function-ref name="fired" scoped="" ref="0x406f7b38"/>
        <function-ref name="disable" scoped="" ref="0x406f7c18"/>
        <function-ref name="edge" scoped="" ref="0x406f7cf8"/>
        <function-ref name="enable" scoped="" ref="0x406f7dd8"/>
        <function-ref name="getValue" scoped="" ref="0x406f7eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x406f7288" loc="8:/opt/tinyos-2.x/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x406f7288"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x406f7460"/>
        <function-ref name="disable" scoped="" ref="0x406f7540"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x406f7620"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x406f7700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x40713948" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x40713948"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40713b20"/>
        <function-ref name="fired" scoped="" ref="0x40713c00"/>
        <function-ref name="disable" scoped="" ref="0x40713ce0"/>
        <function-ref name="edge" scoped="" ref="0x40713dc0"/>
        <function-ref name="enable" scoped="" ref="0x40713ea0"/>
        <function-ref name="getValue" scoped="" ref="0x40712010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x40715190" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x40715190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40715368"/>
        <function-ref name="fired" scoped="" ref="0x40715448"/>
        <function-ref name="disable" scoped="" ref="0x40715528"/>
        <function-ref name="edge" scoped="" ref="0x40715608"/>
        <function-ref name="enable" scoped="" ref="0x407156e8"/>
        <function-ref name="getValue" scoped="" ref="0x407157c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x40714948" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x40714948"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40714b20"/>
        <function-ref name="fired" scoped="" ref="0x40714c00"/>
        <function-ref name="disable" scoped="" ref="0x40714ce0"/>
        <function-ref name="edge" scoped="" ref="0x40714dc0"/>
        <function-ref name="enable" scoped="" ref="0x40714ea0"/>
        <function-ref name="getValue" scoped="" ref="0x40713010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x40712190" loc="43:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x40712190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40712368"/>
        <function-ref name="fired" scoped="" ref="0x40712448"/>
        <function-ref name="disable" scoped="" ref="0x40712528"/>
        <function-ref name="edge" scoped="" ref="0x40712608"/>
        <function-ref name="enable" scoped="" ref="0x407126e8"/>
        <function-ref name="getValue" scoped="" ref="0x407127c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x40715948" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x40715948"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40715b20"/>
        <function-ref name="fired" scoped="" ref="0x40715c00"/>
        <function-ref name="disable" scoped="" ref="0x40715ce0"/>
        <function-ref name="edge" scoped="" ref="0x40715dc0"/>
        <function-ref name="enable" scoped="" ref="0x40715ea0"/>
        <function-ref name="getValue" scoped="" ref="0x40714010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x40713190" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x40713190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40713368"/>
        <function-ref name="fired" scoped="" ref="0x40713448"/>
        <function-ref name="disable" scoped="" ref="0x40713528"/>
        <function-ref name="edge" scoped="" ref="0x40713608"/>
        <function-ref name="enable" scoped="" ref="0x407136e8"/>
        <function-ref name="getValue" scoped="" ref="0x407137c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x40700980" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x40700980"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40700b58"/>
        <function-ref name="fired" scoped="" ref="0x40700c38"/>
        <function-ref name="disable" scoped="" ref="0x40700d18"/>
        <function-ref name="edge" scoped="" ref="0x40700df8"/>
        <function-ref name="enable" scoped="" ref="0x40700ed8"/>
        <function-ref name="getValue" scoped="" ref="0x40715010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x40714190" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x40714190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40714368"/>
        <function-ref name="fired" scoped="" ref="0x40714448"/>
        <function-ref name="disable" scoped="" ref="0x40714528"/>
        <function-ref name="edge" scoped="" ref="0x40714608"/>
        <function-ref name="enable" scoped="" ref="0x407146e8"/>
        <function-ref name="getValue" scoped="" ref="0x407147c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x4070b1b0" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x4070b1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4070b388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x4070d010" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x4070d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4070d1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x4070da78" loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x4070da78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4070dc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x4070b528" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x4070b528"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4070b700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x4070d388" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x4070d388"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4070d560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x4070ddf0" loc="39:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x4070ddf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4070b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x4070cc20" loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x4070cc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4070cdf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x4070d700" loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x4070d700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4070d8d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x407106f8" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x407106f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407108d0"/>
        <function-ref name="fired" scoped="" ref="0x407109b0"/>
        <function-ref name="disable" scoped="" ref="0x40710a90"/>
        <function-ref name="edge" scoped="" ref="0x40710b70"/>
        <function-ref name="enable" scoped="" ref="0x40710c50"/>
        <function-ref name="getValue" scoped="" ref="0x40710d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40710eb0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40710eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407290c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x407356c0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x407356c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40735898"/>
        <function-ref name="fired" scoped="" ref="0x40735978"/>
        <function-ref name="disable" scoped="" ref="0x40735a58"/>
        <function-ref name="edge" scoped="" ref="0x40735b38"/>
        <function-ref name="enable" scoped="" ref="0x40735c18"/>
        <function-ref name="getValue" scoped="" ref="0x40735cf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40735e78" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40735e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40734070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x407326c0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x407326c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40732898"/>
        <function-ref name="fired" scoped="" ref="0x40732978"/>
        <function-ref name="disable" scoped="" ref="0x40732a58"/>
        <function-ref name="edge" scoped="" ref="0x40732b38"/>
        <function-ref name="enable" scoped="" ref="0x40732c18"/>
        <function-ref name="getValue" scoped="" ref="0x40732cf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40732e78" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40732e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40731070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x407306c0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x407306c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40730898"/>
        <function-ref name="fired" scoped="" ref="0x40730978"/>
        <function-ref name="disable" scoped="" ref="0x40730a58"/>
        <function-ref name="edge" scoped="" ref="0x40730b38"/>
        <function-ref name="enable" scoped="" ref="0x40730c18"/>
        <function-ref name="getValue" scoped="" ref="0x40730cf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40730e78" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40730e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4072f070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x4072e718" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x4072e718"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4072e8f0"/>
        <function-ref name="fired" scoped="" ref="0x4072e9d0"/>
        <function-ref name="disable" scoped="" ref="0x4072eab0"/>
        <function-ref name="edge" scoped="" ref="0x4072eb90"/>
        <function-ref name="enable" scoped="" ref="0x4072ec70"/>
        <function-ref name="getValue" scoped="" ref="0x4072ed50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x4072eed0" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x4072eed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4072d0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x4072c788" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x4072c788"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4072c960"/>
        <function-ref name="fired" scoped="" ref="0x4072ca40"/>
        <function-ref name="disable" scoped="" ref="0x4072cb20"/>
        <function-ref name="edge" scoped="" ref="0x4072cc00"/>
        <function-ref name="enable" scoped="" ref="0x4072cce0"/>
        <function-ref name="getValue" scoped="" ref="0x4072cdc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40741010" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40741010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407411e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40740880" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40740880"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40740a58"/>
        <function-ref name="fired" scoped="" ref="0x40740b38"/>
        <function-ref name="disable" scoped="" ref="0x40740c18"/>
        <function-ref name="edge" scoped="" ref="0x40740cf8"/>
        <function-ref name="enable" scoped="" ref="0x40740dd8"/>
        <function-ref name="getValue" scoped="" ref="0x40740eb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x4073f050" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x4073f050"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4073f228"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x4073d8f0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x4073d8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4073dac8"/>
        <function-ref name="fired" scoped="" ref="0x4073dba8"/>
        <function-ref name="disable" scoped="" ref="0x4073dc88"/>
        <function-ref name="edge" scoped="" ref="0x4073dd68"/>
        <function-ref name="enable" scoped="" ref="0x4073de48"/>
        <function-ref name="getValue" scoped="" ref="0x4073df28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x4073c0b8" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x4073c0b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4073c290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0x4074d880" loc="51:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0x4074d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4074da58"/>
        <function-ref name="isInput" scoped="" ref="0x4074db38"/>
        <function-ref name="toggle" scoped="" ref="0x4074dc18"/>
        <function-ref name="isOutput" scoped="" ref="0x4074dcf8"/>
        <function-ref name="get" scoped="" ref="0x4074ddd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4074deb8"/>
        <function-ref name="set" scoped="" ref="0x4074c010"/>
        <function-ref name="clr" scoped="" ref="0x4074c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x4074d250" loc="47:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x4074d250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4074d428"/>
        <function-ref name="disable" scoped="" ref="0x4074d508"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x4074d5e8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x4074d6c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0x4074cdf0" loc="69:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0x4074cdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4074b010"/>
        <function-ref name="runTask" scoped="" ref="0x4074b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x4088f6e8" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x4088f6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4088f8c0"/>
        <function-ref name="write" scoped="" ref="0x4088f9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40874a00" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40874a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40874bd8"/>
        <function-ref name="write" scoped="" ref="0x40874cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x4088e448" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x4088e448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4088e620"/>
        <function-ref name="write" scoped="" ref="0x4088e700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x4088d030" loc="76:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x4088d030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4088d308"/>
        <function-ref name="write" scoped="" ref="0x4088d3e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x4088d568" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x4088d568"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4088d740"/>
        <function-ref name="write" scoped="" ref="0x4088d820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40877ef0" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40877ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x408760e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x4088a2b0" loc="88:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x4088a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4088a488"/>
        <function-ref name="write" scoped="" ref="0x4088a568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x4088f2b0" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x4088f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4088f488"/>
        <function-ref name="write" scoped="" ref="0x4088f568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x4088fb20" loc="67:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x4088fb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4088fcf8"/>
        <function-ref name="write" scoped="" ref="0x4088fdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40874190" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40874190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40874368"/>
        <function-ref name="write" scoped="" ref="0x40874448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x408785a0" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x408785a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40878778"/>
        <function-ref name="abortRelease" scoped="" ref="0x40878858"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40878938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40878e10" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40878e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40877010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40876910" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40876910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40876ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x408765b8" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x408765b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40876790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x4088c190" loc="80:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x4088c190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4088c368"/>
        <function-ref name="write" scoped="" ref="0x4088c448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40874e38" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40874e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4088f050"/>
        <function-ref name="write" scoped="" ref="0x4088f130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40876260" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40876260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40876438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x4088ebd8" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x4088ebd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4088edb0"/>
        <function-ref name="write" scoped="" ref="0x4088ee90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x4088ce38" loc="87:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x4088ce38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4088a050"/>
        <function-ref name="write" scoped="" ref="0x4088a130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x4088a6e8" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x4088a6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x4088a8c0"/>
        <function-ref name="writeDone" scoped="" ref="0x4088a9a0"/>
        <function-ref name="write" scoped="" ref="0x4088aa80"/>
        <function-ref name="beginRead" scoped="" ref="0x4088ab60"/>
        <function-ref name="readDone" scoped="" ref="0x4088ac40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40877190" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40877190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40877368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x408745c8" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x408745c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408747a0"/>
        <function-ref name="write" scoped="" ref="0x40874880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40876c68" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40876c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40876ec0"/>
        <function-ref name="write" scoped="" ref="0x40874010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x408774e8" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x408774e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x408776c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x4088e010" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x4088e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4088e1e8"/>
        <function-ref name="write" scoped="" ref="0x4088e2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40879ea8" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40879ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408780c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408781a0"/>
        <function-ref name="request" scoped="" ref="0x40878280"/>
        <function-ref name="granted" scoped="" ref="0x40878360"/>
        <function-ref name="isOwner" scoped="" ref="0x40878440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x4088ddd8" loc="79:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x4088ddd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4088c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x4088e880" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x4088e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4088ea58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x4088ca00" loc="86:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x4088ca00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4088cbd8"/>
        <function-ref name="write" scoped="" ref="0x4088ccb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x4088c5c8" loc="85:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x4088c5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4088c7a0"/>
        <function-ref name="write" scoped="" ref="0x4088c880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40878ab8" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40878ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40878c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x4088d9a0" loc="78:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x4088d9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4088db78"/>
        <function-ref name="write" scoped="" ref="0x4088dc58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40877b98" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40877b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40877d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40877840" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40877840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40877a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x4088adc0" loc="92:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x4088adc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40889010"/>
        <function-ref name="writeDone" scoped="" ref="0x408890f0"/>
        <function-ref name="write" scoped="" ref="0x408891d0"/>
        <function-ref name="beginRead" scoped="" ref="0x408892b0"/>
        <function-ref name="readDone" scoped="" ref="0x40889390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x4075d258" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x4075d258"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x4075d430"/>
        <function-ref name="writeDone" scoped="" ref="0x4075d510"/>
        <function-ref name="write" scoped="" ref="0x4075d5f0"/>
        <function-ref name="beginRead" scoped="" ref="0x4075d6d0"/>
        <function-ref name="readDone" scoped="" ref="0x4075d7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x4075ea48" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x4075ea48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x4075ec20"/>
        <function-ref name="abortRelease" scoped="" ref="0x4075ed00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x4075ede0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x4075dbe0" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x4075dbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4075ddb8"/>
        <function-ref name="write" scoped="" ref="0x4075de98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x4075c2f8" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x4075c2f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4075c4d0"/>
        <function-ref name="write" scoped="" ref="0x4075c5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4075e380" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4075e380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4075e558"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4075e638"/>
        <function-ref name="request" scoped="" ref="0x4075e718"/>
        <function-ref name="granted" scoped="" ref="0x4075e7f8"/>
        <function-ref name="isOwner" scoped="" ref="0x4075e8d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x4075c9d8" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x4075c9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4075cbb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x40766a20" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40766a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40766bf8"/>
        <function-ref name="sendDone" scoped="" ref="0x40766cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x4076fd50" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x4076fd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x4076ff28"/>
        <function-ref name="writeDone" scoped="" ref="0x4076e018"/>
        <function-ref name="write" scoped="" ref="0x4076e0f8"/>
        <function-ref name="beginRead" scoped="" ref="0x4076e1d8"/>
        <function-ref name="readDone" scoped="" ref="0x4076e2b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x4075ac10" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x4075ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x4075ade8"/>
        <function-ref name="abortRelease" scoped="" ref="0x4075aec8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x4076f010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x40769188" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40769188"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40769360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x40766e50" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WorkingState" scoped="" ref="0x40766e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x4076b050"/>
        <function-ref name="toIdle" scoped="" ref="0x4076b130"/>
        <function-ref name="isState" scoped="" ref="0x4076b210"/>
        <function-ref name="isIdle" scoped="" ref="0x4076b2f0"/>
        <function-ref name="requestState" scoped="" ref="0x4076b3d0"/>
        <function-ref name="forceState" scoped="" ref="0x4076b4b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x4076d890" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x4076d890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4076da68"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4076db48"/>
        <function-ref name="request" scoped="" ref="0x4076dc28"/>
        <function-ref name="granted" scoped="" ref="0x4076dd08"/>
        <function-ref name="isOwner" scoped="" ref="0x4076dde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x4076e6c8" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x4076e6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4076e8a0"/>
        <function-ref name="write" scoped="" ref="0x4076e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x4076ed88" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x4076ed88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4076d010"/>
        <function-ref name="write" scoped="" ref="0x4076d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4076b5f8" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4076b5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4076b7d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4076b8b0"/>
        <function-ref name="led1On" scoped="" ref="0x4076b990"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4076ba70"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4076bb50"/>
        <function-ref name="get" scoped="" ref="0x4076bc30"/>
        <function-ref name="led1Off" scoped="" ref="0x4076bd10"/>
        <function-ref name="led2Off" scoped="" ref="0x4076a0f0"/>
        <function-ref name="set" scoped="" ref="0x4076bdf0"/>
        <function-ref name="led0On" scoped="" ref="0x4076bed0"/>
        <function-ref name="led2On" scoped="" ref="0x4076a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4076f3f0" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4076f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4076f5c8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4076f6a8"/>
        <function-ref name="request" scoped="" ref="0x4076f788"/>
        <function-ref name="granted" scoped="" ref="0x4076f868"/>
        <function-ref name="isOwner" scoped="" ref="0x4076f948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x4077de78" loc="86:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grant" scoped="" ref="0x4077de78"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4077c070"/>
        <function-ref name="runTask" scoped="" ref="0x4077c150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x4076d4f8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x4076d4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4076d6d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40798010" loc="67:/opt/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40798010"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x407981e8"/>
        <function-ref name="toIdle" scoped="" ref="0x407982c8"/>
        <function-ref name="isState" scoped="" ref="0x407983a8"/>
        <function-ref name="isIdle" scoped="" ref="0x40798488"/>
        <function-ref name="requestState" scoped="" ref="0x40798568"/>
        <function-ref name="forceState" scoped="" ref="0x40798648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x407aa9a8" loc="66:/opt/tinyos-2.x/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x407aa9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x407aab80"/>
        <function-ref name="toIdle" scoped="" ref="0x407aac60"/>
        <function-ref name="isState" scoped="" ref="0x407aad40"/>
        <function-ref name="isIdle" scoped="" ref="0x407aae20"/>
        <function-ref name="requestState" scoped="" ref="0x407aaf00"/>
        <function-ref name="forceState" scoped="" ref="0x407a9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x407a6718" loc="66:/opt/tinyos-2.x/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x407a6718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407a68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x407a6cc8" loc="67:/opt/tinyos-2.x/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x407a6cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x407a6ea0"/>
        <function-ref name="toIdle" scoped="" ref="0x407a5010"/>
        <function-ref name="isState" scoped="" ref="0x407a50f0"/>
        <function-ref name="isIdle" scoped="" ref="0x407a51d0"/>
        <function-ref name="requestState" scoped="" ref="0x407a52b0"/>
        <function-ref name="forceState" scoped="" ref="0x407a5390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x407a7748" loc="43:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x407a7748"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407a7920"/>
        <function-ref name="sendDone" scoped="" ref="0x407a7a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x407a7410" loc="42:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x407a7410"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x407a75e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x407ab9b8" loc="39:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x407ab9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407abb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x407abcf0" loc="40:/opt/tinyos-2.x/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x407abcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x407abec8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x407a7010"/>
        <function-ref name="request" scoped="" ref="0x407a70f0"/>
        <function-ref name="granted" scoped="" ref="0x407a71d0"/>
        <function-ref name="isOwner" scoped="" ref="0x407a72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x407c63e8" loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x407c63e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407c65c0"/>
        <function-ref name="sendDone" scoped="" ref="0x407c66a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x407c60a0" loc="67:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x407c60a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x407c6278"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x407b0d50" loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x407b0d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407b0f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x407c6aa0" loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x407c6aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x407c6c78"/>
        <function-ref name="immediateRequest" scoped="" ref="0x407c6d58"/>
        <function-ref name="request" scoped="" ref="0x407c6e38"/>
        <function-ref name="granted" scoped="" ref="0x407c6f18"/>
        <function-ref name="isOwner" scoped="" ref="0x407c5010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x407d7010" loc="207:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x407d7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x407d71e8"/>
        <function-ref name="runTask" scoped="" ref="0x407d72c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x407c29d0" loc="79:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x407c29d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407c2ba8"/>
        <function-ref name="sendDone" scoped="" ref="0x407c2c88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x407bf500" loc="84:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x407bf500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x407bf6d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x407bf7b8"/>
        <function-ref name="request" scoped="" ref="0x407bf898"/>
        <function-ref name="granted" scoped="" ref="0x407bf978"/>
        <function-ref name="isOwner" scoped="" ref="0x407bfa58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x407c26a8" loc="78:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x407c26a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x407c2880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x407c2388" loc="77:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x407c2388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407c2560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x407cc998" loc="83:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x407cc998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x407ccb70"/>
        <function-ref name="sleep" scoped="" ref="0x407bf010"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x407ccd30"/>
        <function-ref name="dataReady" scoped="" ref="0x407bf0f0"/>
        <function-ref name="initMaster" scoped="" ref="0x407ccef0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x407c0010"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x407c00f0"/>
        <function-ref name="read" scoped="" ref="0x407c01d0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x407c02b0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x407c0390"/>
        <function-ref name="setClock" scoped="" ref="0x407c0470"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x407c0550"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x407c0630"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x407c0790"/>
        <function-ref name="setDataOrder" scoped="" ref="0x407c0870"/>
        <function-ref name="write" scoped="" ref="0x407c0950"/>
        <function-ref name="enableSpi" scoped="" ref="0x407c0a30"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x407c0b10"/>
        <function-ref name="getClockPhase" scoped="" ref="0x407c0bf0"/>
        <function-ref name="getClock" scoped="" ref="0x407c0cd0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x407c0db0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x407ccc50"/>
        <function-ref name="setClockPhase" scoped="" ref="0x407cce10"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x407c0e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x407c1100" loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x407c1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x407c12d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x407c13b8"/>
        <function-ref name="request" scoped="" ref="0x407c1498"/>
        <function-ref name="granted" scoped="" ref="0x407c1578"/>
        <function-ref name="isOwner" scoped="" ref="0x407c1658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x407c76f8" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x407c76f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x407c78d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x407c72f0" loc="85:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x407c72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x407c74c8"/>
        <function-ref name="userId" scoped="" ref="0x407c75a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x407f5290" loc="59:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x407f5290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x407f5468"/>
        <function-ref name="sleep" scoped="" ref="0x407f4870"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x407f5628"/>
        <function-ref name="dataReady" scoped="" ref="0x407f4950"/>
        <function-ref name="initMaster" scoped="" ref="0x407f57e8"/>
        <function-ref name="setMasterBit" scoped="" ref="0x407f58c8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x407f59a8"/>
        <function-ref name="read" scoped="" ref="0x407f5a88"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x407f5b68"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x407f5c48"/>
        <function-ref name="setClock" scoped="" ref="0x407f5d28"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x407f5e08"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x407f5ee8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x407f4090"/>
        <function-ref name="setDataOrder" scoped="" ref="0x407f4170"/>
        <function-ref name="write" scoped="" ref="0x407f4250"/>
        <function-ref name="enableSpi" scoped="" ref="0x407f4330"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x407f4410"/>
        <function-ref name="getClockPhase" scoped="" ref="0x407f44f0"/>
        <function-ref name="getClock" scoped="" ref="0x407f45d0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x407f46b0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x407f5548"/>
        <function-ref name="setClockPhase" scoped="" ref="0x407f5708"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x407f4790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x40807348" loc="64:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x40807348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40807520"/>
        <function-ref name="isInput" scoped="" ref="0x40807600"/>
        <function-ref name="toggle" scoped="" ref="0x408076e0"/>
        <function-ref name="isOutput" scoped="" ref="0x408077c0"/>
        <function-ref name="get" scoped="" ref="0x408078a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40807980"/>
        <function-ref name="set" scoped="" ref="0x40807a60"/>
        <function-ref name="clr" scoped="" ref="0x40807b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x407ee010" loc="62:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x407ee010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407ee1e8"/>
        <function-ref name="isInput" scoped="" ref="0x407ee2c8"/>
        <function-ref name="toggle" scoped="" ref="0x407ee3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x407ee488"/>
        <function-ref name="get" scoped="" ref="0x407ee568"/>
        <function-ref name="makeOutput" scoped="" ref="0x407ee648"/>
        <function-ref name="set" scoped="" ref="0x407ee728"/>
        <function-ref name="clr" scoped="" ref="0x407ee808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x408055e8" loc="61:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x408055e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408057c0"/>
        <function-ref name="isInput" scoped="" ref="0x408058a0"/>
        <function-ref name="toggle" scoped="" ref="0x40805980"/>
        <function-ref name="isOutput" scoped="" ref="0x40805a60"/>
        <function-ref name="get" scoped="" ref="0x40805b40"/>
        <function-ref name="makeOutput" scoped="" ref="0x40805c20"/>
        <function-ref name="set" scoped="" ref="0x40805d00"/>
        <function-ref name="clr" scoped="" ref="0x40805de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40805188" loc="58:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40805188"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40805360"/>
        <function-ref name="stop" scoped="" ref="0x40805440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x40807cb8" loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x40807cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40807e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x407f00f8" loc="57:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x407f00f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x407f02d0"/>
        <function-ref name="sleep" scoped="" ref="0x407ef710"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x407f0490"/>
        <function-ref name="dataReady" scoped="" ref="0x407ef7f0"/>
        <function-ref name="initMaster" scoped="" ref="0x407f0650"/>
        <function-ref name="setMasterBit" scoped="" ref="0x407f0730"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x407f0810"/>
        <function-ref name="read" scoped="" ref="0x407f08f0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x407f09d0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x407f0ab0"/>
        <function-ref name="setClock" scoped="" ref="0x407f0b90"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x407f0c70"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x407f0d50"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x407f0eb0"/>
        <function-ref name="setDataOrder" scoped="" ref="0x407ef010"/>
        <function-ref name="write" scoped="" ref="0x407ef0f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x407ef1d0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x407ef2b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x407ef390"/>
        <function-ref name="getClock" scoped="" ref="0x407ef470"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x407ef550"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x407f03b0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x407f0570"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x407ef630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x407ee980" loc="63:/opt/tinyos-2.x/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x407ee980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407eeb58"/>
        <function-ref name="isInput" scoped="" ref="0x407eec38"/>
        <function-ref name="toggle" scoped="" ref="0x407eed18"/>
        <function-ref name="isOutput" scoped="" ref="0x407eedf8"/>
        <function-ref name="get" scoped="" ref="0x407eeed8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40807010"/>
        <function-ref name="set" scoped="" ref="0x408070f0"/>
        <function-ref name="clr" scoped="" ref="0x408071d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x4082d3a8" loc="76:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x4082d3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x4082d590"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4082d670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4082dc60" loc="79:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4082dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4082de48"/>
        <function-ref name="configure" scoped="" ref="0x4082df28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4082eb98" loc="75:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4082eb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4082ed80"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4082ee60"/>
        <function-ref name="request" scoped="" ref="0x4082d010"/>
        <function-ref name="granted" scoped="" ref="0x4082d0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x4082d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x4082d7b0" loc="77:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x4082d7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x4082d988"/>
        <function-ref name="userId" scoped="" ref="0x4082da68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40d62d18" loc="34:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40d62d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d62ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x40d60090" loc="35:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x40d60090"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40d60268"/>
        <function-ref name="isEmpty" scoped="" ref="0x40d60348"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40d60428"/>
        <function-ref name="dequeue" scoped="" ref="0x40d60508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40d5f7c8" loc="52:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40d5f7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40d5f9b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40d5fa90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40d5e0a8" loc="56:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40d5e0a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40d5e290"/>
        <function-ref name="configure" scoped="" ref="0x40d5e370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x40d5e4d0" loc="57:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40d5e4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40d5e6a8"/>
        <function-ref name="isEmpty" scoped="" ref="0x40d5e788"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40d5e868"/>
        <function-ref name="dequeue" scoped="" ref="0x40d5e948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40d5f088" loc="51:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40d5f088"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d5f270"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40d5f350"/>
        <function-ref name="request" scoped="" ref="0x40d5f430"/>
        <function-ref name="granted" scoped="" ref="0x40d5f510"/>
        <function-ref name="isOwner" scoped="" ref="0x40d5f5f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40d5fbd0" loc="53:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40d5fbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40d5fda8"/>
        <function-ref name="userId" scoped="" ref="0x40d5fe88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x40d5eac8" loc="69:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x40d5eac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d5eca0"/>
        <function-ref name="runTask" scoped="" ref="0x40d5ed80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40861158" loc="35:/opt/tinyos-2.x/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40861158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40861330"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40861410"/>
        <function-ref name="led1On" scoped="" ref="0x408614f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x408615d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x408616b0"/>
        <function-ref name="get" scoped="" ref="0x40861790"/>
        <function-ref name="led1Off" scoped="" ref="0x40861870"/>
        <function-ref name="led2Off" scoped="" ref="0x40861bf0"/>
        <function-ref name="set" scoped="" ref="0x40861950"/>
        <function-ref name="led0On" scoped="" ref="0x40861a30"/>
        <function-ref name="led2On" scoped="" ref="0x40861b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x4085dae8" loc="39:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x4085dae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4085dcc0"/>
        <function-ref name="isInput" scoped="" ref="0x4085dda0"/>
        <function-ref name="toggle" scoped="" ref="0x4085de80"/>
        <function-ref name="isOutput" scoped="" ref="0x4085c010"/>
        <function-ref name="get" scoped="" ref="0x4085c0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4085c1d0"/>
        <function-ref name="set" scoped="" ref="0x4085c2b0"/>
        <function-ref name="clr" scoped="" ref="0x4085c390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40860b68" loc="35:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40860b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40860d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x4085c508" loc="40:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x4085c508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4085c6e0"/>
        <function-ref name="isInput" scoped="" ref="0x4085c7c0"/>
        <function-ref name="toggle" scoped="" ref="0x4085c8a0"/>
        <function-ref name="isOutput" scoped="" ref="0x4085c980"/>
        <function-ref name="get" scoped="" ref="0x4085ca60"/>
        <function-ref name="makeOutput" scoped="" ref="0x4085cb40"/>
        <function-ref name="set" scoped="" ref="0x4085cc20"/>
        <function-ref name="clr" scoped="" ref="0x4085cd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40860e88" loc="36:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40860e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4085d070"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4085d150"/>
        <function-ref name="led1On" scoped="" ref="0x4085d230"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4085d310"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4085d3f0"/>
        <function-ref name="get" scoped="" ref="0x4085d4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x4085d5b0"/>
        <function-ref name="led2Off" scoped="" ref="0x4085d930"/>
        <function-ref name="set" scoped="" ref="0x4085d690"/>
        <function-ref name="led0On" scoped="" ref="0x4085d770"/>
        <function-ref name="led2On" scoped="" ref="0x4085d850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x4085ce78" loc="41:/opt/tinyos-2.x/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x4085ce78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4085b070"/>
        <function-ref name="isInput" scoped="" ref="0x4085b150"/>
        <function-ref name="toggle" scoped="" ref="0x4085b230"/>
        <function-ref name="isOutput" scoped="" ref="0x4085b310"/>
        <function-ref name="get" scoped="" ref="0x4085b3f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4085b4d0"/>
        <function-ref name="set" scoped="" ref="0x4085b5b0"/>
        <function-ref name="clr" scoped="" ref="0x4085b690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x40868bc0" loc="35:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40868bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40868d98"/>
        <function-ref name="isInput" scoped="" ref="0x40868e78"/>
        <function-ref name="toggle" scoped="" ref="0x40867010"/>
        <function-ref name="isOutput" scoped="" ref="0x408670f0"/>
        <function-ref name="get" scoped="" ref="0x408671d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x408672b0"/>
        <function-ref name="set" scoped="" ref="0x40867390"/>
        <function-ref name="clr" scoped="" ref="0x40867470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x40867608" loc="36:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40867608"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408677e0"/>
        <function-ref name="isInput" scoped="" ref="0x408678c0"/>
        <function-ref name="toggle" scoped="" ref="0x408679a0"/>
        <function-ref name="isOutput" scoped="" ref="0x40867a80"/>
        <function-ref name="get" scoped="" ref="0x40867b60"/>
        <function-ref name="makeOutput" scoped="" ref="0x40867c40"/>
        <function-ref name="set" scoped="" ref="0x40867d20"/>
        <function-ref name="clr" scoped="" ref="0x40867e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x40866970" loc="38:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40866970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40866b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x40866010" loc="37:/opt/tinyos-2.x/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x40866010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408661e8"/>
        <function-ref name="isInput" scoped="" ref="0x408662c8"/>
        <function-ref name="toggle" scoped="" ref="0x408663a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40866488"/>
        <function-ref name="get" scoped="" ref="0x40866568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40866648"/>
        <function-ref name="set" scoped="" ref="0x40866728"/>
        <function-ref name="clr" scoped="" ref="0x40866808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x4089c2b0" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x4089c2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4089c488"/>
        <function-ref name="write" scoped="" ref="0x4089c568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x4089d5c8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x4089d5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4089d7a0"/>
        <function-ref name="write" scoped="" ref="0x4089d880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x4089b010" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x4089b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4089b1e8"/>
        <function-ref name="write" scoped="" ref="0x4089b2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x4089bbd8" loc="76:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x4089bbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4089beb0"/>
        <function-ref name="write" scoped="" ref="0x4089a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x4089a190" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x4089a190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4089a368"/>
        <function-ref name="write" scoped="" ref="0x4089a448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40884ab8" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40884ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40884c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x40899f18" loc="88:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40899f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40898108"/>
        <function-ref name="write" scoped="" ref="0x408981e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x4089de38" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x4089de38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4089c050"/>
        <function-ref name="write" scoped="" ref="0x4089c130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x4089c6e8" loc="67:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x4089c6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4089c8c0"/>
        <function-ref name="write" scoped="" ref="0x4089c9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40883cf8" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40883cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40883ed0"/>
        <function-ref name="write" scoped="" ref="0x4089d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40885170" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40885170"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40885348"/>
        <function-ref name="abortRelease" scoped="" ref="0x40885428"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40885508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x408859e0" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x408859e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40885bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x408834e8" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x408834e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x408836c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40883190" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40883190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40883368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x4089ad58" loc="80:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x4089ad58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40899010"/>
        <function-ref name="write" scoped="" ref="0x408990f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x4089da00" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x4089da00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4089dbd8"/>
        <function-ref name="write" scoped="" ref="0x4089dcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40884e10" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40884e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40883010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x4089b7a0" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x4089b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4089b978"/>
        <function-ref name="write" scoped="" ref="0x4089ba58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x40899ae0" loc="87:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x40899ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40899cb8"/>
        <function-ref name="write" scoped="" ref="0x40899d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x40898368" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40898368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40898540"/>
        <function-ref name="writeDone" scoped="" ref="0x40898620"/>
        <function-ref name="write" scoped="" ref="0x40898700"/>
        <function-ref name="beginRead" scoped="" ref="0x408987e0"/>
        <function-ref name="readDone" scoped="" ref="0x408988c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40885d38" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40885d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40885f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x4089d190" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x4089d190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4089d368"/>
        <function-ref name="write" scoped="" ref="0x4089d448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40883840" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40883840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40883a98"/>
        <function-ref name="write" scoped="" ref="0x40883b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x408840b0" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x408840b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40884288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x4089cb20" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x4089cb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4089ccf8"/>
        <function-ref name="write" scoped="" ref="0x4089cdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40886a58" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40886a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40886c30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40886d10"/>
        <function-ref name="request" scoped="" ref="0x40886df0"/>
        <function-ref name="granted" scoped="" ref="0x40886ed0"/>
        <function-ref name="isOwner" scoped="" ref="0x40885010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x4089aa00" loc="79:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x4089aa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4089abd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x4089b448" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x4089b448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4089b620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x408996a8" loc="86:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x408996a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40899880"/>
        <function-ref name="write" scoped="" ref="0x40899960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x40899270" loc="85:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x40899270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40899448"/>
        <function-ref name="write" scoped="" ref="0x40899528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40885688" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40885688"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40885860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x4089a5c8" loc="78:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x4089a5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4089a7a0"/>
        <function-ref name="write" scoped="" ref="0x4089a880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40884760" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40884760"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40884938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40884408" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40884408"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x408845e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x40898a40" loc="92:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40898a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40898c18"/>
        <function-ref name="writeDone" scoped="" ref="0x40898cf8"/>
        <function-ref name="write" scoped="" ref="0x40898dd8"/>
        <function-ref name="beginRead" scoped="" ref="0x40898eb8"/>
        <function-ref name="readDone" scoped="" ref="0x40896010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x40890b90" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40890b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40890d68"/>
        <function-ref name="write" scoped="" ref="0x40890e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40891eb8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40891eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408900c0"/>
        <function-ref name="write" scoped="" ref="0x408901a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x408aa880" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x408aa880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408aaa58"/>
        <function-ref name="write" scoped="" ref="0x408aab38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x408a9468" loc="76:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x408a9468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408a9740"/>
        <function-ref name="write" scoped="" ref="0x408a9820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x408a99a0" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x408a99a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408a9b78"/>
        <function-ref name="write" scoped="" ref="0x408a9c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40892368" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40892368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40892540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x408a76e8" loc="88:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x408a76e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408a78c0"/>
        <function-ref name="write" scoped="" ref="0x408a79a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x40890758" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40890758"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40890930"/>
        <function-ref name="write" scoped="" ref="0x40890a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x408aa010" loc="67:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x408aa010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408aa1e8"/>
        <function-ref name="write" scoped="" ref="0x408aa2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40891648" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40891648"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40891820"/>
        <function-ref name="write" scoped="" ref="0x40891900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40894a00" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40894a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40894bd8"/>
        <function-ref name="abortRelease" scoped="" ref="0x40894cb8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40894d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40893288" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40893288"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40893460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40892d70" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40892d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40891010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40892a18" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40892a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40892bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x408a85c8" loc="80:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x408a85c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408a87a0"/>
        <function-ref name="write" scoped="" ref="0x408a8880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40890320" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40890320"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408904f8"/>
        <function-ref name="write" scoped="" ref="0x408905d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x408926c0" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x408926c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40892898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x408a9030" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x408a9030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408a9208"/>
        <function-ref name="write" scoped="" ref="0x408a92e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x408a72b0" loc="87:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x408a72b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408a7488"/>
        <function-ref name="write" scoped="" ref="0x408a7568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x408a7b20" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x408a7b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x408a7cf8"/>
        <function-ref name="writeDone" scoped="" ref="0x408a7dd8"/>
        <function-ref name="write" scoped="" ref="0x408a7eb8"/>
        <function-ref name="beginRead" scoped="" ref="0x408a6010"/>
        <function-ref name="readDone" scoped="" ref="0x408a60f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x408935e0" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x408935e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x408937b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x40891a80" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40891a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40891c58"/>
        <function-ref name="write" scoped="" ref="0x40891d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40891190" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40891190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408913e8"/>
        <function-ref name="write" scoped="" ref="0x408914c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40893938" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40893938"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40893b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x408aa448" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x408aa448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408aa620"/>
        <function-ref name="write" scoped="" ref="0x408aa700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40894348" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40894348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40894520"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40894600"/>
        <function-ref name="request" scoped="" ref="0x408946e0"/>
        <function-ref name="granted" scoped="" ref="0x408947c0"/>
        <function-ref name="isOwner" scoped="" ref="0x408948a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x408a8270" loc="79:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x408a8270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x408a8448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x408aacb8" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x408aacb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x408aae90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x408a8e38" loc="86:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x408a8e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408a7050"/>
        <function-ref name="write" scoped="" ref="0x408a7130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x408a8a00" loc="85:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x408a8a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408a8bd8"/>
        <function-ref name="write" scoped="" ref="0x408a8cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40894f18" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40894f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40893108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x408a9dd8" loc="78:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x408a9dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408a8010"/>
        <function-ref name="write" scoped="" ref="0x408a80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40892010" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40892010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x408921e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40893c90" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40893c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40893e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x408a6270" loc="92:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x408a6270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x408a6448"/>
        <function-ref name="writeDone" scoped="" ref="0x408a6528"/>
        <function-ref name="write" scoped="" ref="0x408a6608"/>
        <function-ref name="beginRead" scoped="" ref="0x408a66e8"/>
        <function-ref name="readDone" scoped="" ref="0x408a67c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x408a13b0" loc="43:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x408a13b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x408a1588"/>
        <function-ref name="changed" scoped="" ref="0x408a1668"/>
        <function-ref name="amGroup" scoped="" ref="0x408a1748"/>
        <function-ref name="setAddress" scoped="" ref="0x408a1828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x408c5528" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x408c5528"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x408c5700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x408ae8e8" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x408ae8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x408aeac0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x408aeba0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x408aec80"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x408aed60"/>
        <function-ref name="setCca" scoped="" ref="0x408aee40"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x408aef20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x408c51c8" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x408c51c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x408c53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x408ae240" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x408ae240"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408ae418"/>
        <function-ref name="cancel" scoped="" ref="0x408ae4f8"/>
        <function-ref name="modify" scoped="" ref="0x408ae5d8"/>
        <function-ref name="sendDone" scoped="" ref="0x408ae6b8"/>
        <function-ref name="resend" scoped="" ref="0x408ae798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x408afd60" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x408afd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x408ae010"/>
        <function-ref name="stop" scoped="" ref="0x408ae0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioTimeStamping" ref="0x408c7bf8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioTimeStamping" scoped="" ref="0x408c7bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTimeStamping"/>
      </instance>
      <interface-functions>
        <function-ref name="transmittedSFD" scoped="" ref="0x408c7dd0"/>
        <function-ref name="receivedSFD" scoped="" ref="0x408c7eb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x408d0500" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x408d0500"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x408d06d8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x408d07b8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x408d0898"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x408d0978"/>
        <function-ref name="setCca" scoped="" ref="0x408d0a58"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x408d0b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x408cf1b8" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x408cf1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x408cf390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x408e5400" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x408e5400"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x408e55d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x408cdc20" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x408cdc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x408cddf8"/>
        <function-ref name="disable" scoped="" ref="0x408cded8"/>
        <function-ref name="captured" scoped="" ref="0x408cc010"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x408cc0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x408cf9e0" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0x408cf9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402ec820"/>
            <typename><typedef-ref name="T32khz" ref="0x402ec9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40032340"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x408cede0"/>
        <function-ref name="fired" scoped="" ref="0x408ce6a0"/>
        <function-ref name="startAt" scoped="" ref="0x408ceaa0"/>
        <function-ref name="isRunning" scoped="" ref="0x408ce8a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x408cd010"/>
        <function-ref name="start" scoped="" ref="0x408ce200"/>
        <function-ref name="stop" scoped="" ref="0x408ce4a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x408cd1d8" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x408cd1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x408cd3b0"/>
        <function-ref name="getRssi" scoped="" ref="0x408cd490"/>
        <function-ref name="getPower" scoped="" ref="0x408cd570"/>
        <function-ref name="getLqi" scoped="" ref="0x408cd650"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x408e6450" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x408e6450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408e6628"/>
        <function-ref name="write" scoped="" ref="0x408e6708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x408e68a0" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x408e68a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408e6a78"/>
        <function-ref name="write" scoped="" ref="0x408e6b58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x408e1d78" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x408e1d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408e3070"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x408e3150"/>
        <function-ref name="sfd" scoped="" ref="0x408e3230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408d1dc8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408d1dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408d0010"/>
        <function-ref name="cancel" scoped="" ref="0x408d00f0"/>
        <function-ref name="modify" scoped="" ref="0x408d01d0"/>
        <function-ref name="sendDone" scoped="" ref="0x408d02b0"/>
        <function-ref name="resend" scoped="" ref="0x408d0390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x408c9758" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x408c9758"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x408c9930"/>
        <function-ref name="abortRelease" scoped="" ref="0x408c9a10"/>
        <function-ref name="attemptRelease" scoped="" ref="0x408c9af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x408e5778" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x408e5778"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x408e5950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x408ccc18" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x408ccc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408cce70"/>
        <function-ref name="isInput" scoped="" ref="0x408cb010"/>
        <function-ref name="toggle" scoped="" ref="0x408cb0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x408cb1d0"/>
        <function-ref name="get" scoped="" ref="0x408cb2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x408cb390"/>
        <function-ref name="set" scoped="" ref="0x408cb470"/>
        <function-ref name="clr" scoped="" ref="0x408cb550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408d1630" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408d1630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408d1808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x408cd7c8" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x408cd7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x408cd9a0"/>
        <function-ref name="getMetadata" scoped="" ref="0x408cda80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x408e5af0" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x408e5af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408e5cc8"/>
        <function-ref name="write" scoped="" ref="0x408e5da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x408c9090" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x408c9090"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408c9268"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408c9348"/>
        <function-ref name="request" scoped="" ref="0x408c9428"/>
        <function-ref name="granted" scoped="" ref="0x408c9508"/>
        <function-ref name="isOwner" scoped="" ref="0x408c95e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x408cc288" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x408cc288"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408cc460"/>
        <function-ref name="isInput" scoped="" ref="0x408cc540"/>
        <function-ref name="toggle" scoped="" ref="0x408cc620"/>
        <function-ref name="isOutput" scoped="" ref="0x408cc700"/>
        <function-ref name="get" scoped="" ref="0x408cc7e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x408cc8c0"/>
        <function-ref name="set" scoped="" ref="0x408cc9a0"/>
        <function-ref name="clr" scoped="" ref="0x408cca80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x408e6cf0" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x408e6cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x408e6ec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x408cb6e8" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x408cb6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408cb8c0"/>
        <function-ref name="isInput" scoped="" ref="0x408cb9a0"/>
        <function-ref name="toggle" scoped="" ref="0x408cba80"/>
        <function-ref name="isOutput" scoped="" ref="0x408cbb60"/>
        <function-ref name="get" scoped="" ref="0x408cbc40"/>
        <function-ref name="makeOutput" scoped="" ref="0x408cbd20"/>
        <function-ref name="set" scoped="" ref="0x408cbe00"/>
        <function-ref name="clr" scoped="" ref="0x408cbee0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x408e3398" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x408e3398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x408e3570"/>
        <function-ref name="led0Toggle" scoped="" ref="0x408e3650"/>
        <function-ref name="led1On" scoped="" ref="0x408e3730"/>
        <function-ref name="led1Toggle" scoped="" ref="0x408e3810"/>
        <function-ref name="led2Toggle" scoped="" ref="0x408e38f0"/>
        <function-ref name="get" scoped="" ref="0x408e39d0"/>
        <function-ref name="led1Off" scoped="" ref="0x408e3ab0"/>
        <function-ref name="led2Off" scoped="" ref="0x408e3e30"/>
        <function-ref name="set" scoped="" ref="0x408e3b90"/>
        <function-ref name="led0On" scoped="" ref="0x408e3c70"/>
        <function-ref name="led2On" scoped="" ref="0x408e3d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeStamp" ref="0x408d0ce0" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStamp" scoped="" ref="0x408d0ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTimeStamping"/>
      </instance>
      <interface-functions>
        <function-ref name="transmittedSFD" scoped="" ref="0x408d0eb8"/>
        <function-ref name="receivedSFD" scoped="" ref="0x408cf010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x408d1978" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x408d1978"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x408d1b50"/>
        <function-ref name="stop" scoped="" ref="0x408d1c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x408c9c88" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x408c9c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x408c9e60"/>
        <function-ref name="writeDone" scoped="" ref="0x408e6010"/>
        <function-ref name="write" scoped="" ref="0x408e60f0"/>
        <function-ref name="beginRead" scoped="" ref="0x408e61d0"/>
        <function-ref name="readDone" scoped="" ref="0x408e62b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x408e5088" loc="67:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x408e5088"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x408e5260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x408cf538" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x408cf538"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x408cf710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x409302b0" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x409302b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40930488"/>
        <function-ref name="write" scoped="" ref="0x40930568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x409145c8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x409145c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409147a0"/>
        <function-ref name="write" scoped="" ref="0x40914880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x4092f010" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x4092f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4092f1e8"/>
        <function-ref name="write" scoped="" ref="0x4092f2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x4092fbd8" loc="76:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x4092fbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4092feb0"/>
        <function-ref name="write" scoped="" ref="0x4092e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x4092e190" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x4092e190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4092e368"/>
        <function-ref name="write" scoped="" ref="0x4092e448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40916a18" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40916a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40916bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x4092df18" loc="88:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x4092df18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4092c108"/>
        <function-ref name="write" scoped="" ref="0x4092c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x40914e38" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40914e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40930050"/>
        <function-ref name="write" scoped="" ref="0x40930130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x409306e8" loc="67:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x409306e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409308c0"/>
        <function-ref name="write" scoped="" ref="0x409309a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40915cf8" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40915cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40915ed0"/>
        <function-ref name="write" scoped="" ref="0x40914010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40917010" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40917010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x409171e8"/>
        <function-ref name="abortRelease" scoped="" ref="0x409172c8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x409173a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40917880" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40917880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40917a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x409154e8" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x409154e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409156c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40915190" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40915190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40915368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x4092ed58" loc="80:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x4092ed58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4092d010"/>
        <function-ref name="write" scoped="" ref="0x4092d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40914a00" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40914a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40914bd8"/>
        <function-ref name="write" scoped="" ref="0x40914cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40916d70" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40916d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40915010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x4092f7a0" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x4092f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4092f978"/>
        <function-ref name="write" scoped="" ref="0x4092fa58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x4092dae0" loc="87:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x4092dae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4092dcb8"/>
        <function-ref name="write" scoped="" ref="0x4092dd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x4092c368" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x4092c368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x4092c540"/>
        <function-ref name="writeDone" scoped="" ref="0x4092c620"/>
        <function-ref name="write" scoped="" ref="0x4092c700"/>
        <function-ref name="beginRead" scoped="" ref="0x4092c7e0"/>
        <function-ref name="readDone" scoped="" ref="0x4092c8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40917bd8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40917bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40917db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x40914190" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40914190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40914368"/>
        <function-ref name="write" scoped="" ref="0x40914448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40915840" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40915840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40915a98"/>
        <function-ref name="write" scoped="" ref="0x40915b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40916010" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40916010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409161e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x40930b20" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40930b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40930cf8"/>
        <function-ref name="write" scoped="" ref="0x40930dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x409188e8" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x409188e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40918ac0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40918ba0"/>
        <function-ref name="request" scoped="" ref="0x40918c80"/>
        <function-ref name="granted" scoped="" ref="0x40918d60"/>
        <function-ref name="isOwner" scoped="" ref="0x40918e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x4092ea00" loc="79:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x4092ea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4092ebd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x4092f448" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x4092f448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4092f620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x4092d6a8" loc="86:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x4092d6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4092d880"/>
        <function-ref name="write" scoped="" ref="0x4092d960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x4092d270" loc="85:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x4092d270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4092d448"/>
        <function-ref name="write" scoped="" ref="0x4092d528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40917528" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40917528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40917700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x4092e5c8" loc="78:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x4092e5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4092e7a0"/>
        <function-ref name="write" scoped="" ref="0x4092e880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x409166c0" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x409166c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40916898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40916368" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40916368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40916540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x4092ca40" loc="92:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x4092ca40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x4092cc18"/>
        <function-ref name="writeDone" scoped="" ref="0x4092ccf8"/>
        <function-ref name="write" scoped="" ref="0x4092cdd8"/>
        <function-ref name="beginRead" scoped="" ref="0x4092ceb8"/>
        <function-ref name="readDone" scoped="" ref="0x4092b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x40927ef0" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x40927ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409240e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x409241c0"/>
        <function-ref name="sfd" scoped="" ref="0x409242a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40924408" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40924408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x409245e0"/>
        <function-ref name="receive" scoped="" ref="0x409246c0"/>
        <function-ref name="getPayload" scoped="" ref="0x409247a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x40924948" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x40924948"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40924b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40927ac8" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40927ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40927ca0"/>
        <function-ref name="stop" scoped="" ref="0x40927d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AesSecurity" ref="0x40940010" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AesSecurity" scoped="" ref="0x40940010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AesSecurity"/>
      </instance>
      <interface-functions>
        <function-ref name="AFWAsetReceivePMode" scoped="" ref="0x409401e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x4093b608" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x4093b608"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4093b7e0"/>
        <function-ref name="isInput" scoped="" ref="0x4093b8c0"/>
        <function-ref name="toggle" scoped="" ref="0x4093b9a0"/>
        <function-ref name="isOutput" scoped="" ref="0x4093ba80"/>
        <function-ref name="get" scoped="" ref="0x4093bb60"/>
        <function-ref name="makeOutput" scoped="" ref="0x4093bc40"/>
        <function-ref name="set" scoped="" ref="0x4093bd20"/>
        <function-ref name="clr" scoped="" ref="0x4093be00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x40937010" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x40937010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x409371e8"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x409372c8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x409373a8"/>
        <function-ref name="syncDone" scoped="" ref="0x40937488"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40937568"/>
        <function-ref name="setChannel" scoped="" ref="0x40937648"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x40937728"/>
        <function-ref name="setPanAddr" scoped="" ref="0x40937808"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x409378e8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x409379c8"/>
        <function-ref name="sync" scoped="" ref="0x40937aa8"/>
        <function-ref name="getChannel" scoped="" ref="0x40937b88"/>
        <function-ref name="getPanAddr" scoped="" ref="0x40937c68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x4094b668" loc="144:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0x4094b668"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4094b940"/>
        <function-ref name="runTask" scoped="" ref="0x4094ba20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x409352d0" loc="67:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x409352d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409354a8"/>
        <function-ref name="write" scoped="" ref="0x40935588"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x4093a010" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x4093a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4093a1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4093a2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4093a3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4093a488"/>
        <function-ref name="get" scoped="" ref="0x4093a568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4093a648"/>
        <function-ref name="set" scoped="" ref="0x4093a728"/>
        <function-ref name="clr" scoped="" ref="0x4093a808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x40937e80" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x40937e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40936070"/>
        <function-ref name="write" scoped="" ref="0x40936150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x40938558" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40938558"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40938730"/>
        <function-ref name="getRssi" scoped="" ref="0x40938810"/>
        <function-ref name="getPower" scoped="" ref="0x409388f0"/>
        <function-ref name="getLqi" scoped="" ref="0x409389d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x4093db48" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x4093db48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4093dd20"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x4093de00"/>
        <function-ref name="sfd" scoped="" ref="0x4093dee0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x40939df0" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40939df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40938070"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x4093cc58" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x4093cc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4093ce30"/>
        <function-ref name="isInput" scoped="" ref="0x4093cf10"/>
        <function-ref name="toggle" scoped="" ref="0x4093b010"/>
        <function-ref name="isOutput" scoped="" ref="0x4093b0f0"/>
        <function-ref name="get" scoped="" ref="0x4093b1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4093b2b0"/>
        <function-ref name="set" scoped="" ref="0x4093b390"/>
        <function-ref name="clr" scoped="" ref="0x4093b470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x409362f0" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x409362f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409364c8"/>
        <function-ref name="write" scoped="" ref="0x409365a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4093d3d8" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4093d3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4093d5b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40938b48" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40938b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40938d20"/>
        <function-ref name="getMetadata" scoped="" ref="0x40938e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="waitDecTask" ref="0x4095cf10" loc="259:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="waitDecTask" scoped="" ref="0x4095cf10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4095b108"/>
        <function-ref name="runTask" scoped="" ref="0x4095b1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4093c060" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4093c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x4093c238"/>
        <function-ref name="receive" scoped="" ref="0x4093c318"/>
        <function-ref name="getPayload" scoped="" ref="0x4093c3f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40939010" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40939010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409391e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409392c8"/>
        <function-ref name="request" scoped="" ref="0x409393a8"/>
        <function-ref name="granted" scoped="" ref="0x40939488"/>
        <function-ref name="isOwner" scoped="" ref="0x40939568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="waitTask" ref="0x4095f6e8" loc="237:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="waitTask" scoped="" ref="0x4095f6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4095f8c0"/>
        <function-ref name="runTask" scoped="" ref="0x4095f9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x40939700" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40939700"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409398d8"/>
        <function-ref name="writeDone" scoped="" ref="0x409399b8"/>
        <function-ref name="write" scoped="" ref="0x40939a98"/>
        <function-ref name="beginRead" scoped="" ref="0x40939b78"/>
        <function-ref name="readDone" scoped="" ref="0x40939c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x40936740" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40936740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40936918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x4093c5a0" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x4093c5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x4093c778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x409356f0" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x409356f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x409358c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x409359a8"/>
        <function-ref name="led1On" scoped="" ref="0x40935a88"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40935b68"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40935c48"/>
        <function-ref name="get" scoped="" ref="0x40935d28"/>
        <function-ref name="led1Off" scoped="" ref="0x40935e08"/>
        <function-ref name="led2Off" scoped="" ref="0x409341d0"/>
        <function-ref name="set" scoped="" ref="0x40935ee8"/>
        <function-ref name="led0On" scoped="" ref="0x40934010"/>
        <function-ref name="led2On" scoped="" ref="0x409340f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x40936e28" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40936e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40935050"/>
        <function-ref name="write" scoped="" ref="0x40935130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x40936ab0" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40936ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40936c88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x4093a9a8" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x4093a9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4093ab80"/>
        <function-ref name="disable" scoped="" ref="0x4093ac60"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x4093ad40"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x4093ae20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x40938210" loc="57:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40938210"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409383e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x4093d720" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x4093d720"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4093d8f8"/>
        <function-ref name="stop" scoped="" ref="0x4093d9d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AesSecurity" ref="0x4093c8e8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AesSecurity" scoped="" ref="0x4093c8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AesSecurity"/>
      </instance>
      <interface-functions>
        <function-ref name="AFWAsetReceivePMode" scoped="" ref="0x4093cac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x4099fcd8" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x4099fcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x4099feb0"/>
        <function-ref name="getRssi" scoped="" ref="0x4099e010"/>
        <function-ref name="getPower" scoped="" ref="0x4099e0f0"/>
        <function-ref name="getLqi" scoped="" ref="0x4099e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x4099e840" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x4099e840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x4099ea18"/>
        <function-ref name="getMetadata" scoped="" ref="0x4099eaf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x4099e350" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x4099e350"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4099e528"/>
        <function-ref name="noAck" scoped="" ref="0x4099e608"/>
        <function-ref name="wasAcked" scoped="" ref="0x4099e6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x409ae6e8" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x409ae6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ae8c0"/>
        <function-ref name="write" scoped="" ref="0x409ae9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x409afa00" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x409afa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409afbd8"/>
        <function-ref name="write" scoped="" ref="0x409afcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x409ad448" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x409ad448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ad620"/>
        <function-ref name="write" scoped="" ref="0x409ad700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x409ac030" loc="76:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x409ac030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ac308"/>
        <function-ref name="write" scoped="" ref="0x409ac3e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x409ac568" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x409ac568"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ac740"/>
        <function-ref name="write" scoped="" ref="0x409ac820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x409a0ef0" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x409a0ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b00e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x409a92b0" loc="88:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x409a92b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409a9488"/>
        <function-ref name="write" scoped="" ref="0x409a9568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x409ae2b0" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x409ae2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ae488"/>
        <function-ref name="write" scoped="" ref="0x409ae568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x409aeb20" loc="67:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x409aeb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409aecf8"/>
        <function-ref name="write" scoped="" ref="0x409aedd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x409af190" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x409af190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409af368"/>
        <function-ref name="write" scoped="" ref="0x409af448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40981530" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40981530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40981708"/>
        <function-ref name="abortRelease" scoped="" ref="0x409817e8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x409818c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40981da0" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40981da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409a0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x409b0910" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x409b0910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b0ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x409b05b8" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x409b05b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b0790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x409aa190" loc="80:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x409aa190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409aa368"/>
        <function-ref name="write" scoped="" ref="0x409aa448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x409afe38" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x409afe38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ae050"/>
        <function-ref name="write" scoped="" ref="0x409ae130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x409b0260" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x409b0260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409b0438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x409adbd8" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x409adbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409addb0"/>
        <function-ref name="write" scoped="" ref="0x409ade90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x409aae38" loc="87:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x409aae38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409a9050"/>
        <function-ref name="write" scoped="" ref="0x409a9130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x409a96e8" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x409a96e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409a98c0"/>
        <function-ref name="writeDone" scoped="" ref="0x409a99a0"/>
        <function-ref name="write" scoped="" ref="0x409a9a80"/>
        <function-ref name="beginRead" scoped="" ref="0x409a9b60"/>
        <function-ref name="readDone" scoped="" ref="0x409a9c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x409a0190" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x409a0190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409a0368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x409af5c8" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x409af5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409af7a0"/>
        <function-ref name="write" scoped="" ref="0x409af880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x409b0c68" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x409b0c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b0ec0"/>
        <function-ref name="write" scoped="" ref="0x409af010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x409a04e8" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x409a04e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409a06c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x409ad010" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x409ad010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ad1e8"/>
        <function-ref name="write" scoped="" ref="0x409ad2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40992e30" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40992e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40981050"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40981130"/>
        <function-ref name="request" scoped="" ref="0x40981210"/>
        <function-ref name="granted" scoped="" ref="0x409812f0"/>
        <function-ref name="isOwner" scoped="" ref="0x409813d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x409acdd8" loc="79:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x409acdd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409aa010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x409ad880" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x409ad880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409ada58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x409aaa00" loc="86:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x409aaa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409aabd8"/>
        <function-ref name="write" scoped="" ref="0x409aacb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x409aa5c8" loc="85:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x409aa5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409aa7a0"/>
        <function-ref name="write" scoped="" ref="0x409aa880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40981a48" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40981a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40981c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x409ac9a0" loc="78:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x409ac9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409acb78"/>
        <function-ref name="write" scoped="" ref="0x409acc58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x409a0b98" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x409a0b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409a0d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x409a0840" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x409a0840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409a0a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x409a9dc0" loc="92:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x409a9dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409a8010"/>
        <function-ref name="writeDone" scoped="" ref="0x409a80f0"/>
        <function-ref name="write" scoped="" ref="0x409a81d0"/>
        <function-ref name="beginRead" scoped="" ref="0x409a82b0"/>
        <function-ref name="readDone" scoped="" ref="0x409a8390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x409b59e0" loc="35:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x409b59e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x409b5bb8"/>
        <function-ref name="rand32" scoped="" ref="0x409b5c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x409b5130" loc="34:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x409b5130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409b5758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x409b92e0" loc="33:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x409b92e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409b94b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x409b2990" loc="34:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x409b2990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x409b2b68"/>
        <function-ref name="rand32" scoped="" ref="0x409b2c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x409b20e0" loc="33:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x409b20e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409b2708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x409b7cb0" loc="32:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x409b7cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409b7e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x409cf9e0" loc="37:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <component-ref qname="RandomMlcgP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x409cf9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x409cfbb8"/>
        <function-ref name="rand32" scoped="" ref="0x409cfc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x409cf130" loc="36:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <component-ref qname="RandomMlcgP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x409cf130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409cf758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x409b1ce8" loc="35:/opt/tinyos-2.x/tos/system/RandomMlcgP.nc">
      <component-ref qname="RandomMlcgP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x409b1ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409b1ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x409bb870" loc="67:/opt/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x409bb870"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x409bba48"/>
        <function-ref name="toIdle" scoped="" ref="0x409bbb28"/>
        <function-ref name="isState" scoped="" ref="0x409bbc08"/>
        <function-ref name="isIdle" scoped="" ref="0x409bbce8"/>
        <function-ref name="requestState" scoped="" ref="0x409bbdc8"/>
        <function-ref name="forceState" scoped="" ref="0x409bbea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x409c6c38" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x409c6c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409c6e10"/>
        <function-ref name="getPayload" scoped="" ref="0x409c6ef0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409c5010"/>
        <function-ref name="cancel" scoped="" ref="0x409c50f0"/>
        <function-ref name="sendDone" scoped="" ref="0x409c51d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x409c6530" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x409c6530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409c6708"/>
        <function-ref name="getPayload" scoped="" ref="0x409c67e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409c68c8"/>
        <function-ref name="cancel" scoped="" ref="0x409c69a8"/>
        <function-ref name="sendDone" scoped="" ref="0x409c6a88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x409c2d50" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x409c2d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409c2f28"/>
        <function-ref name="getPayload" scoped="" ref="0x409c1018"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409c10f8"/>
        <function-ref name="cancel" scoped="" ref="0x409c11d8"/>
        <function-ref name="sendDone" scoped="" ref="0x409c12b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x409c2328" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x409c2328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409c2500"/>
        <function-ref name="getPayload" scoped="" ref="0x409c25e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409c26c0"/>
        <function-ref name="cancel" scoped="" ref="0x409c27a0"/>
        <function-ref name="sendDone" scoped="" ref="0x409c2880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x409c1b80" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x409c1b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x409c1d58"/>
        <function-ref name="rand32" scoped="" ref="0x409c1e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x409c29c8" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x409c29c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409c2ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x409e2010" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x409e2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x409e21e8"/>
        <function-ref name="getMetadata" scoped="" ref="0x409e22c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x409c1400" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x409c1400"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x409c15d8"/>
        <function-ref name="toIdle" scoped="" ref="0x409c16b8"/>
        <function-ref name="isState" scoped="" ref="0x409c1798"/>
        <function-ref name="isIdle" scoped="" ref="0x409c1878"/>
        <function-ref name="requestState" scoped="" ref="0x409c1958"/>
        <function-ref name="forceState" scoped="" ref="0x409c1a38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x409c4d58" loc="67:/opt/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x409c4d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x409c3010"/>
        <function-ref name="toIdle" scoped="" ref="0x409c30f0"/>
        <function-ref name="isState" scoped="" ref="0x409c31d0"/>
        <function-ref name="isIdle" scoped="" ref="0x409c32b0"/>
        <function-ref name="requestState" scoped="" ref="0x409c3390"/>
        <function-ref name="forceState" scoped="" ref="0x409c3470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x409d61d0" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x409d61d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x409d63a8"/>
        <function-ref name="receive" scoped="" ref="0x409d6488"/>
        <function-ref name="getPayload" scoped="" ref="0x409d6568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x409d7750" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x409d7750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x409d7928"/>
        <function-ref name="receive" scoped="" ref="0x409d7a08"/>
        <function-ref name="getPayload" scoped="" ref="0x409d7ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x409d7c68" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x409d7c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x409d7e40"/>
        <function-ref name="receive" scoped="" ref="0x409d7f20"/>
        <function-ref name="getPayload" scoped="" ref="0x409d6018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x409d2a00" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x409d2a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x409d2bd8"/>
        <function-ref name="receive" scoped="" ref="0x409d2cb8"/>
        <function-ref name="getPayload" scoped="" ref="0x409d2d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x409d2670" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x409d2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409d2848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x409d3c60" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x409d3c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x409d3e38"/>
        <function-ref name="receive" scoped="" ref="0x409d3f18"/>
        <function-ref name="getPayload" scoped="" ref="0x409d2010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x409d2ef0" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x409d2ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x409f30e0"/>
        <function-ref name="getMetadata" scoped="" ref="0x409f31c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x409d2190" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x409d2190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x409d2368"/>
        <function-ref name="receive" scoped="" ref="0x409d2448"/>
        <function-ref name="getPayload" scoped="" ref="0x409d2528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40a006a8" loc="68:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40a006a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x40a00880"/>
        <function-ref name="receive" scoped="" ref="0x40a00960"/>
        <function-ref name="getPayload" scoped="" ref="0x40a00a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40a00bb0" loc="69:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40a00bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a00d88"/>
        <function-ref name="getPayload" scoped="" ref="0x40a00e68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409ff010"/>
        <function-ref name="cancel" scoped="" ref="0x409ff0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x409ff1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40a01a40" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40a01a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a01c18"/>
        <function-ref name="getPayload" scoped="" ref="0x40a01cf8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a01dd8"/>
        <function-ref name="cancel" scoped="" ref="0x40a01eb8"/>
        <function-ref name="sendDone" scoped="" ref="0x40a00010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40a00158" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40a00158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x40a00330"/>
        <function-ref name="receive" scoped="" ref="0x40a00410"/>
        <function-ref name="getPayload" scoped="" ref="0x40a004f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x409fca10" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x409fca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x409fcbe8"/>
        <function-ref name="stopDone" scoped="" ref="0x409fccc8"/>
        <function-ref name="start" scoped="" ref="0x409fcda8"/>
        <function-ref name="stop" scoped="" ref="0x409fce88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x409fb818" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x409fb818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409fb9f0"/>
        <function-ref name="getPayload" scoped="" ref="0x409fbad0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409fbbb0"/>
        <function-ref name="cancel" scoped="" ref="0x409fbc90"/>
        <function-ref name="sendDone" scoped="" ref="0x409fbd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x409fbee8" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x409fbee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x409fa0e0"/>
        <function-ref name="receive" scoped="" ref="0x409fa1c0"/>
        <function-ref name="getPayload" scoped="" ref="0x409fa2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x409fd350" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x409fd350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409fd528"/>
        <function-ref name="getPayload" scoped="" ref="0x409fd608"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409fd6e8"/>
        <function-ref name="cancel" scoped="" ref="0x409fd7c8"/>
        <function-ref name="sendDone" scoped="" ref="0x409fd8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x409fdee0" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x409fdee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x409fc0e0"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x409fc1c0"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x409fc2a0"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x409fc380"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x409fc460"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x409fc540"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x409fc620"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x409fc700"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x409fc7e0"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x409fc8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x409fb030" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x409fb030"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x409fb208"/>
        <function-ref name="toIdle" scoped="" ref="0x409fb2e8"/>
        <function-ref name="isState" scoped="" ref="0x409fb3c8"/>
        <function-ref name="isIdle" scoped="" ref="0x409fb4a8"/>
        <function-ref name="requestState" scoped="" ref="0x409fb588"/>
        <function-ref name="forceState" scoped="" ref="0x409fb668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x409fa420" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x409fa420"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x409fa5f8"/>
        <function-ref name="stopDone" scoped="" ref="0x409fa6d8"/>
        <function-ref name="start" scoped="" ref="0x409fa7b8"/>
        <function-ref name="stop" scoped="" ref="0x409fa898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x409fd9f0" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x409fd9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x409fdbc8"/>
        <function-ref name="receive" scoped="" ref="0x409fdca8"/>
        <function-ref name="getPayload" scoped="" ref="0x409fdd88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x409f7970" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x409f7970"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x409f7b48"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x409f7c28"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x409f7d08"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x409f7de8"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x409f7ec8"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x409f6010"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x409f60f0"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x409f61d0"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x409f62b0"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x409f6390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x409f9528" loc="67:/opt/tinyos-2.x/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x409f9528"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x409f9700"/>
        <function-ref name="toIdle" scoped="" ref="0x409f97e0"/>
        <function-ref name="isState" scoped="" ref="0x409f98c0"/>
        <function-ref name="isIdle" scoped="" ref="0x409f99a0"/>
        <function-ref name="requestState" scoped="" ref="0x409f9a80"/>
        <function-ref name="forceState" scoped="" ref="0x409f9b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40a0c948" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40a0c948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a0cb20"/>
        <function-ref name="getPayload" scoped="" ref="0x40a0cc00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a0cce0"/>
        <function-ref name="cancel" scoped="" ref="0x40a0cdc0"/>
        <function-ref name="sendDone" scoped="" ref="0x40a0cea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x409feb78" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x409feb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409fed50"/>
        <function-ref name="getPayload" scoped="" ref="0x409fee30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409fef10"/>
        <function-ref name="cancel" scoped="" ref="0x40a0c010"/>
        <function-ref name="sendDone" scoped="" ref="0x40a0c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40a0c240" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40a0c240"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40a0c418"/>
        <function-ref name="setRetries" scoped="" ref="0x40a0c4f8"/>
        <function-ref name="getRetries" scoped="" ref="0x40a0c5d8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40a0c6b8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40a0c798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40a08628" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40a08628"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40a08800"/>
        <function-ref name="noAck" scoped="" ref="0x40a088e0"/>
        <function-ref name="wasAcked" scoped="" ref="0x40a089c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40a0bf28" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40a0bf28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40a08110"/>
        <function-ref name="setRetries" scoped="" ref="0x40a081f0"/>
        <function-ref name="getRetries" scoped="" ref="0x40a082d0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40a083b0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40a08490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40a1d9f0" loc="37:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="OscilloscopeAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40a1d9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402ec450"/>
            <typename><typedef-ref name="TMilli" ref="0x402ec620"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40abd330"/>
        <function-ref name="fired" scoped="" ref="0x40a16728"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40a16cc8"/>
        <function-ref name="isOneShot" scoped="" ref="0x40a16ae8"/>
        <function-ref name="getdt" scoped="" ref="0x40abd6f0"/>
        <function-ref name="gett0" scoped="" ref="0x40abd510"/>
        <function-ref name="isRunning" scoped="" ref="0x40a16908"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40a16048"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40abd010"/>
        <function-ref name="startOneShot" scoped="" ref="0x40a162c8"/>
        <function-ref name="stop" scoped="" ref="0x40a16548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40a37e38" loc="38:/opt/tinyos-2.x/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40a37e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402ec450"/>
            <typename><typedef-ref name="TMilli" ref="0x402ec620"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a35750"/>
        <function-ref name="fired" scoped="" ref="0x40a36b58"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40a35110"/>
        <function-ref name="isOneShot" scoped="" ref="0x40a36f18"/>
        <function-ref name="getdt" scoped="" ref="0x40a35b10"/>
        <function-ref name="gett0" scoped="" ref="0x40a35930"/>
        <function-ref name="isRunning" scoped="" ref="0x40a36d38"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40a36478"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40a35430"/>
        <function-ref name="startOneShot" scoped="" ref="0x40a366f8"/>
        <function-ref name="stop" scoped="" ref="0x40a36978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40a30830" loc="35:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40a30830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402ec450"/>
            <typename><typedef-ref name="TMilli" ref="0x402ec620"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a2e170"/>
        <function-ref name="fired" scoped="" ref="0x40a2f570"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40a2fb10"/>
        <function-ref name="isOneShot" scoped="" ref="0x40a2f930"/>
        <function-ref name="getdt" scoped="" ref="0x40a2e530"/>
        <function-ref name="gett0" scoped="" ref="0x40a2e350"/>
        <function-ref name="isRunning" scoped="" ref="0x40a2f750"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40a30e58"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40a2fe30"/>
        <function-ref name="startOneShot" scoped="" ref="0x40a2f110"/>
        <function-ref name="stop" scoped="" ref="0x40a2f390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40a29120" loc="36:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40a29120"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402ec450"/>
            <typename><typedef-ref name="TMilli" ref="0x402ec620"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a29768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a30198" loc="34:/opt/tinyos-2.x/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a30198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a30370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x40a48878" loc="29:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x40a48878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402ec450"/>
            <typename><typedef-ref name="TMilli" ref="0x402ec620"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40032340"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a46010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40a46410"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40a46210"/>
        <function-ref name="overflow" scoped="" ref="0x40a46610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a27ab8" loc="27:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a27ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a27c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x40a49010" loc="28:/opt/tinyos-2.x/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x40a49010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402ec450"/>
            <typename><typedef-ref name="TMilli" ref="0x402ec620"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40032340"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a48350"/>
        <function-ref name="fired" scoped="" ref="0x40a49c00"/>
        <function-ref name="startAt" scoped="" ref="0x40a48010"/>
        <function-ref name="isRunning" scoped="" ref="0x40a49e00"/>
        <function-ref name="getAlarm" scoped="" ref="0x40a48550"/>
        <function-ref name="start" scoped="" ref="0x40a49760"/>
        <function-ref name="stop" scoped="" ref="0x40a49a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40a7c448" loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40a7c448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402ec450"/>
            <typename><typedef-ref name="TMilli" ref="0x402ec620"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40032340"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a7b788"/>
        <function-ref name="fired" scoped="" ref="0x40a7b048"/>
        <function-ref name="startAt" scoped="" ref="0x40a7b448"/>
        <function-ref name="isRunning" scoped="" ref="0x40a7b248"/>
        <function-ref name="getAlarm" scoped="" ref="0x40a7b988"/>
        <function-ref name="start" scoped="" ref="0x40a7cb98"/>
        <function-ref name="stop" scoped="" ref="0x40a7ce38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a7c010" loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a7c010"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x402b3e78"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x402b3e78"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a7c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40a7bc40" loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40a7bc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402ec450"/>
            <typename><typedef-ref name="TMilli" ref="0x402ec620"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40032340"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a793a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40a797a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40a795a0"/>
        <function-ref name="overflow" scoped="" ref="0x40a799a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x40df1ea0" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40df1ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x40def0c0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40def1a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40def280"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40def360"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40def440"/>
        <function-ref name="setControl" scoped="" ref="0x40def520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40df68c0" loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40df68c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402ec450"/>
            <typename><typedef-ref name="TMilli" ref="0x402ec620"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40032340"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40df5c28"/>
        <function-ref name="fired" scoped="" ref="0x40df54e8"/>
        <function-ref name="startAt" scoped="" ref="0x40df58e8"/>
        <function-ref name="isRunning" scoped="" ref="0x40df56e8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40df5e28"/>
        <function-ref name="start" scoped="" ref="0x40df5048"/>
        <function-ref name="stop" scoped="" ref="0x40df52e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40df6488" loc="25:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40df6488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40df6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40df3130" loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40df3130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402ec450"/>
            <typename><typedef-ref name="TMilli" ref="0x402ec620"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40032340"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40df3880"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40df3c80"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40df3a80"/>
        <function-ref name="overflow" scoped="" ref="0x40df3e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x40deee68" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x40deee68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x40ded050"/>
        <function-ref name="compareBusy" scoped="" ref="0x40ded130"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x40ded210"/>
        <function-ref name="countBusy" scoped="" ref="0x40ded2f0"/>
        <function-ref name="getAssr" scoped="" ref="0x40ded3d0"/>
        <function-ref name="setAssr" scoped="" ref="0x40ded4b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x40def710" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40def710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40deeab0"/>
        <function-ref name="fired" scoped="" ref="0x40dee2b0"/>
        <function-ref name="get" scoped="" ref="0x40defd58"/>
        <function-ref name="reset" scoped="" ref="0x40dee4b0"/>
        <function-ref name="isOn" scoped="" ref="0x40deecb0"/>
        <function-ref name="set" scoped="" ref="0x40dee010"/>
        <function-ref name="start" scoped="" ref="0x40dee6b0"/>
        <function-ref name="stop" scoped="" ref="0x40dee8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40df2120" loc="30:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40df2120"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40df1848"/>
        <function-ref name="test" scoped="" ref="0x40df1448"/>
        <function-ref name="get" scoped="" ref="0x40df2768"/>
        <function-ref name="setScale" scoped="" ref="0x40df1a48"/>
        <function-ref name="getScale" scoped="" ref="0x40df1ce8"/>
        <function-ref name="reset" scoped="" ref="0x40df2e08"/>
        <function-ref name="overflow" scoped="" ref="0x40df2c08"/>
        <function-ref name="isOn" scoped="" ref="0x40df1648"/>
        <function-ref name="set" scoped="" ref="0x40df2968"/>
        <function-ref name="start" scoped="" ref="0x40df1048"/>
        <function-ref name="stop" scoped="" ref="0x40df1248"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x40a842d0" loc="63:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x40a842d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40a844a8"/>
        <function-ref name="runTask" scoped="" ref="0x40a84588"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40a86b60" loc="38:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40a86b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402ec450"/>
            <typename><typedef-ref name="TMilli" ref="0x402ec620"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40032340"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a85ee8"/>
        <function-ref name="fired" scoped="" ref="0x40a857a8"/>
        <function-ref name="startAt" scoped="" ref="0x40a85ba8"/>
        <function-ref name="isRunning" scoped="" ref="0x40a859a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40a840f8"/>
        <function-ref name="start" scoped="" ref="0x40a85308"/>
        <function-ref name="stop" scoped="" ref="0x40a855a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40a28b78" loc="37:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40a28b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402ec450"/>
            <typename><typedef-ref name="TMilli" ref="0x402ec620"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a864c8"/>
        <function-ref name="fired" scoped="" ref="0x40a778c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40a77e60"/>
        <function-ref name="isOneShot" scoped="" ref="0x40a77c80"/>
        <function-ref name="getdt" scoped="" ref="0x40a86888"/>
        <function-ref name="gett0" scoped="" ref="0x40a866a8"/>
        <function-ref name="isRunning" scoped="" ref="0x40a77aa0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40a771e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40a861a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40a77460"/>
        <function-ref name="stop" scoped="" ref="0x40a776e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x40aa4aa0" loc="60:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x40aa4aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40aa4c78"/>
        <function-ref name="runTask" scoped="" ref="0x40aa4d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x40aa7bc0" loc="38:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x40aa7bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402ec450"/>
            <typename><typedef-ref name="TMilli" ref="0x402ec620"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40aa4508"/>
        <function-ref name="fired" scoped="" ref="0x40aa58f8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40aa5e98"/>
        <function-ref name="isOneShot" scoped="" ref="0x40aa5cb8"/>
        <function-ref name="getdt" scoped="" ref="0x40aa48c8"/>
        <function-ref name="gett0" scoped="" ref="0x40aa46e8"/>
        <function-ref name="isRunning" scoped="" ref="0x40aa5ad8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40aa5218"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40aa41e8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40aa5498"/>
        <function-ref name="stop" scoped="" ref="0x40aa5718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40aa9b98" loc="37:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40aa9b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402ec450"/>
            <typename><typedef-ref name="TMilli" ref="0x402ec620"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40aa7568"/>
        <function-ref name="fired" scoped="" ref="0x40aa8900"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40aa8ed0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40aa8ce0"/>
        <function-ref name="getdt" scoped="" ref="0x40aa7948"/>
        <function-ref name="gett0" scoped="" ref="0x40aa7758"/>
        <function-ref name="isRunning" scoped="" ref="0x40aa8af0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40aa81f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40aa7238"/>
        <function-ref name="startOneShot" scoped="" ref="0x40aa8480"/>
        <function-ref name="stop" scoped="" ref="0x40aa8710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40ac5460" loc="37:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40ac5460"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402ec450"/>
            <typename><typedef-ref name="TMilli" ref="0x402ec620"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ac5aa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40ac5d80" loc="38:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40ac5d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402ec450"/>
            <typename><typedef-ref name="TMilli" ref="0x402ec620"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40032340"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ac44e8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40ac48e8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40ac46e8"/>
        <function-ref name="overflow" scoped="" ref="0x40ac4ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40aee010" loc="41:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40aee010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40aee1e8"/>
        <function-ref name="getPayload" scoped="" ref="0x40aee2c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40aee3a8"/>
        <function-ref name="cancel" scoped="" ref="0x40aee488"/>
        <function-ref name="sendDone" scoped="" ref="0x40aee568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40aee6a8" loc="42:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40aee6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40aee880"/>
        <function-ref name="payloadLength" scoped="" ref="0x40aee960"/>
        <function-ref name="getPayload" scoped="" ref="0x40aeea40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40aeeb20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40aeec00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40aeed40" loc="43:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40aeed40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40aeef18"/>
        <function-ref name="source" scoped="" ref="0x40b13010"/>
        <function-ref name="address" scoped="" ref="0x40b130f0"/>
        <function-ref name="destination" scoped="" ref="0x40b131d0"/>
        <function-ref name="setSource" scoped="" ref="0x40b132b0"/>
        <function-ref name="setDestination" scoped="" ref="0x40b13390"/>
        <function-ref name="type" scoped="" ref="0x40b13470"/>
        <function-ref name="setType" scoped="" ref="0x40b13550"/>
        <function-ref name="isForMe" scoped="" ref="0x40b13630"/>
        <function-ref name="setGroup" scoped="" ref="0x40b13710"/>
        <function-ref name="localGroup" scoped="" ref="0x40b137f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40b13950" loc="44:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40b13950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40b13b28"/>
        <function-ref name="noAck" scoped="" ref="0x40b13c08"/>
        <function-ref name="wasAcked" scoped="" ref="0x40b13ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40e23a58" loc="36:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40e23a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e23c30"/>
        <function-ref name="getPayload" scoped="" ref="0x40e23d10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e23df0"/>
        <function-ref name="cancel" scoped="" ref="0x40e23ed0"/>
        <function-ref name="sendDone" scoped="" ref="0x40e1f010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x40e1f180" loc="38:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40e1f180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e1f358"/>
        <function-ref name="getPayload" scoped="" ref="0x40e1f438"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e1f518"/>
        <function-ref name="cancel" scoped="" ref="0x40e1f5f8"/>
        <function-ref name="sendDone" scoped="" ref="0x40e1f6d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40e1f818" loc="39:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40e1f818"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40e1f9f0"/>
        <function-ref name="source" scoped="" ref="0x40e1fad0"/>
        <function-ref name="address" scoped="" ref="0x40e1fbb0"/>
        <function-ref name="destination" scoped="" ref="0x40e1fc90"/>
        <function-ref name="setSource" scoped="" ref="0x40e1fd70"/>
        <function-ref name="setDestination" scoped="" ref="0x40e1fe50"/>
        <function-ref name="type" scoped="" ref="0x40e1e010"/>
        <function-ref name="setType" scoped="" ref="0x40e1e0f0"/>
        <function-ref name="isForMe" scoped="" ref="0x40e1e1d0"/>
        <function-ref name="setGroup" scoped="" ref="0x40e1e2b0"/>
        <function-ref name="localGroup" scoped="" ref="0x40e1e390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40acd848" loc="35:/opt/tinyos-2.x/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40acd848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40acda20"/>
        <function-ref name="getPayload" scoped="" ref="0x40acdb00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40acdbe0"/>
        <function-ref name="cancel" scoped="" ref="0x40acdcc0"/>
        <function-ref name="sendDone" scoped="" ref="0x40acdda0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40af47d8" loc="40:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40af47d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403567d0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40af49c0"/>
        <function-ref name="getPayload" scoped="" ref="0x40af4aa0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40af4b80"/>
        <function-ref name="cancel" scoped="" ref="0x40af4c60"/>
        <function-ref name="sendDone" scoped="" ref="0x40af4d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40af4068" loc="38:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40af4068"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40af4250"/>
        <function-ref name="getPayload" scoped="" ref="0x40af4330"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40af4410"/>
        <function-ref name="cancel" scoped="" ref="0x40af44f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40af45d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40af3a70" loc="42:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40af3a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40af3c48"/>
        <function-ref name="payloadLength" scoped="" ref="0x40af3d28"/>
        <function-ref name="getPayload" scoped="" ref="0x40af3e08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40af3ee8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40af2010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x40af2190" loc="161:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x40af2190"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40af2368"/>
        <function-ref name="runTask" scoped="" ref="0x40af2448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x40af25c8" loc="118:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x40af25c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40af27a0"/>
        <function-ref name="runTask" scoped="" ref="0x40af2880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40af4e80" loc="41:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40af4e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40af3070"/>
        <function-ref name="source" scoped="" ref="0x40af3150"/>
        <function-ref name="address" scoped="" ref="0x40af3230"/>
        <function-ref name="destination" scoped="" ref="0x40af3310"/>
        <function-ref name="setSource" scoped="" ref="0x40af33f0"/>
        <function-ref name="setDestination" scoped="" ref="0x40af34d0"/>
        <function-ref name="type" scoped="" ref="0x40af35b0"/>
        <function-ref name="setType" scoped="" ref="0x40af3690"/>
        <function-ref name="isForMe" scoped="" ref="0x40af3770"/>
        <function-ref name="setGroup" scoped="" ref="0x40af3850"/>
        <function-ref name="localGroup" scoped="" ref="0x40af3930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40b10558" loc="38:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="OscilloscopeAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40b10558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b10730"/>
        <function-ref name="payloadLength" scoped="" ref="0x40b10810"/>
        <function-ref name="getPayload" scoped="" ref="0x40b108f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b109d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40b10ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40b10080" loc="37:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="OscilloscopeAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40b10080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x40b10258"/>
        <function-ref name="receive" scoped="" ref="0x40b10338"/>
        <function-ref name="getPayload" scoped="" ref="0x40b10418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40b10bf0" loc="39:/opt/tinyos-2.x/tos/system/AMReceiverC.nc">
      <component-ref qname="OscilloscopeAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40b10bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40b10dc8"/>
        <function-ref name="source" scoped="" ref="0x40b10ea8"/>
        <function-ref name="address" scoped="" ref="0x40b0c010"/>
        <function-ref name="destination" scoped="" ref="0x40b0c0f0"/>
        <function-ref name="setSource" scoped="" ref="0x40b0c1d0"/>
        <function-ref name="setDestination" scoped="" ref="0x40b0c2b0"/>
        <function-ref name="type" scoped="" ref="0x40b0c390"/>
        <function-ref name="setType" scoped="" ref="0x40b0c470"/>
        <function-ref name="isForMe" scoped="" ref="0x40b0c550"/>
        <function-ref name="setGroup" scoped="" ref="0x40b0c630"/>
        <function-ref name="localGroup" scoped="" ref="0x40b0c710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40b74070" loc="27:./AES/AFWA_AESC.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40b74070"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40b74248"/>
        <function-ref name="stopDone" scoped="" ref="0x40b74328"/>
        <function-ref name="start" scoped="" ref="0x40b74408"/>
        <function-ref name="stop" scoped="" ref="0x40b744e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AFWA_AESI" ref="0x40b74628" loc="28:./AES/AFWA_AESC.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AFWA_AESI" scoped="" ref="0x40b74628"/></type-interface>
      <instance>
        <interfacedef-ref qname="AFWA_AESI"/>
      </instance>
      <interface-functions>
        <function-ref name="AFWAenc" scoped="" ref="0x40b74800"/>
        <function-ref name="AFWAsetTransmitMode" scoped="" ref="0x40b748e0"/>
        <function-ref name="updateKeyDone" scoped="" ref="0x40b749c0"/>
        <function-ref name="AFWAsend" scoped="" ref="0x40b74aa0"/>
        <function-ref name="AFWAsendDone" scoped="" ref="0x40b74b80"/>
        <function-ref name="AFWAsetReceiveMode" scoped="" ref="0x40b74c60"/>
        <function-ref name="AFWAupdateKey" scoped="" ref="0x40b74d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40e5a5d8" loc="28:./AES/AFWA_AESP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AFWA_AESP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40e5a5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40e5a7b0"/>
        <function-ref name="stopDone" scoped="" ref="0x40e5a890"/>
        <function-ref name="start" scoped="" ref="0x40e5a970"/>
        <function-ref name="stop" scoped="" ref="0x40e5aa50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420_RAM_TXFIFO" ref="0x40e57010" loc="40:./AES/AFWA_AESP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AFWA_AESP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420_RAM_TXFIFO" scoped="" ref="0x40e57010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e571e8"/>
        <function-ref name="write" scoped="" ref="0x40e572c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420_RAM_RXFIFO" ref="0x40e57428" loc="41:./AES/AFWA_AESP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AFWA_AESP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420_RAM_RXFIFO" scoped="" ref="0x40e57428"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e57600"/>
        <function-ref name="write" scoped="" ref="0x40e576e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420_SECCTRL0" ref="0x40e59ae0" loc="35:./AES/AFWA_AESP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AFWA_AESP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420_SECCTRL0" scoped="" ref="0x40e59ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e59cb8"/>
        <function-ref name="write" scoped="" ref="0x40e59d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40e52150" loc="54:./AES/AFWA_AESP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AFWA_AESP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40e52150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e52328"/>
        <function-ref name="getPayload" scoped="" ref="0x40e52408"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e524e8"/>
        <function-ref name="cancel" scoped="" ref="0x40e525c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40e526a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420_RAM_KEY1" ref="0x40e58738" loc="38:./AES/AFWA_AESP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AFWA_AESP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420_RAM_KEY1" scoped="" ref="0x40e58738"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e58910"/>
        <function-ref name="write" scoped="" ref="0x40e589f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420_STXON" ref="0x40e55348" loc="45:./AES/AFWA_AESP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AFWA_AESP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420_STXON" scoped="" ref="0x40e55348"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40e55520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x40e54b60" loc="52:./AES/AFWA_AESP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AFWA_AESP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x40e54b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e54d38"/>
        <function-ref name="isInput" scoped="" ref="0x40e54e18"/>
        <function-ref name="toggle" scoped="" ref="0x40e54ef8"/>
        <function-ref name="isOutput" scoped="" ref="0x40e53010"/>
        <function-ref name="get" scoped="" ref="0x40e530f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e531d0"/>
        <function-ref name="set" scoped="" ref="0x40e532b0"/>
        <function-ref name="clr" scoped="" ref="0x40e53390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AFWA_AESI" ref="0x40e5ab90" loc="29:./AES/AFWA_AESP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AFWA_AESP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AFWA_AESI" scoped="" ref="0x40e5ab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AFWA_AESI"/>
      </instance>
      <interface-functions>
        <function-ref name="AFWAenc" scoped="" ref="0x40e5ad68"/>
        <function-ref name="AFWAsetTransmitMode" scoped="" ref="0x40e5ae48"/>
        <function-ref name="updateKeyDone" scoped="" ref="0x40e5af28"/>
        <function-ref name="AFWAsend" scoped="" ref="0x40e59018"/>
        <function-ref name="AFWAsendDone" scoped="" ref="0x40e590f8"/>
        <function-ref name="AFWAsetReceiveMode" scoped="" ref="0x40e591d8"/>
        <function-ref name="AFWAupdateKey" scoped="" ref="0x40e592b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40e5a2c0" loc="27:./AES/AFWA_AESP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AFWA_AESP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40e5a2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e5a498"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420_STXENC" ref="0x40e55010" loc="44:./AES/AFWA_AESP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AFWA_AESP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420_STXENC" scoped="" ref="0x40e55010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40e551e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40e527e8" loc="55:./AES/AFWA_AESP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AFWA_AESP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40e527e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40e529c0"/>
        <function-ref name="getMetadata" scoped="" ref="0x40e52aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420_SNOP" ref="0x40e57b78" loc="43:./AES/AFWA_AESP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AFWA_AESP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420_SNOP" scoped="" ref="0x40e57b78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40e57dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420_SECCTRL1" ref="0x40e59ef8" loc="36:./AES/AFWA_AESP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AFWA_AESP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420_SECCTRL1" scoped="" ref="0x40e59ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e580e0"/>
        <function-ref name="write" scoped="" ref="0x40e581c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40e534d0" loc="53:./AES/AFWA_AESP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AFWA_AESP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40e534d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40e536a8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40e53788"/>
        <function-ref name="led1On" scoped="" ref="0x40e53868"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40e53948"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40e53a28"/>
        <function-ref name="get" scoped="" ref="0x40e53b08"/>
        <function-ref name="led1Off" scoped="" ref="0x40e53be8"/>
        <function-ref name="led0On" scoped="" ref="0x40e52010"/>
        <function-ref name="set" scoped="" ref="0x40e53da8"/>
        <function-ref name="led2On" scoped="" ref="0x40e53cc8"/>
        <function-ref name="led2Off" scoped="" ref="0x40e53e88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40e59428" loc="34:./AES/AFWA_AESP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AFWA_AESP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40e59428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40e59600"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40e596e0"/>
        <function-ref name="request" scoped="" ref="0x40e597c0"/>
        <function-ref name="granted" scoped="" ref="0x40e598a0"/>
        <function-ref name="isOwner" scoped="" ref="0x40e59980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="inline_encryption" ref="0x40e51050" loc="85:./AES/AFWA_AESP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AFWA_AESP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="inline_encryption" scoped="" ref="0x40e51050"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e51228"/>
        <function-ref name="runTask" scoped="" ref="0x40e51308"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420_RAM_SABUF" ref="0x40e58b50" loc="39:./AES/AFWA_AESP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AFWA_AESP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420_RAM_SABUF" scoped="" ref="0x40e58b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e58d28"/>
        <function-ref name="write" scoped="" ref="0x40e58e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420_SAES" ref="0x40e57840" loc="42:./AES/AFWA_AESP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AFWA_AESP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420_SAES" scoped="" ref="0x40e57840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40e57a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x40e559b8" loc="47:./AES/AFWA_AESP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AFWA_AESP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40e559b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40e55b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420_RAM_TXNONCE" ref="0x40e55cf0" loc="48:./AES/AFWA_AESP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AFWA_AESP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420_RAM_TXNONCE" scoped="" ref="0x40e55cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e55ec8"/>
        <function-ref name="write" scoped="" ref="0x40e54010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420_RAM_RXNONCE" ref="0x40e54170" loc="49:./AES/AFWA_AESP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AFWA_AESP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420_RAM_RXNONCE" scoped="" ref="0x40e54170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e54348"/>
        <function-ref name="write" scoped="" ref="0x40e54428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Control" ref="0x40e54588" loc="51:./AES/AFWA_AESP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AFWA_AESP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Control" scoped="" ref="0x40e54588"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40e54760"/>
        <function-ref name="stopDone" scoped="" ref="0x40e54840"/>
        <function-ref name="start" scoped="" ref="0x40e54920"/>
        <function-ref name="stop" scoped="" ref="0x40e54a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="standAlone_encryption" ref="0x40e51488" loc="84:./AES/AFWA_AESP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AFWA_AESP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="standAlone_encryption" scoped="" ref="0x40e51488"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e51660"/>
        <function-ref name="runTask" scoped="" ref="0x40e51740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420_RAM_KEY0" ref="0x40e58320" loc="37:./AES/AFWA_AESP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AFWA_AESP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420_RAM_KEY0" scoped="" ref="0x40e58320"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e584f8"/>
        <function-ref name="write" scoped="" ref="0x40e585d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420_SRXDEC" ref="0x40e55680" loc="46:./AES/AFWA_AESP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AFWA_AESP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420_SRXDEC" scoped="" ref="0x40e55680"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40e55858"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AesSecurity" ref="0x40e52be0" loc="56:./AES/AFWA_AESP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AFWA_AESP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AesSecurity" scoped="" ref="0x40e52be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AesSecurity"/>
      </instance>
      <interface-functions>
        <function-ref name="AFWAsetReceivePMode" scoped="" ref="0x40e52eb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateKey" ref="0x40e518c0" loc="83:./AES/AFWA_AESP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AFWA_AESP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateKey" scoped="" ref="0x40e518c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e51a98"/>
        <function-ref name="runTask" scoped="" ref="0x40e51b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x40e496e8" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40e496e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e498c0"/>
        <function-ref name="write" scoped="" ref="0x40e499a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40e4aa00" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40e4aa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e4abd8"/>
        <function-ref name="write" scoped="" ref="0x40e4acb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x40e48448" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40e48448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e48620"/>
        <function-ref name="write" scoped="" ref="0x40e48700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x40e46030" loc="76:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXNONCE" scoped="" ref="0x40e46030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e46308"/>
        <function-ref name="write" scoped="" ref="0x40e463e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x40e46568" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="KEY0" scoped="" ref="0x40e46568"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e46740"/>
        <function-ref name="write" scoped="" ref="0x40e46820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40e4def0" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40e4def0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40e4b0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x40e442b0" loc="88:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40e442b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e44488"/>
        <function-ref name="write" scoped="" ref="0x40e44568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x40e492b0" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40e492b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e49488"/>
        <function-ref name="write" scoped="" ref="0x40e49568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x40e49b20" loc="67:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40e49b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e49cf8"/>
        <function-ref name="write" scoped="" ref="0x40e49dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40e4a190" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40e4a190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e4a368"/>
        <function-ref name="write" scoped="" ref="0x40e4a448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40e4e560" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40e4e560"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40e4e738"/>
        <function-ref name="abortRelease" scoped="" ref="0x40e4e818"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40e4e8f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40e4edd0" loc="46:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40e4edd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40e4d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40e4b910" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40e4b910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40e4bae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40e4b5b8" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40e4b5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40e4b790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x40e45190" loc="80:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x40e45190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e45368"/>
        <function-ref name="write" scoped="" ref="0x40e45448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40e4ae38" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40e4ae38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e49050"/>
        <function-ref name="write" scoped="" ref="0x40e49130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40e4b260" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40e4b260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40e4b438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x40e48bd8" loc="75:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXNONCE" scoped="" ref="0x40e48bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e48db0"/>
        <function-ref name="write" scoped="" ref="0x40e48e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x40e45e38" loc="87:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x40e45e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e44050"/>
        <function-ref name="write" scoped="" ref="0x40e44130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x40e446e8" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40e446e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40e448c0"/>
        <function-ref name="writeDone" scoped="" ref="0x40e449a0"/>
        <function-ref name="write" scoped="" ref="0x40e44a80"/>
        <function-ref name="beginRead" scoped="" ref="0x40e44b60"/>
        <function-ref name="readDone" scoped="" ref="0x40e44c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40e4d190" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40e4d190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40e4d368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x40e4a5c8" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40e4a5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e4a7a0"/>
        <function-ref name="write" scoped="" ref="0x40e4a880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40e4bc68" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40e4bc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e4bec0"/>
        <function-ref name="write" scoped="" ref="0x40e4a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40e4d4e8" loc="48:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40e4d4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40e4d6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x40e48010" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40e48010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e481e8"/>
        <function-ref name="write" scoped="" ref="0x40e482c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40e4fe90" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40e4fe90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40e4e080"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40e4e160"/>
        <function-ref name="request" scoped="" ref="0x40e4e240"/>
        <function-ref name="granted" scoped="" ref="0x40e4e320"/>
        <function-ref name="isOwner" scoped="" ref="0x40e4e400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x40e46dd8" loc="79:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40e46dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40e45010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x40e48880" loc="74:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x40e48880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40e48a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x40e45a00" loc="86:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40e45a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e45bd8"/>
        <function-ref name="write" scoped="" ref="0x40e45cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x40e455c8" loc="85:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x40e455c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e457a0"/>
        <function-ref name="write" scoped="" ref="0x40e45880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40e4ea78" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40e4ea78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40e4ec50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x40e469a0" loc="78:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SABUF" scoped="" ref="0x40e469a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e46b78"/>
        <function-ref name="write" scoped="" ref="0x40e46c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40e4db98" loc="50:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40e4db98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40e4dd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40e4d840" loc="49:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40e4d840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40e4da18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x40e44dc0" loc="92:/opt/tinyos-2.x/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40e44dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40e77010"/>
        <function-ref name="writeDone" scoped="" ref="0x40e770f0"/>
        <function-ref name="write" scoped="" ref="0x40e771d0"/>
        <function-ref name="beginRead" scoped="" ref="0x40e772b0"/>
        <function-ref name="readDone" scoped="" ref="0x40e77390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40e75650" loc="41:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40e75650"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e75828"/>
        <function-ref name="getPayload" scoped="" ref="0x40e75908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e759e8"/>
        <function-ref name="cancel" scoped="" ref="0x40e75ac8"/>
        <function-ref name="sendDone" scoped="" ref="0x40e75ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40e75ce8" loc="42:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40e75ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e75ec0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e74010"/>
        <function-ref name="getPayload" scoped="" ref="0x40e740f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e741d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e742b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40e743f0" loc="43:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40e743f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40e745c8"/>
        <function-ref name="source" scoped="" ref="0x40e746a8"/>
        <function-ref name="address" scoped="" ref="0x40e74788"/>
        <function-ref name="destination" scoped="" ref="0x40e74868"/>
        <function-ref name="setSource" scoped="" ref="0x40e74948"/>
        <function-ref name="setDestination" scoped="" ref="0x40e74a28"/>
        <function-ref name="type" scoped="" ref="0x40e74b08"/>
        <function-ref name="setType" scoped="" ref="0x40e74be8"/>
        <function-ref name="isForMe" scoped="" ref="0x40e74cc8"/>
        <function-ref name="setGroup" scoped="" ref="0x40e74da8"/>
        <function-ref name="localGroup" scoped="" ref="0x40e74e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40e73010" loc="44:/opt/tinyos-2.x/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40e73010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40e731e8"/>
        <function-ref name="noAck" scoped="" ref="0x40e732c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40e733a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40e9fce8" loc="36:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40e9fce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e9fec0"/>
        <function-ref name="getPayload" scoped="" ref="0x40e9b010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e9b0f0"/>
        <function-ref name="cancel" scoped="" ref="0x40e9b1d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40e9b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x40e9b420" loc="38:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40e9b420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e9b5f8"/>
        <function-ref name="getPayload" scoped="" ref="0x40e9b6d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e9b7b8"/>
        <function-ref name="cancel" scoped="" ref="0x40e9b898"/>
        <function-ref name="sendDone" scoped="" ref="0x40e9b978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40e9bab8" loc="39:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40e9bab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40e9bc90"/>
        <function-ref name="source" scoped="" ref="0x40e9bd70"/>
        <function-ref name="address" scoped="" ref="0x40e9be50"/>
        <function-ref name="destination" scoped="" ref="0x40e9a010"/>
        <function-ref name="setSource" scoped="" ref="0x40e9a0f0"/>
        <function-ref name="setDestination" scoped="" ref="0x40e9a1d0"/>
        <function-ref name="type" scoped="" ref="0x40e9a2b0"/>
        <function-ref name="setType" scoped="" ref="0x40e9a390"/>
        <function-ref name="isForMe" scoped="" ref="0x40e9a470"/>
        <function-ref name="setGroup" scoped="" ref="0x40e9a550"/>
        <function-ref name="localGroup" scoped="" ref="0x40e9a630"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Boot" loc="39:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10;</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x4033a150" loc="49:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="47:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
      <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.5 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40368478" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40356b78"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40361ba8" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40356b78"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40361d58" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40361ee0" loc="69:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40367e50" loc="125:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="115:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.&#10;</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; The length of this region is maxPayloadLength(). This command&#10; behaves similarly to &#60;tt>Packet.getPayload&#60;/tt> (minus the&#10; length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40367b38" loc="125:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x403677f0" loc="112:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="102:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40368ba8" loc="85:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403687c0" loc="85:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x403673a0" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="87:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40368ef0" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40367088" loc="99:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="66:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
      <documentation loc="66:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x40338010" loc="92:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10;</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40339cd0" loc="92:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x40338b70" loc="117:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="111:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.&#10;&#10;</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40338920" loc="117:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x403399b0" loc="83:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents. </short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x40338600" loc="109:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents. </short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="AFWA_AESI" loc="25:./AES/Interfaces/AFWA_AESI.nc">
      <documentation loc="25:./AES/Interfaces/AFWA_AESI.nc">
        <short>&#10; Description          :  &#10;                         &#10;&#10;&#10;</short>
      </documentation>
      <function command="" provided="0" name="AFWAenc" ref="0x40383de8" loc="36:./AES/Interfaces/AFWA_AESI.nc">
        <interfacedef-ref qname="AFWA_AESI"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="plaintext" ref="0x40383c80" loc="36:./AES/Interfaces/AFWA_AESI.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="AFWAsetTransmitMode" ref="0x40383308" loc="32:./AES/Interfaces/AFWA_AESI.nc">
        <interfacedef-ref qname="AFWA_AESI"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ctrl0" ref="0x40383010" loc="32:./AES/Interfaces/AFWA_AESI.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
            </type-int>
          </variable>
          <variable name="len" ref="0x40383198" loc="32:./AES/Interfaces/AFWA_AESI.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="updateKeyDone" ref="0x40384c18" loc="29:./AES/Interfaces/AFWA_AESI.nc">
        <interfacedef-ref qname="AFWA_AESI"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x40384ab0" loc="29:./AES/Interfaces/AFWA_AESI.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="AFWAsend" ref="0x403825e0" loc="39:./AES/Interfaces/AFWA_AESI.nc">
        <interfacedef-ref qname="AFWA_AESI"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40382130" loc="39:./AES/Interfaces/AFWA_AESI.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x403822e0" loc="39:./AES/Interfaces/AFWA_AESI.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40382468" loc="39:./AES/Interfaces/AFWA_AESI.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="AFWAsendDone" ref="0x40382c20" loc="40:./AES/Interfaces/AFWA_AESI.nc">
        <interfacedef-ref qname="AFWA_AESI"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40382928" loc="40:./AES/Interfaces/AFWA_AESI.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40382ab0" loc="40:./AES/Interfaces/AFWA_AESI.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="AFWAsetReceiveMode" ref="0x40383938" loc="33:./AES/Interfaces/AFWA_AESI.nc">
        <interfacedef-ref qname="AFWA_AESI"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ctrl0" ref="0x40383640" loc="33:./AES/Interfaces/AFWA_AESI.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
            </type-int>
          </variable>
          <variable name="len" ref="0x403837c8" loc="33:./AES/Interfaces/AFWA_AESI.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="AFWAupdateKey" ref="0x40384770" loc="28:./AES/Interfaces/AFWA_AESI.nc">
        <interfacedef-ref qname="AFWA_AESI"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
              </type-int>
            </type-pointer>
            <type-tag size="I:2" alignment="I:1"><enum-ref name="modeSet" ref="0x40332040"/></type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x40384448" loc="28:./AES/Interfaces/AFWA_AESI.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="KEY" ref="0x40384600" loc="28:./AES/Interfaces/AFWA_AESI.nc">
            <type-tag size="I:2" alignment="I:1"><enum-ref name="modeSet" ref="0x40332040"/></type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="45:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
      <function command="" provided="0" name="payloadLength" ref="0x40363938" loc="89:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This call is identical&#10; to &#60;TT>Packet.payloadLength&#60;/TT>, and is included in Receive as a&#10; convenience.&#10;&#10; @param  msg      the packet&#10; @return          the length of the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x403636b8" loc="89:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0x4035da90" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  msg      the receied packet&#10; @param  payload  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return          a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
              <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4035d200" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x4035d3a0" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4035d528" loc="67:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40363368" loc="79:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Return point to a protocol's payload region in a packet. </short>
          <long>&#10; Return point to a protocol's payload region in a packet.  If len&#10; is not NULL, getPayload will return the length of the payload in&#10; it. This call is identical to &#60;TT>Packet.getPayload&#60;/TT>, and is&#10; included in Receive as a convenience.&#10;&#10; @param  msg      the packet&#10; @param  len      a pointer to where to store the payload length&#10; @return          a pointer to the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4035ddd8" loc="79:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40363010" loc="79:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <short>&#10; Constants for manipulating LEDs.&#10;&#10;</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x40373e10" loc="50:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x40372200" loc="56:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1On" ref="0x40372570" loc="61:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x40372cb8" loc="72:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x40378788" loc="89:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x40378cd0" loc="106:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x403728e0" loc="66:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x403773d0" loc="123:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask. </short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x40377030" loc="123:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x40373aa0" loc="45:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2On" ref="0x40378040" loc="78:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x403783b0" loc="83:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="50:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
      <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x403808d8" loc="166:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="153:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param amsg the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x403569a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40380590" loc="166:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x4037c790" loc="77:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.&#10;</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param amsg  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x40356b78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4037c510" loc="77:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x40375ba8" loc="57:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.&#10;</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x40356b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="destination" ref="0x4037c1c0" loc="67:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.&#10;</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param amsg    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x40356b78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40375f00" loc="67:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x4037a970" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet. </short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  amsg   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40356b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4037a380" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x4037a510" loc="110:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40356b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x4037a038" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet. </short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  amsg   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40356b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4037cad8" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x4037cc68" loc="92:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40356b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x40379840" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="127:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.&#10;</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  amsg   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403567d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x403795f8" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x40380240" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet. </short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  amsg    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403567d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40379b80" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x40379d08" loc="151:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403567d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x403792b0" loc="125:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="112:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  amsg   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4037acb8" loc="125:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x4037f060" loc="176:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="168:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param amsg the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403569a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40380c20" loc="176:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x40380db0" loc="176:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403569a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x4037f410" loc="184:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="178:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.&#10;&#10;</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x403569a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4036c988" loc="42:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4036c988"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40369908" loc="125:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="121:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.&#10;</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40032340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x4036bc78" loc="72:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x4036ad40" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40032340"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40032340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x4036a7b0" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40032340"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x4036a940" loc="103:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40032340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x4036a488" loc="87:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.&#10;</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getdt" ref="0x4036f138" loc="140:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="135:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40032340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="gett0" ref="0x40369d48" loc="133:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="127:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40032340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x4036a0f8" loc="81:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x4036b068" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40032340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4036cd98" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40032340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x403695b0" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="105:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40032340"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40032340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40369088" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40032340"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40369218" loc="118:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40032340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x4036b638" loc="62:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40032340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4036b390" loc="62:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40032340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4036b940" loc="67:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="40:/opt/tinyos-2.x/tos/interfaces/Init.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/Init.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.5 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x403a0740" loc="51:/opt/tinyos-2.x/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x403a1380" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40032340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x403a1128" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40032340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x403a3dd8" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.&#10;</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x403a23e8" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10;</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40032340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40032340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x403a2170" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40032340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x403a29c0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10;</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40032340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40032340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x403a2740" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40032340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x403a2da8" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10;</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <short>&#10;</short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x403b6db0" loc="33:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isInput" ref="0x403b40f0" loc="34:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="toggle" ref="0x403b6780" loc="31:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x403b4728" loc="36:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x403b6a98" loc="32:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x403b4408" loc="35:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x403b6160" loc="29:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="clr" ref="0x403b6470" loc="30:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.&#10;&#10;</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x402ba360" loc="46:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x402bab48" loc="61:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x402ba778" loc="54:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10;</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x402c2858" loc="56:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="runTask" ref="0x402c2c60" loc="64:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
      <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x40311bd8" loc="59:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep. </short>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.5 2006/12/12 18:23:43 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x40322c78" loc="54:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x402e50f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x4031e860" loc="44:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="44:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x4048f9d0" loc="54:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet. </short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  msg    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4048f780" loc="54:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x4049a060" loc="67:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  msg    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4048fd20" loc="67:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40499678" loc="108:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet. </short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.  If&#10; len is not NULL, getPayload will return the length of the payload&#10; in it, which is the same as the return value from&#10; payloadLength(). If a protocol does not support variable length&#10; packets, then *len is equal to maxPayloadLength().&#10;&#10; @param msg   the packet&#10; @param len   pointer to where the current payload length should be stored.&#10; @return      a pointer to the packet's data payload for this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40499120" loc="108:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404992c8" loc="108:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4049adb8" loc="95:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x4049a8e0" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param msg   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4049a3b0" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4049a538" loc="83:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="33:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10;</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x40496eb0" loc="48:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10;</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param msg - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40496b08" loc="48:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x40495558" loc="60:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10;</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param msg - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40495228" loc="60:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x40495be8" loc="74:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10;</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param msg - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404958c8" loc="74:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="54:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10;</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10;&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x404a9820" loc="95:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10;</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404a95c0" loc="95:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x404abc38" loc="81:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10;</short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404ab9f8" loc="81:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x404ab130" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10;</short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x404acee0" loc="66:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x404acb88" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10;</short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x404ac960" loc="60:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x404ab688" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet. </short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x404ab468" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x404a9258" loc="88:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10;</short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404a9010" loc="88:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x404a3e30" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x404a3a78" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x404a3c00" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x404a2418" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x400305c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x404a21b0" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x404a3710" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.&#10;&#10;</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x404a3520" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x404a29f0" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x404a2780" loc="72:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10;</short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getLocalSleepInterval" ref="0x404a7e18" loc="58:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;</short>
          <long>&#10; @return the local node's sleep interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getRxDutyCycle" ref="0x404af2b0" loc="112:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="108:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;</short>
          <long>&#10; @return the destination node's duty cycle configured in this message&#10;     in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404af0d0" loc="112:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sleepIntervalToDutyCycle" ref="0x404afea8" loc="128:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="122:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10; in units of [percentage*100]&#10;</short>
          <long>&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10; in units of [percentage*100]&#10; @param sleepInterval The sleep interval in units of [ms]&#10; @return The duty cycle in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepInterval" ref="0x404afc10" loc="128:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalDutyCycle" ref="0x404b2838" loc="81:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="78:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;</short>
          <long>&#10; @return this node's radio duty cycle rate, in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setRxSleepInterval" ref="0x404b0010" loc="90:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="84:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx sleep interval.&#10;</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx sleep interval.&#10; @param msg Pointer to the message that will be sent&#10; @param sleepInterval The receiving node's sleep interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404b2b88" loc="90:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="sleepIntervalMs" ref="0x404b2d20" loc="90:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalDutyCycle" ref="0x404b24d0" loc="76:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this node's radio duty cycle rate, in units of [percentage*100].&#10;</short>
          <long>&#10; Set this node's radio duty cycle rate, in units of [percentage*100].&#10; For example, to get a 0.05% duty cycle,&#10; &#60;code>&#10;   call LowPowerListening.setDutyCycle(5);&#10; &#60;/code>&#10;&#10; For a 100% duty cycle (always on),&#10; &#60;code>&#10;   call LowPowerListening.setDutyCycle(10000);&#10; &#60;/code>&#10;&#10; This is the equivalent of setting the local sleep interval explicitly.&#10; &#10; @param dutyCycle The duty cycle percentage, in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0x404b2178" loc="76:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRxDutyCycle" ref="0x404b0d50" loc="106:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx duty cycle rate.&#10;</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx duty cycle rate.&#10; Duty cycle is in units of [percentage*100], i.e. 0.25% duty cycle = 25.&#10; &#10; @param msg Pointer to the message that will be sent&#10; @param dutyCycle The duty cycle of the receiving mote, in units of &#10;     [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404b0878" loc="106:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dutyCycle" ref="0x404b0a10" loc="106:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dutyCycleToSleepInterval" ref="0x404af8c0" loc="120:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="114:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Convert a duty cycle, in units of [percentage*100], to&#10; the sleep interval of the mote in milliseconds&#10;</short>
          <long>&#10; Convert a duty cycle, in units of [percentage*100], to&#10; the sleep interval of the mote in milliseconds&#10; @param dutyCycle The duty cycle in units of [percentage*100]&#10; @return The equivalent sleep interval, in units of [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0x404af600" loc="120:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRxSleepInterval" ref="0x404b0530" loc="95:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10;</short>
          <long>&#10; @return the destination node's sleep interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404b0370" loc="95:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalSleepInterval" ref="0x404a7ac8" loc="53:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio sleep interval, in milliseconds.&#10;</short>
          <long>&#10; Set this this node's radio sleep interval, in milliseconds.&#10; Once every interval, the node will sleep and perform an Rx check &#10; on the radio.  Setting the sleep interval to 0 will keep the radio&#10; always on.&#10;&#10; This is the equivalent of setting the local duty cycle rate.&#10;&#10; @param sleepIntervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepIntervalMs" ref="0x404a77c0" loc="53:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <short>&#10;</short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x404b9ef8" loc="63:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10;</short>
          <long>&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404b9d40" loc="63:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x404add98" loc="46:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10;</short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param msg&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404ad998" loc="46:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x404adb30" loc="46:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x404b99e8" loc="58:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short> &#10;</short>
          <long> &#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404b9830" loc="58:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x404b94d8" loc="53:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10;</short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404b9120" loc="53:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x404b92b8" loc="53:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x404b7400" loc="68:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404b7260" loc="68:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="44:/opt/tinyos-2.x/tos/interfaces/Send.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.5 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x404bdca0" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   msg     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404bd608" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404bd790" loc="64:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x404ba678" loc="114:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="104:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.&#10;</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; The length of this region is maxPayloadLength(). This command&#10; behaves similarly to &#60;tt>Packet.getPayload&#60;/tt> (minus the&#10; length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param   msg    the packet&#10; @return         a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404ba358" loc="114:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x404ba010" loc="101:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="cancel" ref="0x404bb398" loc="78:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   msg    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404bb010" loc="78:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x404bbb90" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param msg   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404bb6e0" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x404bb868" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="44:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2007/07/06 18:09:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x404ce4f0" loc="90:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="84:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10;</short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x404ce0b8" loc="90:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x404ce248" loc="90:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x404c1d68" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x404c19f8" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10;</short>
          <long>&#10; @param on TRUE to turn address recognition on, FALSE to turn it off&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x404c1840" loc="77:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x404c4d50" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x404c4be8" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x404c2d08" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x404c2ba0" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x404c2520" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x404c23b8" loc="59:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x404cebe8" loc="101:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="98:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x404c1518" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x404c13b0" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x404ce888" loc="96:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x404c2878" loc="64:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sync" ref="0x404c48c8" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x404c2098" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x404c1088" loc="70:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.&#10;</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getHeader" ref="0x404c6bb0" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10;</short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:11" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x4033dee0"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x4033c870"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404c69e0" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x404c51e8" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10;</short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:9" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x4033cd40"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x403446c0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404c5010" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="36:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x404ca298" loc="48:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10;</short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x40356b78"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="changed" ref="0x404ca940" loc="58:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.&#10;</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x404ca5f0" loc="53:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10;</short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x403569a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x404c7f10" loc="43:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10;</short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403569a0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40356b78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x404c7b60" loc="43:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403569a0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x404c7cf0" loc="43:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40356b78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40508ee8" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10;</short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x40508b20" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x40508ca8" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40507820" loc="65:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.&#10;&#10;</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="modify" ref="0x40514878" loc="84:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x40514278" loc="84:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x40514420" loc="84:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x405145a8" loc="84:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40507f28" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10;</short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x40507b88" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40507d10" loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x40507478" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10;</short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x40507240" loc="58:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="29:/opt/tinyos-2.x/tos/interfaces/Random.nc">
      <documentation loc="29:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10;</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x40511c58" loc="41:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number. &#10;</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="rand32" ref="0x405118a0" loc="35:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number. &#10;</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40032340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="65:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
      <documentation loc="65:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x4050aae0" loc="74:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.&#10;&#10;</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x40509010" loc="84:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10;</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x4050d010" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x4050de08" loc="97:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.&#10;&#10;</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x4050da88" loc="90:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.&#10;&#10;</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x405004c0" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x40500ba8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.&#10;&#10;</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x4050d368" loc="76:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x4050d708" loc="83:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.&#10;&#10;</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x40500810" loc="56:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="67:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
      <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources. </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2007/04/15 20:05:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x40502398" loc="110:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.  &#10;&#10;</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request 	  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x40503a40" loc="87:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="request" ref="0x40503610" loc="78:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="granted" ref="0x40503d60" loc="92:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x405027a0" loc="118:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="112:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/opt/tinyos-2.x/tos/interfaces/State.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10;</short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x4051a9b0" loc="71:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x4051be08" loc="56:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isState" ref="0x4051a670" loc="66:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x4051a4c0" loc="66:/opt/tinyos-2.x/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x4051a180" loc="61:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="requestState" ref="0x4051b5b8" loc="45:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10;</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x4051b378" loc="45:/opt/tinyos-2.x/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x4051bad0" loc="51:/opt/tinyos-2.x/tos/interfaces/State.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x4051b900" loc="51:/opt/tinyos-2.x/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-2.x/tos/interfaces/Read.nc">
      <documentation loc="49:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x405422a8" loc="49:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x405422a8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x40542708" loc="55:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.&#10; &#10;</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40542dd8" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().&#10;&#10;</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x405422a8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40542a28" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x40542bb0" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x405422a8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x40559b78" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.&#10;&#10;</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x4033dd50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40559958" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40558118" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.&#10; &#10;</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x4033dd50"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40559ec8" loc="55:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
      <documentation loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10;</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40557388" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40557388"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x405574a0" loc="45:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405574a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x405542a8" loc="98:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.&#10;</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405574a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x40556268" loc="67:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startAt" ref="0x40556f08" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405574a0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405574a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x405569e0" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405574a0"/></type-var>
          </variable>
          <variable name="dt" ref="0x40556b70" loc="92:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405574a0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x405566a0" loc="77:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x405546e0" loc="105:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10;</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405574a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="start" ref="0x40557b60" loc="55:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405574a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x405578c8" loc="55:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405574a0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40557f18" loc="62:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="36:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.&#10;</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x405648a0" loc="45:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x4033dd50"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x4055b2a8" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x4033dd50"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x4055cc48" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x4055cdf0" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x4055b010" loc="52:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x4055bbb8" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x4033dd50"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x4055b5f0" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x4055b798" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x4055b920" loc="63:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="32:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.4 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x4055e910" loc="57:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.&#10;&#10;</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disable" ref="0x4055e568" loc="50:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10;</short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x4055e1a8" loc="43:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x40551e50" loc="42:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10;</short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x405cdeb0" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short> Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40307d38"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x4030b010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x405bce68" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40302260"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x40302490"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x405bcd00" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40302260"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x40302490"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x405cd6a0" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short> Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40308c20"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x40308e50"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x405bde70" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short> Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x402ff598"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x402ff7c8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x405cdb58" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40308c20"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x40308e50"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x405cd9f0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40308c20"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x40308e50"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x405cc378" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40307d38"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x4030b010"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x405cc210" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40307d38"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x4030b010"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x405bc4e8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403002b8"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x403004e8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x405bc1b8" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40302260"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x40302490"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x405bc9a8" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x402ff598"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x402ff7c8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x405bc840" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x402ff598"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x402ff7c8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x405cd348" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403002b8"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x403004e8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x405cd1e0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403002b8"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x403004e8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.&#10;</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x405bfde0" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405bfde0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x405c72e0" loc="79:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.&#10;</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x405c70f8" loc="79:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x405c8a08" loc="67:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10;</short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x405ca268" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.&#10;</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405bfde0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="captured" ref="0x405cacb8" loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.&#10;</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405bfde0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x405caad8" loc="51:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405bfde0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x405c8010" loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0x405c8d90" loc="73:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10;</short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x405ca790" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.&#10;</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405bfde0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x405ca5a8" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405bfde0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x405c8340" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x405c8670" loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.&#10;</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x405c6cd0" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405c6cd0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x405d4710" loc="65:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10;</short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x405d59b0" loc="49:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x405d5160" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.&#10;</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405c6cd0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="reset" ref="0x405d5ce8" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0x405d4a98" loc="71:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10;</short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x405d5680" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.&#10;</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405c6cd0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x405d54a0" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405c6cd0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x405d4048" loc="56:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x405d4378" loc="59:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.  &#10;</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x405b4eb8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x405b4eb8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x405c1010" loc="89:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="test" ref="0x405c38e8" loc="78:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10;</short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x405c4348" loc="52:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.&#10;</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x405b4eb8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setScale" ref="0x405c1528" loc="95:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.&#10;</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x405c1350" loc="95:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x405c18c0" loc="101:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.&#10;</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="reset" ref="0x405c4ec8" loc="66:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="overflow" ref="0x405c4b90" loc="61:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0x405c3c78" loc="84:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10;</short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x405c4848" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.&#10;</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x405b4eb8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x405c4688" loc="58:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x405b4eb8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x405c3218" loc="69:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x405c3548" loc="72:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10;</short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x405db028" loc="36:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short> Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x402f33c0"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x402f35f0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x405da088" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short> Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x402fa250"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x402fa480"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x405db838" loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short> Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x402f6f60"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x402f51a8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x405dbcf0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x402f6f60"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x402f51a8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x405dbb88" loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x402f6f60"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x402f51a8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x405da540" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x402fa250"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x402fa480"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x405da3d8" loc="45:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x402fa250"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x402fa480"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x405db4e0" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x402f33c0"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x402f35f0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x405db378" loc="37:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x402f33c0"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x402f35f0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="15:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x405e92f8" loc="38:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10;</short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x405e96f0" loc="44:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10;</short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x405eaee8" loc="32:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x405e9af0" loc="50:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10;</short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x405ea670" loc="21:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10;</short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x402f2cc0"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x402f2ef0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x405eaba0" loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10;</short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x402f2cc0"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x402f2ef0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x405ea9b0" loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x402f2cc0"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x402f2ef0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10;</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4069a3a0" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4069a3a0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4069a4b8" loc="46:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4069a4b8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x4069a988" loc="53:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4069a4b8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x406990f8" loc="65:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x4069ada8" loc="60:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits. </short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="overflow" ref="0x406994c8" loc="71:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed. </short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="35:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.5 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x406ee090" loc="43:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disable" ref="0x406ee8f8" loc="55:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.&#10;</short>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="captured" ref="0x406ee5c8" loc="50:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.&#10;&#10;</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x406ee3d8" loc="50:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x406efd40" loc="42:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.&#10;&#10;</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="30:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10;</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x40708a98" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x40706790" loc="64:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disable" ref="0x40708740" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="edge" ref="0x40706450" loc="59:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.&#10;</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x407061d8" loc="59:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x407083f0" loc="35:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getValue" ref="0x40708e70" loc="52:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10;</short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10;</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x4070ca70" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="17:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip. </short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x407575e0" loc="24:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released. </short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x40757980" loc="31:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus. </short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x40757da8" loc="39:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10;</short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10;</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x40763090" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40764c00" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40764d88" loc="62:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x40762a48" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.&#10;&#10;</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x407624c8" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40762650" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x407627d8" loc="91:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40762168" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x4033dd50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40763cc8" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40763e50" loc="82:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x40764898" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x4033dd50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40764468" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x407645f0" loc="51:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40763960" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.&#10;&#10;</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x407633f0" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40763578" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40763700" loc="71:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="43:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
      <documentation loc="43:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus. </short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.4 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40768d28" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.&#10;&#10;</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param txBuf A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param rxBuf A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40768608" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x407687b0" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40768940" loc="59:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x407668a8" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.&#10;&#10;</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param txBuf The buffer used for transmission&#10; @param rxBuf The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x407660a8" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40766250" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x407663e0" loc="71:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40766578" loc="72:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="27:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
      <documentation loc="27:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x40769010" loc="34:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <documentation loc="29:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10;</short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x4076cd68" loc="34:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="61:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x407d3010" loc="69:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x407cf920" loc="109:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x407d00f0" loc="100:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x407cfdd8" loc="111:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x407cfc70" loc="111:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x407bac10" loc="66:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x407d0d70" loc="105:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x407d0c08" loc="105:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x407d15e0" loc="96:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x407d1478" loc="96:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x407d36c0" loc="80:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10;</short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x407cc7e8" loc="125:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x407cc680" loc="125:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x407d1908" loc="97:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClock" ref="0x407cd5e8" loc="114:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x407cd480" loc="114:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x407cdc30" loc="120:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x407cf5f8" loc="108:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x407cf490" loc="108:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x407cc338" loc="124:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x407d05a0" loc="102:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x407d0438" loc="102:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x407d3bc8" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10;</short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x407d39f8" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x407d1db0" loc="99:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x407d1c48" loc="99:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x407cf140" loc="106:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x407cd140" loc="112:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClock" ref="0x407cd908" loc="115:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x407cc010" loc="122:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x407d08c0" loc="103:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sleep" ref="0x407d3350" loc="72:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x407d1138" loc="92:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete. &#10;</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x407d3f08" loc="92:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="72:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter. </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x407c8d58" loc="80:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.&#10;&#10;</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="userId" ref="0x407c7178" loc="88:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.&#10; &#10;</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="65:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="65:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40806b20" loc="74:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.&#10;&#10;</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x40805010" loc="84:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10;</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="36:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10;</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.4 $&#10; @date $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x40828028" loc="43:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x40828500" loc="51:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="44:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it. </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x408257e0" loc="55:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.&#10;</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="configure" ref="0x40825408" loc="49:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.&#10;</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="35:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x40838418" loc="69:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a cleint id&#10;&#10;</short>
          <long>&#10; Enqueue a cleint id&#10;&#10; @param cleintId - the cleint id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40823430"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x408381e0" loc="69:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40823430"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x40839480" loc="43:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.&#10;&#10;</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x40839a60" loc="52:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.&#10;&#10;</short>
          <long>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40823430"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x408397d8" loc="52:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40823430"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x40839e70" loc="60:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the cleint id of the next resource in the queue. &#10;</short>
          <long>&#10; Retreive the cleint id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The cleint id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x40823430"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10;</short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x408c5010" loc="43:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402b3338"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="RadioTimeStamping" loc="33:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
        <short>&#10; Interface for receiving time stamp information from the radio.&#10;</short>
        <long>&#10; Interface for receiving time stamp information from the radio.&#10; This information is also embedded in packet metadata.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   October 10 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="transmittedSFD" ref="0x408c73c8" loc="39:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
        <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
          <short> &#10; Provides the time at which start of frame delimiter has been&#10; transmitted: units are in terms of a 32kHz clock.&#10;</short>
        </documentation>
        <interfacedef-ref qname="RadioTimeStamping"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x408c7030" loc="39:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
            </type-int>
          </variable>
          <variable name="p_msg" ref="0x408c71e0" loc="39:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedSFD" ref="0x408c7a80" loc="50:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
          <short> &#10; Provides the time at which start of frame delimiter was received:&#10; units are in terms of a 32kHz clock. </short>
          <long> &#10; Provides the time at which start of frame delimiter was received:&#10; units are in terms of a 32kHz clock.  &#60;b>NOTE&#60;/b> that receiving&#10; a receivedSFD() event does NOT mean that a packet will be&#10; received; the transmission may stop, become corrupted, or be&#10; filtered by the physical or link layers.  The number of rxSFD&#10; events will always be great than or equal to the number of&#10; Receive message events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioTimeStamping"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x408c7710" loc="50:/opt/tinyos-2.x/tos/interfaces/RadioTimeStamping.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="40:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="40:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x408e1c00" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.&#10;&#10;</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x408e1828" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x408e19d8" loc="61:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4035e2c0"/>
                <typename><typedef-ref name="message_t" ref="0x4035ec08"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x408e14f0" loc="53:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sfd" ref="0x408e1130" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.&#10;&#10;</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x408e4f18" loc="47:/opt/tinyos-2.x/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AesSecurity" loc="23:/opt/tinyos-2.x/tos/chips/cc2420/receive/AesSecurity.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/chips/cc2420/receive/AesSecurity.nc">
        <short>&#10; Description          :&#10;&#10;&#10;&#10;</short>
      </documentation>
      <function command="" provided="0" name="AFWAsetReceivePMode" ref="0x40923e80" loc="25:/opt/tinyos-2.x/tos/chips/cc2420/receive/AesSecurity.nc">
        <interfacedef-ref qname="AesSecurity"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="rctrl0" ref="0x40923b88" loc="25:/opt/tinyos-2.x/tos/chips/cc2420/receive/AesSecurity.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x40030e90"/></typename>
            </type-int>
          </variable>
          <variable name="sec_rxl" ref="0x40923d10" loc="25:/opt/tinyos-2.x/tos/chips/cc2420/receive/AesSecurity.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x400307d8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.5 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x409b67c0" loc="42:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x409b67c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x409b6ec0" loc="53:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x402bc470"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x409b67c0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x409b6bc0" loc="53:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x409b67c0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40a2aa18" loc="42:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40a2aa18"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40a2aed8" loc="50:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40032340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
