<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="28:OscilloscopeAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40316d78"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x40376ab8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos2/tinyos-2.x-src/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40376ab8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x4046f340"/></to>
    </wire>
    <wire loc="29:OscilloscopeAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x4031ba48"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4044f658"/></to>
    </wire>
    <wire loc="37:OscilloscopeAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x4031ba48"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40c74868"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x40c74868"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40f45740"/></to>
    </wire>
    <wire loc="63:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4044f658"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40480528"/></to>
    </wire>
    <wire loc="30:OscilloscopeAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40315010"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40a5ddd0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40a5ddd0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40f34110"/></to>
    </wire>
    <wire loc="31:OscilloscopeAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4033e5b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40c71898"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40c71898"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40475818"/>
      <arguments>
        <value cst="I:147">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x40339650"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:OscilloscopeAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4034b3e8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x409c4330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x409c4330"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x409dfc18"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="33:OscilloscopeAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40352730"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4084cd20"/></to>
    </wire>
    <wire loc="40:/opt/tinyos2/tinyos-2.x-src/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4084cd20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40846b30"/></to>
    </wire>
    <wire loc="39:OscilloscopeAppC.nc">
      <from><interface-ref name="AFWA_AESI" scoped="" ref="0x40363780"/></from>
      <to><interface-ref name="AFWA_AESI" scoped="" ref="0x40c74e20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AFWA_AESI" scoped="" ref="0x40c74e20"/></from>
      <to><interface-ref name="AFWA_AESI" scoped="" ref="0x40f45cf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4037b4c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40f45428"/></to>
    </wire>
    <wire loc="42:/opt/tinyos2/tinyos-2.x-src/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4037b4c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x409d8060"/></to>
    </wire>
    <wire loc="60:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4037b4c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4099c4f0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4037b4c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4096d6b0"/></to>
    </wire>
    <wire loc="41:/opt/tinyos2/tinyos-2.x-src/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4037b4c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x409607f8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4037b4c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408fd7f0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4037b4c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408abbb0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4037b4c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4057aa78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4037b4c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40e755c8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos2/tinyos-2.x-src/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4037b4c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407883b8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4037b4c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4052da80"/></to>
    </wire>
    <wire loc="52:/opt/tinyos2/tinyos-2.x-src/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x4046f688"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x4028f7a0"/></to>
    </wire>
    <wire loc="42:/opt/tinyos2/tinyos-2.x-src/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x4028f7a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x402ec130"/></to>
    </wire>
    <wire loc="53:/opt/tinyos2/tinyos-2.x-src/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x4046fbb8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403838d0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x403838d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40385c48"/></to>
    </wire>
    <wire loc="56:/opt/tinyos2/tinyos-2.x-src/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4046ff28"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x4037b4c0"/></to>
    </wire>
    <wire loc="26:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40388c60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4064b1d8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x40388568"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x4045b488"/></to>
    </wire>
    <wire loc="52:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x40384380"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4045b160"/></to>
    </wire>
    <wire loc="45:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x40384010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4084e6b8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x40384010"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40387be0"/></to>
    </wire>
    <wire loc="23:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40387be0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40392428"/></to>
    </wire>
    <wire loc="54:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x4038a010"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x40388c60"/></to>
    </wire>
    <wire loc="25:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x40398e30"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x4039c980"/></to>
    </wire>
    <wire loc="132:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x4039c980"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x403e2330"/></to>
    </wire>
    <wire loc="26:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40391800"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x4038a010"/></to>
    </wire>
    <wire loc="182:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x403bc808"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40432538"/></to>
    </wire>
    <wire loc="156:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x403ad858"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x403feb80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x403feb80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d2b718"/></to>
    </wire>
    <wire loc="167:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x403b09d8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x403ff5d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x403ff5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d540f8"/></to>
    </wire>
    <wire loc="176:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x403b5808"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40410ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40410ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d826c0"/></to>
    </wire>
    <wire loc="134:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x4039bcb8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x403e16b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x403e16b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ca4a88"/></to>
    </wire>
    <wire loc="174:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x403b6508"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40405790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40405790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d86228"/></to>
    </wire>
    <wire loc="137:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x403a3068"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x403e73a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x403e73a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cd72b0"/></to>
    </wire>
    <wire loc="148:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x403a7348"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x403f2e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x403f2e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cfdc08"/></to>
    </wire>
    <wire loc="159:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x403ab5e8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x403fc7d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x403fc7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d25570"/></to>
    </wire>
    <wire loc="170:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x403ae7a8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40409250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40409250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d7f010"/></to>
    </wire>
    <wire loc="129:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x4039ec58"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x403e46b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x403e46b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cac7f8"/></to>
    </wire>
    <wire loc="140:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x403a2d98"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x403ef030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x403ef030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cd20f8"/></to>
    </wire>
    <wire loc="151:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x403a5068"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x403f0ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x403f0ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cf8a88"/></to>
    </wire>
    <wire loc="162:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x403a9348"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x403fa4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x403fa4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d50538"/></to>
    </wire>
    <wire loc="179:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x403b3508"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4040d7d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4040d7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40daf538"/></to>
    </wire>
    <wire loc="185:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x403ba7a8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40437d38"/></to>
    </wire>
    <wire loc="165:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x403b26c8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40400250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40400250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d58c78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x403e2330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ca76c0"/></to>
    </wire>
    <wire loc="143:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x403a0bd8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x403edc88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x403edc88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ccc010"/></to>
    </wire>
    <wire loc="183:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x403bb428"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4042f7f8"/></to>
    </wire>
    <wire loc="146:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x403a8010"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x403f3b38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x403f3b38"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d007f8"/></to>
    </wire>
    <wire loc="157:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x403ac268"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x403fd4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x403fd4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d290f8"/></to>
    </wire>
    <wire loc="168:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x403af428"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x403fff28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x403fff28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d53ac8"/></to>
    </wire>
    <wire loc="177:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x403b4190"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4040f4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4040f4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40db20b0"/></to>
    </wire>
    <wire loc="135:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x4039a6c8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x403ea030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x403ea030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ca2538"/></to>
    </wire>
    <wire loc="138:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x403a39d8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x403e7cf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x403e7cf8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cd6c78"/></to>
    </wire>
    <wire loc="149:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x403a7cb8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x403f17d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x403f17d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cfb6c0"/></to>
    </wire>
    <wire loc="160:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x403aa010"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x403fb170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x403fb170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d23010"/></to>
    </wire>
    <wire loc="171:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x403b7188"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40409ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40409ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d7e9e8"/></to>
    </wire>
    <wire loc="130:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x4039d5e8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x403e3030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x403e3030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40caa228"/></to>
    </wire>
    <wire loc="141:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x403a17a8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x403ef988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x403ef988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cd1ac8"/></to>
    </wire>
    <wire loc="152:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x403a59d8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x403f94f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x403f94f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cf6538"/></to>
    </wire>
    <wire loc="180:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x403b3e78"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4040c170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4040c170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40dad010"/></to>
    </wire>
    <wire loc="155:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x403a4d98"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x403fe228"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x403fe228"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d2ed08"/></to>
    </wire>
    <wire loc="166:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x403b0068"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40400ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40400ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d56718"/></to>
    </wire>
    <wire loc="175:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x403b6e78"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40410170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40410170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d85c08"/></to>
    </wire>
    <wire loc="186:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x403b9188"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4043f010"/></to>
    </wire>
    <wire loc="133:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x4039b348"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x403e2c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x403e2c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ca50b0"/></to>
    </wire>
    <wire loc="144:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x4039f5e8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x403ec6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x403ec6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ccb9e8"/></to>
    </wire>
    <wire loc="173:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x403b7af8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40406d78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40406d78"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d887f8"/></to>
    </wire>
    <wire loc="147:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x403a8980"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x403f24f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x403f24f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cfe228"/></to>
    </wire>
    <wire loc="158:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x403acbd8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x403fde48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x403fde48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d28ac8"/></to>
    </wire>
    <wire loc="169:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x403afd98"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4040a890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4040a890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d81570"/></to>
    </wire>
    <wire loc="178:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x403b4b00"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4040fe48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4040fe48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40db1a88"/></to>
    </wire>
    <wire loc="128:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x4039e2e8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x403e5d18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x403e5d18"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c82e18"/></to>
    </wire>
    <wire loc="139:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x403a2428"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x403e66b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x403e66b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cd4718"/></to>
    </wire>
    <wire loc="150:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x403a66c8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x403f0170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x403f0170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cf90b0"/></to>
    </wire>
    <wire loc="161:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x403aa980"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x403fbac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x403fbac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d229e8"/></to>
    </wire>
    <wire loc="184:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x403bbd98"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40439a88"/></to>
    </wire>
    <wire loc="164:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x403a9cb8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40402870"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40402870"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d592b0"/></to>
    </wire>
    <wire loc="153:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x403a4428"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x403f9e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x403f9e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cf4010"/></to>
    </wire>
    <wire loc="131:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x4039c010"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x403e3988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x403e3988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ca9c08"/></to>
    </wire>
    <wire loc="142:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x403a0268"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x403ed330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x403ed330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ccf570"/></to>
    </wire>
    <wire loc="43:/opt/tinyos2/tinyos-2.x-src/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x40297c20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x402ec8c8"/></to>
    </wire>
    <wire loc="44:/opt/tinyos2/tinyos-2.x-src/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x402ebf20"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x402fa900"/></to>
    </wire>
    <wire loc="58:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x40304398"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x405c6e60"/></to>
    </wire>
    <wire loc="92:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40480528"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x409a4b18"/></to>
    </wire>
    <wire loc="65:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4044fea8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40480d78"/></to>
    </wire>
    <wire loc="81:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40480d78"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4049d100"/></to>
    </wire>
    <wire loc="67:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40473010"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x4047ff00"/></to>
    </wire>
    <wire loc="83:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x4047ff00"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x4049c1e8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4047ac10"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4047d010"/></to>
    </wire>
    <wire loc="80:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4047d010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4049b318"/></to>
    </wire>
    <wire loc="66:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40475818"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4047f768"/></to>
    </wire>
    <wire loc="82:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4047f768"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4049da30"/></to>
    </wire>
    <wire loc="70:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40482360"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x404858b8"/></to>
    </wire>
    <wire loc="88:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x404858b8"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x40946270"/></to>
    </wire>
    <wire loc="69:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40472320"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4047e400"/></to>
    </wire>
    <wire loc="84:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4047e400"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4049c6d0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x409a4b18"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x409a2588"/></to>
    </wire>
    <wire loc="79:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x4048e428"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x404d87a8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x404d87a8"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x404e1e20"/></to>
    </wire>
    <wire loc="87:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x404852e8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40947be8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40496a30"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x409a4010"/></to>
    </wire>
    <wire loc="62:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x409a4010"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x409a1c08"/></to>
    </wire>
    <wire loc="85:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x404910b0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x409b46b8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x409b46b8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x409b04b8"/></to>
    </wire>
    <wire loc="93:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x409a2588"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x404d92c8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x404d92c8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x404e4ec8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x404a26c8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40971190"/></to>
    </wire>
    <wire loc="55:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40971190"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4096d010"/></to>
    </wire>
    <wire loc="97:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40971898"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x409b4010"/></to>
    </wire>
    <wire loc="54:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x409b4010"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x409b4dc0"/></to>
    </wire>
    <wire loc="98:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x409b4dc0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x409a53c8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x409a53c8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x409a3970"/></to>
    </wire>
    <wire loc="99:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x409a3970"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x409a9a90"/></to>
    </wire>
    <wire loc="87:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x409a9a90"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x409a8bb0"/></to>
    </wire>
    <wire loc="100:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x409a8bb0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x404d98a8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x404d98a8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x404e14c8"/></to>
    </wire>
    <wire loc="103:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x404a2d98"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409a5a68"/></to>
    </wire>
    <wire loc="60:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x409a5a68"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x409a2070"/></to>
    </wire>
    <wire loc="104:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x409a2070"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40980490"/></to>
    </wire>
    <wire loc="56:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40980490"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4097cab8"/></to>
    </wire>
    <wire loc="105:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40980ef8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409a8158"/></to>
    </wire>
    <wire loc="88:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x409a8158"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x409a86a8"/></to>
    </wire>
    <wire loc="106:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x409a86a8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x404d8010"/></to>
    </wire>
    <wire loc="71:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x404d8010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40901de0"/></to>
    </wire>
    <wire loc="108:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x404b2b98"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x408785b8"/></to>
    </wire>
    <wire loc="109:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x4049a320"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40947be8"/></to>
    </wire>
    <wire loc="110:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x4049f280"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40946760"/></to>
    </wire>
    <wire loc="111:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x404a8de0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x40526420"/></to>
    </wire>
    <wire loc="55:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x40526420"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x4052c500"/></to>
    </wire>
    <wire loc="63:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40901de0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4091b510"/></to>
    </wire>
    <wire loc="59:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x404f85f8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4047e400"/></to>
    </wire>
    <wire loc="62:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x404eabb0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40527d08"/></to>
    </wire>
    <wire loc="54:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40527d08"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4052ddc8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x404e5208"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x405252e0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x405252e0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x4052b3c0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x404f13c8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40888ea8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x404f13c8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x409014b8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x409014b8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x408fdb38"/></to>
    </wire>
    <wire loc="56:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40888ea8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x408abef8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x404eed58"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x408872f0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x408872f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408aa358"/></to>
    </wire>
    <wire loc="68:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x404de530"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x40887998"/></to>
    </wire>
    <wire loc="58:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x40887998"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x408aaa20"/></to>
    </wire>
    <wire loc="75:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x404ece60"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40947be8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x404f9468"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40946760"/></to>
    </wire>
    <wire loc="79:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x404f81d0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40964468"/></to>
    </wire>
    <wire loc="45:/opt/tinyos2/tinyos-2.x-src/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40964468"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x4095f4e0"/></to>
    </wire>
    <wire loc="82:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x405000c0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40967450"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x40967450"/></from>
      <to><interface-ref name="State" scoped="" ref="0x4078c558"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x404ec258"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4084cd20"/></to>
    </wire>
    <wire loc="78:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x404f6bf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40297c20"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x404f64c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40297c20"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x404f7b30"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40297c20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x40530938"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x4052bdf0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x405464f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4047e400"/></to>
    </wire>
    <wire loc="66:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x40533460"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x4057af20"/></to>
    </wire>
    <wire loc="55:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x4057af20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40587c90"/></to>
    </wire>
    <wire loc="69:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x40529b98"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x406be348"/></to>
    </wire>
    <wire loc="81:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x406be348"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x403a3068"/></to>
    </wire>
    <wire loc="70:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40532608"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x406d2068"/></to>
    </wire>
    <wire loc="84:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x406d2068"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x4039bcb8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x40531010"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x406d1428"/></to>
    </wire>
    <wire loc="86:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x406d1428"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x4039b348"/></to>
    </wire>
    <wire loc="74:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x4053d668"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x406ca1b8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x406ca1b8"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x4072d7b0"/></to>
    </wire>
    <wire loc="77:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x405451b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40863f08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40863f08"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40740660"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x405446f8"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x40861528"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x40861528"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40544a68"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x40861880"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40861880"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x405461a8"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x40860368"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40860368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40544de0"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x408606c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x408606c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40549e88"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x40860d70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40860d70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4073e5c8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x4053c368"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x4085e270"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x4085e270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4073e5c8"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x4053c7b8"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x4085e6a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x4085e6a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4073e5c8"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x4053cc10"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x4085eae0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x4085eae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4073e5c8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40539090"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x4085ef18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x4085ef18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4073e5c8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x4053a900"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x4085c468"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x4085c468"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4073fea0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x405394e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x4085d7a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x4085d7a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4073e5c8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x40539930"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x4085dbd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x4085dbd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4073e5c8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x405430d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40873030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40873030"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40740660"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x405459a8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40869ea0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40869ea0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40740660"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x4053dc58"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x408785b8"/></to>
    </wire>
    <wire loc="113:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x4054e230"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40297c20"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="112:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x40550af0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40297c20"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4057aa78"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x406c23c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x406c23c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x406c3be0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40587c90"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40e17638"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40e17638"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40e11848"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x40e0d150"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40e13130"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40e13130"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40e08678"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x40e0e0e8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406812e8"/></to>
    </wire>
    <wire loc="33:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x406812e8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40699e98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x40e07e10"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x405a6958"/></to>
    </wire>
    <wire loc="46:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x405a6958"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40601908"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x40e05c10"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x405aa100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x405b14d8"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x405ff758"/></to>
    </wire>
    <wire loc="48:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x405ac5a0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x405fe3f0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x405aa100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x405fceb0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x405aa100"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x4060d690"/></to>
    </wire>
    <wire loc="52:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x405aa100"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x4060be10"/></to>
    </wire>
    <wire loc="54:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x40609538"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x405c0b40"/></to>
    </wire>
    <wire loc="61:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x405c0b40"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x405c8f08"/></to>
    </wire>
    <wire loc="63:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x405cb1c8"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x405d61d8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x405c33e8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x405c7768"/></to>
    </wire>
    <wire loc="60:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x405b4010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x405c9188"/></to>
    </wire>
    <wire loc="27:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4064b5c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x405a6958"/></to>
    </wire>
    <wire loc="34:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40698ef8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4067f958"/></to>
    </wire>
    <wire loc="31:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4067f958"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40690618"/></to>
    </wire>
    <wire loc="32:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4068f678"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x405a6958"/></to>
    </wire>
    <wire loc="82:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x406becb8"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x4039f5e8"/></to>
    </wire>
    <wire loc="83:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x406bd6c8"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x403ae7a8"/></to>
    </wire>
    <wire loc="80:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x406bf960"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x403aa980"/></to>
    </wire>
    <wire loc="85:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x406d29d8"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x403ab5e8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x406ddb90"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x406dc5b0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x406ca7d0"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x406e6540"/></to>
    </wire>
    <wire loc="50:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0x406dcc38"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x405ac5a0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x406e6b38"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x406ecda8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x406ecda8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x4071fe98"/></to>
    </wire>
    <wire loc="60:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0x4072dde0"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x406bf960"/></to>
    </wire>
    <wire loc="63:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x406ee5f0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40712bc0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x406edda8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40723ca8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x406eb5f0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x4071cf28"/></to>
    </wire>
    <wire loc="64:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x406eeda8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x4070fbc0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x406ec5f0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40721d98"/></to>
    </wire>
    <wire loc="62:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x406efdb0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x406fec48"/></to>
    </wire>
    <wire loc="65:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x406ed5f0"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x4070dbc0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40702430"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x406f91c0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40711430"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x406f9538"/></to>
    </wire>
    <wire loc="73:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x4070e430"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x406f98b0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40724430"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x406f9c28"/></to>
    </wire>
    <wire loc="75:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40722510"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x406fc010"/></to>
    </wire>
    <wire loc="76:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x407205f0"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x406fc388"/></to>
    </wire>
    <wire loc="77:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x4071d6a0"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x406fc700"/></to>
    </wire>
    <wire loc="78:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x4071b6f0"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x406fca78"/></to>
    </wire>
    <wire loc="69:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0x4072b360"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40297c20"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40860010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x4085ccd8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4073fea0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x4085d368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4073e5c8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x408625d0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40740d28"/></to>
    </wire>
    <wire loc="56:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40740d28"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40752010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40862e40"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x40860a18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x4085c8a0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4073fea0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x4085b190"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4073f518"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x408611d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x4085c030"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4073fea0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40862ae8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x40861bd8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x4085b968"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4073f518"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x4073f518"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x40750100"/></to>
    </wire>
    <wire loc="53:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x4073fea0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40750a68"/></to>
    </wire>
    <wire loc="54:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x4073e5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4074f158"/></to>
    </wire>
    <wire loc="51:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40740660"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40752788"/></to>
    </wire>
    <wire loc="55:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4074f818"/></to>
    </wire>
    <wire loc="59:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x4074d440"/></from>
      <to><interface-ref name="State" scoped="" ref="0x4077abc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x4077abc0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x4078c558"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x4074fbb0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4078f870"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4078f870"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x407ab838"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x4074b580"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x4078ff28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiByte" scoped="" ref="0x4078ff28"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x40794dc0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x4074d010"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x4078e270"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiPacket" scoped="" ref="0x4078e270"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x407ab180"/></to>
    </wire>
    <wire loc="67:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4074dbc0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4084cd20"/></to>
    </wire>
    <wire loc="86:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x4075e4a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40297c20"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos2/tinyos-2.x-src/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x4078c558"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40788968"/></to>
    </wire>
    <wire loc="80:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x407ab180"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x407a79d0"/></to>
    </wire>
    <wire loc="79:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x40794dc0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x407a76a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x4078f538"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40794a80"/></to>
    </wire>
    <wire loc="77:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40794a80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407a7388"/></to>
    </wire>
    <wire loc="81:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x407ab838"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x407a6100"/></to>
    </wire>
    <wire loc="83:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x407a4500"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40813570"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40813570"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40e74908"/></to>
    </wire>
    <wire loc="84:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x407ac3a0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40834150"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40834150"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40e72470"/></to>
    </wire>
    <wire loc="85:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x407b1998"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x407da3a8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x407da3a8"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x407d53d8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x407ac7a8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x402ffee0"/></to>
    </wire>
    <wire loc="207:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x407bc010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40297c20"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x407e9068"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x402ffee0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x407ea980"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x403a3068"/></to>
    </wire>
    <wire loc="70:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x407ec348"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x403a39d8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x407eccb8"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x403a2428"/></to>
    </wire>
    <wire loc="72:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x407eb6c8"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x403a2d98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40813cb0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x40e72068"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40e72930"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40834600"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x40e72d58"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x40e75900"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x40e71430"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40297c20"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/tinyos2/tinyos-2.x-src/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4084e6b8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40846810"/></to>
    </wire>
    <wire loc="43:/opt/tinyos2/tinyos-2.x-src/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x408457e8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x40850920"/></to>
    </wire>
    <wire loc="47:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40850920"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x4039d5e8"/></to>
    </wire>
    <wire loc="44:/opt/tinyos2/tinyos-2.x-src/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40844188"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x4084f368"/></to>
    </wire>
    <wire loc="48:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x4084f368"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x4039ec58"/></to>
    </wire>
    <wire loc="45:/opt/tinyos2/tinyos-2.x-src/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40844af8"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x4084fcf8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x4084fcf8"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x4039e2e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x4086e920"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4073e5c8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x4086fc58"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4073e5c8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40870190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x4086df18"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4073fea0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x4086e4e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4073e5c8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x4086ed58"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4073e5c8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x4086f3e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4073e5c8"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x408736e8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40740d28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40871010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x40870b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40870840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x4086e0b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4073e5c8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x408704e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x4086dae0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4073fea0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x4086b368"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4073f518"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x40871368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x4086f820"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4073e5c8"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40870ef0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4073e5c8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x408716c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x4086d6a8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4073fea0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x4086d270"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4073fea0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40873c00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x40871d70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40871a18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x4086bb40"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4073f518"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x4087f6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4073e5c8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40881a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4073e5c8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40883ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x4087ecb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4073fea0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x4087f2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4073e5c8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x4087fb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4073e5c8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40881190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4073e5c8"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x408845a0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40740d28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40884e10"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x40882910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x408825b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40881e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4073e5c8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40882260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x4087e880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4073fea0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x4087d190"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4073f518"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x40883190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x408815c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4073e5c8"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40882c68"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4073e5c8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x408834e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x4087e448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4073fea0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x4087e010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4073fea0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40884ab8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x40883b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40883840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x4087d968"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4073f518"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x4089e7d0"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x408a9a78"/></to>
    </wire>
    <wire loc="60:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x4089e470"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x408a96f8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioTimeStamping" scoped="" ref="0x408a1d68"/></from>
      <to><interface-ref name="TimeStamp" scoped="" ref="0x408a9298"/></to>
    </wire>
    <wire loc="68:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x408a9f20"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x4057af20"/></to>
    </wire>
    <wire loc="71:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x408a56b0"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x406bf960"/></to>
    </wire>
    <wire loc="72:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x408a4068"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x406be348"/></to>
    </wire>
    <wire loc="73:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x408a4a78"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x406d29d8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x408a50a0"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x406ddb90"/></to>
    </wire>
    <wire loc="79:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x408a3450"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x408f2e90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x408f2e90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40740660"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x408a3b18"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x408f0560"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x408f0560"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40740d28"/></to>
    </wire>
    <wire loc="81:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x408bf030"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x408ef190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x408ef190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x408bf3a0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x408efb98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x408efb98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x408bf718"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x408efef0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x408efef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x408bfa90"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x408f0dd0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x408f0dd0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x408c0bb0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x4090a2b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x4090a2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4073e5c8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x408c0068"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x40907968"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40907968"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4073f518"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x408c0760"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40908cb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40908cb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4073fea0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x408bfe08"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x4090be38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x4090be38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4073e5c8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x408b91e0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x409018e0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x409018e0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x4091b010"/></to>
    </wire>
    <wire loc="94:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x408a6640"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40947be8"/></to>
    </wire>
    <wire loc="95:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x408a6c30"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40946760"/></to>
    </wire>
    <wire loc="98:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x408b97e0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4084cd20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x4090a6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4073e5c8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x4090ba00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4073e5c8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x4090ab20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4073e5c8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x4090b190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4073e5c8"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x408ee910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x408ee5b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x408ee260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x40908880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4073fea0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40907190"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4073f518"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x4090b5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4073e5c8"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x408eec68"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4073e5c8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x408ef4e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x40908448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4073fea0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40908010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4073fea0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x408f0a78"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x408ef840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x40900378"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x4091ba50"/></to>
    </wire>
    <wire loc="59:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40915010"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4084cd20"/></to>
    </wire>
    <wire loc="68:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x4091bdc0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x406be348"/></to>
    </wire>
    <wire loc="69:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x4091a7c8"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x406becb8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x409191a8"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x406bd6c8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x40919b40"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x406ca7d0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x409181b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4095ada0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4095ada0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40740660"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x409188a0"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x40953190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40953190"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4073f518"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40917388"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x40949a08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40949a08"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x40917010"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x40958910"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x40958910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40917750"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40947be8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40917d40"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40946760"/></to>
    </wire>
    <wire loc="78:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x40916180"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x40526420"/></to>
    </wire>
    <wire loc="109:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x409103f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40297c20"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x409566e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4073e5c8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40957a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4073e5c8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40959ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40955cb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4073fea0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x409562b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4073e5c8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x40956b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4073e5c8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40957190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4073e5c8"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x409494f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40740d28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40949d60"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x409585b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40957e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4073e5c8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40958260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x40955880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4073fea0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x40959190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x409575c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4073e5c8"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40958c68"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4073e5c8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x409594e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x40955448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4073fea0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40955010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4073fea0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x40959b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40959840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40953968"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4073f518"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/tinyos2/tinyos-2.x-src/tos/system/RandomMlcgC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x4095f4e0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x4097a5d8"/></to>
    </wire>
    <wire loc="44:/opt/tinyos2/tinyos-2.x-src/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x40962ad8"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x40960c10"/></to>
    </wire>
    <wire loc="41:/opt/tinyos2/tinyos-2.x-src/tos/system/RandomMlcgC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x40960c10"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x4097bcd8"/></to>
    </wire>
    <wire loc="43:/opt/tinyos2/tinyos-2.x-src/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40968b50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x409607f8"/></to>
    </wire>
    <wire loc="40:/opt/tinyos2/tinyos-2.x-src/tos/system/RandomMlcgC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x409607f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4097b8c0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4096da38"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40971898"/></to>
    </wire>
    <wire loc="60:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x4096c158"/></from>
      <to><interface-ref name="State" scoped="" ref="0x4096fa10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x4096fa10"/></from>
      <to><interface-ref name="State" scoped="" ref="0x4078c558"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x4096c8d8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40964468"/></to>
    </wire>
    <wire loc="62:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x4096cce8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40946760"/></to>
    </wire>
    <wire loc="57:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x409809a8"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x4099c010"/></to>
    </wire>
    <wire loc="58:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4099c880"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40980ef8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x4099cd70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40946760"/></to>
    </wire>
    <wire loc="63:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x409a3188"/></from>
      <to><interface-ref name="State" scoped="" ref="0x409a08a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x409a08a0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x4078c558"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x409b0ba8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40482360"/></to>
    </wire>
    <wire loc="43:/opt/tinyos2/tinyos-2.x-src/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x409dfc18"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x409d86f8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x409d86f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40a48338"/></to>
    </wire>
    <wire loc="48:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x409d8060"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x409f0dc0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x409d1230"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40a62d00"/></to>
    </wire>
    <wire loc="35:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x409f0dc0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a1f5a8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x40a6c350"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40a1a348"/></to>
    </wire>
    <wire loc="52:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40a29320"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x409ef2e0"/></to>
    </wire>
    <wire loc="36:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x409ef2e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40a1f9e0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40a67648"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x409eeb60"/></to>
    </wire>
    <wire loc="37:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x409eeb60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40a1d2c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x40a1d2c8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40efd8d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x40a1f5a8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40ec7c68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40a1f9e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40efe0c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40efc8c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x405b4010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40ef9668"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x405c0b40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x40ef9e90"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x405c33e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0x40ef75c8"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x405cb1c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x40a27a40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40297c20"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x40a6a220"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40297c20"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40ab54d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4047ac10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40ab5b68"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40472320"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40ab4790"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40482360"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x40f347d8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40a933b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f34e70"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40472320"/></to>
    </wire>
    <wire loc="45:/opt/tinyos2/tinyos-2.x-src/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40a933b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40a90f00"/></to>
    </wire>
    <wire loc="46:/opt/tinyos2/tinyos-2.x-src/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40a94690"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4044fea8"/></to>
    </wire>
    <wire loc="47:/opt/tinyos2/tinyos-2.x-src/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40a94d38"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40472320"/></to>
    </wire>
    <wire loc="48:/opt/tinyos2/tinyos-2.x-src/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40ab9930"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4047ac10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x40ab8030"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40297c20"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x40ab8468"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40297c20"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Leds" scoped="" ref="0x40f42ec0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4084cd20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40f447a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40f40e78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40f40e78"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41075af8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="OmacI" scoped="" ref="0x40f44e38"/></from>
      <to><interface-ref name="OmacI" scoped="" ref="0x40f3dc08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="CcmI" scoped="" ref="0x40f42748"/></from>
      <to><interface-ref name="CcmI" scoped="" ref="0x40f3b730"/></to>
    </wire>
    <wire>
      <from><interface-ref name="CtrI" scoped="" ref="0x40f42350"/></from>
      <to><interface-ref name="CtrI" scoped="" ref="0x40f39550"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AFWA_AESI" scoped="" ref="0x40f3bec8"/></from>
      <to><interface-ref name="AFWA_AESI" scoped="" ref="0x40f45cf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AFWA_AESI" scoped="" ref="0x40f39968"/></from>
      <to><interface-ref name="AFWA_AESI" scoped="" ref="0x40f45cf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AFWA_AESI" scoped="" ref="0x40f3c170"/></from>
      <to><interface-ref name="AFWA_AESI" scoped="" ref="0x40f45cf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Leds" scoped="" ref="0x40f38410"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4084cd20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40f3f530"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4047ac10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f3fbc8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40472320"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40f3e870"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40482360"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x41071260"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40a933b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x410718f8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40472320"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40c71d70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4047ac10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40c704d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40472320"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="OscilloscopeC" loc="22:OscilloscopeC.nc">
      <module/>
    </component>
    <component qname="MainC" loc="45:/opt/tinyos2/tinyos-2.x-src/tos/system/MainC.nc">
      <documentation loc="45:/opt/tinyos2/tinyos-2.x-src/tos/system/MainC.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.5 2006/12/12 18:23:43 vlahan Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/PlatformC.nc">
      <documentation loc="35:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/PlatformC.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.5 2006/12/12 18:23:43 vlahan Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/PlatformP.nc">
      <documentation loc="33:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/PlatformP.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.5 2006/12/12 18:23:43 vlahan Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="15:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10;</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/MotePlatformP.nc">
      <documentation loc="18:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10;</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="33:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10;</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/MeasureClockC.nc">
      <documentation loc="22:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="45:/opt/tinyos2/tinyos-2.x-src/tos/system/RealMainP.nc">
      <documentation loc="45:/opt/tinyos2/tinyos-2.x-src/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10;</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/system/TinySchedulerC.nc">
      <documentation loc="35:/opt/tinyos2/tinyos-2.x-src/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="43:/opt/tinyos2/tinyos-2.x-src/tos/system/SchedulerBasicP.nc">
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/McuSleepC.nc">
      <documentation loc="40:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.8 2007/04/08 01:17:12 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="47:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/ActiveMessageC.nc">
      <documentation loc="47:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the micaZ platform.</short>
        <long>&#10;&#10; The Active Message layer on the micaZ platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @date June 19 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="40:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <documentation loc="40:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageC.nc">
        <short>&#10; The Active Message layer for the CC2420 radio.</short>
        <long>&#10; The Active Message layer for the CC2420 radio. This configuration&#10; just layers the AM dispatch (CC2420ActiveMessageM) on top of the&#10; underlying CC2420 radio packet (CC2420CsmaCsmaCC), which is&#10; inherently an AM packet (acknowledgements based on AM destination&#10; addr and group). Note that snooping may not work, due to CC2420&#10; early packet rejection if acknowledgements are enabled.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @version $Revision: 1.8 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <documentation loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.8 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="42:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <documentation loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="42:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="41:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlP.nc">
      <documentation loc="41:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.2 $ $Date: 2007/07/06 18:09:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="43:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="66(AlarmMultiplexC.Alarm):/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="66(AlarmMultiplexC.Alarm):/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="32:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="32:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.&#10;&#10;</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="43:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10;</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <documentation loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128Timer1P" loc="33:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <documentation loc="33:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10;</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="35(InitOneP.InitOne):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="35(InitOneP.InitOne):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="42(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="42(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10;</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402cb7e0"/>
            <typename><typedef-ref name="TOne" ref="0x402e8260"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="22:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="22:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="33(CounterOne16C.NCounter):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="33(CounterOne16C.NCounter):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10;</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402cb7e0"/>
            <typename><typedef-ref name="TOne" ref="0x402e8260"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="43(Counter32khz32C.Transform32):/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="43(Counter32khz32C.Transform32):/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10;</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402cb7e0"/>
            <typename><typedef-ref name="T32khz" ref="0x402cb9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40031818"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402cb7e0"/>
            <typename><typedef-ref name="T32khz" ref="0x402cb9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x402e8608"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="40(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="40(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm. </short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402cb7e0"/>
            <typename><typedef-ref name="T32khz" ref="0x402cb9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40031818"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402cb7e0"/>
            <typename><typedef-ref name="TOne" ref="0x402e8260"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/opt/tinyos2/tinyos-2.x-src/tos/system/NoInitC.nc">
      <documentation loc="16:/opt/tinyos2/tinyos-2.x-src/tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="64:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="64:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10;</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.4 2006/12/12 18:23:44 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="37:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007/04/30 17:31:08 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="33(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="33(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10;</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="32:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="32:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.&#10;</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="32:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <documentation loc="32:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="30(HplAtm128InterruptC.IntPin0):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin0):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="30(HplAtm128InterruptC.IntPin1):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin1):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="30(HplAtm128InterruptC.IntPin2):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin2):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="30(HplAtm128InterruptC.IntPin3):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin3):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="30(HplAtm128InterruptC.IntPin4):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin4):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="30(HplAtm128InterruptC.IntPin5):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin5):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="30(HplAtm128InterruptC.IntPin6):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin6):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="30(HplAtm128InterruptC.IntPin7):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="30(HplAtm128InterruptC.IntPin7):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="45:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <documentation loc="45:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.5 2007/04/30 17:31:08 rincon Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @author David Moss&#10; @version @version $Revision: 1.5 $ $Date: 2007/04/30 17:31:08 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="39(CC2420ControlC.Spi):/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="39:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <documentation loc="39:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/opt/tinyos2/tinyos-2.x-src/tos/system/StateC.nc">
      <documentation loc="65(CC2420SpiWireC.WorkingStateC):/opt/tinyos2/tinyos-2.x-src/tos/system/StateC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/opt/tinyos2/tinyos-2.x-src/tos/system/StateImplC.nc">
      <documentation loc="64:/opt/tinyos2/tinyos-2.x-src/tos/system/StateImplC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/opt/tinyos2/tinyos-2.x-src/tos/system/StateImplP.nc">
      <documentation loc="64:/opt/tinyos2/tinyos-2.x-src/tos/system/StateImplP.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="37(CC2420SpiWireC.HplCC2420SpiC):/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="37(CC2420SpiWireC.HplCC2420SpiC):/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="65:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="65:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.&#10;&#10;</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="75:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128SpiP.nc">
      <documentation loc="75:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller. </short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.6 2007/02/28 17:33:59 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="58:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="58:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10;</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="56:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <documentation loc="56:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10;</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="73(Atm128SpiC.Arbiter):/opt/tinyos2/tinyos-2.x-src/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="73(Atm128SpiC.Arbiter):/opt/tinyos2/tinyos-2.x-src/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="32(Atm128SpiC.Arbiter.Queue):/opt/tinyos2/tinyos-2.x-src/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos2/tinyos-2.x-src/tos/system/SimpleArbiterP.nc">
      <documentation loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos2/tinyos-2.x-src/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="LedsC" loc="34:/opt/tinyos2/tinyos-2.x-src/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos2/tinyos-2.x-src/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10;</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/tinyos2/tinyos-2.x-src/tos/system/LedsP.nc">
      <documentation loc="33:/opt/tinyos2/tinyos-2.x-src/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10;</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="33:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/PlatformLedsC.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.5 2006/12/12 18:23:43 vlahan Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="39(CC2420ControlC.RssiResource):/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="41:/opt/tinyos2/tinyos-2.x-src/tos/system/ActiveMessageAddressC.nc">
      <documentation loc="41:/opt/tinyos2/tinyos-2.x-src/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.&#10;&#10;</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="41:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="43:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="39(CC2420TransmitC.Spi):/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="39:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2007/07/06 18:09:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="39:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <documentation loc="39:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @version $Revision: 1.2 $ $Date: 2007/07/06 18:09:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="41:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="41:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="39(CC2420ReceiveC.Spi):/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="32:/opt/tinyos2/tinyos-2.x-src/tos/system/RandomC.nc">
      <documentation loc="32:/opt/tinyos2/tinyos-2.x-src/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="31:/opt/tinyos2/tinyos-2.x-src/tos/system/RandomMlcgC.nc">
      <documentation loc="31:/opt/tinyos2/tinyos-2.x-src/tos/system/RandomMlcgC.nc">
        <short>&#10; This is the configuration for RandomMlcgC, a &#10; multiplicative linear congruential generator. &#10;&#10;</short>
        <long>&#10; This is the configuration for RandomMlcgC, a &#10; multiplicative linear congruential generator. &#10;&#10; @author  Barbara Hohlt&#10; @author  Philip Levis&#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgP" loc="34:/opt/tinyos2/tinyos-2.x-src/tos/system/RandomMlcgP.nc">
      <documentation loc="34:/opt/tinyos2/tinyos-2.x-src/tos/system/RandomMlcgP.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers. </short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;		S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/opt/tinyos2/tinyos-2.x-src/tos/system/StateC.nc">
      <documentation loc="65(CC2420CsmaC.StateC):/opt/tinyos2/tinyos-2.x-src/tos/system/StateC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="38:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10;</short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/unique/UniqueSendP.nc">
      <documentation loc="38:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10;</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/opt/tinyos2/tinyos-2.x-src/tos/system/StateC.nc">
      <documentation loc="65(UniqueSendC.StateC):/opt/tinyos2/tinyos-2.x-src/tos/system/StateC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="40:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10;</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <documentation loc="41:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10;</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="61:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="61:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks. </short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplC" loc="39:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="39:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10;</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="39:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10;</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/opt/tinyos2/tinyos-2.x-src/tos/system/StateC.nc">
      <documentation loc="65(DummyLplC.StateC):/opt/tinyos2/tinyos-2.x-src/tos/system/StateC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="38:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10;</short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="38:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10;</short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OscilloscopeAppC.TimerMilliC" loc="36(OscilloscopeAppC.TimerMilliC):/opt/tinyos2/tinyos-2.x-src/tos/system/TimerMilliC.nc">
      <documentation loc="36(OscilloscopeAppC.TimerMilliC):/opt/tinyos2/tinyos-2.x-src/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/system/TimerMilliP.nc">
      <documentation loc="37:/opt/tinyos2/tinyos-2.x-src/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="33:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="33:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="25:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer. </short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402cb410"/>
            <typename><typedef-ref name="TMilli" ref="0x402cb5e0"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x409ebdc0"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10;</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402cb410"/>
            <typename><typedef-ref name="TMilli" ref="0x402cb5e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10;</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402cb410"/>
            <typename><typedef-ref name="TMilli" ref="0x402cb5e0"/></typename>
          </type-tag>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10;</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402cb410"/>
            <typename><typedef-ref name="TMilli" ref="0x402cb5e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OscilloscopeAppC.AMSenderC" loc="39(OscilloscopeAppC.AMSenderC):/opt/tinyos2/tinyos-2.x-src/tos/system/AMSenderC.nc">
      <documentation loc="39(OscilloscopeAppC.AMSenderC):/opt/tinyos2/tinyos-2.x-src/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:147">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.AMSenderC.AMQueueEntryP" loc="35(OscilloscopeAppC.AMSenderC.AMQueueEntryP):/opt/tinyos2/tinyos-2.x-src/tos/system/AMQueueEntryP.nc">
      <documentation loc="35(OscilloscopeAppC.AMSenderC.AMQueueEntryP):/opt/tinyos2/tinyos-2.x-src/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10;</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x40339650"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="34:/opt/tinyos2/tinyos-2.x-src/tos/system/AMQueueP.nc">
      <documentation loc="34:/opt/tinyos2/tinyos-2.x-src/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.&#10;&#10;</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="37(AMQueueP.AMQueueImplP):/opt/tinyos2/tinyos-2.x-src/tos/system/AMQueueImplP.nc">
      <documentation loc="37(AMQueueP.AMQueueImplP):/opt/tinyos2/tinyos-2.x-src/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OscilloscopeAppC.AFWA_AESC" loc="22(OscilloscopeAppC.AFWA_AESC):./AES/AFWA_AESC.nc">
      <documentation loc="22(OscilloscopeAppC.AFWA_AESC):./AES/AFWA_AESC.nc">
        <short>&#10; Description          :  &#10;                         &#10;&#10;&#10;</short>
      </documentation>
      <instance number="0">
        <component-ref qname="AFWA_AESC"/>
        <arguments>
          <value cst="I:147">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.AFWA_AESC.AFWA_AESP" loc="28(OscilloscopeAppC.AFWA_AESC.AFWA_AESP):./AES/AFWA_AESP.nc">
      <documentation loc="28(OscilloscopeAppC.AFWA_AESC.AFWA_AESP):./AES/AFWA_AESP.nc">
        <short>&#10; Description          :  &#10;                         &#10;&#10;&#10;</short>
      </documentation>
      <instance number="0">
        <component-ref qname="AFWA_AESP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x40339650"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OscilloscopeAppC.AFWA_AESC.AMSenderC" loc="39(OscilloscopeAppC.AFWA_AESC.AMSenderC):/opt/tinyos2/tinyos-2.x-src/tos/system/AMSenderC.nc">
      <documentation loc="39(OscilloscopeAppC.AFWA_AESC.AMSenderC):/opt/tinyos2/tinyos-2.x-src/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x40339650"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.AFWA_AESC.AMSenderC.AMQueueEntryP" loc="35(OscilloscopeAppC.AFWA_AESC.AMSenderC.AMQueueEntryP):/opt/tinyos2/tinyos-2.x-src/tos/system/AMQueueEntryP.nc">
      <documentation loc="35(OscilloscopeAppC.AFWA_AESC.AMSenderC.AMQueueEntryP):/opt/tinyos2/tinyos-2.x-src/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10;</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x40339650"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OscilloscopeAppC.AFWA_AESC.OmacP" loc="15(OscilloscopeAppC.AFWA_AESC.OmacP):./AES/OmacP.nc">
      <instance number="0">
        <component-ref qname="OmacP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x40339650"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OscilloscopeAppC.AFWA_AESC.CCMP" loc="15(OscilloscopeAppC.AFWA_AESC.CCMP):./AES/CCMP.nc">
      <instance number="0">
        <component-ref qname="CCMP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x40339650"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OscilloscopeAppC.AFWA_AESC.CTRP" loc="8(OscilloscopeAppC.AFWA_AESC.CTRP):./AES/CTRP.nc">
      <instance number="0">
        <component-ref qname="CTRP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x40339650"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OscilloscopeAppC.AMReceiverC" loc="35(OscilloscopeAppC.AMReceiverC):/opt/tinyos2/tinyos-2.x-src/tos/system/AMReceiverC.nc">
      <documentation loc="35(OscilloscopeAppC.AMReceiverC):/opt/tinyos2/tinyos-2.x-src/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.&#10;&#10;</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:147">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="31:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10;</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x403bf710" loc="31:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x403bf8a0" loc="31:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x403bfa30" loc="31:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="">
      <documentation loc="32:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x403c2e40" loc="32:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x403ca010" loc="33:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x403ca1b0" loc="34:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x403ca348" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="">
      <documentation loc="33:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x40413938" loc="33:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x40413ad8" loc="34:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40413c78" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x40413e10" loc="36:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="66:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="66:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="26:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="28:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="">
      <documentation loc="35:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x4065d530" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4065d530"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x4065d6c0" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="">
      <documentation loc="42:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10;</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x406679d0" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x406679d0"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40667c88" loc="43:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40667c88"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x40667e18" loc="44:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="33:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="">
      <documentation loc="33:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10;</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x4067cd40" loc="33:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x4067cd40"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x4068e010" loc="34:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4068e010"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="43:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/TransformCounterC.nc" abstract="">
      <documentation loc="43:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10;</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40680f08" loc="44:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40680f08"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x406971d8" loc="45:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x406971d8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x406973a0" loc="46:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x406973a0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40697658" loc="47:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40697658"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x406977f8" loc="48:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x40697ab8" loc="49:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x40697ab8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="40:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/TransformAlarmC.nc" abstract="">
      <documentation loc="40:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm. </short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x4069d3c0" loc="41:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x4069d3c0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x4069d678" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x4069d678"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x4069d840" loc="43:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x4069d840"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x4069daf8" loc="44:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x4069daf8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x4069dc98" loc="45:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="33:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="">
      <documentation loc="33:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10;</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="">
      <documentation loc="6:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="30:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="">
      <documentation loc="30:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10;</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x40701168" loc="30:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x40701308" loc="31:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x407014a8" loc="32:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x40701640" loc="33:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="39:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/opt/tinyos2/tinyos-2.x-src/tos/system/StateC.nc" abstract="">
      <documentation loc="65:/opt/tinyos2/tinyos-2.x-src/tos/system/StateC.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Moss&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="37:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="73:/opt/tinyos2/tinyos-2.x-src/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="73:/opt/tinyos2/tinyos-2.x-src/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x40812550" loc="73:/opt/tinyos2/tinyos-2.x-src/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="32:/opt/tinyos2/tinyos-2.x-src/tos/system/FcfsResourceQueueC.nc" abstract="">
      <parameters>
        <constant name="size" ref="0x40809e90" loc="32:/opt/tinyos2/tinyos-2.x-src/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos2/tinyos-2.x-src/tos/system/SimpleArbiterP.nc" abstract="">
      <documentation loc="49:/opt/tinyos2/tinyos-2.x-src/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108. </short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="36:/opt/tinyos2/tinyos-2.x-src/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="36:/opt/tinyos2/tinyos-2.x-src/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="23:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x409ebdc0" loc="23:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x409ebdc0"/></type-var>
        </typedef>
        <constant name="divider" ref="0x409e8010" loc="23:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="">
      <documentation loc="23:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x409e1350" loc="23:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x409e1350"/></type-var>
        </typedef>
        <constant name="divider" ref="0x409e14d0" loc="23:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/AlarmToTimerC.nc" abstract="">
      <documentation loc="35:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10;</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40a19b98" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40a19b98"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/VirtualizeTimerC.nc" abstract="">
      <documentation loc="35:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10;</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40a476b0" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40a476b0"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x40a47838" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/CounterToLocalTimeC.nc" abstract="">
      <documentation loc="35:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10;</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40a66490" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40a66490"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="39:/opt/tinyos2/tinyos-2.x-src/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="39:/opt/tinyos2/tinyos-2.x-src/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40a80b18" loc="39:/opt/tinyos2/tinyos-2.x-src/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x40339650"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/system/AMQueueEntryP.nc" abstract="">
      <documentation loc="35:/opt/tinyos2/tinyos-2.x-src/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10;</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40a7a268" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x40339650"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/system/AMQueueImplP.nc" abstract="">
      <documentation loc="37:/opt/tinyos2/tinyos-2.x-src/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x40a8f638" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AFWA_AESC" loc="22:./AES/AFWA_AESC.nc" abstract="">
      <documentation loc="22:./AES/AFWA_AESC.nc">
        <short>&#10; Description          :  &#10;                         &#10;&#10;&#10;</short>
      </documentation>
      <parameters>
        <constant name="id" ref="0x40aaf130" loc="22:./AES/AFWA_AESC.nc">
          <component-ref qname="AFWA_AESC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x40339650"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AFWA_AESP" loc="28:./AES/AFWA_AESP.nc" abstract="">
      <documentation loc="28:./AES/AFWA_AESP.nc">
        <short>&#10; Description          :  &#10;                         &#10;&#10;&#10;</short>
      </documentation>
      <parameters>
        <constant name="id" ref="0x40aab758" loc="28:./AES/AFWA_AESP.nc">
          <component-ref qname="AFWA_AESP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x40339650"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="OmacP" loc="15:./AES/OmacP.nc" abstract="">
      <parameters>
        <constant name="id" ref="0x40beca60" loc="15:./AES/OmacP.nc">
          <component-ref qname="OmacP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x40339650"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CCMP" loc="15:./AES/CCMP.nc" abstract="">
      <parameters>
        <constant name="id" ref="0x40c1fd70" loc="15:./AES/CCMP.nc">
          <component-ref qname="CCMP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x40339650"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CTRP" loc="8:./AES/CTRP.nc" abstract="">
      <parameters>
        <constant name="id" ref="0x40c3c0b0" loc="8:./AES/CTRP.nc">
          <component-ref qname="CTRP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x40339650"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="35:/opt/tinyos2/tinyos-2.x-src/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.&#10;&#10;</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40c6f188" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x40339650"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="Boot" ref="0x40316d78" loc="25:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40316d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40318010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40315010" loc="28:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40315010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x403151e8"/>
        <function-ref name="getPayload" scoped="" ref="0x403152c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x403153a8"/>
        <function-ref name="cancel" scoped="" ref="0x40315488"/>
        <function-ref name="sendDone" scoped="" ref="0x40315568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x4031ba48" loc="26:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x4031ba48"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4031bc20"/>
        <function-ref name="stopDone" scoped="" ref="0x4031bd00"/>
        <function-ref name="start" scoped="" ref="0x4031bde0"/>
        <function-ref name="stop" scoped="" ref="0x4031bec0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AFWA_AESI" ref="0x40363780" loc="32:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AFWA_AESI" scoped="" ref="0x40363780"/></type-interface>
      <instance>
        <interfacedef-ref qname="AFWA_AESI"/>
      </instance>
      <interface-functions>
        <function-ref name="AFWAenc" scoped="" ref="0x40363958"/>
        <function-ref name="AFWAdec" scoped="" ref="0x40363a38"/>
        <function-ref name="AFWAsetTransmitMode" scoped="" ref="0x40363b18"/>
        <function-ref name="updateKeyDone" scoped="" ref="0x40363bf8"/>
        <function-ref name="AFWAsend" scoped="" ref="0x40363cd8"/>
        <function-ref name="AFWAsendDone" scoped="" ref="0x40363db8"/>
        <function-ref name="AFWAgetKeySize" scoped="" ref="0x40363e98"/>
        <function-ref name="AFWAsetReceiveMode" scoped="" ref="0x40361010"/>
        <function-ref name="AFWAupdateKey" scoped="" ref="0x403610f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x4033e5b8" loc="27:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4033e5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x4033e790"/>
        <function-ref name="receive" scoped="" ref="0x4033e870"/>
        <function-ref name="getPayload" scoped="" ref="0x4033e950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40352730" loc="30:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40352730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40352908"/>
        <function-ref name="led0Toggle" scoped="" ref="0x403529e8"/>
        <function-ref name="led1On" scoped="" ref="0x40352ac8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40352ba8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40352c88"/>
        <function-ref name="get" scoped="" ref="0x40352d68"/>
        <function-ref name="led1Off" scoped="" ref="0x40352e48"/>
        <function-ref name="led2Off" scoped="" ref="0x403511d8"/>
        <function-ref name="set" scoped="" ref="0x40352f28"/>
        <function-ref name="led0On" scoped="" ref="0x40351018"/>
        <function-ref name="led2On" scoped="" ref="0x403510f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x4035a588" loc="31:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4035a588"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4035a760"/>
        <function-ref name="source" scoped="" ref="0x4035a840"/>
        <function-ref name="address" scoped="" ref="0x4035a920"/>
        <function-ref name="destination" scoped="" ref="0x4035aa00"/>
        <function-ref name="setSource" scoped="" ref="0x4035aae0"/>
        <function-ref name="setDestination" scoped="" ref="0x4035abc0"/>
        <function-ref name="type" scoped="" ref="0x4035aca0"/>
        <function-ref name="setType" scoped="" ref="0x4035ad80"/>
        <function-ref name="isForMe" scoped="" ref="0x4035ae60"/>
        <function-ref name="setGroup" scoped="" ref="0x40350010"/>
        <function-ref name="localGroup" scoped="" ref="0x403500f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x4034b3e8" loc="29:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4034b3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402cb410"/>
            <typename><typedef-ref name="TMilli" ref="0x402cb5e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40349ce8"/>
        <function-ref name="fired" scoped="" ref="0x40349108"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x403496a8"/>
        <function-ref name="isOneShot" scoped="" ref="0x403494c8"/>
        <function-ref name="getdt" scoped="" ref="0x403480d8"/>
        <function-ref name="gett0" scoped="" ref="0x40349ec8"/>
        <function-ref name="isRunning" scoped="" ref="0x403492e8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4034ba10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x403499c8"/>
        <function-ref name="startOneShot" scoped="" ref="0x4034bc90"/>
        <function-ref name="stop" scoped="" ref="0x4034bf10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x4037b4c0" loc="47:/opt/tinyos2/tinyos-2.x-src/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x4037b4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4037b698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x40376ab8" loc="46:/opt/tinyos2/tinyos-2.x-src/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40376ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40376c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x40388c60" loc="43:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x40388c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40388e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x403838d0" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403838d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40383aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x40388568" loc="41:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40388568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40388740"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40388820"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40388900"/>
        <function-ref name="actualMicro" scoped="" ref="0x403889e0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40388ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x40384010" loc="36:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x40384010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403841e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40385c48" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40385c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40385e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x40384380" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x40384380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40384558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x4038a010" loc="18:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x4038a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4038a1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40387be0" loc="17:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40387be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40387db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x40391800" loc="22:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x40391800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403919d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x40398e30" loc="21:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x40398e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40391050"/>
        <function-ref name="isInput" scoped="" ref="0x40391130"/>
        <function-ref name="toggle" scoped="" ref="0x40391210"/>
        <function-ref name="isOutput" scoped="" ref="0x403912f0"/>
        <function-ref name="get" scoped="" ref="0x403913d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403914b0"/>
        <function-ref name="set" scoped="" ref="0x40391590"/>
        <function-ref name="clr" scoped="" ref="0x40391670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40392428" loc="20:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40392428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40392600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x403bc808" loc="91:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x403bc808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403bcbe0"/>
        <function-ref name="isInput" scoped="" ref="0x403bccc0"/>
        <function-ref name="toggle" scoped="" ref="0x403bcda0"/>
        <function-ref name="isOutput" scoped="" ref="0x403bce80"/>
        <function-ref name="get" scoped="" ref="0x403bb010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403bb0f0"/>
        <function-ref name="set" scoped="" ref="0x403bb1d0"/>
        <function-ref name="clr" scoped="" ref="0x403bb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x403ad858" loc="65:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x403ad858"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ada30"/>
        <function-ref name="isInput" scoped="" ref="0x403adb10"/>
        <function-ref name="toggle" scoped="" ref="0x403adbf0"/>
        <function-ref name="isOutput" scoped="" ref="0x403adcd0"/>
        <function-ref name="get" scoped="" ref="0x403addb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ade90"/>
        <function-ref name="set" scoped="" ref="0x403ac010"/>
        <function-ref name="clr" scoped="" ref="0x403ac0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x403b09d8" loc="76:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x403b09d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b0bb0"/>
        <function-ref name="isInput" scoped="" ref="0x403b0c90"/>
        <function-ref name="toggle" scoped="" ref="0x403b0d70"/>
        <function-ref name="isOutput" scoped="" ref="0x403b0e50"/>
        <function-ref name="get" scoped="" ref="0x403af010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403af0f0"/>
        <function-ref name="set" scoped="" ref="0x403af1d0"/>
        <function-ref name="clr" scoped="" ref="0x403af2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x403b5808" loc="85:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x403b5808"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b59e0"/>
        <function-ref name="isInput" scoped="" ref="0x403b5ac0"/>
        <function-ref name="toggle" scoped="" ref="0x403b5ba0"/>
        <function-ref name="isOutput" scoped="" ref="0x403b5c80"/>
        <function-ref name="get" scoped="" ref="0x403b5d60"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b5e40"/>
        <function-ref name="set" scoped="" ref="0x403b5f20"/>
        <function-ref name="clr" scoped="" ref="0x403b4018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x4039bcb8" loc="43:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x4039bcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4039be90"/>
        <function-ref name="isInput" scoped="" ref="0x4039a010"/>
        <function-ref name="toggle" scoped="" ref="0x4039a0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4039a1d0"/>
        <function-ref name="get" scoped="" ref="0x4039a2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4039a390"/>
        <function-ref name="set" scoped="" ref="0x4039a470"/>
        <function-ref name="clr" scoped="" ref="0x4039a550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x403b6508" loc="83:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x403b6508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b66e0"/>
        <function-ref name="isInput" scoped="" ref="0x403b67c0"/>
        <function-ref name="toggle" scoped="" ref="0x403b68a0"/>
        <function-ref name="isOutput" scoped="" ref="0x403b6980"/>
        <function-ref name="get" scoped="" ref="0x403b6a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b6b40"/>
        <function-ref name="set" scoped="" ref="0x403b6c20"/>
        <function-ref name="clr" scoped="" ref="0x403b6d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x403a3068" loc="46:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x403a3068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a3240"/>
        <function-ref name="isInput" scoped="" ref="0x403a3320"/>
        <function-ref name="toggle" scoped="" ref="0x403a3400"/>
        <function-ref name="isOutput" scoped="" ref="0x403a34e0"/>
        <function-ref name="get" scoped="" ref="0x403a35c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a36a0"/>
        <function-ref name="set" scoped="" ref="0x403a3780"/>
        <function-ref name="clr" scoped="" ref="0x403a3860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x403a7348" loc="57:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x403a7348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a7520"/>
        <function-ref name="isInput" scoped="" ref="0x403a7600"/>
        <function-ref name="toggle" scoped="" ref="0x403a76e0"/>
        <function-ref name="isOutput" scoped="" ref="0x403a77c0"/>
        <function-ref name="get" scoped="" ref="0x403a78a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a7980"/>
        <function-ref name="set" scoped="" ref="0x403a7a60"/>
        <function-ref name="clr" scoped="" ref="0x403a7b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x403ab5e8" loc="68:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x403ab5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ab7c0"/>
        <function-ref name="isInput" scoped="" ref="0x403ab8a0"/>
        <function-ref name="toggle" scoped="" ref="0x403ab980"/>
        <function-ref name="isOutput" scoped="" ref="0x403aba60"/>
        <function-ref name="get" scoped="" ref="0x403abb40"/>
        <function-ref name="makeOutput" scoped="" ref="0x403abc20"/>
        <function-ref name="set" scoped="" ref="0x403abd00"/>
        <function-ref name="clr" scoped="" ref="0x403abde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x403ae7a8" loc="79:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x403ae7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ae980"/>
        <function-ref name="isInput" scoped="" ref="0x403aea60"/>
        <function-ref name="toggle" scoped="" ref="0x403aeb40"/>
        <function-ref name="isOutput" scoped="" ref="0x403aec20"/>
        <function-ref name="get" scoped="" ref="0x403aed00"/>
        <function-ref name="makeOutput" scoped="" ref="0x403aede0"/>
        <function-ref name="set" scoped="" ref="0x403aeec0"/>
        <function-ref name="clr" scoped="" ref="0x403b7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x4039ec58" loc="38:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x4039ec58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4039ee30"/>
        <function-ref name="isInput" scoped="" ref="0x4039ef10"/>
        <function-ref name="toggle" scoped="" ref="0x4039d010"/>
        <function-ref name="isOutput" scoped="" ref="0x4039d0f0"/>
        <function-ref name="get" scoped="" ref="0x4039d1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4039d2b0"/>
        <function-ref name="set" scoped="" ref="0x4039d390"/>
        <function-ref name="clr" scoped="" ref="0x4039d470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x403a2d98" loc="49:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x403a2d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a1010"/>
        <function-ref name="isInput" scoped="" ref="0x403a10f0"/>
        <function-ref name="toggle" scoped="" ref="0x403a11d0"/>
        <function-ref name="isOutput" scoped="" ref="0x403a12b0"/>
        <function-ref name="get" scoped="" ref="0x403a1390"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a1470"/>
        <function-ref name="set" scoped="" ref="0x403a1550"/>
        <function-ref name="clr" scoped="" ref="0x403a1630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x403a5068" loc="60:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x403a5068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a5240"/>
        <function-ref name="isInput" scoped="" ref="0x403a5320"/>
        <function-ref name="toggle" scoped="" ref="0x403a5400"/>
        <function-ref name="isOutput" scoped="" ref="0x403a54e0"/>
        <function-ref name="get" scoped="" ref="0x403a55c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a56a0"/>
        <function-ref name="set" scoped="" ref="0x403a5780"/>
        <function-ref name="clr" scoped="" ref="0x403a5860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x403a9348" loc="71:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x403a9348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a9520"/>
        <function-ref name="isInput" scoped="" ref="0x403a9600"/>
        <function-ref name="toggle" scoped="" ref="0x403a96e0"/>
        <function-ref name="isOutput" scoped="" ref="0x403a97c0"/>
        <function-ref name="get" scoped="" ref="0x403a98a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a9980"/>
        <function-ref name="set" scoped="" ref="0x403a9a60"/>
        <function-ref name="clr" scoped="" ref="0x403a9b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x403b3508" loc="88:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x403b3508"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b36e0"/>
        <function-ref name="isInput" scoped="" ref="0x403b37c0"/>
        <function-ref name="toggle" scoped="" ref="0x403b38a0"/>
        <function-ref name="isOutput" scoped="" ref="0x403b3980"/>
        <function-ref name="get" scoped="" ref="0x403b3a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b3b40"/>
        <function-ref name="set" scoped="" ref="0x403b3c20"/>
        <function-ref name="clr" scoped="" ref="0x403b3d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x403ba7a8" loc="94:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x403ba7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ba980"/>
        <function-ref name="isInput" scoped="" ref="0x403baa60"/>
        <function-ref name="toggle" scoped="" ref="0x403bab40"/>
        <function-ref name="isOutput" scoped="" ref="0x403bac20"/>
        <function-ref name="get" scoped="" ref="0x403bad00"/>
        <function-ref name="makeOutput" scoped="" ref="0x403bade0"/>
        <function-ref name="set" scoped="" ref="0x403baec0"/>
        <function-ref name="clr" scoped="" ref="0x403b9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x403b26c8" loc="74:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x403b26c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b28a0"/>
        <function-ref name="isInput" scoped="" ref="0x403b2980"/>
        <function-ref name="toggle" scoped="" ref="0x403b2a60"/>
        <function-ref name="isOutput" scoped="" ref="0x403b2b40"/>
        <function-ref name="get" scoped="" ref="0x403b2c20"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b2d00"/>
        <function-ref name="set" scoped="" ref="0x403b2de0"/>
        <function-ref name="clr" scoped="" ref="0x403b2ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x4039c980" loc="41:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x4039c980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4039cb58"/>
        <function-ref name="isInput" scoped="" ref="0x4039cc38"/>
        <function-ref name="toggle" scoped="" ref="0x4039cd18"/>
        <function-ref name="isOutput" scoped="" ref="0x4039cdf8"/>
        <function-ref name="get" scoped="" ref="0x4039ced8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4039b010"/>
        <function-ref name="set" scoped="" ref="0x4039b0f0"/>
        <function-ref name="clr" scoped="" ref="0x4039b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x403a0bd8" loc="52:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x403a0bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a0db0"/>
        <function-ref name="isInput" scoped="" ref="0x403a0e90"/>
        <function-ref name="toggle" scoped="" ref="0x4039f010"/>
        <function-ref name="isOutput" scoped="" ref="0x4039f0f0"/>
        <function-ref name="get" scoped="" ref="0x4039f1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4039f2b0"/>
        <function-ref name="set" scoped="" ref="0x4039f390"/>
        <function-ref name="clr" scoped="" ref="0x4039f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x403bb428" loc="92:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x403bb428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403bb600"/>
        <function-ref name="isInput" scoped="" ref="0x403bb6e0"/>
        <function-ref name="toggle" scoped="" ref="0x403bb7c0"/>
        <function-ref name="isOutput" scoped="" ref="0x403bb8a0"/>
        <function-ref name="get" scoped="" ref="0x403bb980"/>
        <function-ref name="makeOutput" scoped="" ref="0x403bba60"/>
        <function-ref name="set" scoped="" ref="0x403bbb40"/>
        <function-ref name="clr" scoped="" ref="0x403bbc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x403a8010" loc="55:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x403a8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a81e8"/>
        <function-ref name="isInput" scoped="" ref="0x403a82c8"/>
        <function-ref name="toggle" scoped="" ref="0x403a83a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403a8488"/>
        <function-ref name="get" scoped="" ref="0x403a8568"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a8648"/>
        <function-ref name="set" scoped="" ref="0x403a8728"/>
        <function-ref name="clr" scoped="" ref="0x403a8808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x403ac268" loc="66:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x403ac268"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ac440"/>
        <function-ref name="isInput" scoped="" ref="0x403ac520"/>
        <function-ref name="toggle" scoped="" ref="0x403ac600"/>
        <function-ref name="isOutput" scoped="" ref="0x403ac6e0"/>
        <function-ref name="get" scoped="" ref="0x403ac7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ac8a0"/>
        <function-ref name="set" scoped="" ref="0x403ac980"/>
        <function-ref name="clr" scoped="" ref="0x403aca60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x403af428" loc="77:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x403af428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403af600"/>
        <function-ref name="isInput" scoped="" ref="0x403af6e0"/>
        <function-ref name="toggle" scoped="" ref="0x403af7c0"/>
        <function-ref name="isOutput" scoped="" ref="0x403af8a0"/>
        <function-ref name="get" scoped="" ref="0x403af980"/>
        <function-ref name="makeOutput" scoped="" ref="0x403afa60"/>
        <function-ref name="set" scoped="" ref="0x403afb40"/>
        <function-ref name="clr" scoped="" ref="0x403afc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x403b4190" loc="86:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x403b4190"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b4368"/>
        <function-ref name="isInput" scoped="" ref="0x403b4448"/>
        <function-ref name="toggle" scoped="" ref="0x403b4528"/>
        <function-ref name="isOutput" scoped="" ref="0x403b4608"/>
        <function-ref name="get" scoped="" ref="0x403b46e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b47c8"/>
        <function-ref name="set" scoped="" ref="0x403b48a8"/>
        <function-ref name="clr" scoped="" ref="0x403b4988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x4039a6c8" loc="44:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x4039a6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4039a8a0"/>
        <function-ref name="isInput" scoped="" ref="0x4039a980"/>
        <function-ref name="toggle" scoped="" ref="0x4039aa60"/>
        <function-ref name="isOutput" scoped="" ref="0x4039ab40"/>
        <function-ref name="get" scoped="" ref="0x4039ac20"/>
        <function-ref name="makeOutput" scoped="" ref="0x4039ad00"/>
        <function-ref name="set" scoped="" ref="0x4039ade0"/>
        <function-ref name="clr" scoped="" ref="0x4039aec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x403a39d8" loc="47:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x403a39d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a3bb0"/>
        <function-ref name="isInput" scoped="" ref="0x403a3c90"/>
        <function-ref name="toggle" scoped="" ref="0x403a3d70"/>
        <function-ref name="isOutput" scoped="" ref="0x403a3e50"/>
        <function-ref name="get" scoped="" ref="0x403a2010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a20f0"/>
        <function-ref name="set" scoped="" ref="0x403a21d0"/>
        <function-ref name="clr" scoped="" ref="0x403a22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x403a7cb8" loc="58:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x403a7cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a7e90"/>
        <function-ref name="isInput" scoped="" ref="0x403a6010"/>
        <function-ref name="toggle" scoped="" ref="0x403a60f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403a61d0"/>
        <function-ref name="get" scoped="" ref="0x403a62b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a6390"/>
        <function-ref name="set" scoped="" ref="0x403a6470"/>
        <function-ref name="clr" scoped="" ref="0x403a6550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x403aa010" loc="69:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x403aa010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403aa1e8"/>
        <function-ref name="isInput" scoped="" ref="0x403aa2c8"/>
        <function-ref name="toggle" scoped="" ref="0x403aa3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x403aa488"/>
        <function-ref name="get" scoped="" ref="0x403aa568"/>
        <function-ref name="makeOutput" scoped="" ref="0x403aa648"/>
        <function-ref name="set" scoped="" ref="0x403aa728"/>
        <function-ref name="clr" scoped="" ref="0x403aa808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x403b7188" loc="80:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x403b7188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b7360"/>
        <function-ref name="isInput" scoped="" ref="0x403b7440"/>
        <function-ref name="toggle" scoped="" ref="0x403b7520"/>
        <function-ref name="isOutput" scoped="" ref="0x403b7600"/>
        <function-ref name="get" scoped="" ref="0x403b76e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b77c0"/>
        <function-ref name="set" scoped="" ref="0x403b78a0"/>
        <function-ref name="clr" scoped="" ref="0x403b7980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x4039d5e8" loc="39:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x4039d5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4039d7c0"/>
        <function-ref name="isInput" scoped="" ref="0x4039d8a0"/>
        <function-ref name="toggle" scoped="" ref="0x4039d980"/>
        <function-ref name="isOutput" scoped="" ref="0x4039da60"/>
        <function-ref name="get" scoped="" ref="0x4039db40"/>
        <function-ref name="makeOutput" scoped="" ref="0x4039dc20"/>
        <function-ref name="set" scoped="" ref="0x4039dd00"/>
        <function-ref name="clr" scoped="" ref="0x4039dde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x403a17a8" loc="50:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x403a17a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a1a00"/>
        <function-ref name="isInput" scoped="" ref="0x403a1ae0"/>
        <function-ref name="toggle" scoped="" ref="0x403a1bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x403a1ca0"/>
        <function-ref name="get" scoped="" ref="0x403a1d80"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a1e60"/>
        <function-ref name="set" scoped="" ref="0x403a0010"/>
        <function-ref name="clr" scoped="" ref="0x403a00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x403a59d8" loc="61:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x403a59d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a5bb0"/>
        <function-ref name="isInput" scoped="" ref="0x403a5c90"/>
        <function-ref name="toggle" scoped="" ref="0x403a5d70"/>
        <function-ref name="isOutput" scoped="" ref="0x403a5e50"/>
        <function-ref name="get" scoped="" ref="0x403a4010"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a40f0"/>
        <function-ref name="set" scoped="" ref="0x403a41d0"/>
        <function-ref name="clr" scoped="" ref="0x403a42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x403b3e78" loc="89:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x403b3e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403bc070"/>
        <function-ref name="isInput" scoped="" ref="0x403bc150"/>
        <function-ref name="toggle" scoped="" ref="0x403bc230"/>
        <function-ref name="isOutput" scoped="" ref="0x403bc310"/>
        <function-ref name="get" scoped="" ref="0x403bc3f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403bc4d0"/>
        <function-ref name="set" scoped="" ref="0x403bc5b0"/>
        <function-ref name="clr" scoped="" ref="0x403bc690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x403a4d98" loc="64:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x403a4d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ad0c0"/>
        <function-ref name="isInput" scoped="" ref="0x403ad1a0"/>
        <function-ref name="toggle" scoped="" ref="0x403ad280"/>
        <function-ref name="isOutput" scoped="" ref="0x403ad360"/>
        <function-ref name="get" scoped="" ref="0x403ad440"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ad520"/>
        <function-ref name="set" scoped="" ref="0x403ad600"/>
        <function-ref name="clr" scoped="" ref="0x403ad6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x403b0068" loc="75:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x403b0068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b0240"/>
        <function-ref name="isInput" scoped="" ref="0x403b0320"/>
        <function-ref name="toggle" scoped="" ref="0x403b0400"/>
        <function-ref name="isOutput" scoped="" ref="0x403b04e0"/>
        <function-ref name="get" scoped="" ref="0x403b05c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b06a0"/>
        <function-ref name="set" scoped="" ref="0x403b0780"/>
        <function-ref name="clr" scoped="" ref="0x403b0860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x403b6e78" loc="84:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x403b6e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b5070"/>
        <function-ref name="isInput" scoped="" ref="0x403b5150"/>
        <function-ref name="toggle" scoped="" ref="0x403b5230"/>
        <function-ref name="isOutput" scoped="" ref="0x403b5310"/>
        <function-ref name="get" scoped="" ref="0x403b53f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b54d0"/>
        <function-ref name="set" scoped="" ref="0x403b55b0"/>
        <function-ref name="clr" scoped="" ref="0x403b5690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x403b9188" loc="95:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x403b9188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b9360"/>
        <function-ref name="isInput" scoped="" ref="0x403b9440"/>
        <function-ref name="toggle" scoped="" ref="0x403b9520"/>
        <function-ref name="isOutput" scoped="" ref="0x403b9600"/>
        <function-ref name="get" scoped="" ref="0x403b96e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b97c0"/>
        <function-ref name="set" scoped="" ref="0x403b98a0"/>
        <function-ref name="clr" scoped="" ref="0x403b9980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x4039b348" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x4039b348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4039b520"/>
        <function-ref name="isInput" scoped="" ref="0x4039b600"/>
        <function-ref name="toggle" scoped="" ref="0x4039b6e0"/>
        <function-ref name="isOutput" scoped="" ref="0x4039b7c0"/>
        <function-ref name="get" scoped="" ref="0x4039b8a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4039b980"/>
        <function-ref name="set" scoped="" ref="0x4039ba60"/>
        <function-ref name="clr" scoped="" ref="0x4039bb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x4039f5e8" loc="53:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x4039f5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4039f7c0"/>
        <function-ref name="isInput" scoped="" ref="0x4039f8a0"/>
        <function-ref name="toggle" scoped="" ref="0x4039f980"/>
        <function-ref name="isOutput" scoped="" ref="0x4039fa60"/>
        <function-ref name="get" scoped="" ref="0x4039fb40"/>
        <function-ref name="makeOutput" scoped="" ref="0x4039fc20"/>
        <function-ref name="set" scoped="" ref="0x4039fd00"/>
        <function-ref name="clr" scoped="" ref="0x4039fde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x403b7af8" loc="82:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x403b7af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b7cd0"/>
        <function-ref name="isInput" scoped="" ref="0x403b7db0"/>
        <function-ref name="toggle" scoped="" ref="0x403b7e90"/>
        <function-ref name="isOutput" scoped="" ref="0x403b6010"/>
        <function-ref name="get" scoped="" ref="0x403b60f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b61d0"/>
        <function-ref name="set" scoped="" ref="0x403b62b0"/>
        <function-ref name="clr" scoped="" ref="0x403b6390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x403a8980" loc="56:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x403a8980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a8b58"/>
        <function-ref name="isInput" scoped="" ref="0x403a8c38"/>
        <function-ref name="toggle" scoped="" ref="0x403a8d18"/>
        <function-ref name="isOutput" scoped="" ref="0x403a8df8"/>
        <function-ref name="get" scoped="" ref="0x403a8ed8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a7010"/>
        <function-ref name="set" scoped="" ref="0x403a70f0"/>
        <function-ref name="clr" scoped="" ref="0x403a71d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x403acbd8" loc="67:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x403acbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403acdb0"/>
        <function-ref name="isInput" scoped="" ref="0x403ace90"/>
        <function-ref name="toggle" scoped="" ref="0x403ab010"/>
        <function-ref name="isOutput" scoped="" ref="0x403ab0f0"/>
        <function-ref name="get" scoped="" ref="0x403ab1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ab2b0"/>
        <function-ref name="set" scoped="" ref="0x403ab390"/>
        <function-ref name="clr" scoped="" ref="0x403ab470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x403afd98" loc="78:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x403afd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ae010"/>
        <function-ref name="isInput" scoped="" ref="0x403ae0f0"/>
        <function-ref name="toggle" scoped="" ref="0x403ae1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x403ae2b0"/>
        <function-ref name="get" scoped="" ref="0x403ae390"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ae470"/>
        <function-ref name="set" scoped="" ref="0x403ae550"/>
        <function-ref name="clr" scoped="" ref="0x403ae630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x403b4b00" loc="87:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x403b4b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403b4cd8"/>
        <function-ref name="isInput" scoped="" ref="0x403b4db8"/>
        <function-ref name="toggle" scoped="" ref="0x403b4e98"/>
        <function-ref name="isOutput" scoped="" ref="0x403b3010"/>
        <function-ref name="get" scoped="" ref="0x403b30f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b31d0"/>
        <function-ref name="set" scoped="" ref="0x403b32b0"/>
        <function-ref name="clr" scoped="" ref="0x403b3390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x4039e2e8" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x4039e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4039e4c0"/>
        <function-ref name="isInput" scoped="" ref="0x4039e5a0"/>
        <function-ref name="toggle" scoped="" ref="0x4039e680"/>
        <function-ref name="isOutput" scoped="" ref="0x4039e760"/>
        <function-ref name="get" scoped="" ref="0x4039e840"/>
        <function-ref name="makeOutput" scoped="" ref="0x4039e920"/>
        <function-ref name="set" scoped="" ref="0x4039ea00"/>
        <function-ref name="clr" scoped="" ref="0x4039eae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x403a2428" loc="48:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x403a2428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a2600"/>
        <function-ref name="isInput" scoped="" ref="0x403a26e0"/>
        <function-ref name="toggle" scoped="" ref="0x403a27c0"/>
        <function-ref name="isOutput" scoped="" ref="0x403a28a0"/>
        <function-ref name="get" scoped="" ref="0x403a2980"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a2a60"/>
        <function-ref name="set" scoped="" ref="0x403a2b40"/>
        <function-ref name="clr" scoped="" ref="0x403a2c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x403a66c8" loc="59:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x403a66c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a68a0"/>
        <function-ref name="isInput" scoped="" ref="0x403a6980"/>
        <function-ref name="toggle" scoped="" ref="0x403a6a60"/>
        <function-ref name="isOutput" scoped="" ref="0x403a6b40"/>
        <function-ref name="get" scoped="" ref="0x403a6c20"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a6d00"/>
        <function-ref name="set" scoped="" ref="0x403a6de0"/>
        <function-ref name="clr" scoped="" ref="0x403a6ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x403aa980" loc="70:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x403aa980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403aab58"/>
        <function-ref name="isInput" scoped="" ref="0x403aac38"/>
        <function-ref name="toggle" scoped="" ref="0x403aad18"/>
        <function-ref name="isOutput" scoped="" ref="0x403aadf8"/>
        <function-ref name="get" scoped="" ref="0x403aaed8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a9010"/>
        <function-ref name="set" scoped="" ref="0x403a90f0"/>
        <function-ref name="clr" scoped="" ref="0x403a91d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x403bbd98" loc="93:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x403bbd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ba010"/>
        <function-ref name="isInput" scoped="" ref="0x403ba0f0"/>
        <function-ref name="toggle" scoped="" ref="0x403ba1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x403ba2b0"/>
        <function-ref name="get" scoped="" ref="0x403ba390"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ba470"/>
        <function-ref name="set" scoped="" ref="0x403ba550"/>
        <function-ref name="clr" scoped="" ref="0x403ba630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x403a9cb8" loc="73:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x403a9cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a9e90"/>
        <function-ref name="isInput" scoped="" ref="0x403b2010"/>
        <function-ref name="toggle" scoped="" ref="0x403b20f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403b21d0"/>
        <function-ref name="get" scoped="" ref="0x403b22b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403b2390"/>
        <function-ref name="set" scoped="" ref="0x403b2470"/>
        <function-ref name="clr" scoped="" ref="0x403b2550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x403a4428" loc="62:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x403a4428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a4600"/>
        <function-ref name="isInput" scoped="" ref="0x403a46e0"/>
        <function-ref name="toggle" scoped="" ref="0x403a47c0"/>
        <function-ref name="isOutput" scoped="" ref="0x403a48a0"/>
        <function-ref name="get" scoped="" ref="0x403a4980"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a4a60"/>
        <function-ref name="set" scoped="" ref="0x403a4b40"/>
        <function-ref name="clr" scoped="" ref="0x403a4c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x4039c010" loc="40:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x4039c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4039c1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4039c2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4039c3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4039c488"/>
        <function-ref name="get" scoped="" ref="0x4039c568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4039c648"/>
        <function-ref name="set" scoped="" ref="0x4039c728"/>
        <function-ref name="clr" scoped="" ref="0x4039c808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x403a0268" loc="51:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x403a0268"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403a0440"/>
        <function-ref name="isInput" scoped="" ref="0x403a0520"/>
        <function-ref name="toggle" scoped="" ref="0x403a0600"/>
        <function-ref name="isOutput" scoped="" ref="0x403a06e0"/>
        <function-ref name="get" scoped="" ref="0x403a07c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403a08a0"/>
        <function-ref name="set" scoped="" ref="0x403a0980"/>
        <function-ref name="clr" scoped="" ref="0x403a0a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x403e3030" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x403e3030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e3208"/>
        <function-ref name="isInput" scoped="" ref="0x403e32e8"/>
        <function-ref name="toggle" scoped="" ref="0x403e33c8"/>
        <function-ref name="isOutput" scoped="" ref="0x403e34a8"/>
        <function-ref name="get" scoped="" ref="0x403e3588"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e3668"/>
        <function-ref name="set" scoped="" ref="0x403e3748"/>
        <function-ref name="clr" scoped="" ref="0x403e3828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x403e2c88" loc="40:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x403e2c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e2e60"/>
        <function-ref name="isInput" scoped="" ref="0x403e1010"/>
        <function-ref name="toggle" scoped="" ref="0x403e10f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403e11d0"/>
        <function-ref name="get" scoped="" ref="0x403e12b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e1390"/>
        <function-ref name="set" scoped="" ref="0x403e1470"/>
        <function-ref name="clr" scoped="" ref="0x403e1550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x403e5d18" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x403e5d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e5ef0"/>
        <function-ref name="isInput" scoped="" ref="0x403e4010"/>
        <function-ref name="toggle" scoped="" ref="0x403e40f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403e41d0"/>
        <function-ref name="get" scoped="" ref="0x403e42b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e4390"/>
        <function-ref name="set" scoped="" ref="0x403e4470"/>
        <function-ref name="clr" scoped="" ref="0x403e4550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x403e3988" loc="38:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x403e3988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e3b60"/>
        <function-ref name="isInput" scoped="" ref="0x403e3c40"/>
        <function-ref name="toggle" scoped="" ref="0x403e3d20"/>
        <function-ref name="isOutput" scoped="" ref="0x403e3e00"/>
        <function-ref name="get" scoped="" ref="0x403e3ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e2010"/>
        <function-ref name="set" scoped="" ref="0x403e20f0"/>
        <function-ref name="clr" scoped="" ref="0x403e21d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x403e16b0" loc="41:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x403e16b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e1888"/>
        <function-ref name="isInput" scoped="" ref="0x403e1968"/>
        <function-ref name="toggle" scoped="" ref="0x403e1a48"/>
        <function-ref name="isOutput" scoped="" ref="0x403e1b28"/>
        <function-ref name="get" scoped="" ref="0x403e1c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e1ce8"/>
        <function-ref name="set" scoped="" ref="0x403e1dc8"/>
        <function-ref name="clr" scoped="" ref="0x403e1ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x403e46b0" loc="36:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x403e46b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e4888"/>
        <function-ref name="isInput" scoped="" ref="0x403e4968"/>
        <function-ref name="toggle" scoped="" ref="0x403e4a48"/>
        <function-ref name="isOutput" scoped="" ref="0x403e4b28"/>
        <function-ref name="get" scoped="" ref="0x403e4c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e4ce8"/>
        <function-ref name="set" scoped="" ref="0x403e4dc8"/>
        <function-ref name="clr" scoped="" ref="0x403e4ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x403e2330" loc="39:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x403e2330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e2508"/>
        <function-ref name="isInput" scoped="" ref="0x403e25e8"/>
        <function-ref name="toggle" scoped="" ref="0x403e26c8"/>
        <function-ref name="isOutput" scoped="" ref="0x403e27a8"/>
        <function-ref name="get" scoped="" ref="0x403e2888"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e2968"/>
        <function-ref name="set" scoped="" ref="0x403e2a48"/>
        <function-ref name="clr" scoped="" ref="0x403e2b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x403ea030" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x403ea030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ea208"/>
        <function-ref name="isInput" scoped="" ref="0x403ea2e8"/>
        <function-ref name="toggle" scoped="" ref="0x403ea3c8"/>
        <function-ref name="isOutput" scoped="" ref="0x403ea4a8"/>
        <function-ref name="get" scoped="" ref="0x403ea588"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ea668"/>
        <function-ref name="set" scoped="" ref="0x403ea748"/>
        <function-ref name="clr" scoped="" ref="0x403ea828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c82e18" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c82e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cad010"/>
        <function-ref name="isInput" scoped="" ref="0x40cad0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40cad1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40cad2b0"/>
        <function-ref name="get" scoped="" ref="0x40cad390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cad470"/>
        <function-ref name="set" scoped="" ref="0x40cad550"/>
        <function-ref name="clr" scoped="" ref="0x40cad630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cac7f8" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cac7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cac9d0"/>
        <function-ref name="isInput" scoped="" ref="0x40cacab0"/>
        <function-ref name="toggle" scoped="" ref="0x40cacb90"/>
        <function-ref name="isOutput" scoped="" ref="0x40cacc70"/>
        <function-ref name="get" scoped="" ref="0x40cacd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cace30"/>
        <function-ref name="set" scoped="" ref="0x40cacf10"/>
        <function-ref name="clr" scoped="" ref="0x40cab010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40caa228" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40caa228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40caa400"/>
        <function-ref name="isInput" scoped="" ref="0x40caa4e0"/>
        <function-ref name="toggle" scoped="" ref="0x40caa5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40caa6a0"/>
        <function-ref name="get" scoped="" ref="0x40caa780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40caa860"/>
        <function-ref name="set" scoped="" ref="0x40caa940"/>
        <function-ref name="clr" scoped="" ref="0x40caaa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ca9c08" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ca9c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ca9de0"/>
        <function-ref name="isInput" scoped="" ref="0x40ca9ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40ca8010"/>
        <function-ref name="isOutput" scoped="" ref="0x40ca80f0"/>
        <function-ref name="get" scoped="" ref="0x40ca81d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ca82b0"/>
        <function-ref name="set" scoped="" ref="0x40ca8390"/>
        <function-ref name="clr" scoped="" ref="0x40ca8470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ca76c0" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ca76c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ca7898"/>
        <function-ref name="isInput" scoped="" ref="0x40ca7978"/>
        <function-ref name="toggle" scoped="" ref="0x40ca7a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40ca7b38"/>
        <function-ref name="get" scoped="" ref="0x40ca7c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ca7cf8"/>
        <function-ref name="set" scoped="" ref="0x40ca7dd8"/>
        <function-ref name="clr" scoped="" ref="0x40ca7eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ca50b0" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ca50b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ca5288"/>
        <function-ref name="isInput" scoped="" ref="0x40ca5368"/>
        <function-ref name="toggle" scoped="" ref="0x40ca5448"/>
        <function-ref name="isOutput" scoped="" ref="0x40ca5528"/>
        <function-ref name="get" scoped="" ref="0x40ca5608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ca56e8"/>
        <function-ref name="set" scoped="" ref="0x40ca57c8"/>
        <function-ref name="clr" scoped="" ref="0x40ca58a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ca4a88" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ca4a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ca4c60"/>
        <function-ref name="isInput" scoped="" ref="0x40ca4d40"/>
        <function-ref name="toggle" scoped="" ref="0x40ca4e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40ca4f00"/>
        <function-ref name="get" scoped="" ref="0x40ca3010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ca30f0"/>
        <function-ref name="set" scoped="" ref="0x40ca31d0"/>
        <function-ref name="clr" scoped="" ref="0x40ca32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ca2538" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ca2538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ca2710"/>
        <function-ref name="isInput" scoped="" ref="0x40ca27f0"/>
        <function-ref name="toggle" scoped="" ref="0x40ca28d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ca29b0"/>
        <function-ref name="get" scoped="" ref="0x40ca2a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ca2b70"/>
        <function-ref name="set" scoped="" ref="0x40ca2c50"/>
        <function-ref name="clr" scoped="" ref="0x40ca2d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x403e66b0" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x403e66b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e6888"/>
        <function-ref name="isInput" scoped="" ref="0x403e6968"/>
        <function-ref name="toggle" scoped="" ref="0x403e6a48"/>
        <function-ref name="isOutput" scoped="" ref="0x403e6b28"/>
        <function-ref name="get" scoped="" ref="0x403e6c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e6ce8"/>
        <function-ref name="set" scoped="" ref="0x403e6dc8"/>
        <function-ref name="clr" scoped="" ref="0x403e6ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x403ed330" loc="40:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x403ed330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ed508"/>
        <function-ref name="isInput" scoped="" ref="0x403ed5e8"/>
        <function-ref name="toggle" scoped="" ref="0x403ed6c8"/>
        <function-ref name="isOutput" scoped="" ref="0x403ed7a8"/>
        <function-ref name="get" scoped="" ref="0x403ed888"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ed968"/>
        <function-ref name="set" scoped="" ref="0x403eda48"/>
        <function-ref name="clr" scoped="" ref="0x403edb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x403e73a0" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x403e73a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e7578"/>
        <function-ref name="isInput" scoped="" ref="0x403e7658"/>
        <function-ref name="toggle" scoped="" ref="0x403e7738"/>
        <function-ref name="isOutput" scoped="" ref="0x403e7818"/>
        <function-ref name="get" scoped="" ref="0x403e78f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e79d8"/>
        <function-ref name="set" scoped="" ref="0x403e7ab8"/>
        <function-ref name="clr" scoped="" ref="0x403e7b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x403ef030" loc="38:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x403ef030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ef208"/>
        <function-ref name="isInput" scoped="" ref="0x403ef2e8"/>
        <function-ref name="toggle" scoped="" ref="0x403ef3c8"/>
        <function-ref name="isOutput" scoped="" ref="0x403ef4a8"/>
        <function-ref name="get" scoped="" ref="0x403ef588"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ef668"/>
        <function-ref name="set" scoped="" ref="0x403ef748"/>
        <function-ref name="clr" scoped="" ref="0x403ef828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x403edc88" loc="41:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x403edc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ede60"/>
        <function-ref name="isInput" scoped="" ref="0x403ec010"/>
        <function-ref name="toggle" scoped="" ref="0x403ec0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403ec1d0"/>
        <function-ref name="get" scoped="" ref="0x403ec2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ec390"/>
        <function-ref name="set" scoped="" ref="0x403ec470"/>
        <function-ref name="clr" scoped="" ref="0x403ec550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x403e7cf8" loc="36:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x403e7cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403e7ed0"/>
        <function-ref name="isInput" scoped="" ref="0x403e6010"/>
        <function-ref name="toggle" scoped="" ref="0x403e60f0"/>
        <function-ref name="isOutput" scoped="" ref="0x403e61d0"/>
        <function-ref name="get" scoped="" ref="0x403e62b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403e6390"/>
        <function-ref name="set" scoped="" ref="0x403e6470"/>
        <function-ref name="clr" scoped="" ref="0x403e6550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x403ef988" loc="39:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x403ef988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403efb60"/>
        <function-ref name="isInput" scoped="" ref="0x403efc40"/>
        <function-ref name="toggle" scoped="" ref="0x403efd20"/>
        <function-ref name="isOutput" scoped="" ref="0x403efe00"/>
        <function-ref name="get" scoped="" ref="0x403efee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ed010"/>
        <function-ref name="set" scoped="" ref="0x403ed0f0"/>
        <function-ref name="clr" scoped="" ref="0x403ed1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x403ec6b0" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x403ec6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ec888"/>
        <function-ref name="isInput" scoped="" ref="0x403ec968"/>
        <function-ref name="toggle" scoped="" ref="0x403eca48"/>
        <function-ref name="isOutput" scoped="" ref="0x403ecb28"/>
        <function-ref name="get" scoped="" ref="0x403ecc08"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ecce8"/>
        <function-ref name="set" scoped="" ref="0x403ecdc8"/>
        <function-ref name="clr" scoped="" ref="0x403ecea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cd72b0" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cd72b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cd7488"/>
        <function-ref name="isInput" scoped="" ref="0x40cd7568"/>
        <function-ref name="toggle" scoped="" ref="0x40cd7648"/>
        <function-ref name="isOutput" scoped="" ref="0x40cd7728"/>
        <function-ref name="get" scoped="" ref="0x40cd7808"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cd78e8"/>
        <function-ref name="set" scoped="" ref="0x40cd79c8"/>
        <function-ref name="clr" scoped="" ref="0x40cd7aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cd6c78" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cd6c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cd6e50"/>
        <function-ref name="isInput" scoped="" ref="0x40cd5010"/>
        <function-ref name="toggle" scoped="" ref="0x40cd50f0"/>
        <function-ref name="isOutput" scoped="" ref="0x40cd51d0"/>
        <function-ref name="get" scoped="" ref="0x40cd52b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cd5390"/>
        <function-ref name="set" scoped="" ref="0x40cd5470"/>
        <function-ref name="clr" scoped="" ref="0x40cd5550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cd4718" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cd4718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cd48f0"/>
        <function-ref name="isInput" scoped="" ref="0x40cd49d0"/>
        <function-ref name="toggle" scoped="" ref="0x40cd4ab0"/>
        <function-ref name="isOutput" scoped="" ref="0x40cd4b90"/>
        <function-ref name="get" scoped="" ref="0x40cd4c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cd4d50"/>
        <function-ref name="set" scoped="" ref="0x40cd4e30"/>
        <function-ref name="clr" scoped="" ref="0x40cd4f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cd20f8" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cd20f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cd22d0"/>
        <function-ref name="isInput" scoped="" ref="0x40cd23b0"/>
        <function-ref name="toggle" scoped="" ref="0x40cd2490"/>
        <function-ref name="isOutput" scoped="" ref="0x40cd2570"/>
        <function-ref name="get" scoped="" ref="0x40cd2650"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cd2730"/>
        <function-ref name="set" scoped="" ref="0x40cd2810"/>
        <function-ref name="clr" scoped="" ref="0x40cd28f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cd1ac8" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cd1ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cd1ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40cd1d80"/>
        <function-ref name="toggle" scoped="" ref="0x40cd1e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40cd0010"/>
        <function-ref name="get" scoped="" ref="0x40cd00f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cd01d0"/>
        <function-ref name="set" scoped="" ref="0x40cd02b0"/>
        <function-ref name="clr" scoped="" ref="0x40cd0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ccf570" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ccf570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ccf748"/>
        <function-ref name="isInput" scoped="" ref="0x40ccf828"/>
        <function-ref name="toggle" scoped="" ref="0x40ccf908"/>
        <function-ref name="isOutput" scoped="" ref="0x40ccf9e8"/>
        <function-ref name="get" scoped="" ref="0x40ccfac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ccfba8"/>
        <function-ref name="set" scoped="" ref="0x40ccfc88"/>
        <function-ref name="clr" scoped="" ref="0x40ccfd68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ccc010" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ccc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ccc1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40ccc2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40ccc3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40ccc488"/>
        <function-ref name="get" scoped="" ref="0x40ccc568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ccc648"/>
        <function-ref name="set" scoped="" ref="0x40ccc728"/>
        <function-ref name="clr" scoped="" ref="0x40ccc808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ccb9e8" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ccb9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ccbbc0"/>
        <function-ref name="isInput" scoped="" ref="0x40ccbca0"/>
        <function-ref name="toggle" scoped="" ref="0x40ccbd80"/>
        <function-ref name="isOutput" scoped="" ref="0x40ccbe60"/>
        <function-ref name="get" scoped="" ref="0x40cca010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cca0f0"/>
        <function-ref name="set" scoped="" ref="0x40cca1d0"/>
        <function-ref name="clr" scoped="" ref="0x40cca2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x403f2e48" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x403f2e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f1050"/>
        <function-ref name="isInput" scoped="" ref="0x403f1130"/>
        <function-ref name="toggle" scoped="" ref="0x403f1210"/>
        <function-ref name="isOutput" scoped="" ref="0x403f12f0"/>
        <function-ref name="get" scoped="" ref="0x403f13d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f14b0"/>
        <function-ref name="set" scoped="" ref="0x403f1590"/>
        <function-ref name="clr" scoped="" ref="0x403f1670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x403f0ac8" loc="40:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x403f0ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f0ca0"/>
        <function-ref name="isInput" scoped="" ref="0x403f0d80"/>
        <function-ref name="toggle" scoped="" ref="0x403f0e60"/>
        <function-ref name="isOutput" scoped="" ref="0x403f9010"/>
        <function-ref name="get" scoped="" ref="0x403f90f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f91d0"/>
        <function-ref name="set" scoped="" ref="0x403f92b0"/>
        <function-ref name="clr" scoped="" ref="0x403f9390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x403f3b38" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x403f3b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f3d10"/>
        <function-ref name="isInput" scoped="" ref="0x403f3df0"/>
        <function-ref name="toggle" scoped="" ref="0x403f3ed0"/>
        <function-ref name="isOutput" scoped="" ref="0x403f2010"/>
        <function-ref name="get" scoped="" ref="0x403f20f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f21d0"/>
        <function-ref name="set" scoped="" ref="0x403f22b0"/>
        <function-ref name="clr" scoped="" ref="0x403f2390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x403f17d0" loc="38:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x403f17d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f19a8"/>
        <function-ref name="isInput" scoped="" ref="0x403f1a88"/>
        <function-ref name="toggle" scoped="" ref="0x403f1b68"/>
        <function-ref name="isOutput" scoped="" ref="0x403f1c48"/>
        <function-ref name="get" scoped="" ref="0x403f1d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f1e08"/>
        <function-ref name="set" scoped="" ref="0x403f1ee8"/>
        <function-ref name="clr" scoped="" ref="0x403f0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x403f94f0" loc="41:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x403f94f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f96c8"/>
        <function-ref name="isInput" scoped="" ref="0x403f97a8"/>
        <function-ref name="toggle" scoped="" ref="0x403f9888"/>
        <function-ref name="isOutput" scoped="" ref="0x403f9968"/>
        <function-ref name="get" scoped="" ref="0x403f9a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f9b28"/>
        <function-ref name="set" scoped="" ref="0x403f9c08"/>
        <function-ref name="clr" scoped="" ref="0x403f9ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x403f24f0" loc="36:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x403f24f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f26c8"/>
        <function-ref name="isInput" scoped="" ref="0x403f27a8"/>
        <function-ref name="toggle" scoped="" ref="0x403f2888"/>
        <function-ref name="isOutput" scoped="" ref="0x403f2968"/>
        <function-ref name="get" scoped="" ref="0x403f2a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f2b28"/>
        <function-ref name="set" scoped="" ref="0x403f2c08"/>
        <function-ref name="clr" scoped="" ref="0x403f2ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x403f0170" loc="39:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x403f0170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f0348"/>
        <function-ref name="isInput" scoped="" ref="0x403f0428"/>
        <function-ref name="toggle" scoped="" ref="0x403f0508"/>
        <function-ref name="isOutput" scoped="" ref="0x403f05e8"/>
        <function-ref name="get" scoped="" ref="0x403f06c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f07a8"/>
        <function-ref name="set" scoped="" ref="0x403f0888"/>
        <function-ref name="clr" scoped="" ref="0x403f0968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x403f9e48" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x403f9e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403f8050"/>
        <function-ref name="isInput" scoped="" ref="0x403f8130"/>
        <function-ref name="toggle" scoped="" ref="0x403f8210"/>
        <function-ref name="isOutput" scoped="" ref="0x403f82f0"/>
        <function-ref name="get" scoped="" ref="0x403f83d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403f84b0"/>
        <function-ref name="set" scoped="" ref="0x403f8590"/>
        <function-ref name="clr" scoped="" ref="0x403f8670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d007f8" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d007f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d009d0"/>
        <function-ref name="isInput" scoped="" ref="0x40d00ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40d00b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40d00c70"/>
        <function-ref name="get" scoped="" ref="0x40d00d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d00e30"/>
        <function-ref name="set" scoped="" ref="0x40d00f10"/>
        <function-ref name="clr" scoped="" ref="0x40cff010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cfe228" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cfe228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cfe400"/>
        <function-ref name="isInput" scoped="" ref="0x40cfe4e0"/>
        <function-ref name="toggle" scoped="" ref="0x40cfe5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40cfe6a0"/>
        <function-ref name="get" scoped="" ref="0x40cfe780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cfe860"/>
        <function-ref name="set" scoped="" ref="0x40cfe940"/>
        <function-ref name="clr" scoped="" ref="0x40cfea20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cfdc08" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cfdc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cfdde0"/>
        <function-ref name="isInput" scoped="" ref="0x40cfdec0"/>
        <function-ref name="toggle" scoped="" ref="0x40cfc010"/>
        <function-ref name="isOutput" scoped="" ref="0x40cfc0f0"/>
        <function-ref name="get" scoped="" ref="0x40cfc1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cfc2b0"/>
        <function-ref name="set" scoped="" ref="0x40cfc390"/>
        <function-ref name="clr" scoped="" ref="0x40cfc470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cfb6c0" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cfb6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cfb898"/>
        <function-ref name="isInput" scoped="" ref="0x40cfb978"/>
        <function-ref name="toggle" scoped="" ref="0x40cfba58"/>
        <function-ref name="isOutput" scoped="" ref="0x40cfbb38"/>
        <function-ref name="get" scoped="" ref="0x40cfbc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cfbcf8"/>
        <function-ref name="set" scoped="" ref="0x40cfbdd8"/>
        <function-ref name="clr" scoped="" ref="0x40cfbeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cf90b0" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cf90b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cf9288"/>
        <function-ref name="isInput" scoped="" ref="0x40cf9368"/>
        <function-ref name="toggle" scoped="" ref="0x40cf9448"/>
        <function-ref name="isOutput" scoped="" ref="0x40cf9528"/>
        <function-ref name="get" scoped="" ref="0x40cf9608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cf96e8"/>
        <function-ref name="set" scoped="" ref="0x40cf97c8"/>
        <function-ref name="clr" scoped="" ref="0x40cf98a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cf8a88" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cf8a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cf8c60"/>
        <function-ref name="isInput" scoped="" ref="0x40cf8d40"/>
        <function-ref name="toggle" scoped="" ref="0x40cf8e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40cf8f00"/>
        <function-ref name="get" scoped="" ref="0x40cf7010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cf70f0"/>
        <function-ref name="set" scoped="" ref="0x40cf71d0"/>
        <function-ref name="clr" scoped="" ref="0x40cf72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cf6538" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cf6538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cf6710"/>
        <function-ref name="isInput" scoped="" ref="0x40cf67f0"/>
        <function-ref name="toggle" scoped="" ref="0x40cf68d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40cf69b0"/>
        <function-ref name="get" scoped="" ref="0x40cf6a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cf6b70"/>
        <function-ref name="set" scoped="" ref="0x40cf6c50"/>
        <function-ref name="clr" scoped="" ref="0x40cf6d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cf4010" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cf4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cf41e8"/>
        <function-ref name="isInput" scoped="" ref="0x40cf42c8"/>
        <function-ref name="toggle" scoped="" ref="0x40cf43a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40cf4488"/>
        <function-ref name="get" scoped="" ref="0x40cf4568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cf4648"/>
        <function-ref name="set" scoped="" ref="0x40cf4728"/>
        <function-ref name="clr" scoped="" ref="0x40cf4808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x403fd4f0" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x403fd4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403fd6c8"/>
        <function-ref name="isInput" scoped="" ref="0x403fd7a8"/>
        <function-ref name="toggle" scoped="" ref="0x403fd888"/>
        <function-ref name="isOutput" scoped="" ref="0x403fd968"/>
        <function-ref name="get" scoped="" ref="0x403fda48"/>
        <function-ref name="makeOutput" scoped="" ref="0x403fdb28"/>
        <function-ref name="set" scoped="" ref="0x403fdc08"/>
        <function-ref name="clr" scoped="" ref="0x403fdce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x403fb170" loc="40:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x403fb170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403fb348"/>
        <function-ref name="isInput" scoped="" ref="0x403fb428"/>
        <function-ref name="toggle" scoped="" ref="0x403fb508"/>
        <function-ref name="isOutput" scoped="" ref="0x403fb5e8"/>
        <function-ref name="get" scoped="" ref="0x403fb6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x403fb7a8"/>
        <function-ref name="set" scoped="" ref="0x403fb888"/>
        <function-ref name="clr" scoped="" ref="0x403fb968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x403fe228" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x403fe228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403fe400"/>
        <function-ref name="isInput" scoped="" ref="0x403fe4e0"/>
        <function-ref name="toggle" scoped="" ref="0x403fe5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x403fe6a0"/>
        <function-ref name="get" scoped="" ref="0x403fe780"/>
        <function-ref name="makeOutput" scoped="" ref="0x403fe860"/>
        <function-ref name="set" scoped="" ref="0x403fe940"/>
        <function-ref name="clr" scoped="" ref="0x403fea20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x403fde48" loc="38:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x403fde48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403fc050"/>
        <function-ref name="isInput" scoped="" ref="0x403fc130"/>
        <function-ref name="toggle" scoped="" ref="0x403fc210"/>
        <function-ref name="isOutput" scoped="" ref="0x403fc2f0"/>
        <function-ref name="get" scoped="" ref="0x403fc3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403fc4b0"/>
        <function-ref name="set" scoped="" ref="0x403fc590"/>
        <function-ref name="clr" scoped="" ref="0x403fc670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x403fbac8" loc="41:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x403fbac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403fbca0"/>
        <function-ref name="isInput" scoped="" ref="0x403fbd80"/>
        <function-ref name="toggle" scoped="" ref="0x403fbe60"/>
        <function-ref name="isOutput" scoped="" ref="0x403fa010"/>
        <function-ref name="get" scoped="" ref="0x403fa0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403fa1d0"/>
        <function-ref name="set" scoped="" ref="0x403fa2b0"/>
        <function-ref name="clr" scoped="" ref="0x403fa390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x403feb80" loc="36:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x403feb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403fed58"/>
        <function-ref name="isInput" scoped="" ref="0x403fee38"/>
        <function-ref name="toggle" scoped="" ref="0x403fef18"/>
        <function-ref name="isOutput" scoped="" ref="0x403fd010"/>
        <function-ref name="get" scoped="" ref="0x403fd0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403fd1d0"/>
        <function-ref name="set" scoped="" ref="0x403fd2b0"/>
        <function-ref name="clr" scoped="" ref="0x403fd390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x403fc7d0" loc="39:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x403fc7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403fc9a8"/>
        <function-ref name="isInput" scoped="" ref="0x403fca88"/>
        <function-ref name="toggle" scoped="" ref="0x403fcb68"/>
        <function-ref name="isOutput" scoped="" ref="0x403fcc48"/>
        <function-ref name="get" scoped="" ref="0x403fcd28"/>
        <function-ref name="makeOutput" scoped="" ref="0x403fce08"/>
        <function-ref name="set" scoped="" ref="0x403fcee8"/>
        <function-ref name="clr" scoped="" ref="0x403fb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x403fa4f0" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x403fa4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403fa6c8"/>
        <function-ref name="isInput" scoped="" ref="0x403fa7a8"/>
        <function-ref name="toggle" scoped="" ref="0x403fa888"/>
        <function-ref name="isOutput" scoped="" ref="0x403fa968"/>
        <function-ref name="get" scoped="" ref="0x403faa48"/>
        <function-ref name="makeOutput" scoped="" ref="0x403fab28"/>
        <function-ref name="set" scoped="" ref="0x403fac08"/>
        <function-ref name="clr" scoped="" ref="0x403face8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d2ed08" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d2ed08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d2eee0"/>
        <function-ref name="isInput" scoped="" ref="0x40d2c010"/>
        <function-ref name="toggle" scoped="" ref="0x40d2c0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d2c1d0"/>
        <function-ref name="get" scoped="" ref="0x40d2c2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d2c390"/>
        <function-ref name="set" scoped="" ref="0x40d2c470"/>
        <function-ref name="clr" scoped="" ref="0x40d2c550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d2b718" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d2b718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d2b8f0"/>
        <function-ref name="isInput" scoped="" ref="0x40d2b9d0"/>
        <function-ref name="toggle" scoped="" ref="0x40d2bab0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d2bb90"/>
        <function-ref name="get" scoped="" ref="0x40d2bc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d2bd50"/>
        <function-ref name="set" scoped="" ref="0x40d2be30"/>
        <function-ref name="clr" scoped="" ref="0x40d2bf10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d290f8" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d290f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d292d0"/>
        <function-ref name="isInput" scoped="" ref="0x40d293b0"/>
        <function-ref name="toggle" scoped="" ref="0x40d29490"/>
        <function-ref name="isOutput" scoped="" ref="0x40d29570"/>
        <function-ref name="get" scoped="" ref="0x40d29650"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d29730"/>
        <function-ref name="set" scoped="" ref="0x40d29810"/>
        <function-ref name="clr" scoped="" ref="0x40d298f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d28ac8" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d28ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d28ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40d28d80"/>
        <function-ref name="toggle" scoped="" ref="0x40d28e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40d26010"/>
        <function-ref name="get" scoped="" ref="0x40d260f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d261d0"/>
        <function-ref name="set" scoped="" ref="0x40d262b0"/>
        <function-ref name="clr" scoped="" ref="0x40d26390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d25570" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d25570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d25748"/>
        <function-ref name="isInput" scoped="" ref="0x40d25828"/>
        <function-ref name="toggle" scoped="" ref="0x40d25908"/>
        <function-ref name="isOutput" scoped="" ref="0x40d259e8"/>
        <function-ref name="get" scoped="" ref="0x40d25ac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d25ba8"/>
        <function-ref name="set" scoped="" ref="0x40d25c88"/>
        <function-ref name="clr" scoped="" ref="0x40d25d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d23010" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d23010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d231e8"/>
        <function-ref name="isInput" scoped="" ref="0x40d232c8"/>
        <function-ref name="toggle" scoped="" ref="0x40d233a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40d23488"/>
        <function-ref name="get" scoped="" ref="0x40d23568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d23648"/>
        <function-ref name="set" scoped="" ref="0x40d23728"/>
        <function-ref name="clr" scoped="" ref="0x40d23808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d229e8" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d229e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d22bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40d22ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40d22d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40d22e60"/>
        <function-ref name="get" scoped="" ref="0x40d51010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d510f0"/>
        <function-ref name="set" scoped="" ref="0x40d511d0"/>
        <function-ref name="clr" scoped="" ref="0x40d512b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d50538" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d50538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d50710"/>
        <function-ref name="isInput" scoped="" ref="0x40d507f0"/>
        <function-ref name="toggle" scoped="" ref="0x40d508d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d509b0"/>
        <function-ref name="get" scoped="" ref="0x40d50a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d50b70"/>
        <function-ref name="set" scoped="" ref="0x40d50c50"/>
        <function-ref name="clr" scoped="" ref="0x40d50d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40400ba8" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40400ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40400d80"/>
        <function-ref name="isInput" scoped="" ref="0x40400e60"/>
        <function-ref name="toggle" scoped="" ref="0x403ff010"/>
        <function-ref name="isOutput" scoped="" ref="0x403ff0f0"/>
        <function-ref name="get" scoped="" ref="0x403ff1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ff2b0"/>
        <function-ref name="set" scoped="" ref="0x403ff390"/>
        <function-ref name="clr" scoped="" ref="0x403ff470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4040a890" loc="40:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4040a890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040aa68"/>
        <function-ref name="isInput" scoped="" ref="0x4040ab48"/>
        <function-ref name="toggle" scoped="" ref="0x4040ac28"/>
        <function-ref name="isOutput" scoped="" ref="0x4040ad08"/>
        <function-ref name="get" scoped="" ref="0x4040ade8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040aec8"/>
        <function-ref name="set" scoped="" ref="0x40409010"/>
        <function-ref name="clr" scoped="" ref="0x404090f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40402870" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40402870"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40402a48"/>
        <function-ref name="isInput" scoped="" ref="0x40402b28"/>
        <function-ref name="toggle" scoped="" ref="0x40402c08"/>
        <function-ref name="isOutput" scoped="" ref="0x40402ce8"/>
        <function-ref name="get" scoped="" ref="0x40402dc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40402ea8"/>
        <function-ref name="set" scoped="" ref="0x40400010"/>
        <function-ref name="clr" scoped="" ref="0x404000f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x403ff5d0" loc="38:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x403ff5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x403ff7a8"/>
        <function-ref name="isInput" scoped="" ref="0x403ff888"/>
        <function-ref name="toggle" scoped="" ref="0x403ff968"/>
        <function-ref name="isOutput" scoped="" ref="0x403ffa48"/>
        <function-ref name="get" scoped="" ref="0x403ffb28"/>
        <function-ref name="makeOutput" scoped="" ref="0x403ffc08"/>
        <function-ref name="set" scoped="" ref="0x403ffce8"/>
        <function-ref name="clr" scoped="" ref="0x403ffdc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40409250" loc="41:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40409250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40409428"/>
        <function-ref name="isInput" scoped="" ref="0x40409508"/>
        <function-ref name="toggle" scoped="" ref="0x404095e8"/>
        <function-ref name="isOutput" scoped="" ref="0x404096c8"/>
        <function-ref name="get" scoped="" ref="0x404097a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40409888"/>
        <function-ref name="set" scoped="" ref="0x40409968"/>
        <function-ref name="clr" scoped="" ref="0x40409a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40400250" loc="36:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40400250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40400428"/>
        <function-ref name="isInput" scoped="" ref="0x40400508"/>
        <function-ref name="toggle" scoped="" ref="0x404005e8"/>
        <function-ref name="isOutput" scoped="" ref="0x404006c8"/>
        <function-ref name="get" scoped="" ref="0x404007a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40400888"/>
        <function-ref name="set" scoped="" ref="0x40400968"/>
        <function-ref name="clr" scoped="" ref="0x40400a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x403fff28" loc="39:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x403fff28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040a110"/>
        <function-ref name="isInput" scoped="" ref="0x4040a1f0"/>
        <function-ref name="toggle" scoped="" ref="0x4040a2d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4040a3b0"/>
        <function-ref name="get" scoped="" ref="0x4040a490"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040a570"/>
        <function-ref name="set" scoped="" ref="0x4040a650"/>
        <function-ref name="clr" scoped="" ref="0x4040a730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40409ba8" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40409ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40409d80"/>
        <function-ref name="isInput" scoped="" ref="0x40409e60"/>
        <function-ref name="toggle" scoped="" ref="0x40408010"/>
        <function-ref name="isOutput" scoped="" ref="0x404080f0"/>
        <function-ref name="get" scoped="" ref="0x404081d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404082b0"/>
        <function-ref name="set" scoped="" ref="0x40408390"/>
        <function-ref name="clr" scoped="" ref="0x40408470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d592b0" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d592b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d59488"/>
        <function-ref name="isInput" scoped="" ref="0x40d59568"/>
        <function-ref name="toggle" scoped="" ref="0x40d59648"/>
        <function-ref name="isOutput" scoped="" ref="0x40d59728"/>
        <function-ref name="get" scoped="" ref="0x40d59808"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d598e8"/>
        <function-ref name="set" scoped="" ref="0x40d599c8"/>
        <function-ref name="clr" scoped="" ref="0x40d59aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d58c78" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d58c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d58e50"/>
        <function-ref name="isInput" scoped="" ref="0x40d57010"/>
        <function-ref name="toggle" scoped="" ref="0x40d570f0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d571d0"/>
        <function-ref name="get" scoped="" ref="0x40d572b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d57390"/>
        <function-ref name="set" scoped="" ref="0x40d57470"/>
        <function-ref name="clr" scoped="" ref="0x40d57550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d56718" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d56718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d568f0"/>
        <function-ref name="isInput" scoped="" ref="0x40d569d0"/>
        <function-ref name="toggle" scoped="" ref="0x40d56ab0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d56b90"/>
        <function-ref name="get" scoped="" ref="0x40d56c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d56d50"/>
        <function-ref name="set" scoped="" ref="0x40d56e30"/>
        <function-ref name="clr" scoped="" ref="0x40d56f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d540f8" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d540f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d542d0"/>
        <function-ref name="isInput" scoped="" ref="0x40d543b0"/>
        <function-ref name="toggle" scoped="" ref="0x40d54490"/>
        <function-ref name="isOutput" scoped="" ref="0x40d54570"/>
        <function-ref name="get" scoped="" ref="0x40d54650"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d54730"/>
        <function-ref name="set" scoped="" ref="0x40d54810"/>
        <function-ref name="clr" scoped="" ref="0x40d548f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d53ac8" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d53ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d53ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40d53d80"/>
        <function-ref name="toggle" scoped="" ref="0x40d53e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40d52010"/>
        <function-ref name="get" scoped="" ref="0x40d520f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d521d0"/>
        <function-ref name="set" scoped="" ref="0x40d522b0"/>
        <function-ref name="clr" scoped="" ref="0x40d52390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d81570" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d81570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d81748"/>
        <function-ref name="isInput" scoped="" ref="0x40d81828"/>
        <function-ref name="toggle" scoped="" ref="0x40d81908"/>
        <function-ref name="isOutput" scoped="" ref="0x40d819e8"/>
        <function-ref name="get" scoped="" ref="0x40d81ac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d81ba8"/>
        <function-ref name="set" scoped="" ref="0x40d81c88"/>
        <function-ref name="clr" scoped="" ref="0x40d81d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d7f010" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d7f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d7f1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40d7f2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40d7f3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40d7f488"/>
        <function-ref name="get" scoped="" ref="0x40d7f568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d7f648"/>
        <function-ref name="set" scoped="" ref="0x40d7f728"/>
        <function-ref name="clr" scoped="" ref="0x40d7f808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d7e9e8" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d7e9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d7ebc0"/>
        <function-ref name="isInput" scoped="" ref="0x40d7eca0"/>
        <function-ref name="toggle" scoped="" ref="0x40d7ed80"/>
        <function-ref name="isOutput" scoped="" ref="0x40d7ee60"/>
        <function-ref name="get" scoped="" ref="0x40d7d010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d7d0f0"/>
        <function-ref name="set" scoped="" ref="0x40d7d1d0"/>
        <function-ref name="clr" scoped="" ref="0x40d7d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40410170" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40410170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40410348"/>
        <function-ref name="isInput" scoped="" ref="0x40410428"/>
        <function-ref name="toggle" scoped="" ref="0x40410508"/>
        <function-ref name="isOutput" scoped="" ref="0x404105e8"/>
        <function-ref name="get" scoped="" ref="0x404106c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404107a8"/>
        <function-ref name="set" scoped="" ref="0x40410888"/>
        <function-ref name="clr" scoped="" ref="0x40410968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4040fe48" loc="40:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4040fe48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040d050"/>
        <function-ref name="isInput" scoped="" ref="0x4040d130"/>
        <function-ref name="toggle" scoped="" ref="0x4040d210"/>
        <function-ref name="isOutput" scoped="" ref="0x4040d2f0"/>
        <function-ref name="get" scoped="" ref="0x4040d3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040d4b0"/>
        <function-ref name="set" scoped="" ref="0x4040d590"/>
        <function-ref name="clr" scoped="" ref="0x4040d670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40406d78" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40406d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40405010"/>
        <function-ref name="isInput" scoped="" ref="0x404050f0"/>
        <function-ref name="toggle" scoped="" ref="0x404051d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404052b0"/>
        <function-ref name="get" scoped="" ref="0x40405390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40405470"/>
        <function-ref name="set" scoped="" ref="0x40405550"/>
        <function-ref name="clr" scoped="" ref="0x40405630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40410ac8" loc="38:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40410ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40410ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40410d80"/>
        <function-ref name="toggle" scoped="" ref="0x40410e60"/>
        <function-ref name="isOutput" scoped="" ref="0x4040f010"/>
        <function-ref name="get" scoped="" ref="0x4040f0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040f1d0"/>
        <function-ref name="set" scoped="" ref="0x4040f2b0"/>
        <function-ref name="clr" scoped="" ref="0x4040f390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4040d7d0" loc="41:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4040d7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040d9a8"/>
        <function-ref name="isInput" scoped="" ref="0x4040da88"/>
        <function-ref name="toggle" scoped="" ref="0x4040db68"/>
        <function-ref name="isOutput" scoped="" ref="0x4040dc48"/>
        <function-ref name="get" scoped="" ref="0x4040dd28"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040de08"/>
        <function-ref name="set" scoped="" ref="0x4040dee8"/>
        <function-ref name="clr" scoped="" ref="0x4040c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40405790" loc="36:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40405790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40405968"/>
        <function-ref name="isInput" scoped="" ref="0x40405a48"/>
        <function-ref name="toggle" scoped="" ref="0x40405b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40405c08"/>
        <function-ref name="get" scoped="" ref="0x40405ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40405dc8"/>
        <function-ref name="set" scoped="" ref="0x40405ea8"/>
        <function-ref name="clr" scoped="" ref="0x40410010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4040f4f0" loc="39:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4040f4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040f6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4040f7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4040f888"/>
        <function-ref name="isOutput" scoped="" ref="0x4040f968"/>
        <function-ref name="get" scoped="" ref="0x4040fa48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040fb28"/>
        <function-ref name="set" scoped="" ref="0x4040fc08"/>
        <function-ref name="clr" scoped="" ref="0x4040fce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4040c170" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4040c170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4040c348"/>
        <function-ref name="isInput" scoped="" ref="0x4040c428"/>
        <function-ref name="toggle" scoped="" ref="0x4040c508"/>
        <function-ref name="isOutput" scoped="" ref="0x4040c5e8"/>
        <function-ref name="get" scoped="" ref="0x4040c6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4040c7a8"/>
        <function-ref name="set" scoped="" ref="0x4040c888"/>
        <function-ref name="clr" scoped="" ref="0x4040c968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d887f8" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d887f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d889d0"/>
        <function-ref name="isInput" scoped="" ref="0x40d88ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40d88b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40d88c70"/>
        <function-ref name="get" scoped="" ref="0x40d88d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d88e30"/>
        <function-ref name="set" scoped="" ref="0x40d88f10"/>
        <function-ref name="clr" scoped="" ref="0x40d87010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d86228" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d86228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d86400"/>
        <function-ref name="isInput" scoped="" ref="0x40d864e0"/>
        <function-ref name="toggle" scoped="" ref="0x40d865c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d866a0"/>
        <function-ref name="get" scoped="" ref="0x40d86780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d86860"/>
        <function-ref name="set" scoped="" ref="0x40d86940"/>
        <function-ref name="clr" scoped="" ref="0x40d86a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d85c08" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d85c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d85de0"/>
        <function-ref name="isInput" scoped="" ref="0x40d85ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40d83010"/>
        <function-ref name="isOutput" scoped="" ref="0x40d830f0"/>
        <function-ref name="get" scoped="" ref="0x40d831d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d832b0"/>
        <function-ref name="set" scoped="" ref="0x40d83390"/>
        <function-ref name="clr" scoped="" ref="0x40d83470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d826c0" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d826c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d82898"/>
        <function-ref name="isInput" scoped="" ref="0x40d82978"/>
        <function-ref name="toggle" scoped="" ref="0x40d82a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40d82b38"/>
        <function-ref name="get" scoped="" ref="0x40d82c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d82cf8"/>
        <function-ref name="set" scoped="" ref="0x40d82dd8"/>
        <function-ref name="clr" scoped="" ref="0x40d82eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40db20b0" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40db20b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40db2288"/>
        <function-ref name="isInput" scoped="" ref="0x40db2368"/>
        <function-ref name="toggle" scoped="" ref="0x40db2448"/>
        <function-ref name="isOutput" scoped="" ref="0x40db2528"/>
        <function-ref name="get" scoped="" ref="0x40db2608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40db26e8"/>
        <function-ref name="set" scoped="" ref="0x40db27c8"/>
        <function-ref name="clr" scoped="" ref="0x40db28a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40db1a88" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40db1a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40db1c60"/>
        <function-ref name="isInput" scoped="" ref="0x40db1d40"/>
        <function-ref name="toggle" scoped="" ref="0x40db1e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40db1f00"/>
        <function-ref name="get" scoped="" ref="0x40db0010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40db00f0"/>
        <function-ref name="set" scoped="" ref="0x40db01d0"/>
        <function-ref name="clr" scoped="" ref="0x40db02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40daf538" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40daf538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40daf710"/>
        <function-ref name="isInput" scoped="" ref="0x40daf7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40daf8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40daf9b0"/>
        <function-ref name="get" scoped="" ref="0x40dafa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40dafb70"/>
        <function-ref name="set" scoped="" ref="0x40dafc50"/>
        <function-ref name="clr" scoped="" ref="0x40dafd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40dad010" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40dad010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40dad1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40dad2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40dad3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40dad488"/>
        <function-ref name="get" scoped="" ref="0x40dad568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40dad648"/>
        <function-ref name="set" scoped="" ref="0x40dad728"/>
        <function-ref name="clr" scoped="" ref="0x40dad808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40415828" loc="38:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40415828"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40415a00"/>
        <function-ref name="isInput" scoped="" ref="0x40415ae0"/>
        <function-ref name="toggle" scoped="" ref="0x40415bc0"/>
        <function-ref name="isOutput" scoped="" ref="0x40415ca0"/>
        <function-ref name="get" scoped="" ref="0x40415d80"/>
        <function-ref name="makeOutput" scoped="" ref="0x40415e60"/>
        <function-ref name="set" scoped="" ref="0x40414010"/>
        <function-ref name="clr" scoped="" ref="0x404140f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40420c30" loc="38:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40420c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40420e08"/>
        <function-ref name="isInput" scoped="" ref="0x40420ee8"/>
        <function-ref name="toggle" scoped="" ref="0x4041f010"/>
        <function-ref name="isOutput" scoped="" ref="0x4041f0f0"/>
        <function-ref name="get" scoped="" ref="0x4041f1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041f2b0"/>
        <function-ref name="set" scoped="" ref="0x4041f390"/>
        <function-ref name="clr" scoped="" ref="0x4041f470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4041d010" loc="38:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4041d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4041d1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4041d2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4041d3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4041d488"/>
        <function-ref name="get" scoped="" ref="0x4041d568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4041d648"/>
        <function-ref name="set" scoped="" ref="0x4041d728"/>
        <function-ref name="clr" scoped="" ref="0x4041d808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404273b0" loc="38:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404273b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40427588"/>
        <function-ref name="isInput" scoped="" ref="0x40427668"/>
        <function-ref name="toggle" scoped="" ref="0x40427748"/>
        <function-ref name="isOutput" scoped="" ref="0x40427828"/>
        <function-ref name="get" scoped="" ref="0x40427908"/>
        <function-ref name="makeOutput" scoped="" ref="0x404279e8"/>
        <function-ref name="set" scoped="" ref="0x40427ac8"/>
        <function-ref name="clr" scoped="" ref="0x40427ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40424718" loc="38:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40424718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404248f0"/>
        <function-ref name="isInput" scoped="" ref="0x404249d0"/>
        <function-ref name="toggle" scoped="" ref="0x40424ab0"/>
        <function-ref name="isOutput" scoped="" ref="0x40424b90"/>
        <function-ref name="get" scoped="" ref="0x40424c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x40424d50"/>
        <function-ref name="set" scoped="" ref="0x40424e30"/>
        <function-ref name="clr" scoped="" ref="0x40424f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4042ea88" loc="38:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4042ea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042ec60"/>
        <function-ref name="isInput" scoped="" ref="0x4042ed40"/>
        <function-ref name="toggle" scoped="" ref="0x4042ee20"/>
        <function-ref name="isOutput" scoped="" ref="0x4042ef00"/>
        <function-ref name="get" scoped="" ref="0x4042d010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042d0f0"/>
        <function-ref name="set" scoped="" ref="0x4042d1d0"/>
        <function-ref name="clr" scoped="" ref="0x4042d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4042be98" loc="38:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4042be98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042a0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4042a1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4042a280"/>
        <function-ref name="isOutput" scoped="" ref="0x4042a360"/>
        <function-ref name="get" scoped="" ref="0x4042a440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042a520"/>
        <function-ref name="set" scoped="" ref="0x4042a600"/>
        <function-ref name="clr" scoped="" ref="0x4042a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40434260" loc="38:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40434260"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40434438"/>
        <function-ref name="isInput" scoped="" ref="0x40434518"/>
        <function-ref name="toggle" scoped="" ref="0x404345f8"/>
        <function-ref name="isOutput" scoped="" ref="0x404346d8"/>
        <function-ref name="get" scoped="" ref="0x404347b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40434898"/>
        <function-ref name="set" scoped="" ref="0x40434978"/>
        <function-ref name="clr" scoped="" ref="0x40434a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40432538" loc="38:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40432538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40432710"/>
        <function-ref name="isInput" scoped="" ref="0x404327f0"/>
        <function-ref name="toggle" scoped="" ref="0x404328d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404329b0"/>
        <function-ref name="get" scoped="" ref="0x40432a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40432b70"/>
        <function-ref name="set" scoped="" ref="0x40432c50"/>
        <function-ref name="clr" scoped="" ref="0x40432d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4042f7f8" loc="38:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4042f7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042f9d0"/>
        <function-ref name="isInput" scoped="" ref="0x4042fab0"/>
        <function-ref name="toggle" scoped="" ref="0x4042fb90"/>
        <function-ref name="isOutput" scoped="" ref="0x4042fc70"/>
        <function-ref name="get" scoped="" ref="0x4042fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042fe30"/>
        <function-ref name="set" scoped="" ref="0x4042ff10"/>
        <function-ref name="clr" scoped="" ref="0x4043a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40439a88" loc="38:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40439a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40439c60"/>
        <function-ref name="isInput" scoped="" ref="0x40439d40"/>
        <function-ref name="toggle" scoped="" ref="0x40439e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40439f00"/>
        <function-ref name="get" scoped="" ref="0x40438010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404380f0"/>
        <function-ref name="set" scoped="" ref="0x404381d0"/>
        <function-ref name="clr" scoped="" ref="0x404382b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40437d38" loc="38:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40437d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40437f10"/>
        <function-ref name="isInput" scoped="" ref="0x40435010"/>
        <function-ref name="toggle" scoped="" ref="0x404350f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404351d0"/>
        <function-ref name="get" scoped="" ref="0x404352b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40435390"/>
        <function-ref name="set" scoped="" ref="0x40435470"/>
        <function-ref name="clr" scoped="" ref="0x40435550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4043f010" loc="38:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4043f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043f1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4043f2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4043f3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4043f488"/>
        <function-ref name="get" scoped="" ref="0x4043f568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043f648"/>
        <function-ref name="set" scoped="" ref="0x4043f728"/>
        <function-ref name="clr" scoped="" ref="0x4043f808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4045b160" loc="27:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4045b160"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x40288960"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x40288960"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4045b338"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x4045b488" loc="28:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x4045b488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x4045b660"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x4045b740"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x4045b820"/>
        <function-ref name="actualMicro" scoped="" ref="0x4045b900"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x4045b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x4046ff28" loc="49:/opt/tinyos2/tinyos-2.x-src/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x4046ff28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4046e110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x4046f340" loc="46:/opt/tinyos2/tinyos-2.x-src/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x4046f340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x4046f518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x4046fbb8" loc="48:/opt/tinyos2/tinyos-2.x-src/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x4046fbb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4046fd90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x4046f688" loc="47:/opt/tinyos2/tinyos-2.x-src/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x4046f688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4046f860"/>
        <function-ref name="taskLoop" scoped="" ref="0x4046f940"/>
        <function-ref name="runNextTask" scoped="" ref="0x4046fa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40297c20" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40297c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40297df8"/>
        <function-ref name="runTask" scoped="" ref="0x40297ed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x4028f7a0" loc="36:/opt/tinyos2/tinyos-2.x-src/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x4028f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4028f978"/>
        <function-ref name="taskLoop" scoped="" ref="0x4028fa58"/>
        <function-ref name="runNextTask" scoped="" ref="0x4028fb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x402ec8c8" loc="45:/opt/tinyos2/tinyos-2.x-src/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x402ec8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x402ecaa0"/>
        <function-ref name="runTask" scoped="" ref="0x402ecb80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x402ebf20" loc="46:/opt/tinyos2/tinyos-2.x-src/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x402ebf20"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x402ea110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x402ec130" loc="44:/opt/tinyos2/tinyos-2.x-src/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x402ec130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x402ec308"/>
        <function-ref name="taskLoop" scoped="" ref="0x402ec3e8"/>
        <function-ref name="runNextTask" scoped="" ref="0x402ec4c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x40304398" loc="46:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40304398"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40304570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x402fa900" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x402fa900"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x402faad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x402ffee0" loc="43:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x402ffee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x402f90e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4044f658" loc="49:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4044f658"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4044f830"/>
        <function-ref name="stopDone" scoped="" ref="0x4044f910"/>
        <function-ref name="start" scoped="" ref="0x4044f9f0"/>
        <function-ref name="stop" scoped="" ref="0x4044fad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4044fea8" loc="51:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4044fea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404750c0"/>
        <function-ref name="getPayload" scoped="" ref="0x404751a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40475280"/>
        <function-ref name="cancel" scoped="" ref="0x40475360"/>
        <function-ref name="sendDone" scoped="" ref="0x40475440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40473010" loc="53:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40473010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x404731e8"/>
        <function-ref name="receive" scoped="" ref="0x404732c8"/>
        <function-ref name="getPayload" scoped="" ref="0x404733a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4047ac10" loc="55:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4047ac10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4047ade8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4047aec8"/>
        <function-ref name="getPayload" scoped="" ref="0x40472010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x404720f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x404721d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40475818" loc="52:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40475818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x404759f0"/>
        <function-ref name="receive" scoped="" ref="0x40475ad0"/>
        <function-ref name="getPayload" scoped="" ref="0x40475bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40482360" loc="57:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40482360"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40482538"/>
        <function-ref name="noAck" scoped="" ref="0x40482618"/>
        <function-ref name="wasAcked" scoped="" ref="0x404826f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40472320" loc="56:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40472320"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x404724f8"/>
        <function-ref name="source" scoped="" ref="0x404725d8"/>
        <function-ref name="address" scoped="" ref="0x404726b8"/>
        <function-ref name="destination" scoped="" ref="0x40472798"/>
        <function-ref name="setSource" scoped="" ref="0x40472878"/>
        <function-ref name="setDestination" scoped="" ref="0x40472958"/>
        <function-ref name="type" scoped="" ref="0x40472a38"/>
        <function-ref name="setType" scoped="" ref="0x40472b18"/>
        <function-ref name="isForMe" scoped="" ref="0x40472bf8"/>
        <function-ref name="setGroup" scoped="" ref="0x40472cd8"/>
        <function-ref name="localGroup" scoped="" ref="0x40472db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40480528" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40480528"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40480700"/>
        <function-ref name="stopDone" scoped="" ref="0x404807e0"/>
        <function-ref name="start" scoped="" ref="0x404808c0"/>
        <function-ref name="stop" scoped="" ref="0x404809a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x4048e428" loc="50:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x4048e428"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40339650"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x4048e600"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x4048e6e0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x4048e7c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x4048e8a0"/>
        <function-ref name="setCca" scoped="" ref="0x4048e980"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x4048ea60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40480d78" loc="43:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40480d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40339650"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4047f010"/>
        <function-ref name="getPayload" scoped="" ref="0x4047f0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4047f1d0"/>
        <function-ref name="cancel" scoped="" ref="0x4047f2b0"/>
        <function-ref name="sendDone" scoped="" ref="0x4047f390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x4047ff00" loc="45:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x4047ff00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40339650"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x4047e0f0"/>
        <function-ref name="receive" scoped="" ref="0x4047e1d0"/>
        <function-ref name="getPayload" scoped="" ref="0x4047e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4047d010" loc="47:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4047d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4047d1e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4047d2c8"/>
        <function-ref name="getPayload" scoped="" ref="0x4047d3a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4047d488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4047d568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x404852e8" loc="48:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x404852e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x404854c0"/>
        <function-ref name="getRssi" scoped="" ref="0x404855a0"/>
        <function-ref name="getPower" scoped="" ref="0x40485680"/>
        <function-ref name="getLqi" scoped="" ref="0x40485760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40496a30" loc="51:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40496a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x40496c08"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x40496ce8"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x40496dc8"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x40496ea8"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x40488010"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x404880f0"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x404881d0"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x404882b0"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x40488390"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x40488470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4047f768" loc="44:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4047f768"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40339650"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x4047f940"/>
        <function-ref name="receive" scoped="" ref="0x4047fa20"/>
        <function-ref name="getPayload" scoped="" ref="0x4047fb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x404858b8" loc="49:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x404858b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40485a90"/>
        <function-ref name="noAck" scoped="" ref="0x40485b70"/>
        <function-ref name="wasAcked" scoped="" ref="0x40485c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x404910b0" loc="52:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x404910b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40491288"/>
        <function-ref name="setRetries" scoped="" ref="0x40491368"/>
        <function-ref name="getRetries" scoped="" ref="0x40491448"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40491528"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40491608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4047e400" loc="46:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4047e400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4047e5d8"/>
        <function-ref name="source" scoped="" ref="0x4047e6b8"/>
        <function-ref name="address" scoped="" ref="0x4047e798"/>
        <function-ref name="destination" scoped="" ref="0x4047e878"/>
        <function-ref name="setSource" scoped="" ref="0x4047e958"/>
        <function-ref name="setDestination" scoped="" ref="0x4047ea38"/>
        <function-ref name="type" scoped="" ref="0x4047eb18"/>
        <function-ref name="setType" scoped="" ref="0x4047ebf8"/>
        <function-ref name="isForMe" scoped="" ref="0x4047ecd8"/>
        <function-ref name="setGroup" scoped="" ref="0x4047edb8"/>
        <function-ref name="localGroup" scoped="" ref="0x4047ee98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x404a26c8" loc="46:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x404a26c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404a28a0"/>
        <function-ref name="getPayload" scoped="" ref="0x404a2980"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x404a2a60"/>
        <function-ref name="cancel" scoped="" ref="0x404a2b40"/>
        <function-ref name="sendDone" scoped="" ref="0x404a2c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x404a2d98" loc="47:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x404a2d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x4049a010"/>
        <function-ref name="receive" scoped="" ref="0x4049a0f0"/>
        <function-ref name="getPayload" scoped="" ref="0x4049a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x404a8de0" loc="50:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x404a8de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x40499010"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x404990f0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x404991d0"/>
        <function-ref name="syncDone" scoped="" ref="0x404992b0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40499390"/>
        <function-ref name="setChannel" scoped="" ref="0x40499470"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x40499550"/>
        <function-ref name="setPanAddr" scoped="" ref="0x40499630"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x40499710"/>
        <function-ref name="getShortAddr" scoped="" ref="0x404997f0"/>
        <function-ref name="sync" scoped="" ref="0x404998d0"/>
        <function-ref name="getChannel" scoped="" ref="0x404999b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x40499a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4049d100" loc="39:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4049d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40339650"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4049d2d8"/>
        <function-ref name="getPayload" scoped="" ref="0x4049d3b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4049d498"/>
        <function-ref name="cancel" scoped="" ref="0x4049d578"/>
        <function-ref name="sendDone" scoped="" ref="0x4049d658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x4049c1e8" loc="41:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x4049c1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40339650"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x4049c3c0"/>
        <function-ref name="receive" scoped="" ref="0x4049c4a0"/>
        <function-ref name="getPayload" scoped="" ref="0x4049c580"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4049b318" loc="43:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4049b318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4049b4f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x4049b5d0"/>
        <function-ref name="getPayload" scoped="" ref="0x4049b6b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4049b790"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4049b870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x4049a320" loc="48:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x4049a320"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x4049a4f8"/>
        <function-ref name="getRssi" scoped="" ref="0x4049a5d8"/>
        <function-ref name="getPower" scoped="" ref="0x4049a6b8"/>
        <function-ref name="getLqi" scoped="" ref="0x4049a798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x4049f280" loc="49:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x4049f280"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x4049f458"/>
        <function-ref name="getMetadata" scoped="" ref="0x4049f538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4049da30" loc="40:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4049da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40339650"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x4049dc08"/>
        <function-ref name="receive" scoped="" ref="0x4049dce8"/>
        <function-ref name="getPayload" scoped="" ref="0x4049ddc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x404b2b98" loc="51:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x404b2b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x404b2d70"/>
        <function-ref name="changed" scoped="" ref="0x404b2e50"/>
        <function-ref name="amGroup" scoped="" ref="0x404a6010"/>
        <function-ref name="setAddress" scoped="" ref="0x404a60f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4049c6d0" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4049c6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4049c8a8"/>
        <function-ref name="source" scoped="" ref="0x4049c988"/>
        <function-ref name="address" scoped="" ref="0x4049ca68"/>
        <function-ref name="destination" scoped="" ref="0x4049cb48"/>
        <function-ref name="setSource" scoped="" ref="0x4049cc28"/>
        <function-ref name="setDestination" scoped="" ref="0x4049cd08"/>
        <function-ref name="type" scoped="" ref="0x4049cde8"/>
        <function-ref name="setType" scoped="" ref="0x4049cec8"/>
        <function-ref name="isForMe" scoped="" ref="0x4049b010"/>
        <function-ref name="setGroup" scoped="" ref="0x4049b0f0"/>
        <function-ref name="localGroup" scoped="" ref="0x4049b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x404d92c8" loc="44:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x404d92c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x404d94a0"/>
        <function-ref name="stopDone" scoped="" ref="0x404d9580"/>
        <function-ref name="start" scoped="" ref="0x404d9660"/>
        <function-ref name="stop" scoped="" ref="0x404d9740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x404d87a8" loc="47:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x404d87a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40339650"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x404d8980"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x404d8a60"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x404d8b40"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x404d8c20"/>
        <function-ref name="setCca" scoped="" ref="0x404d8d00"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x404d8de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x404d98a8" loc="45:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x404d98a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404d9a80"/>
        <function-ref name="getPayload" scoped="" ref="0x404d9b60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x404d9c40"/>
        <function-ref name="cancel" scoped="" ref="0x404d9d20"/>
        <function-ref name="sendDone" scoped="" ref="0x404d9e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x404d8010" loc="46:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x404d8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x404d81e8"/>
        <function-ref name="receive" scoped="" ref="0x404d82c8"/>
        <function-ref name="getPayload" scoped="" ref="0x404d83a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x404e4ec8" loc="39:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x404e4ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x404e10c0"/>
        <function-ref name="stopDone" scoped="" ref="0x404e11a0"/>
        <function-ref name="start" scoped="" ref="0x404e1280"/>
        <function-ref name="stop" scoped="" ref="0x404e1360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x404e1e20" loc="41:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x404e1e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40339650"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x404e0010"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x404e00f0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x404e01d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x404e02b0"/>
        <function-ref name="setCca" scoped="" ref="0x404e0390"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x404e0470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x404de530" loc="47:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x404de530"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x404de708"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x404de7e8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x404de8c8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x404de9a8"/>
        <function-ref name="setCca" scoped="" ref="0x404dea88"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x404deb68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x404ece60" loc="51:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x404ece60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x404f9050"/>
        <function-ref name="getRssi" scoped="" ref="0x404f9130"/>
        <function-ref name="getPower" scoped="" ref="0x404f9210"/>
        <function-ref name="getLqi" scoped="" ref="0x404f92f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x404eed58" loc="46:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x404eed58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404de010"/>
        <function-ref name="cancel" scoped="" ref="0x404de0f0"/>
        <function-ref name="modify" scoped="" ref="0x404de1d0"/>
        <function-ref name="sendDone" scoped="" ref="0x404de2b0"/>
        <function-ref name="resend" scoped="" ref="0x404de390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x404e14c8" loc="40:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x404e14c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404e16a0"/>
        <function-ref name="getPayload" scoped="" ref="0x404e1780"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x404e1860"/>
        <function-ref name="cancel" scoped="" ref="0x404e1940"/>
        <function-ref name="sendDone" scoped="" ref="0x404e1a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x404f81d0" loc="48:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x404f81d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x404f83a8"/>
        <function-ref name="rand32" scoped="" ref="0x404f8488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x404f13c8" loc="45:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x404f13c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x404f15a0"/>
        <function-ref name="stop" scoped="" ref="0x404f1680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x404f9468" loc="52:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x404f9468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x404f96c0"/>
        <function-ref name="getMetadata" scoped="" ref="0x404f97a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x404e5208" loc="44:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x404e5208"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x404e53e0"/>
        <function-ref name="rfOff" scoped="" ref="0x404e54c0"/>
        <function-ref name="rxOn" scoped="" ref="0x404e55a0"/>
        <function-ref name="startVReg" scoped="" ref="0x404e5680"/>
        <function-ref name="stopVReg" scoped="" ref="0x404e5760"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x404e5840"/>
        <function-ref name="stopOscillator" scoped="" ref="0x404e5920"/>
        <function-ref name="startVRegDone" scoped="" ref="0x404e5a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x404ec258" loc="50:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x404ec258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x404ec430"/>
        <function-ref name="led0Toggle" scoped="" ref="0x404ec510"/>
        <function-ref name="led1On" scoped="" ref="0x404ec5f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x404ec6d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x404ec7b0"/>
        <function-ref name="get" scoped="" ref="0x404ec890"/>
        <function-ref name="led1Off" scoped="" ref="0x404ec970"/>
        <function-ref name="led2Off" scoped="" ref="0x404eccf0"/>
        <function-ref name="set" scoped="" ref="0x404eca50"/>
        <function-ref name="led0On" scoped="" ref="0x404ecb30"/>
        <function-ref name="led2On" scoped="" ref="0x404ecc10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x404eabb0" loc="43:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x404eabb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x404ead88"/>
        <function-ref name="immediateRequest" scoped="" ref="0x404eae68"/>
        <function-ref name="request" scoped="" ref="0x404df010"/>
        <function-ref name="granted" scoped="" ref="0x404df0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x404df1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x405000c0" loc="53:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0x405000c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40500298"/>
        <function-ref name="toIdle" scoped="" ref="0x40500378"/>
        <function-ref name="isState" scoped="" ref="0x40500458"/>
        <function-ref name="isIdle" scoped="" ref="0x40500538"/>
        <function-ref name="requestState" scoped="" ref="0x40500618"/>
        <function-ref name="forceState" scoped="" ref="0x405006f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x404f85f8" loc="49:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x404f85f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x404f87d0"/>
        <function-ref name="source" scoped="" ref="0x404f88b0"/>
        <function-ref name="address" scoped="" ref="0x404f8990"/>
        <function-ref name="destination" scoped="" ref="0x404f8a70"/>
        <function-ref name="setSource" scoped="" ref="0x404f8b50"/>
        <function-ref name="setDestination" scoped="" ref="0x404f8c30"/>
        <function-ref name="type" scoped="" ref="0x404f8d10"/>
        <function-ref name="setType" scoped="" ref="0x404f8df0"/>
        <function-ref name="isForMe" scoped="" ref="0x404f8ed0"/>
        <function-ref name="setGroup" scoped="" ref="0x404ec010"/>
        <function-ref name="localGroup" scoped="" ref="0x404ec0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x404f6bf0" loc="78:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0x404f6bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x404f6dc8"/>
        <function-ref name="runTask" scoped="" ref="0x404f6ea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x404f64c0" loc="77:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0x404f64c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x404f6698"/>
        <function-ref name="runTask" scoped="" ref="0x404f6778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x404f7b30" loc="75:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0x404f7b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x404f7d08"/>
        <function-ref name="runTask" scoped="" ref="0x404f7de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x40526420" loc="45:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x40526420"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x405265f8"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x405266d8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x405267b8"/>
        <function-ref name="syncDone" scoped="" ref="0x40526898"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40526978"/>
        <function-ref name="setChannel" scoped="" ref="0x40526a58"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x40526b38"/>
        <function-ref name="setPanAddr" scoped="" ref="0x40526c18"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x40526cf8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40526dd8"/>
        <function-ref name="sync" scoped="" ref="0x40526eb8"/>
        <function-ref name="getChannel" scoped="" ref="0x40525010"/>
        <function-ref name="getPanAddr" scoped="" ref="0x405250f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x40530938" loc="47:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x40530938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40523010"/>
        <function-ref name="readDone" scoped="" ref="0x405231f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x405252e0" loc="46:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x405252e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x405254b8"/>
        <function-ref name="rfOff" scoped="" ref="0x40525598"/>
        <function-ref name="rxOn" scoped="" ref="0x40525678"/>
        <function-ref name="startVReg" scoped="" ref="0x40525758"/>
        <function-ref name="stopVReg" scoped="" ref="0x40525838"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x40525918"/>
        <function-ref name="stopOscillator" scoped="" ref="0x405259f8"/>
        <function-ref name="startVRegDone" scoped="" ref="0x40525ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40527d08" loc="44:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40527d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40527ee0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40526010"/>
        <function-ref name="request" scoped="" ref="0x405260f0"/>
        <function-ref name="granted" scoped="" ref="0x405261d0"/>
        <function-ref name="isOwner" scoped="" ref="0x405262b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x4052c500" loc="45:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x4052c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x4052c6d8"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x4052c7b8"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x4052c898"/>
        <function-ref name="syncDone" scoped="" ref="0x4052c978"/>
        <function-ref name="setShortAddr" scoped="" ref="0x4052ca58"/>
        <function-ref name="setChannel" scoped="" ref="0x4052cb38"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x4052cc18"/>
        <function-ref name="setPanAddr" scoped="" ref="0x4052ccf8"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x4052cdd8"/>
        <function-ref name="getShortAddr" scoped="" ref="0x4052ceb8"/>
        <function-ref name="sync" scoped="" ref="0x4052b010"/>
        <function-ref name="getChannel" scoped="" ref="0x4052b0f0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x4052b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x405394e0" loc="62:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x405394e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x405396b8"/>
        <function-ref name="write" scoped="" ref="0x40539798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x40533460" loc="49:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0x40533460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402cb7e0"/>
            <typename><typedef-ref name="T32khz" ref="0x402cb9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40031818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x405297a8"/>
        <function-ref name="fired" scoped="" ref="0x40529068"/>
        <function-ref name="startAt" scoped="" ref="0x40529468"/>
        <function-ref name="isRunning" scoped="" ref="0x40529268"/>
        <function-ref name="getAlarm" scoped="" ref="0x405299a8"/>
        <function-ref name="start" scoped="" ref="0x40533bb0"/>
        <function-ref name="stop" scoped="" ref="0x40533e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x4053cc10" loc="60:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x4053cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4053cde8"/>
        <function-ref name="write" scoped="" ref="0x4053cec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x40532608" loc="51:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x40532608"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405327e0"/>
        <function-ref name="isInput" scoped="" ref="0x405328c0"/>
        <function-ref name="toggle" scoped="" ref="0x405329a0"/>
        <function-ref name="isOutput" scoped="" ref="0x40532a80"/>
        <function-ref name="get" scoped="" ref="0x40532b60"/>
        <function-ref name="makeOutput" scoped="" ref="0x40532c40"/>
        <function-ref name="set" scoped="" ref="0x40532d20"/>
        <function-ref name="clr" scoped="" ref="0x40532e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x4052bdf0" loc="47:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x4052bdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4052a448"/>
        <function-ref name="readDone" scoped="" ref="0x4052a628"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x4054e230" loc="113:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone" scoped="" ref="0x4054e230"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4054e408"/>
        <function-ref name="runTask" scoped="" ref="0x4054e4e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x40539930" loc="63:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40539930"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40539b08"/>
        <function-ref name="write" scoped="" ref="0x40539be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x4053c368" loc="58:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x4053c368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4053c540"/>
        <function-ref name="write" scoped="" ref="0x4053c620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x4053dc58" loc="54:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x4053dc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x4053de30"/>
        <function-ref name="changed" scoped="" ref="0x4053df10"/>
        <function-ref name="amGroup" scoped="" ref="0x40540010"/>
        <function-ref name="setAddress" scoped="" ref="0x405400f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x40529b98" loc="50:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x40529b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40529d70"/>
        <function-ref name="isInput" scoped="" ref="0x40529e50"/>
        <function-ref name="toggle" scoped="" ref="0x40532010"/>
        <function-ref name="isOutput" scoped="" ref="0x405320f0"/>
        <function-ref name="get" scoped="" ref="0x405321d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405322b0"/>
        <function-ref name="set" scoped="" ref="0x40532390"/>
        <function-ref name="clr" scoped="" ref="0x40532470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x40544de0" loc="66:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40544de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40546010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x40531010" loc="52:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x40531010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405311e8"/>
        <function-ref name="isInput" scoped="" ref="0x405312c8"/>
        <function-ref name="toggle" scoped="" ref="0x405313a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40531488"/>
        <function-ref name="get" scoped="" ref="0x40531568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40531648"/>
        <function-ref name="set" scoped="" ref="0x40531728"/>
        <function-ref name="clr" scoped="" ref="0x40531808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4052da80" loc="43:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4052da80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4052dc58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x40539090" loc="61:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40539090"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40539268"/>
        <function-ref name="write" scoped="" ref="0x40539348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x405461a8" loc="67:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x405461a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40546380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x405451b0" loc="70:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x405451b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40545488"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40545568"/>
        <function-ref name="request" scoped="" ref="0x40545648"/>
        <function-ref name="granted" scoped="" ref="0x40545728"/>
        <function-ref name="isOwner" scoped="" ref="0x40545808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x405430d0" loc="72:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0x405430d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x405432a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40543388"/>
        <function-ref name="request" scoped="" ref="0x40543468"/>
        <function-ref name="granted" scoped="" ref="0x40543548"/>
        <function-ref name="isOwner" scoped="" ref="0x40543628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x4052b3c0" loc="46:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x4052b3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x4052b598"/>
        <function-ref name="rfOff" scoped="" ref="0x4052b678"/>
        <function-ref name="rxOn" scoped="" ref="0x4052b758"/>
        <function-ref name="startVReg" scoped="" ref="0x4052b838"/>
        <function-ref name="stopVReg" scoped="" ref="0x4052b918"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x4052b9f8"/>
        <function-ref name="stopOscillator" scoped="" ref="0x4052bad8"/>
        <function-ref name="startVRegDone" scoped="" ref="0x4052bbb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x4053c7b8" loc="59:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x4053c7b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4053c990"/>
        <function-ref name="write" scoped="" ref="0x4053ca70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x40549e88" loc="57:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40549e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4053c0f0"/>
        <function-ref name="write" scoped="" ref="0x4053c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x405446f8" loc="64:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x405446f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x405448d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40543790" loc="74:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40543790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40543968"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40543a48"/>
        <function-ref name="led1On" scoped="" ref="0x40543b28"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40543c08"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40543ce8"/>
        <function-ref name="get" scoped="" ref="0x40543dc8"/>
        <function-ref name="led1Off" scoped="" ref="0x40543ea8"/>
        <function-ref name="led2Off" scoped="" ref="0x405422b0"/>
        <function-ref name="set" scoped="" ref="0x40542010"/>
        <function-ref name="led0On" scoped="" ref="0x405420f0"/>
        <function-ref name="led2On" scoped="" ref="0x405421d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x40550af0" loc="112:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sync" scoped="" ref="0x40550af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40550cc8"/>
        <function-ref name="runTask" scoped="" ref="0x40550da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4052ddc8" loc="44:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4052ddc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4052c010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4052c0f0"/>
        <function-ref name="request" scoped="" ref="0x4052c1d0"/>
        <function-ref name="granted" scoped="" ref="0x4052c2b0"/>
        <function-ref name="isOwner" scoped="" ref="0x4052c390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x4053a900" loc="56:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x4053a900"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4053aad8"/>
        <function-ref name="write" scoped="" ref="0x4053abb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x4053d668" loc="53:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x4053d668"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4053d840"/>
        <function-ref name="disable" scoped="" ref="0x4053d920"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x4053da00"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x4053dae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x405464f0" loc="68:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x405464f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x405466c8"/>
        <function-ref name="source" scoped="" ref="0x405467a8"/>
        <function-ref name="address" scoped="" ref="0x40546888"/>
        <function-ref name="destination" scoped="" ref="0x40546968"/>
        <function-ref name="setSource" scoped="" ref="0x40546a48"/>
        <function-ref name="setDestination" scoped="" ref="0x40546b28"/>
        <function-ref name="type" scoped="" ref="0x40546c08"/>
        <function-ref name="setType" scoped="" ref="0x40546ce8"/>
        <function-ref name="isForMe" scoped="" ref="0x40546dc8"/>
        <function-ref name="setGroup" scoped="" ref="0x40546ea8"/>
        <function-ref name="localGroup" scoped="" ref="0x40545010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x405459a8" loc="71:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x405459a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40545b80"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40545c60"/>
        <function-ref name="request" scoped="" ref="0x40545d40"/>
        <function-ref name="granted" scoped="" ref="0x40545e20"/>
        <function-ref name="isOwner" scoped="" ref="0x40545f00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x40544a68" loc="65:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40544a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40544c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4057aa78" loc="45:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4057aa78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4057ac50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x4057af20" loc="46:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0x4057af20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402cb7e0"/>
            <typename><typedef-ref name="T32khz" ref="0x402cb9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40031818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40588278"/>
        <function-ref name="fired" scoped="" ref="0x40589b28"/>
        <function-ref name="startAt" scoped="" ref="0x40589f28"/>
        <function-ref name="isRunning" scoped="" ref="0x40589d28"/>
        <function-ref name="getAlarm" scoped="" ref="0x40588478"/>
        <function-ref name="start" scoped="" ref="0x40589688"/>
        <function-ref name="stop" scoped="" ref="0x40589928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40587c90" loc="67:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40587c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402cb7e0"/>
            <typename><typedef-ref name="T32khz" ref="0x402cb9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40031818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406c2010"/>
        <function-ref name="fired" scoped="" ref="0x40586890"/>
        <function-ref name="startAt" scoped="" ref="0x40586c90"/>
        <function-ref name="isRunning" scoped="" ref="0x40586a90"/>
        <function-ref name="getAlarm" scoped="" ref="0x406c2210"/>
        <function-ref name="start" scoped="" ref="0x405863f0"/>
        <function-ref name="stop" scoped="" ref="0x40586690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x406c23c8" loc="68:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x406c23c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406c25a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40e17638" loc="28:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40e17638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402cb7e0"/>
            <typename><typedef-ref name="T32khz" ref="0x402cb9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40031818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e16988"/>
        <function-ref name="fired" scoped="" ref="0x40e16248"/>
        <function-ref name="startAt" scoped="" ref="0x40e16648"/>
        <function-ref name="isRunning" scoped="" ref="0x40e16448"/>
        <function-ref name="getAlarm" scoped="" ref="0x40e16b88"/>
        <function-ref name="start" scoped="" ref="0x40e17d88"/>
        <function-ref name="stop" scoped="" ref="0x40e16048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40e13130" loc="30:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40e13130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402cb7e0"/>
            <typename><typedef-ref name="TOne" ref="0x402e8260"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e12478"/>
        <function-ref name="fired" scoped="" ref="0x40e13d20"/>
        <function-ref name="startAt" scoped="" ref="0x40e12138"/>
        <function-ref name="isRunning" scoped="" ref="0x40e13f20"/>
        <function-ref name="getAlarm" scoped="" ref="0x40e12678"/>
        <function-ref name="start" scoped="" ref="0x40e13880"/>
        <function-ref name="stop" scoped="" ref="0x40e13b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x405b14d8" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x405b14d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x405b16b0"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x405b1790"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x405b1870"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x405b1950"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x405b1a30"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x405b1b10"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x405b1bf0"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x405b1cd0"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x405b1db0"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x405b1e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x405ac5a0" loc="38:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x405ac5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x405a3d48"/>
        <function-ref name="test" scoped="" ref="0x405a3948"/>
        <function-ref name="get" scoped="" ref="0x405acbe8"/>
        <function-ref name="captured" scoped="" ref="0x405a30a8"/>
        <function-ref name="reset" scoped="" ref="0x405a3348"/>
        <function-ref name="isOn" scoped="" ref="0x405a3b48"/>
        <function-ref name="set" scoped="" ref="0x405acde8"/>
        <function-ref name="start" scoped="" ref="0x405a3548"/>
        <function-ref name="stop" scoped="" ref="0x405a3748"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x405aa100" loc="39:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x405aa100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x405a9410"/>
        <function-ref name="fired" scoped="" ref="0x405aabe8"/>
        <function-ref name="get" scoped="" ref="0x405aa748"/>
        <function-ref name="reset" scoped="" ref="0x405aade8"/>
        <function-ref name="isOn" scoped="" ref="0x405a9610"/>
        <function-ref name="set" scoped="" ref="0x405aa948"/>
        <function-ref name="start" scoped="" ref="0x405a9010"/>
        <function-ref name="stop" scoped="" ref="0x405a9210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x405a6958" loc="36:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x405a6958"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x405960d8"/>
        <function-ref name="test" scoped="" ref="0x40597cb0"/>
        <function-ref name="get" scoped="" ref="0x40597010"/>
        <function-ref name="setScale" scoped="" ref="0x405962d8"/>
        <function-ref name="getScale" scoped="" ref="0x40596578"/>
        <function-ref name="reset" scoped="" ref="0x405976b0"/>
        <function-ref name="overflow" scoped="" ref="0x405974b0"/>
        <function-ref name="isOn" scoped="" ref="0x40597eb0"/>
        <function-ref name="set" scoped="" ref="0x40597210"/>
        <function-ref name="start" scoped="" ref="0x405978b0"/>
        <function-ref name="stop" scoped="" ref="0x40597ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x405c0b40" loc="48:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x405c0b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x405c0d18"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x405c0df8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x405c0ed8"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x405c3010"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x405c30f0"/>
        <function-ref name="setControl" scoped="" ref="0x405c31d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x405cb1c8" loc="50:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x405cb1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x405cb3a0"/>
        <function-ref name="compareBusy" scoped="" ref="0x405cb480"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x405cb560"/>
        <function-ref name="countBusy" scoped="" ref="0x405cb640"/>
        <function-ref name="getAssr" scoped="" ref="0x405cb720"/>
        <function-ref name="setAssr" scoped="" ref="0x405cb800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x405c33e8" loc="49:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x405c33e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x405c26f8"/>
        <function-ref name="fired" scoped="" ref="0x405c3ed0"/>
        <function-ref name="get" scoped="" ref="0x405c3a30"/>
        <function-ref name="reset" scoped="" ref="0x405c20f8"/>
        <function-ref name="isOn" scoped="" ref="0x405c28f8"/>
        <function-ref name="set" scoped="" ref="0x405c3c30"/>
        <function-ref name="start" scoped="" ref="0x405c22f8"/>
        <function-ref name="stop" scoped="" ref="0x405c24f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x405b4010" loc="47:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x405b4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x405b2728"/>
        <function-ref name="test" scoped="" ref="0x405b2328"/>
        <function-ref name="get" scoped="" ref="0x405b4658"/>
        <function-ref name="setScale" scoped="" ref="0x405b2928"/>
        <function-ref name="getScale" scoped="" ref="0x405b2bc8"/>
        <function-ref name="reset" scoped="" ref="0x405b4cf8"/>
        <function-ref name="overflow" scoped="" ref="0x405b4af8"/>
        <function-ref name="isOn" scoped="" ref="0x405b2528"/>
        <function-ref name="set" scoped="" ref="0x405b4858"/>
        <function-ref name="start" scoped="" ref="0x405b4ef8"/>
        <function-ref name="stop" scoped="" ref="0x405b2128"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x405c8f08" loc="41:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x405c8f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x405c70f0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x405c71d0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x405c72b0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x405c7390"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x405c7470"/>
        <function-ref name="setControl" scoped="" ref="0x405c7550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x405c6e60" loc="43:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x405c6e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x405d6050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x405d61d8" loc="44:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x405d61d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x405d63b0"/>
        <function-ref name="compareBusy" scoped="" ref="0x405d6490"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x405d6570"/>
        <function-ref name="countBusy" scoped="" ref="0x405d6650"/>
        <function-ref name="getAssr" scoped="" ref="0x405d6730"/>
        <function-ref name="setAssr" scoped="" ref="0x405d6810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x405c7768" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x405c7768"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x405c6ab0"/>
        <function-ref name="fired" scoped="" ref="0x405c62b0"/>
        <function-ref name="get" scoped="" ref="0x405c7db0"/>
        <function-ref name="reset" scoped="" ref="0x405c64b0"/>
        <function-ref name="isOn" scoped="" ref="0x405c6cb0"/>
        <function-ref name="set" scoped="" ref="0x405c6010"/>
        <function-ref name="start" scoped="" ref="0x405c66b0"/>
        <function-ref name="stop" scoped="" ref="0x405c68b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x405c9188" loc="40:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x405c9188"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x405c8888"/>
        <function-ref name="test" scoped="" ref="0x405c8488"/>
        <function-ref name="get" scoped="" ref="0x405c97d0"/>
        <function-ref name="setScale" scoped="" ref="0x405c8a88"/>
        <function-ref name="getScale" scoped="" ref="0x405c8d28"/>
        <function-ref name="reset" scoped="" ref="0x405c9e70"/>
        <function-ref name="overflow" scoped="" ref="0x405c9c70"/>
        <function-ref name="isOn" scoped="" ref="0x405c8688"/>
        <function-ref name="set" scoped="" ref="0x405c99d0"/>
        <function-ref name="start" scoped="" ref="0x405c8088"/>
        <function-ref name="stop" scoped="" ref="0x405c8288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x405ff758" loc="38:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x405ff758"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x405ff930"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x405ffa10"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x405ffaf0"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x405ffbd0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x405ffcb0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x405ffd90"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x405ffe70"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x405fe010"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x405fe0f0"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x405fe1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x40609538" loc="44:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x40609538"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x40609710"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x406097f0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x406098d0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x406099b0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40609a90"/>
        <function-ref name="setControl" scoped="" ref="0x40609b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x405fceb0" loc="40:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x405fceb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4060d210"/>
        <function-ref name="fired" scoped="" ref="0x405fb9a8"/>
        <function-ref name="get" scoped="" ref="0x405fb508"/>
        <function-ref name="reset" scoped="" ref="0x405fbba8"/>
        <function-ref name="isOn" scoped="" ref="0x4060d410"/>
        <function-ref name="set" scoped="" ref="0x405fb708"/>
        <function-ref name="start" scoped="" ref="0x405fbda8"/>
        <function-ref name="stop" scoped="" ref="0x4060d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x405fe3f0" loc="39:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x405fe3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x405fcb90"/>
        <function-ref name="test" scoped="" ref="0x405fc790"/>
        <function-ref name="get" scoped="" ref="0x405fea38"/>
        <function-ref name="captured" scoped="" ref="0x405feed8"/>
        <function-ref name="reset" scoped="" ref="0x405fc190"/>
        <function-ref name="isOn" scoped="" ref="0x405fc990"/>
        <function-ref name="set" scoped="" ref="0x405fec38"/>
        <function-ref name="start" scoped="" ref="0x405fc390"/>
        <function-ref name="stop" scoped="" ref="0x405fc590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x4060d690" loc="41:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x4060d690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4060b990"/>
        <function-ref name="fired" scoped="" ref="0x4060b190"/>
        <function-ref name="get" scoped="" ref="0x4060dcd8"/>
        <function-ref name="reset" scoped="" ref="0x4060b390"/>
        <function-ref name="isOn" scoped="" ref="0x4060bb90"/>
        <function-ref name="set" scoped="" ref="0x4060ded8"/>
        <function-ref name="start" scoped="" ref="0x4060b590"/>
        <function-ref name="stop" scoped="" ref="0x4060b790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x4060be10" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x4060be10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40609128"/>
        <function-ref name="fired" scoped="" ref="0x4060a908"/>
        <function-ref name="get" scoped="" ref="0x4060a468"/>
        <function-ref name="reset" scoped="" ref="0x4060ab08"/>
        <function-ref name="isOn" scoped="" ref="0x40609328"/>
        <function-ref name="set" scoped="" ref="0x4060a668"/>
        <function-ref name="start" scoped="" ref="0x4060ad08"/>
        <function-ref name="stop" scoped="" ref="0x4060af08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40601908" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40601908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x405ff0d8"/>
        <function-ref name="test" scoped="" ref="0x40600cb0"/>
        <function-ref name="get" scoped="" ref="0x40600010"/>
        <function-ref name="setScale" scoped="" ref="0x405ff2d8"/>
        <function-ref name="getScale" scoped="" ref="0x405ff578"/>
        <function-ref name="reset" scoped="" ref="0x406006b0"/>
        <function-ref name="overflow" scoped="" ref="0x406004b0"/>
        <function-ref name="isOn" scoped="" ref="0x40600eb0"/>
        <function-ref name="set" scoped="" ref="0x40600210"/>
        <function-ref name="start" scoped="" ref="0x406008b0"/>
        <function-ref name="stop" scoped="" ref="0x40600ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4064b1d8" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4064b1d8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x40288748"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x40288748"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4064b3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x4064b5c0" loc="38:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4064b5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4064acd8"/>
        <function-ref name="test" scoped="" ref="0x4064a8d8"/>
        <function-ref name="get" scoped="" ref="0x4064bc08"/>
        <function-ref name="setScale" scoped="" ref="0x4064aed8"/>
        <function-ref name="getScale" scoped="" ref="0x40656190"/>
        <function-ref name="reset" scoped="" ref="0x4064a2d8"/>
        <function-ref name="overflow" scoped="" ref="0x4064a0d8"/>
        <function-ref name="isOn" scoped="" ref="0x4064aad8"/>
        <function-ref name="set" scoped="" ref="0x4064be08"/>
        <function-ref name="start" scoped="" ref="0x4064a4d8"/>
        <function-ref name="stop" scoped="" ref="0x4064a6d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40e08678" loc="46:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40e08678"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x402885b0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x402885b0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402cb7e0"/>
            <typename><typedef-ref name="TOne" ref="0x402e8260"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e079c8"/>
        <function-ref name="fired" scoped="" ref="0x40e07288"/>
        <function-ref name="startAt" scoped="" ref="0x40e07688"/>
        <function-ref name="isRunning" scoped="" ref="0x40e07488"/>
        <function-ref name="getAlarm" scoped="" ref="0x40e07bc8"/>
        <function-ref name="start" scoped="" ref="0x40e08dc8"/>
        <function-ref name="stop" scoped="" ref="0x40e07088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x40e05c10" loc="49:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x40e05c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40e37f18"/>
        <function-ref name="fired" scoped="" ref="0x40e37718"/>
        <function-ref name="get" scoped="" ref="0x40e37278"/>
        <function-ref name="reset" scoped="" ref="0x40e37918"/>
        <function-ref name="isOn" scoped="" ref="0x40e36130"/>
        <function-ref name="set" scoped="" ref="0x40e37478"/>
        <function-ref name="start" scoped="" ref="0x40e37b18"/>
        <function-ref name="stop" scoped="" ref="0x40e37d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x40e07e10" loc="48:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x40e07e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40e05528"/>
        <function-ref name="test" scoped="" ref="0x40e05128"/>
        <function-ref name="get" scoped="" ref="0x40e06468"/>
        <function-ref name="setScale" scoped="" ref="0x40e05728"/>
        <function-ref name="getScale" scoped="" ref="0x40e059c8"/>
        <function-ref name="reset" scoped="" ref="0x40e06b08"/>
        <function-ref name="overflow" scoped="" ref="0x40e06908"/>
        <function-ref name="isOn" scoped="" ref="0x40e05328"/>
        <function-ref name="set" scoped="" ref="0x40e06668"/>
        <function-ref name="start" scoped="" ref="0x40e06d08"/>
        <function-ref name="stop" scoped="" ref="0x40e06f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x406812e8" loc="24:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406812e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402cb7e0"/>
            <typename><typedef-ref name="T32khz" ref="0x402cb9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40031818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40681a38"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40681e38"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40681c38"/>
        <function-ref name="overflow" scoped="" ref="0x40672048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4067f958" loc="24:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4067f958"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402cb7e0"/>
            <typename><typedef-ref name="TOne" ref="0x402e8260"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4067e0d8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4067e4d8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4067e2d8"/>
        <function-ref name="overflow" scoped="" ref="0x4067e6d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40690618" loc="36:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40690618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402cb7e0"/>
            <typename><typedef-ref name="TOne" ref="0x402e8260"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40690d68"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4068f210"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4068f010"/>
        <function-ref name="overflow" scoped="" ref="0x4068f410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x4068f678" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4068f678"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40686d90"/>
        <function-ref name="test" scoped="" ref="0x40686990"/>
        <function-ref name="get" scoped="" ref="0x4068fcc0"/>
        <function-ref name="setScale" scoped="" ref="0x4069a010"/>
        <function-ref name="getScale" scoped="" ref="0x4069a2b0"/>
        <function-ref name="reset" scoped="" ref="0x40686390"/>
        <function-ref name="overflow" scoped="" ref="0x40686190"/>
        <function-ref name="isOn" scoped="" ref="0x40686b90"/>
        <function-ref name="set" scoped="" ref="0x4068fec0"/>
        <function-ref name="start" scoped="" ref="0x40686590"/>
        <function-ref name="stop" scoped="" ref="0x40686790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40698ef8" loc="52:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40698ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402cb7e0"/>
            <typename><typedef-ref name="T32khz" ref="0x402cb9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406a1680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406a1a80"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406a1880"/>
        <function-ref name="overflow" scoped="" ref="0x406a1c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40699e98" loc="51:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40699e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402cb7e0"/>
            <typename><typedef-ref name="T32khz" ref="0x402cb9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40031818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40698600"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40698a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40698800"/>
        <function-ref name="overflow" scoped="" ref="0x40698c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40e11848" loc="50:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40e11848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402cb7e0"/>
            <typename><typedef-ref name="T32khz" ref="0x402cb9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40031818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e10bf0"/>
        <function-ref name="fired" scoped="" ref="0x40e104b0"/>
        <function-ref name="startAt" scoped="" ref="0x40e108b0"/>
        <function-ref name="isRunning" scoped="" ref="0x40e106b0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40e10df0"/>
        <function-ref name="start" scoped="" ref="0x40e10010"/>
        <function-ref name="stop" scoped="" ref="0x40e102b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x40e0d150" loc="62:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x40e0d150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402cb7e0"/>
            <typename><typedef-ref name="TOne" ref="0x402e8260"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e0c550"/>
        <function-ref name="fired" scoped="" ref="0x40e0dd40"/>
        <function-ref name="startAt" scoped="" ref="0x40e0c210"/>
        <function-ref name="isRunning" scoped="" ref="0x40e0c010"/>
        <function-ref name="getAlarm" scoped="" ref="0x40e0c750"/>
        <function-ref name="start" scoped="" ref="0x40e0d8a0"/>
        <function-ref name="stop" scoped="" ref="0x40e0db40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40e0e0e8" loc="57:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40e0e0e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402cb7e0"/>
            <typename><typedef-ref name="T32khz" ref="0x402cb9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40031818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e0e838"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40e0ec38"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40e0ea38"/>
        <function-ref name="overflow" scoped="" ref="0x40e0ee38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x406c3be0" loc="18:/opt/tinyos2/tinyos-2.x-src/tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x406c3be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406c3db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x406becb8" loc="68:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x406becb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406bee90"/>
        <function-ref name="isInput" scoped="" ref="0x406bd010"/>
        <function-ref name="toggle" scoped="" ref="0x406bd0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x406bd1d0"/>
        <function-ref name="get" scoped="" ref="0x406bd2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406bd390"/>
        <function-ref name="set" scoped="" ref="0x406bd470"/>
        <function-ref name="clr" scoped="" ref="0x406bd550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x406bd6c8" loc="69:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x406bd6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406bd8a0"/>
        <function-ref name="isInput" scoped="" ref="0x406bd980"/>
        <function-ref name="toggle" scoped="" ref="0x406bda60"/>
        <function-ref name="isOutput" scoped="" ref="0x406bdb40"/>
        <function-ref name="get" scoped="" ref="0x406bdc20"/>
        <function-ref name="makeOutput" scoped="" ref="0x406bdd00"/>
        <function-ref name="set" scoped="" ref="0x406bdde0"/>
        <function-ref name="clr" scoped="" ref="0x406bdec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x406d2068" loc="70:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x406d2068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406d2240"/>
        <function-ref name="isInput" scoped="" ref="0x406d2320"/>
        <function-ref name="toggle" scoped="" ref="0x406d2400"/>
        <function-ref name="isOutput" scoped="" ref="0x406d24e0"/>
        <function-ref name="get" scoped="" ref="0x406d25c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406d26a0"/>
        <function-ref name="set" scoped="" ref="0x406d2780"/>
        <function-ref name="clr" scoped="" ref="0x406d2860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x406be348" loc="67:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x406be348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406be520"/>
        <function-ref name="isInput" scoped="" ref="0x406be600"/>
        <function-ref name="toggle" scoped="" ref="0x406be6e0"/>
        <function-ref name="isOutput" scoped="" ref="0x406be7c0"/>
        <function-ref name="get" scoped="" ref="0x406be8a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406be980"/>
        <function-ref name="set" scoped="" ref="0x406bea60"/>
        <function-ref name="clr" scoped="" ref="0x406beb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x406d1428" loc="72:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x406d1428"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406d1600"/>
        <function-ref name="isInput" scoped="" ref="0x406d16e0"/>
        <function-ref name="toggle" scoped="" ref="0x406d17c0"/>
        <function-ref name="isOutput" scoped="" ref="0x406d18a0"/>
        <function-ref name="get" scoped="" ref="0x406d1980"/>
        <function-ref name="makeOutput" scoped="" ref="0x406d1a60"/>
        <function-ref name="set" scoped="" ref="0x406d1b40"/>
        <function-ref name="clr" scoped="" ref="0x406d1c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x406bf960" loc="66:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x406bf960"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406bfb38"/>
        <function-ref name="isInput" scoped="" ref="0x406bfc18"/>
        <function-ref name="toggle" scoped="" ref="0x406bfcf8"/>
        <function-ref name="isOutput" scoped="" ref="0x406bfdd8"/>
        <function-ref name="get" scoped="" ref="0x406bfeb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x406be010"/>
        <function-ref name="set" scoped="" ref="0x406be0f0"/>
        <function-ref name="clr" scoped="" ref="0x406be1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x406d29d8" loc="71:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x406d29d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406d2bb0"/>
        <function-ref name="isInput" scoped="" ref="0x406d2c90"/>
        <function-ref name="toggle" scoped="" ref="0x406d2d70"/>
        <function-ref name="isOutput" scoped="" ref="0x406d2e50"/>
        <function-ref name="get" scoped="" ref="0x406d1010"/>
        <function-ref name="makeOutput" scoped="" ref="0x406d10f0"/>
        <function-ref name="set" scoped="" ref="0x406d11d0"/>
        <function-ref name="clr" scoped="" ref="0x406d12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x406ddb90" loc="39:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x406ddb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x406ddd68"/>
        <function-ref name="disable" scoped="" ref="0x406dde48"/>
        <function-ref name="captured" scoped="" ref="0x406ddf28"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x406ca018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x406ca1b8" loc="40:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x406ca1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x406ca390"/>
        <function-ref name="disable" scoped="" ref="0x406ca470"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x406ca550"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x406ca630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x406ca7d0" loc="41:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x406ca7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x406ca9a8"/>
        <function-ref name="disable" scoped="" ref="0x406caa88"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x406cab68"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x406cac48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x406dc5b0" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x406dc5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x406dc788"/>
        <function-ref name="disable" scoped="" ref="0x406dc868"/>
        <function-ref name="captured" scoped="" ref="0x406dc948"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x406dca28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0x406dcc38" loc="36:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0x406dcc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x406e8410"/>
        <function-ref name="test" scoped="" ref="0x406e8010"/>
        <function-ref name="get" scoped="" ref="0x406db298"/>
        <function-ref name="captured" scoped="" ref="0x406db738"/>
        <function-ref name="reset" scoped="" ref="0x406db9d8"/>
        <function-ref name="isOn" scoped="" ref="0x406e8210"/>
        <function-ref name="set" scoped="" ref="0x406db498"/>
        <function-ref name="start" scoped="" ref="0x406dbbd8"/>
        <function-ref name="stop" scoped="" ref="0x406dbdd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x406e6b38" loc="9:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x406e6b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406e6d10"/>
        <function-ref name="fired" scoped="" ref="0x406e6df0"/>
        <function-ref name="disable" scoped="" ref="0x406e6ed0"/>
        <function-ref name="edge" scoped="" ref="0x406e5010"/>
        <function-ref name="enable" scoped="" ref="0x406e50f0"/>
        <function-ref name="getValue" scoped="" ref="0x406e51d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x406e6540" loc="8:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x406e6540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x406e6718"/>
        <function-ref name="disable" scoped="" ref="0x406e67f8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x406e68d8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x406e69b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x406ecda8" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x406ecda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406eb010"/>
        <function-ref name="fired" scoped="" ref="0x406eb0f0"/>
        <function-ref name="disable" scoped="" ref="0x406eb1d0"/>
        <function-ref name="edge" scoped="" ref="0x406eb2b0"/>
        <function-ref name="enable" scoped="" ref="0x406eb390"/>
        <function-ref name="getValue" scoped="" ref="0x406eb470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x406ee5f0" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x406ee5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406ee7c8"/>
        <function-ref name="fired" scoped="" ref="0x406ee8a8"/>
        <function-ref name="disable" scoped="" ref="0x406ee988"/>
        <function-ref name="edge" scoped="" ref="0x406eea68"/>
        <function-ref name="enable" scoped="" ref="0x406eeb48"/>
        <function-ref name="getValue" scoped="" ref="0x406eec28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x406edda8" loc="40:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x406edda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406ec010"/>
        <function-ref name="fired" scoped="" ref="0x406ec0f0"/>
        <function-ref name="disable" scoped="" ref="0x406ec1d0"/>
        <function-ref name="edge" scoped="" ref="0x406ec2b0"/>
        <function-ref name="enable" scoped="" ref="0x406ec390"/>
        <function-ref name="getValue" scoped="" ref="0x406ec470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x406eb5f0" loc="43:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x406eb5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406eb7c8"/>
        <function-ref name="fired" scoped="" ref="0x406eb8a8"/>
        <function-ref name="disable" scoped="" ref="0x406eb988"/>
        <function-ref name="edge" scoped="" ref="0x406eba68"/>
        <function-ref name="enable" scoped="" ref="0x406ebb48"/>
        <function-ref name="getValue" scoped="" ref="0x406ebc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x406eeda8" loc="38:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x406eeda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406ed010"/>
        <function-ref name="fired" scoped="" ref="0x406ed0f0"/>
        <function-ref name="disable" scoped="" ref="0x406ed1d0"/>
        <function-ref name="edge" scoped="" ref="0x406ed2b0"/>
        <function-ref name="enable" scoped="" ref="0x406ed390"/>
        <function-ref name="getValue" scoped="" ref="0x406ed470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x406ec5f0" loc="41:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x406ec5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406ec7c8"/>
        <function-ref name="fired" scoped="" ref="0x406ec8a8"/>
        <function-ref name="disable" scoped="" ref="0x406ec988"/>
        <function-ref name="edge" scoped="" ref="0x406eca68"/>
        <function-ref name="enable" scoped="" ref="0x406ecb48"/>
        <function-ref name="getValue" scoped="" ref="0x406ecc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x406efdb0" loc="36:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x406efdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406ee010"/>
        <function-ref name="fired" scoped="" ref="0x406ee0f0"/>
        <function-ref name="disable" scoped="" ref="0x406ee1d0"/>
        <function-ref name="edge" scoped="" ref="0x406ee2b0"/>
        <function-ref name="enable" scoped="" ref="0x406ee390"/>
        <function-ref name="getValue" scoped="" ref="0x406ee470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x406ed5f0" loc="39:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x406ed5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406ed7c8"/>
        <function-ref name="fired" scoped="" ref="0x406ed8a8"/>
        <function-ref name="disable" scoped="" ref="0x406ed988"/>
        <function-ref name="edge" scoped="" ref="0x406eda68"/>
        <function-ref name="enable" scoped="" ref="0x406edb48"/>
        <function-ref name="getValue" scoped="" ref="0x406edc28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x406fc700" loc="40:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x406fc700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x406fc8d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x406f9538" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x406f9538"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x406f9710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x406fc010" loc="38:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x406fc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x406fc1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x406fca78" loc="41:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x406fca78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x406fcc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x406f98b0" loc="36:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x406f98b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x406f9a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x406fc388" loc="39:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x406fc388"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x406fc560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x406f91c0" loc="34:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x406f91c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x406f9398"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x406f9c28" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x406f9c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x406f9e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x406fec48" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x406fec48"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406fee20"/>
        <function-ref name="fired" scoped="" ref="0x406fef00"/>
        <function-ref name="disable" scoped="" ref="0x40702010"/>
        <function-ref name="edge" scoped="" ref="0x407020f0"/>
        <function-ref name="enable" scoped="" ref="0x407021d0"/>
        <function-ref name="getValue" scoped="" ref="0x407022b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40702430" loc="36:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40702430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40702608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40712bc0" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40712bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40712d98"/>
        <function-ref name="fired" scoped="" ref="0x40712e78"/>
        <function-ref name="disable" scoped="" ref="0x40711010"/>
        <function-ref name="edge" scoped="" ref="0x407110f0"/>
        <function-ref name="enable" scoped="" ref="0x407111d0"/>
        <function-ref name="getValue" scoped="" ref="0x407112b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40711430" loc="36:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40711430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40711608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x4070fbc0" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x4070fbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4070fd98"/>
        <function-ref name="fired" scoped="" ref="0x4070fe78"/>
        <function-ref name="disable" scoped="" ref="0x4070e010"/>
        <function-ref name="edge" scoped="" ref="0x4070e0f0"/>
        <function-ref name="enable" scoped="" ref="0x4070e1d0"/>
        <function-ref name="getValue" scoped="" ref="0x4070e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x4070e430" loc="36:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x4070e430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4070e608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x4070dbc0" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x4070dbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4070dd98"/>
        <function-ref name="fired" scoped="" ref="0x4070de78"/>
        <function-ref name="disable" scoped="" ref="0x40724010"/>
        <function-ref name="edge" scoped="" ref="0x407240f0"/>
        <function-ref name="enable" scoped="" ref="0x407241d0"/>
        <function-ref name="getValue" scoped="" ref="0x407242b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40724430" loc="36:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40724430"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40724608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40723ca8" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40723ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40723e80"/>
        <function-ref name="fired" scoped="" ref="0x40722010"/>
        <function-ref name="disable" scoped="" ref="0x407220f0"/>
        <function-ref name="edge" scoped="" ref="0x407221d0"/>
        <function-ref name="enable" scoped="" ref="0x407222b0"/>
        <function-ref name="getValue" scoped="" ref="0x40722390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40722510" loc="36:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40722510"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407226e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40721d98" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40721d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40720010"/>
        <function-ref name="fired" scoped="" ref="0x407200f0"/>
        <function-ref name="disable" scoped="" ref="0x407201d0"/>
        <function-ref name="edge" scoped="" ref="0x407202b0"/>
        <function-ref name="enable" scoped="" ref="0x40720390"/>
        <function-ref name="getValue" scoped="" ref="0x40720470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x407205f0" loc="36:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x407205f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407207c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x4071fe98" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x4071fe98"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4071d0c0"/>
        <function-ref name="fired" scoped="" ref="0x4071d1a0"/>
        <function-ref name="disable" scoped="" ref="0x4071d280"/>
        <function-ref name="edge" scoped="" ref="0x4071d360"/>
        <function-ref name="enable" scoped="" ref="0x4071d440"/>
        <function-ref name="getValue" scoped="" ref="0x4071d520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x4071d6a0" loc="36:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x4071d6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4071d878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x4071cf28" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x4071cf28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4071b110"/>
        <function-ref name="fired" scoped="" ref="0x4071b1f0"/>
        <function-ref name="disable" scoped="" ref="0x4071b2d0"/>
        <function-ref name="edge" scoped="" ref="0x4071b3b0"/>
        <function-ref name="enable" scoped="" ref="0x4071b490"/>
        <function-ref name="getValue" scoped="" ref="0x4071b570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x4071b6f0" loc="36:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x4071b6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4071b8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0x4072dde0" loc="51:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0x4072dde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4072c010"/>
        <function-ref name="isInput" scoped="" ref="0x4072c0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4072c1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4072c2b0"/>
        <function-ref name="get" scoped="" ref="0x4072c390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4072c470"/>
        <function-ref name="set" scoped="" ref="0x4072c550"/>
        <function-ref name="clr" scoped="" ref="0x4072c630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x4072d7b0" loc="47:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x4072d7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4072d988"/>
        <function-ref name="disable" scoped="" ref="0x4072da68"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x4072db48"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x4072dc28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0x4072b360" loc="69:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0x4072b360"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4072b538"/>
        <function-ref name="runTask" scoped="" ref="0x4072b618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x4085d7a0" loc="64:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x4085d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4085d978"/>
        <function-ref name="write" scoped="" ref="0x4085da58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x4085eae0" loc="61:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x4085eae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4085ecb8"/>
        <function-ref name="write" scoped="" ref="0x4085ed98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40860010" loc="51:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40860010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x408601e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x4085ccd8" loc="71:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x4085ccd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4085ceb0"/>
        <function-ref name="write" scoped="" ref="0x4085b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x4085d368" loc="63:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x4085d368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4085d540"/>
        <function-ref name="write" scoped="" ref="0x4085d620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x4085dbd8" loc="65:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x4085dbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4085ddb0"/>
        <function-ref name="write" scoped="" ref="0x4085de90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x4085e270" loc="59:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x4085e270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4085e448"/>
        <function-ref name="write" scoped="" ref="0x4085e528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x408625d0" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x408625d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x408627a8"/>
        <function-ref name="abortRelease" scoped="" ref="0x40862888"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40862968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40862e40" loc="46:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40862e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40861050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40860a18" loc="55:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40860a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40860bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x408606c0" loc="53:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x408606c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40860898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x4085ef18" loc="62:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x4085ef18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4085d108"/>
        <function-ref name="write" scoped="" ref="0x4085d1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40860368" loc="52:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40860368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40860540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x4085c8a0" loc="70:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x4085c8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4085ca78"/>
        <function-ref name="write" scoped="" ref="0x4085cb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x4085b190" loc="74:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x4085b190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x4085b468"/>
        <function-ref name="writeDone" scoped="" ref="0x4085b548"/>
        <function-ref name="write" scoped="" ref="0x4085b628"/>
        <function-ref name="beginRead" scoped="" ref="0x4085b708"/>
        <function-ref name="readDone" scoped="" ref="0x4085b7e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x408611d0" loc="47:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x408611d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x408613a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x4085e6a8" loc="60:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x4085e6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4085e880"/>
        <function-ref name="write" scoped="" ref="0x4085e960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40860d70" loc="58:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40860d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4085e010"/>
        <function-ref name="write" scoped="" ref="0x4085e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40861528" loc="48:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40861528"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40861700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40863f08" loc="41:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40863f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408620f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408621d0"/>
        <function-ref name="request" scoped="" ref="0x408622b0"/>
        <function-ref name="granted" scoped="" ref="0x40862390"/>
        <function-ref name="isOwner" scoped="" ref="0x40862470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x4085c468" loc="69:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x4085c468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4085c640"/>
        <function-ref name="write" scoped="" ref="0x4085c720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x4085c030" loc="68:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x4085c030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4085c208"/>
        <function-ref name="write" scoped="" ref="0x4085c2e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40862ae8" loc="45:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40862ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40862cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40861bd8" loc="50:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40861bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40861db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40861880" loc="49:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40861880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40861a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x4085b968" loc="75:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x4085b968"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x4085bb40"/>
        <function-ref name="writeDone" scoped="" ref="0x4085bc20"/>
        <function-ref name="write" scoped="" ref="0x4085bd00"/>
        <function-ref name="beginRead" scoped="" ref="0x4085bde0"/>
        <function-ref name="readDone" scoped="" ref="0x4085bec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x4073f518" loc="41:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x4073f518"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x4073f6f0"/>
        <function-ref name="writeDone" scoped="" ref="0x4073f7d0"/>
        <function-ref name="write" scoped="" ref="0x4073f8b0"/>
        <function-ref name="beginRead" scoped="" ref="0x4073f990"/>
        <function-ref name="readDone" scoped="" ref="0x4073fa70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40740d28" loc="40:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40740d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40740f00"/>
        <function-ref name="abortRelease" scoped="" ref="0x4073f010"/>
        <function-ref name="attemptRelease" scoped="" ref="0x4073f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x4073fea0" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x4073fea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4073e0c0"/>
        <function-ref name="write" scoped="" ref="0x4073e1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x4073e5c8" loc="43:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x4073e5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4073e7a0"/>
        <function-ref name="write" scoped="" ref="0x4073e880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40740660" loc="39:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40740660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40740838"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40740918"/>
        <function-ref name="request" scoped="" ref="0x407409f8"/>
        <function-ref name="granted" scoped="" ref="0x40740ad8"/>
        <function-ref name="isOwner" scoped="" ref="0x40740bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x4073eca8" loc="44:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x4073eca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4073ee80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x4074d010" loc="53:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x4074d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4074d1e8"/>
        <function-ref name="sendDone" scoped="" ref="0x4074d2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x40750100" loc="44:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x40750100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x407502d8"/>
        <function-ref name="writeDone" scoped="" ref="0x407503b8"/>
        <function-ref name="write" scoped="" ref="0x40750498"/>
        <function-ref name="beginRead" scoped="" ref="0x40750578"/>
        <function-ref name="readDone" scoped="" ref="0x40750658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40752010" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40752010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x407521e8"/>
        <function-ref name="abortRelease" scoped="" ref="0x407522c8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x407523a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x4074b580" loc="52:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x4074b580"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x4074b758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x4074d440" loc="54:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WorkingState" scoped="" ref="0x4074d440"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x4074d618"/>
        <function-ref name="toIdle" scoped="" ref="0x4074d6f8"/>
        <function-ref name="isState" scoped="" ref="0x4074d7d8"/>
        <function-ref name="isIdle" scoped="" ref="0x4074d8b8"/>
        <function-ref name="requestState" scoped="" ref="0x4074d998"/>
        <function-ref name="forceState" scoped="" ref="0x4074da78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x4074fbb0" loc="51:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x4074fbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4074fd88"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4074fe68"/>
        <function-ref name="request" scoped="" ref="0x4074e010"/>
        <function-ref name="granted" scoped="" ref="0x4074e0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x4074e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x40750a68" loc="45:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x40750a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40750c40"/>
        <function-ref name="write" scoped="" ref="0x40750d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x4074f158" loc="46:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x4074f158"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4074f330"/>
        <function-ref name="write" scoped="" ref="0x4074f410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4074dbc0" loc="55:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4074dbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4074dd98"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4074de78"/>
        <function-ref name="led1On" scoped="" ref="0x4074c010"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4074c0f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4074c1d0"/>
        <function-ref name="get" scoped="" ref="0x4074c2b0"/>
        <function-ref name="led1Off" scoped="" ref="0x4074c390"/>
        <function-ref name="led2Off" scoped="" ref="0x4074c710"/>
        <function-ref name="set" scoped="" ref="0x4074c470"/>
        <function-ref name="led0On" scoped="" ref="0x4074c550"/>
        <function-ref name="led2On" scoped="" ref="0x4074c630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40752788" loc="43:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40752788"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40752960"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40752a40"/>
        <function-ref name="request" scoped="" ref="0x40752b20"/>
        <function-ref name="granted" scoped="" ref="0x40752c00"/>
        <function-ref name="isOwner" scoped="" ref="0x40752ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x4075e4a0" loc="86:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grant" scoped="" ref="0x4075e4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4075e678"/>
        <function-ref name="runTask" scoped="" ref="0x4075e758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x4074f818" loc="47:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x4074f818"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4074f9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x4077abc0" loc="67:/opt/tinyos2/tinyos-2.x-src/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x4077abc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x4077ad98"/>
        <function-ref name="toIdle" scoped="" ref="0x4077ae78"/>
        <function-ref name="isState" scoped="" ref="0x40779010"/>
        <function-ref name="isIdle" scoped="" ref="0x407790f0"/>
        <function-ref name="requestState" scoped="" ref="0x407791d0"/>
        <function-ref name="forceState" scoped="" ref="0x407792b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x4078c558" loc="66:/opt/tinyos2/tinyos-2.x-src/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x4078c558"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x4078c730"/>
        <function-ref name="toIdle" scoped="" ref="0x4078c810"/>
        <function-ref name="isState" scoped="" ref="0x4078c8f0"/>
        <function-ref name="isIdle" scoped="" ref="0x4078c9d0"/>
        <function-ref name="requestState" scoped="" ref="0x4078cab0"/>
        <function-ref name="forceState" scoped="" ref="0x4078cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x407883b8" loc="66:/opt/tinyos2/tinyos-2.x-src/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x407883b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40788590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40788968" loc="67:/opt/tinyos2/tinyos-2.x-src/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40788968"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40788b40"/>
        <function-ref name="toIdle" scoped="" ref="0x40788c20"/>
        <function-ref name="isState" scoped="" ref="0x40788d00"/>
        <function-ref name="isIdle" scoped="" ref="0x40788de0"/>
        <function-ref name="requestState" scoped="" ref="0x40788ec0"/>
        <function-ref name="forceState" scoped="" ref="0x40787010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x4078e270" loc="43:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x4078e270"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4078e448"/>
        <function-ref name="sendDone" scoped="" ref="0x4078e528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x4078ff28" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x4078ff28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x4078e110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4078f538" loc="39:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4078f538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4078f710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4078f870" loc="40:/opt/tinyos2/tinyos-2.x-src/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4078f870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4078fa48"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4078fb28"/>
        <function-ref name="request" scoped="" ref="0x4078fc08"/>
        <function-ref name="granted" scoped="" ref="0x4078fce8"/>
        <function-ref name="isOwner" scoped="" ref="0x4078fdc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x407ab180" loc="68:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x407ab180"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407ab358"/>
        <function-ref name="sendDone" scoped="" ref="0x407ab438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x40794dc0" loc="67:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40794dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x407ab010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40794a80" loc="66:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40794a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40794c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x407ab838" loc="69:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x407ab838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x407aba10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x407abaf0"/>
        <function-ref name="request" scoped="" ref="0x407abbd0"/>
        <function-ref name="granted" scoped="" ref="0x407abcb0"/>
        <function-ref name="isOwner" scoped="" ref="0x407abd90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x407bc010" loc="207:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x407bc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x407bc1e8"/>
        <function-ref name="runTask" scoped="" ref="0x407bc2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x407a79d0" loc="79:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x407a79d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407a7ba8"/>
        <function-ref name="sendDone" scoped="" ref="0x407a7c88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x407a4500" loc="84:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x407a4500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x407a46d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x407a47b8"/>
        <function-ref name="request" scoped="" ref="0x407a4898"/>
        <function-ref name="granted" scoped="" ref="0x407a4978"/>
        <function-ref name="isOwner" scoped="" ref="0x407a4a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x407a76a8" loc="78:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x407a76a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x407a7880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x407a7388" loc="77:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x407a7388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407a7560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x407b1998" loc="83:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x407b1998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x407b1b70"/>
        <function-ref name="sleep" scoped="" ref="0x407a4010"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x407b1d30"/>
        <function-ref name="dataReady" scoped="" ref="0x407a40f0"/>
        <function-ref name="initMaster" scoped="" ref="0x407b1ef0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x407a5010"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x407a50f0"/>
        <function-ref name="read" scoped="" ref="0x407a51d0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x407a52b0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x407a5390"/>
        <function-ref name="setClock" scoped="" ref="0x407a5470"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x407a5550"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x407a5630"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x407a5790"/>
        <function-ref name="setDataOrder" scoped="" ref="0x407a5870"/>
        <function-ref name="write" scoped="" ref="0x407a5950"/>
        <function-ref name="enableSpi" scoped="" ref="0x407a5a30"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x407a5b10"/>
        <function-ref name="getClockPhase" scoped="" ref="0x407a5bf0"/>
        <function-ref name="getClock" scoped="" ref="0x407a5cd0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x407a5db0"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x407b1c50"/>
        <function-ref name="setClockPhase" scoped="" ref="0x407b1e10"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x407a5e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x407a6100" loc="80:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x407a6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x407a62d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x407a63b8"/>
        <function-ref name="request" scoped="" ref="0x407a6498"/>
        <function-ref name="granted" scoped="" ref="0x407a6578"/>
        <function-ref name="isOwner" scoped="" ref="0x407a6658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x407ac7a8" loc="86:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x407ac7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x407ac980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x407ac3a0" loc="85:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x407ac3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x407ac578"/>
        <function-ref name="userId" scoped="" ref="0x407ac658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x407da3a8" loc="59:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x407da3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x407da580"/>
        <function-ref name="sleep" scoped="" ref="0x407d9958"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x407da740"/>
        <function-ref name="dataReady" scoped="" ref="0x407d9a38"/>
        <function-ref name="initMaster" scoped="" ref="0x407da900"/>
        <function-ref name="setMasterBit" scoped="" ref="0x407da9e0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x407daac0"/>
        <function-ref name="read" scoped="" ref="0x407daba0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x407dac80"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x407dad60"/>
        <function-ref name="setClock" scoped="" ref="0x407dae40"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x407daf20"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x407d9018"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x407d9178"/>
        <function-ref name="setDataOrder" scoped="" ref="0x407d9258"/>
        <function-ref name="write" scoped="" ref="0x407d9338"/>
        <function-ref name="enableSpi" scoped="" ref="0x407d9418"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x407d94f8"/>
        <function-ref name="getClockPhase" scoped="" ref="0x407d95d8"/>
        <function-ref name="getClock" scoped="" ref="0x407d96b8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x407d9798"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x407da660"/>
        <function-ref name="setClockPhase" scoped="" ref="0x407da820"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x407d9878"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x407eb6c8" loc="64:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x407eb6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407eb8a0"/>
        <function-ref name="isInput" scoped="" ref="0x407eb980"/>
        <function-ref name="toggle" scoped="" ref="0x407eba60"/>
        <function-ref name="isOutput" scoped="" ref="0x407ebb40"/>
        <function-ref name="get" scoped="" ref="0x407ebc20"/>
        <function-ref name="makeOutput" scoped="" ref="0x407ebd00"/>
        <function-ref name="set" scoped="" ref="0x407ebde0"/>
        <function-ref name="clr" scoped="" ref="0x407ebec0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x407ec348" loc="62:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x407ec348"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407ec520"/>
        <function-ref name="isInput" scoped="" ref="0x407ec600"/>
        <function-ref name="toggle" scoped="" ref="0x407ec6e0"/>
        <function-ref name="isOutput" scoped="" ref="0x407ec7c0"/>
        <function-ref name="get" scoped="" ref="0x407ec8a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407ec980"/>
        <function-ref name="set" scoped="" ref="0x407eca60"/>
        <function-ref name="clr" scoped="" ref="0x407ecb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x407ea980" loc="61:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x407ea980"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407eab58"/>
        <function-ref name="isInput" scoped="" ref="0x407eac38"/>
        <function-ref name="toggle" scoped="" ref="0x407ead18"/>
        <function-ref name="isOutput" scoped="" ref="0x407eadf8"/>
        <function-ref name="get" scoped="" ref="0x407eaed8"/>
        <function-ref name="makeOutput" scoped="" ref="0x407ec010"/>
        <function-ref name="set" scoped="" ref="0x407ec0f0"/>
        <function-ref name="clr" scoped="" ref="0x407ec1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x407ea520" loc="58:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x407ea520"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x407ea6f8"/>
        <function-ref name="stop" scoped="" ref="0x407ea7d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x407e9068" loc="65:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x407e9068"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x407e9240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x407d53d8" loc="57:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x407d53d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x407d55b0"/>
        <function-ref name="sleep" scoped="" ref="0x407d4a30"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x407d5770"/>
        <function-ref name="dataReady" scoped="" ref="0x407d4b10"/>
        <function-ref name="initMaster" scoped="" ref="0x407d5930"/>
        <function-ref name="setMasterBit" scoped="" ref="0x407d5a10"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x407d5af0"/>
        <function-ref name="read" scoped="" ref="0x407d5bd0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x407d5cb0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x407d5d90"/>
        <function-ref name="setClock" scoped="" ref="0x407d5e70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x407d4010"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x407d40f0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x407d4250"/>
        <function-ref name="setDataOrder" scoped="" ref="0x407d4330"/>
        <function-ref name="write" scoped="" ref="0x407d4410"/>
        <function-ref name="enableSpi" scoped="" ref="0x407d44f0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x407d45d0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x407d46b0"/>
        <function-ref name="getClock" scoped="" ref="0x407d4790"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x407d4870"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x407d5690"/>
        <function-ref name="setClockPhase" scoped="" ref="0x407d5850"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x407d4950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x407eccb8" loc="63:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x407eccb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407ece90"/>
        <function-ref name="isInput" scoped="" ref="0x407eb010"/>
        <function-ref name="toggle" scoped="" ref="0x407eb0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x407eb1d0"/>
        <function-ref name="get" scoped="" ref="0x407eb2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407eb390"/>
        <function-ref name="set" scoped="" ref="0x407eb470"/>
        <function-ref name="clr" scoped="" ref="0x407eb550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40813cb0" loc="76:/opt/tinyos2/tinyos-2.x-src/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40813cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40813e98"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40834010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40834600" loc="79:/opt/tinyos2/tinyos-2.x-src/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40834600"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x408347e8"/>
        <function-ref name="configure" scoped="" ref="0x408348c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40813570" loc="75:/opt/tinyos2/tinyos-2.x-src/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40813570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40813758"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40813838"/>
        <function-ref name="request" scoped="" ref="0x40813918"/>
        <function-ref name="granted" scoped="" ref="0x408139f8"/>
        <function-ref name="isOwner" scoped="" ref="0x40813ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40834150" loc="77:/opt/tinyos2/tinyos-2.x-src/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40834150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40834328"/>
        <function-ref name="userId" scoped="" ref="0x40834408"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40e755c8" loc="34:/opt/tinyos2/tinyos-2.x-src/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40e755c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e757a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x40e75900" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x40e75900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40e75ad8"/>
        <function-ref name="isEmpty" scoped="" ref="0x40e75bb8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40e75c98"/>
        <function-ref name="dequeue" scoped="" ref="0x40e75d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40e72068" loc="52:/opt/tinyos2/tinyos-2.x-src/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40e72068"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40e72250"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40e72330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40e72930" loc="56:/opt/tinyos2/tinyos-2.x-src/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40e72930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40e72b18"/>
        <function-ref name="configure" scoped="" ref="0x40e72bf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x40e72d58" loc="57:/opt/tinyos2/tinyos-2.x-src/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40e72d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40e71010"/>
        <function-ref name="isEmpty" scoped="" ref="0x40e710f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40e711d0"/>
        <function-ref name="dequeue" scoped="" ref="0x40e712b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40e74908" loc="51:/opt/tinyos2/tinyos-2.x-src/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40e74908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40e74af0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40e74bd0"/>
        <function-ref name="request" scoped="" ref="0x40e74cb0"/>
        <function-ref name="granted" scoped="" ref="0x40e74d90"/>
        <function-ref name="isOwner" scoped="" ref="0x40e74e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40e72470" loc="53:/opt/tinyos2/tinyos-2.x-src/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40e72470"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40e72648"/>
        <function-ref name="userId" scoped="" ref="0x40e72728"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x40e71430" loc="69:/opt/tinyos2/tinyos-2.x-src/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x40e71430"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e71608"/>
        <function-ref name="runTask" scoped="" ref="0x40e716e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x4084cd20" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4084cd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4084cef8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40849010"/>
        <function-ref name="led1On" scoped="" ref="0x408490f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x408491d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x408492b0"/>
        <function-ref name="get" scoped="" ref="0x40849390"/>
        <function-ref name="led1Off" scoped="" ref="0x40849470"/>
        <function-ref name="led2Off" scoped="" ref="0x408497f0"/>
        <function-ref name="set" scoped="" ref="0x40849550"/>
        <function-ref name="led0On" scoped="" ref="0x40849630"/>
        <function-ref name="led2On" scoped="" ref="0x40849710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x408457e8" loc="39:/opt/tinyos2/tinyos-2.x-src/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x408457e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408459c0"/>
        <function-ref name="isInput" scoped="" ref="0x40845aa0"/>
        <function-ref name="toggle" scoped="" ref="0x40845b80"/>
        <function-ref name="isOutput" scoped="" ref="0x40845c60"/>
        <function-ref name="get" scoped="" ref="0x40845d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x40845e20"/>
        <function-ref name="set" scoped="" ref="0x40845f00"/>
        <function-ref name="clr" scoped="" ref="0x40844010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40846810" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40846810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408469e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x40844188" loc="40:/opt/tinyos2/tinyos-2.x-src/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40844188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40844360"/>
        <function-ref name="isInput" scoped="" ref="0x40844440"/>
        <function-ref name="toggle" scoped="" ref="0x40844520"/>
        <function-ref name="isOutput" scoped="" ref="0x40844600"/>
        <function-ref name="get" scoped="" ref="0x408446e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x408447c0"/>
        <function-ref name="set" scoped="" ref="0x408448a0"/>
        <function-ref name="clr" scoped="" ref="0x40844980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40846b30" loc="36:/opt/tinyos2/tinyos-2.x-src/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40846b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40846d08"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40846de8"/>
        <function-ref name="led1On" scoped="" ref="0x40846ec8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40845010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x408450f0"/>
        <function-ref name="get" scoped="" ref="0x408451d0"/>
        <function-ref name="led1Off" scoped="" ref="0x408452b0"/>
        <function-ref name="led2Off" scoped="" ref="0x40845630"/>
        <function-ref name="set" scoped="" ref="0x40845390"/>
        <function-ref name="led0On" scoped="" ref="0x40845470"/>
        <function-ref name="led2On" scoped="" ref="0x40845550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x40844af8" loc="41:/opt/tinyos2/tinyos-2.x-src/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x40844af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40844cd0"/>
        <function-ref name="isInput" scoped="" ref="0x40844db0"/>
        <function-ref name="toggle" scoped="" ref="0x40844e90"/>
        <function-ref name="isOutput" scoped="" ref="0x40842010"/>
        <function-ref name="get" scoped="" ref="0x408420f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x408421d0"/>
        <function-ref name="set" scoped="" ref="0x408422b0"/>
        <function-ref name="clr" scoped="" ref="0x40842390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x40850920" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40850920"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40850af8"/>
        <function-ref name="isInput" scoped="" ref="0x40850bd8"/>
        <function-ref name="toggle" scoped="" ref="0x40850cb8"/>
        <function-ref name="isOutput" scoped="" ref="0x40850d98"/>
        <function-ref name="get" scoped="" ref="0x40850e78"/>
        <function-ref name="makeOutput" scoped="" ref="0x4084f010"/>
        <function-ref name="set" scoped="" ref="0x4084f0f0"/>
        <function-ref name="clr" scoped="" ref="0x4084f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x4084f368" loc="36:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x4084f368"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4084f540"/>
        <function-ref name="isInput" scoped="" ref="0x4084f620"/>
        <function-ref name="toggle" scoped="" ref="0x4084f700"/>
        <function-ref name="isOutput" scoped="" ref="0x4084f7e0"/>
        <function-ref name="get" scoped="" ref="0x4084f8c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4084f9a0"/>
        <function-ref name="set" scoped="" ref="0x4084fa80"/>
        <function-ref name="clr" scoped="" ref="0x4084fb60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x4084e6b8" loc="38:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4084e6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4084e890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x4084fcf8" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x4084fcf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4084fed0"/>
        <function-ref name="isInput" scoped="" ref="0x4084e010"/>
        <function-ref name="toggle" scoped="" ref="0x4084e0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4084e1d0"/>
        <function-ref name="get" scoped="" ref="0x4084e2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4084e390"/>
        <function-ref name="set" scoped="" ref="0x4084e470"/>
        <function-ref name="clr" scoped="" ref="0x4084e550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x4086e920" loc="64:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x4086e920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4086eaf8"/>
        <function-ref name="write" scoped="" ref="0x4086ebd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x4086fc58" loc="61:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x4086fc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4086fe30"/>
        <function-ref name="write" scoped="" ref="0x4086ff10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40870190" loc="51:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40870190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40870368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x4086df18" loc="71:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x4086df18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4086b108"/>
        <function-ref name="write" scoped="" ref="0x4086b1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x4086e4e8" loc="63:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x4086e4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4086e6c0"/>
        <function-ref name="write" scoped="" ref="0x4086e7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x4086ed58" loc="65:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x4086ed58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4086d010"/>
        <function-ref name="write" scoped="" ref="0x4086d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x4086f3e8" loc="59:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x4086f3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4086f5c0"/>
        <function-ref name="write" scoped="" ref="0x4086f6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x408736e8" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x408736e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x408738c0"/>
        <function-ref name="abortRelease" scoped="" ref="0x408739a0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40873a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40871010" loc="46:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40871010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x408711e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40870b98" loc="55:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40870b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40870d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40870840" loc="53:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40870840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40870a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x4086e0b0" loc="62:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x4086e0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4086e288"/>
        <function-ref name="write" scoped="" ref="0x4086e368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x408704e8" loc="52:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x408704e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x408706c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x4086dae0" loc="70:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x4086dae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4086dcb8"/>
        <function-ref name="write" scoped="" ref="0x4086dd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x4086b368" loc="74:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x4086b368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x4086b640"/>
        <function-ref name="writeDone" scoped="" ref="0x4086b720"/>
        <function-ref name="write" scoped="" ref="0x4086b800"/>
        <function-ref name="beginRead" scoped="" ref="0x4086b8e0"/>
        <function-ref name="readDone" scoped="" ref="0x4086b9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40871368" loc="47:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40871368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40871540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x4086f820" loc="60:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x4086f820"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4086f9f8"/>
        <function-ref name="write" scoped="" ref="0x4086fad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40870ef0" loc="58:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40870ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4086f188"/>
        <function-ref name="write" scoped="" ref="0x4086f268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x408716c0" loc="48:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x408716c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40871898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40873030" loc="41:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40873030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40873208"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408732e8"/>
        <function-ref name="request" scoped="" ref="0x408733c8"/>
        <function-ref name="granted" scoped="" ref="0x408734a8"/>
        <function-ref name="isOwner" scoped="" ref="0x40873588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x4086d6a8" loc="69:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x4086d6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4086d880"/>
        <function-ref name="write" scoped="" ref="0x4086d960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x4086d270" loc="68:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x4086d270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4086d448"/>
        <function-ref name="write" scoped="" ref="0x4086d528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40873c00" loc="45:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40873c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40873dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40871d70" loc="50:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40871d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40870010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40871a18" loc="49:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40871a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40871bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x4086bb40" loc="75:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x4086bb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x4086bd18"/>
        <function-ref name="writeDone" scoped="" ref="0x4086bdf8"/>
        <function-ref name="write" scoped="" ref="0x4086bed8"/>
        <function-ref name="beginRead" scoped="" ref="0x4086a010"/>
        <function-ref name="readDone" scoped="" ref="0x4086a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x4087f6e8" loc="64:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x4087f6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4087f8c0"/>
        <function-ref name="write" scoped="" ref="0x4087f9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40881a00" loc="61:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40881a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40881bd8"/>
        <function-ref name="write" scoped="" ref="0x40881cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40883ef0" loc="51:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40883ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x408820e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x4087ecb8" loc="71:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x4087ecb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4087ee90"/>
        <function-ref name="write" scoped="" ref="0x4087d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x4087f2b0" loc="63:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x4087f2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4087f488"/>
        <function-ref name="write" scoped="" ref="0x4087f568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x4087fb20" loc="65:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x4087fb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4087fcf8"/>
        <function-ref name="write" scoped="" ref="0x4087fdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40881190" loc="59:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40881190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40881368"/>
        <function-ref name="write" scoped="" ref="0x40881448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x408845a0" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x408845a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40884778"/>
        <function-ref name="abortRelease" scoped="" ref="0x40884858"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40884938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40884e10" loc="46:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40884e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40883010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40882910" loc="55:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40882910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40882ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x408825b8" loc="53:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x408825b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40882790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40881e38" loc="62:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40881e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4087f050"/>
        <function-ref name="write" scoped="" ref="0x4087f130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40882260" loc="52:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40882260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40882438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x4087e880" loc="70:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x4087e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4087ea58"/>
        <function-ref name="write" scoped="" ref="0x4087eb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x4087d190" loc="74:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x4087d190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x4087d468"/>
        <function-ref name="writeDone" scoped="" ref="0x4087d548"/>
        <function-ref name="write" scoped="" ref="0x4087d628"/>
        <function-ref name="beginRead" scoped="" ref="0x4087d708"/>
        <function-ref name="readDone" scoped="" ref="0x4087d7e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40883190" loc="47:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40883190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40883368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x408815c8" loc="60:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x408815c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408817a0"/>
        <function-ref name="write" scoped="" ref="0x40881880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40882c68" loc="58:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40882c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40882ec0"/>
        <function-ref name="write" scoped="" ref="0x40881010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x408834e8" loc="48:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x408834e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x408836c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40869ea0" loc="41:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40869ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408840c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408841a0"/>
        <function-ref name="request" scoped="" ref="0x40884280"/>
        <function-ref name="granted" scoped="" ref="0x40884360"/>
        <function-ref name="isOwner" scoped="" ref="0x40884440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x4087e448" loc="69:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x4087e448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4087e620"/>
        <function-ref name="write" scoped="" ref="0x4087e700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x4087e010" loc="68:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x4087e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4087e1e8"/>
        <function-ref name="write" scoped="" ref="0x4087e2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40884ab8" loc="45:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40884ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40884c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40883b98" loc="50:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40883b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40883d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40883840" loc="49:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40883840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40883a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x4087d968" loc="75:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x4087d968"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x4087db40"/>
        <function-ref name="writeDone" scoped="" ref="0x4087dc20"/>
        <function-ref name="write" scoped="" ref="0x4087dd00"/>
        <function-ref name="beginRead" scoped="" ref="0x4087dde0"/>
        <function-ref name="readDone" scoped="" ref="0x4087dec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x408785b8" loc="43:/opt/tinyos2/tinyos-2.x-src/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x408785b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40878790"/>
        <function-ref name="changed" scoped="" ref="0x40878870"/>
        <function-ref name="amGroup" scoped="" ref="0x40878950"/>
        <function-ref name="setAddress" scoped="" ref="0x40878a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x4089e7d0" loc="49:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x4089e7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x4089e9a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x40887998" loc="46:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x40887998"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x40887b70"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x40887c50"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x40887d30"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x40887e10"/>
        <function-ref name="setCca" scoped="" ref="0x40887ef0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x40886010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x4089e470" loc="48:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x4089e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x4089e648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x408872f0" loc="45:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x408872f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408874c8"/>
        <function-ref name="cancel" scoped="" ref="0x408875a8"/>
        <function-ref name="modify" scoped="" ref="0x40887688"/>
        <function-ref name="sendDone" scoped="" ref="0x40887768"/>
        <function-ref name="resend" scoped="" ref="0x40887848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40888ea8" loc="44:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40888ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x408870c0"/>
        <function-ref name="stop" scoped="" ref="0x408871a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioTimeStamping" ref="0x408a1d68" loc="47:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioTimeStamping" scoped="" ref="0x408a1d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTimeStamping"/>
      </instance>
      <interface-functions>
        <function-ref name="transmittedSFD" scoped="" ref="0x40885010"/>
        <function-ref name="receivedSFD" scoped="" ref="0x408850f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x408aaa20" loc="48:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x408aaa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x408aabf8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x408aacd8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x408aadb8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x408aae98"/>
        <function-ref name="setCca" scoped="" ref="0x408a9010"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x408a90f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x408a96f8" loc="50:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x408a96f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x408a98d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x408bf718" loc="68:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x408bf718"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x408bf8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x408a50a0" loc="56:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x408a50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x408a5278"/>
        <function-ref name="disable" scoped="" ref="0x408a5358"/>
        <function-ref name="captured" scoped="" ref="0x408a5438"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x408a5518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x408a9f20" loc="53:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0x408a9f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402cb7e0"/>
            <typename><typedef-ref name="T32khz" ref="0x402cb9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40031818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x408a6278"/>
        <function-ref name="fired" scoped="" ref="0x408a8b28"/>
        <function-ref name="startAt" scoped="" ref="0x408a8f28"/>
        <function-ref name="isRunning" scoped="" ref="0x408a8d28"/>
        <function-ref name="getAlarm" scoped="" ref="0x408a6478"/>
        <function-ref name="start" scoped="" ref="0x408a8688"/>
        <function-ref name="stop" scoped="" ref="0x408a8928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x408a6640" loc="54:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x408a6640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x408a6818"/>
        <function-ref name="getRssi" scoped="" ref="0x408a68f8"/>
        <function-ref name="getPower" scoped="" ref="0x408a69d8"/>
        <function-ref name="getLqi" scoped="" ref="0x408a6ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x408c0760" loc="64:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x408c0760"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408c0938"/>
        <function-ref name="write" scoped="" ref="0x408c0a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x408c0bb0" loc="65:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x408c0bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408c0d88"/>
        <function-ref name="write" scoped="" ref="0x408c0e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x408b91e0" loc="72:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x408b91e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408b94b8"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x408b9598"/>
        <function-ref name="sfd" scoped="" ref="0x408b9678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408aa358" loc="47:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408aa358"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408aa530"/>
        <function-ref name="cancel" scoped="" ref="0x408aa610"/>
        <function-ref name="modify" scoped="" ref="0x408aa6f0"/>
        <function-ref name="sendDone" scoped="" ref="0x408aa7d0"/>
        <function-ref name="resend" scoped="" ref="0x408aa8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x408a3b18" loc="62:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x408a3b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x408a3cf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x408a3dd0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x408a3eb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x408bfa90" loc="69:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x408bfa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x408bfc68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x408a4068" loc="58:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x408a4068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408a42c0"/>
        <function-ref name="isInput" scoped="" ref="0x408a43a0"/>
        <function-ref name="toggle" scoped="" ref="0x408a4480"/>
        <function-ref name="isOutput" scoped="" ref="0x408a4560"/>
        <function-ref name="get" scoped="" ref="0x408a4640"/>
        <function-ref name="makeOutput" scoped="" ref="0x408a4720"/>
        <function-ref name="set" scoped="" ref="0x408a4800"/>
        <function-ref name="clr" scoped="" ref="0x408a48e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408abbb0" loc="45:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408abbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408abd88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x408a6c30" loc="55:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x408a6c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x408a6e08"/>
        <function-ref name="getMetadata" scoped="" ref="0x408a6ee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x408bfe08" loc="70:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x408bfe08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408be010"/>
        <function-ref name="write" scoped="" ref="0x408be0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x408a3450" loc="61:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x408a3450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408a3628"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408a3708"/>
        <function-ref name="request" scoped="" ref="0x408a37e8"/>
        <function-ref name="granted" scoped="" ref="0x408a38c8"/>
        <function-ref name="isOwner" scoped="" ref="0x408a39a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x408a56b0" loc="57:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x408a56b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408a5888"/>
        <function-ref name="isInput" scoped="" ref="0x408a5968"/>
        <function-ref name="toggle" scoped="" ref="0x408a5a48"/>
        <function-ref name="isOutput" scoped="" ref="0x408a5b28"/>
        <function-ref name="get" scoped="" ref="0x408a5c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x408a5ce8"/>
        <function-ref name="set" scoped="" ref="0x408a5dc8"/>
        <function-ref name="clr" scoped="" ref="0x408a5ea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x408bf030" loc="66:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x408bf030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x408bf208"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x408a4a78" loc="59:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x408a4a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408a4c50"/>
        <function-ref name="isInput" scoped="" ref="0x408a4d30"/>
        <function-ref name="toggle" scoped="" ref="0x408a4e10"/>
        <function-ref name="isOutput" scoped="" ref="0x408a4ef0"/>
        <function-ref name="get" scoped="" ref="0x408a3010"/>
        <function-ref name="makeOutput" scoped="" ref="0x408a30f0"/>
        <function-ref name="set" scoped="" ref="0x408a31d0"/>
        <function-ref name="clr" scoped="" ref="0x408a32b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x408b97e0" loc="73:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x408b97e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x408b99b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x408b9a98"/>
        <function-ref name="led1On" scoped="" ref="0x408b9b78"/>
        <function-ref name="led1Toggle" scoped="" ref="0x408b9c58"/>
        <function-ref name="led2Toggle" scoped="" ref="0x408b9d38"/>
        <function-ref name="get" scoped="" ref="0x408b9e18"/>
        <function-ref name="led1Off" scoped="" ref="0x408b9ef8"/>
        <function-ref name="led2Off" scoped="" ref="0x408bd2b0"/>
        <function-ref name="set" scoped="" ref="0x408bd010"/>
        <function-ref name="led0On" scoped="" ref="0x408bd0f0"/>
        <function-ref name="led2On" scoped="" ref="0x408bd1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimeStamp" ref="0x408a9298" loc="49:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStamp" scoped="" ref="0x408a9298"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioTimeStamping"/>
      </instance>
      <interface-functions>
        <function-ref name="transmittedSFD" scoped="" ref="0x408a9470"/>
        <function-ref name="receivedSFD" scoped="" ref="0x408a9550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x408abef8" loc="46:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x408abef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x408aa0e0"/>
        <function-ref name="stop" scoped="" ref="0x408aa1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x408c0068" loc="63:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x408c0068"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x408c0240"/>
        <function-ref name="writeDone" scoped="" ref="0x408c0320"/>
        <function-ref name="write" scoped="" ref="0x408c0400"/>
        <function-ref name="beginRead" scoped="" ref="0x408c04e0"/>
        <function-ref name="readDone" scoped="" ref="0x408c05c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x408bf3a0" loc="67:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x408bf3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x408bf578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x408a9a78" loc="51:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x408a9a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x408a9c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x4090a6e8" loc="64:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x4090a6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4090a8c0"/>
        <function-ref name="write" scoped="" ref="0x4090a9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x4090ba00" loc="61:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x4090ba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4090bbd8"/>
        <function-ref name="write" scoped="" ref="0x4090bcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x408efef0" loc="51:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x408efef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x408ee0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x40908cb8" loc="71:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40908cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40908e90"/>
        <function-ref name="write" scoped="" ref="0x40907010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x4090a2b0" loc="63:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x4090a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4090a488"/>
        <function-ref name="write" scoped="" ref="0x4090a568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x4090ab20" loc="65:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x4090ab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4090acf8"/>
        <function-ref name="write" scoped="" ref="0x4090add8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x4090b190" loc="59:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x4090b190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4090b368"/>
        <function-ref name="write" scoped="" ref="0x4090b448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x408f0560" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x408f0560"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x408f0738"/>
        <function-ref name="abortRelease" scoped="" ref="0x408f0818"/>
        <function-ref name="attemptRelease" scoped="" ref="0x408f08f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x408f0dd0" loc="46:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x408f0dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x408ef010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x408ee910" loc="55:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x408ee910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x408eeae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x408ee5b8" loc="53:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x408ee5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x408ee790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x4090be38" loc="62:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x4090be38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4090a050"/>
        <function-ref name="write" scoped="" ref="0x4090a130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x408ee260" loc="52:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x408ee260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x408ee438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x40908880" loc="70:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x40908880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40908a58"/>
        <function-ref name="write" scoped="" ref="0x40908b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x40907190" loc="74:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40907190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40907468"/>
        <function-ref name="writeDone" scoped="" ref="0x40907548"/>
        <function-ref name="write" scoped="" ref="0x40907628"/>
        <function-ref name="beginRead" scoped="" ref="0x40907708"/>
        <function-ref name="readDone" scoped="" ref="0x409077e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x408ef190" loc="47:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x408ef190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x408ef368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x4090b5c8" loc="60:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x4090b5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4090b7a0"/>
        <function-ref name="write" scoped="" ref="0x4090b880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x408eec68" loc="58:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x408eec68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408eeec0"/>
        <function-ref name="write" scoped="" ref="0x4090b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x408ef4e8" loc="48:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x408ef4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x408ef6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x408f2e90" loc="41:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x408f2e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408f0080"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408f0160"/>
        <function-ref name="request" scoped="" ref="0x408f0240"/>
        <function-ref name="granted" scoped="" ref="0x408f0320"/>
        <function-ref name="isOwner" scoped="" ref="0x408f0400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x40908448" loc="69:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40908448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40908620"/>
        <function-ref name="write" scoped="" ref="0x40908700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x40908010" loc="68:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x40908010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409081e8"/>
        <function-ref name="write" scoped="" ref="0x409082c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x408f0a78" loc="45:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x408f0a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x408f0c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x408efb98" loc="50:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x408efb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x408efd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x408ef840" loc="49:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x408ef840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x408efa18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x40907968" loc="75:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40907968"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40907b40"/>
        <function-ref name="writeDone" scoped="" ref="0x40907c20"/>
        <function-ref name="write" scoped="" ref="0x40907d00"/>
        <function-ref name="beginRead" scoped="" ref="0x40907de0"/>
        <function-ref name="readDone" scoped="" ref="0x40907ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x409018e0" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x409018e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40901ab8"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x40901b98"/>
        <function-ref name="sfd" scoped="" ref="0x40901c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40901de0" loc="43:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40901de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x40900010"/>
        <function-ref name="receive" scoped="" ref="0x409000f0"/>
        <function-ref name="getPayload" scoped="" ref="0x409001d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x40900378" loc="44:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x40900378"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40900550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x409014b8" loc="41:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x409014b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40901690"/>
        <function-ref name="stop" scoped="" ref="0x40901770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x4091a7c8" loc="48:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x4091a7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4091a9a0"/>
        <function-ref name="isInput" scoped="" ref="0x4091aa80"/>
        <function-ref name="toggle" scoped="" ref="0x4091ab60"/>
        <function-ref name="isOutput" scoped="" ref="0x4091ac40"/>
        <function-ref name="get" scoped="" ref="0x4091ad20"/>
        <function-ref name="makeOutput" scoped="" ref="0x4091ae00"/>
        <function-ref name="set" scoped="" ref="0x4091aee0"/>
        <function-ref name="clr" scoped="" ref="0x40919010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x40916180" loc="58:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x40916180"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x40916358"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x40916438"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x40916518"/>
        <function-ref name="syncDone" scoped="" ref="0x409165f8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x409166d8"/>
        <function-ref name="setChannel" scoped="" ref="0x409167b8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x40916898"/>
        <function-ref name="setPanAddr" scoped="" ref="0x40916978"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x40916a58"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40916b38"/>
        <function-ref name="sync" scoped="" ref="0x40916c18"/>
        <function-ref name="getChannel" scoped="" ref="0x40916cf8"/>
        <function-ref name="getPanAddr" scoped="" ref="0x40916dd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x409103f0" loc="109:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0x409103f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x409105c8"/>
        <function-ref name="runTask" scoped="" ref="0x409106a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x409191a8" loc="49:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x409191a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40919380"/>
        <function-ref name="isInput" scoped="" ref="0x40919460"/>
        <function-ref name="toggle" scoped="" ref="0x40919540"/>
        <function-ref name="isOutput" scoped="" ref="0x40919620"/>
        <function-ref name="get" scoped="" ref="0x40919700"/>
        <function-ref name="makeOutput" scoped="" ref="0x409197e0"/>
        <function-ref name="set" scoped="" ref="0x409198c0"/>
        <function-ref name="clr" scoped="" ref="0x409199a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x40917750" loc="56:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40917750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40917928"/>
        <function-ref name="getRssi" scoped="" ref="0x40917a08"/>
        <function-ref name="getPower" scoped="" ref="0x40917ae8"/>
        <function-ref name="getLqi" scoped="" ref="0x40917bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x4091b010" loc="43:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x4091b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4091b1e8"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x4091b2c8"/>
        <function-ref name="sfd" scoped="" ref="0x4091b3a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x40917010" loc="54:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40917010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409171e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x4091bdc0" loc="47:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x4091bdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4091a010"/>
        <function-ref name="isInput" scoped="" ref="0x4091a0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4091a1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4091a2b0"/>
        <function-ref name="get" scoped="" ref="0x4091a390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4091a470"/>
        <function-ref name="set" scoped="" ref="0x4091a550"/>
        <function-ref name="clr" scoped="" ref="0x4091a630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408fd7f0" loc="41:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408fd7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408fd9c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40917d40" loc="57:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40917d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40917f18"/>
        <function-ref name="getMetadata" scoped="" ref="0x40916010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4091b510" loc="44:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4091b510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x4091b6e8"/>
        <function-ref name="receive" scoped="" ref="0x4091b7c8"/>
        <function-ref name="getPayload" scoped="" ref="0x4091b8a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x409181b0" loc="52:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x409181b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40918388"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40918468"/>
        <function-ref name="request" scoped="" ref="0x40918548"/>
        <function-ref name="granted" scoped="" ref="0x40918628"/>
        <function-ref name="isOwner" scoped="" ref="0x40918708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x409188a0" loc="53:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x409188a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40918a78"/>
        <function-ref name="writeDone" scoped="" ref="0x40918b58"/>
        <function-ref name="write" scoped="" ref="0x40918c38"/>
        <function-ref name="beginRead" scoped="" ref="0x40918d18"/>
        <function-ref name="readDone" scoped="" ref="0x40918df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x4091ba50" loc="45:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x4091ba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x4091bc28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40915010" loc="60:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40915010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x409151e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x409152c8"/>
        <function-ref name="led1On" scoped="" ref="0x409153a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40915488"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40915568"/>
        <function-ref name="get" scoped="" ref="0x40915648"/>
        <function-ref name="led1Off" scoped="" ref="0x40915728"/>
        <function-ref name="led2Off" scoped="" ref="0x40915aa8"/>
        <function-ref name="set" scoped="" ref="0x40915808"/>
        <function-ref name="led0On" scoped="" ref="0x409158e8"/>
        <function-ref name="led2On" scoped="" ref="0x409159c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x40919b40" loc="50:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x40919b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40919d18"/>
        <function-ref name="disable" scoped="" ref="0x40919df8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40919ed8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40918010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x40917388" loc="55:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40917388"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409175e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x408fdb38" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x408fdb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x408fdd10"/>
        <function-ref name="stop" scoped="" ref="0x408fddf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x40947be8" loc="44:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40947be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40947dc0"/>
        <function-ref name="getRssi" scoped="" ref="0x40947ea0"/>
        <function-ref name="getPower" scoped="" ref="0x40946010"/>
        <function-ref name="getLqi" scoped="" ref="0x409460f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x40946760" loc="46:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40946760"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40946938"/>
        <function-ref name="getMetadata" scoped="" ref="0x40946a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40946270" loc="45:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40946270"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40946448"/>
        <function-ref name="noAck" scoped="" ref="0x40946528"/>
        <function-ref name="wasAcked" scoped="" ref="0x40946608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x409566e8" loc="64:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x409566e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409568c0"/>
        <function-ref name="write" scoped="" ref="0x409569a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40957a00" loc="61:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40957a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40957bd8"/>
        <function-ref name="write" scoped="" ref="0x40957cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40959ef0" loc="51:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40959ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409580e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x40955cb8" loc="71:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40955cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40955e90"/>
        <function-ref name="write" scoped="" ref="0x40953010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x409562b0" loc="63:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x409562b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40956488"/>
        <function-ref name="write" scoped="" ref="0x40956568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x40956b20" loc="65:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40956b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40956cf8"/>
        <function-ref name="write" scoped="" ref="0x40956dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40957190" loc="59:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40957190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40957368"/>
        <function-ref name="write" scoped="" ref="0x40957448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x409494f0" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x409494f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x409496c8"/>
        <function-ref name="abortRelease" scoped="" ref="0x409497a8"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40949888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40949d60" loc="46:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40949d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40959010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40958910" loc="55:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40958910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40958ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x409585b8" loc="53:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x409585b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40958790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40957e38" loc="62:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40957e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40956050"/>
        <function-ref name="write" scoped="" ref="0x40956130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40958260" loc="52:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40958260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40958438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x40955880" loc="70:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x40955880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40955a58"/>
        <function-ref name="write" scoped="" ref="0x40955b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x40953190" loc="74:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40953190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40953468"/>
        <function-ref name="writeDone" scoped="" ref="0x40953548"/>
        <function-ref name="write" scoped="" ref="0x40953628"/>
        <function-ref name="beginRead" scoped="" ref="0x40953708"/>
        <function-ref name="readDone" scoped="" ref="0x409537e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40959190" loc="47:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40959190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40959368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x409575c8" loc="60:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x409575c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409577a0"/>
        <function-ref name="write" scoped="" ref="0x40957880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40958c68" loc="58:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40958c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40958ec0"/>
        <function-ref name="write" scoped="" ref="0x40957010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x409594e8" loc="48:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x409594e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409596c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4095ada0" loc="41:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4095ada0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40949010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409490f0"/>
        <function-ref name="request" scoped="" ref="0x409491d0"/>
        <function-ref name="granted" scoped="" ref="0x409492b0"/>
        <function-ref name="isOwner" scoped="" ref="0x40949390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x40955448" loc="69:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40955448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40955620"/>
        <function-ref name="write" scoped="" ref="0x40955700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x40955010" loc="68:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x40955010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409551e8"/>
        <function-ref name="write" scoped="" ref="0x409552c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40949a08" loc="45:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40949a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40949be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40959b98" loc="50:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40959b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40959d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40959840" loc="49:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40959840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40959a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x40953968" loc="75:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40953968"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40953b40"/>
        <function-ref name="writeDone" scoped="" ref="0x40953c20"/>
        <function-ref name="write" scoped="" ref="0x40953d00"/>
        <function-ref name="beginRead" scoped="" ref="0x40953de0"/>
        <function-ref name="readDone" scoped="" ref="0x40953ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40964468" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40964468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40964640"/>
        <function-ref name="rand32" scoped="" ref="0x40964720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40962ad8" loc="34:/opt/tinyos2/tinyos-2.x-src/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40962ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409641e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40968b50" loc="33:/opt/tinyos2/tinyos-2.x-src/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40968b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40968d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x4095f4e0" loc="34:/opt/tinyos2/tinyos-2.x-src/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x4095f4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x4095f6b8"/>
        <function-ref name="rand32" scoped="" ref="0x4095f798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40960c10" loc="33:/opt/tinyos2/tinyos-2.x-src/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40960c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4095f258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x409607f8" loc="32:/opt/tinyos2/tinyos-2.x-src/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x409607f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409609d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x4097a5d8" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/system/RandomMlcgP.nc">
      <component-ref qname="RandomMlcgP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x4097a5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x4097a7b0"/>
        <function-ref name="rand32" scoped="" ref="0x4097a890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x4097bcd8" loc="36:/opt/tinyos2/tinyos-2.x-src/tos/system/RandomMlcgP.nc">
      <component-ref qname="RandomMlcgP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x4097bcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4097a350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4097b8c0" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/system/RandomMlcgP.nc">
      <component-ref qname="RandomMlcgP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4097b8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4097ba98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40967450" loc="67:/opt/tinyos2/tinyos-2.x-src/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40967450"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40967628"/>
        <function-ref name="toIdle" scoped="" ref="0x40967708"/>
        <function-ref name="isState" scoped="" ref="0x409677e8"/>
        <function-ref name="isIdle" scoped="" ref="0x409678c8"/>
        <function-ref name="requestState" scoped="" ref="0x409679a8"/>
        <function-ref name="forceState" scoped="" ref="0x40967a88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40971898" loc="44:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40971898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40971a70"/>
        <function-ref name="getPayload" scoped="" ref="0x40971b50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40971c30"/>
        <function-ref name="cancel" scoped="" ref="0x40971d10"/>
        <function-ref name="sendDone" scoped="" ref="0x40971df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40971190" loc="40:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40971190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40971368"/>
        <function-ref name="getPayload" scoped="" ref="0x40971448"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40971528"/>
        <function-ref name="cancel" scoped="" ref="0x40971608"/>
        <function-ref name="sendDone" scoped="" ref="0x409716e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4096da38" loc="45:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4096da38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4096dc10"/>
        <function-ref name="getPayload" scoped="" ref="0x4096dcf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4096ddd0"/>
        <function-ref name="cancel" scoped="" ref="0x4096deb0"/>
        <function-ref name="sendDone" scoped="" ref="0x4096c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4096d010" loc="40:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4096d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4096d1e8"/>
        <function-ref name="getPayload" scoped="" ref="0x4096d2c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4096d3a8"/>
        <function-ref name="cancel" scoped="" ref="0x4096d488"/>
        <function-ref name="sendDone" scoped="" ref="0x4096d568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x4096c8d8" loc="47:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x4096c8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x4096cab0"/>
        <function-ref name="rand32" scoped="" ref="0x4096cb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4096d6b0" loc="41:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4096d6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4096d888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x4096cce8" loc="48:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x4096cce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x4096cec0"/>
        <function-ref name="getMetadata" scoped="" ref="0x4098b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x4096c158" loc="46:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x4096c158"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x4096c330"/>
        <function-ref name="toIdle" scoped="" ref="0x4096c410"/>
        <function-ref name="isState" scoped="" ref="0x4096c4f0"/>
        <function-ref name="isIdle" scoped="" ref="0x4096c5d0"/>
        <function-ref name="requestState" scoped="" ref="0x4096c6b0"/>
        <function-ref name="forceState" scoped="" ref="0x4096c790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x4096fa10" loc="67:/opt/tinyos2/tinyos-2.x-src/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x4096fa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x4096fbe8"/>
        <function-ref name="toIdle" scoped="" ref="0x4096fcc8"/>
        <function-ref name="isState" scoped="" ref="0x4096fda8"/>
        <function-ref name="isIdle" scoped="" ref="0x4096fe88"/>
        <function-ref name="requestState" scoped="" ref="0x40983010"/>
        <function-ref name="forceState" scoped="" ref="0x409830f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40980ef8" loc="47:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40980ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x4097f0e0"/>
        <function-ref name="receive" scoped="" ref="0x4097f1c0"/>
        <function-ref name="getPayload" scoped="" ref="0x4097f2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40980490" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40980490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x40980668"/>
        <function-ref name="receive" scoped="" ref="0x40980748"/>
        <function-ref name="getPayload" scoped="" ref="0x40980828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x409809a8" loc="43:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x409809a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x40980b80"/>
        <function-ref name="receive" scoped="" ref="0x40980c60"/>
        <function-ref name="getPayload" scoped="" ref="0x40980d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4099c880" loc="49:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4099c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x4099ca58"/>
        <function-ref name="receive" scoped="" ref="0x4099cb38"/>
        <function-ref name="getPayload" scoped="" ref="0x4099cc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4099c4f0" loc="45:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4099c4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4099c6c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4097cab8" loc="43:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4097cab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x4097cc90"/>
        <function-ref name="receive" scoped="" ref="0x4097cd70"/>
        <function-ref name="getPayload" scoped="" ref="0x4097ce50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x4099cd70" loc="50:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x4099cd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x4099b010"/>
        <function-ref name="getMetadata" scoped="" ref="0x4099b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x4099c010" loc="44:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x4099c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x4099c1e8"/>
        <function-ref name="receive" scoped="" ref="0x4099c2c8"/>
        <function-ref name="getPayload" scoped="" ref="0x4099c3a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x409a86a8" loc="68:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x409a86a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x409a8880"/>
        <function-ref name="receive" scoped="" ref="0x409a8960"/>
        <function-ref name="getPayload" scoped="" ref="0x409a8a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x409a8bb0" loc="69:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x409a8bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409a8d88"/>
        <function-ref name="getPayload" scoped="" ref="0x409a8e68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409a7010"/>
        <function-ref name="cancel" scoped="" ref="0x409a70f0"/>
        <function-ref name="sendDone" scoped="" ref="0x409a71d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x409a9a90" loc="63:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x409a9a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409a9c68"/>
        <function-ref name="getPayload" scoped="" ref="0x409a9d48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409a9e28"/>
        <function-ref name="cancel" scoped="" ref="0x409a9f08"/>
        <function-ref name="sendDone" scoped="" ref="0x409a8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x409a8158" loc="64:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x409a8158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x409a8330"/>
        <function-ref name="receive" scoped="" ref="0x409a8410"/>
        <function-ref name="getPayload" scoped="" ref="0x409a84f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x409a4b18" loc="44:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x409a4b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x409a4cf0"/>
        <function-ref name="stopDone" scoped="" ref="0x409a4dd0"/>
        <function-ref name="start" scoped="" ref="0x409a4eb0"/>
        <function-ref name="stop" scoped="" ref="0x409a3010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x409a3970" loc="49:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x409a3970"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409a3b48"/>
        <function-ref name="getPayload" scoped="" ref="0x409a3c28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409a3d08"/>
        <function-ref name="cancel" scoped="" ref="0x409a3de8"/>
        <function-ref name="sendDone" scoped="" ref="0x409a3ec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x409a2070" loc="50:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x409a2070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x409a2248"/>
        <function-ref name="receive" scoped="" ref="0x409a2328"/>
        <function-ref name="getPayload" scoped="" ref="0x409a2408"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x409a53c8" loc="41:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x409a53c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409a55a0"/>
        <function-ref name="getPayload" scoped="" ref="0x409a5680"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409a5760"/>
        <function-ref name="cancel" scoped="" ref="0x409a5840"/>
        <function-ref name="sendDone" scoped="" ref="0x409a5920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x409a4010" loc="43:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x409a4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x409a41e8"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x409a42c8"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x409a43a8"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x409a4488"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x409a4568"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x409a4648"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x409a4728"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x409a4808"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x409a48e8"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x409a49c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x409a3188" loc="45:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x409a3188"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x409a3360"/>
        <function-ref name="toIdle" scoped="" ref="0x409a3440"/>
        <function-ref name="isState" scoped="" ref="0x409a3520"/>
        <function-ref name="isIdle" scoped="" ref="0x409a3600"/>
        <function-ref name="requestState" scoped="" ref="0x409a36e0"/>
        <function-ref name="forceState" scoped="" ref="0x409a37c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x409a2588" loc="51:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x409a2588"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x409a2760"/>
        <function-ref name="stopDone" scoped="" ref="0x409a2840"/>
        <function-ref name="start" scoped="" ref="0x409a2920"/>
        <function-ref name="stop" scoped="" ref="0x409a2a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x409a5a68" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x409a5a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x409a5c40"/>
        <function-ref name="receive" scoped="" ref="0x409a5d20"/>
        <function-ref name="getPayload" scoped="" ref="0x409a5e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x409a1c08" loc="41:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x409a1c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x409a1de0"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x409a1ec0"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x4099e010"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x4099e0f0"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x4099e1d0"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x4099e2b0"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x4099e390"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x4099e470"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x4099e550"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x4099e630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x409a08a0" loc="67:/opt/tinyos2/tinyos-2.x-src/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x409a08a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x409a0a78"/>
        <function-ref name="toIdle" scoped="" ref="0x409a0b58"/>
        <function-ref name="isState" scoped="" ref="0x409a0c38"/>
        <function-ref name="isIdle" scoped="" ref="0x409a0d18"/>
        <function-ref name="requestState" scoped="" ref="0x409a0df8"/>
        <function-ref name="forceState" scoped="" ref="0x409a0ed8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x409b4dc0" loc="45:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x409b4dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409b3010"/>
        <function-ref name="getPayload" scoped="" ref="0x409b30f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409b31d0"/>
        <function-ref name="cancel" scoped="" ref="0x409b32b0"/>
        <function-ref name="sendDone" scoped="" ref="0x409b3390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x409b4010" loc="40:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x409b4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409b41e8"/>
        <function-ref name="getPayload" scoped="" ref="0x409b42c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409b43a8"/>
        <function-ref name="cancel" scoped="" ref="0x409b4488"/>
        <function-ref name="sendDone" scoped="" ref="0x409b4568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x409b46b8" loc="41:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x409b46b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x409b4890"/>
        <function-ref name="setRetries" scoped="" ref="0x409b4970"/>
        <function-ref name="getRetries" scoped="" ref="0x409b4a50"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x409b4b30"/>
        <function-ref name="wasDelivered" scoped="" ref="0x409b4c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x409b0ba8" loc="44:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x409b0ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x409b0d80"/>
        <function-ref name="noAck" scoped="" ref="0x409b0e60"/>
        <function-ref name="wasAcked" scoped="" ref="0x409af010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x409b04b8" loc="40:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x409b04b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x409b0690"/>
        <function-ref name="setRetries" scoped="" ref="0x409b0770"/>
        <function-ref name="getRetries" scoped="" ref="0x409b0850"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x409b0930"/>
        <function-ref name="wasDelivered" scoped="" ref="0x409b0a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x409c4330" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/system/TimerMilliC.nc">
      <component-ref qname="OscilloscopeAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x409c4330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402cb410"/>
            <typename><typedef-ref name="TMilli" ref="0x402cb5e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x409c3c28"/>
        <function-ref name="fired" scoped="" ref="0x409c3048"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x409c35e8"/>
        <function-ref name="isOneShot" scoped="" ref="0x409c3408"/>
        <function-ref name="getdt" scoped="" ref="0x40a5f010"/>
        <function-ref name="gett0" scoped="" ref="0x409c3e08"/>
        <function-ref name="isRunning" scoped="" ref="0x409c3228"/>
        <function-ref name="startPeriodic" scoped="" ref="0x409c4958"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x409c3908"/>
        <function-ref name="startOneShot" scoped="" ref="0x409c4bd8"/>
        <function-ref name="stop" scoped="" ref="0x409c4e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x409dfc18" loc="38:/opt/tinyos2/tinyos-2.x-src/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x409dfc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402cb410"/>
            <typename><typedef-ref name="TMilli" ref="0x402cb5e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x409dc528"/>
        <function-ref name="fired" scoped="" ref="0x409de938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x409deed8"/>
        <function-ref name="isOneShot" scoped="" ref="0x409decf8"/>
        <function-ref name="getdt" scoped="" ref="0x409dc8e8"/>
        <function-ref name="gett0" scoped="" ref="0x409dc708"/>
        <function-ref name="isRunning" scoped="" ref="0x409deb18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x409de258"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x409dc208"/>
        <function-ref name="startOneShot" scoped="" ref="0x409de4d8"/>
        <function-ref name="stop" scoped="" ref="0x409de758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x409d86f8" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x409d86f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402cb410"/>
            <typename><typedef-ref name="TMilli" ref="0x402cb5e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x409d5068"/>
        <function-ref name="fired" scoped="" ref="0x409d7470"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x409d7a10"/>
        <function-ref name="isOneShot" scoped="" ref="0x409d7830"/>
        <function-ref name="getdt" scoped="" ref="0x409d5428"/>
        <function-ref name="gett0" scoped="" ref="0x409d5248"/>
        <function-ref name="isRunning" scoped="" ref="0x409d7650"/>
        <function-ref name="startPeriodic" scoped="" ref="0x409d8d20"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x409d7d30"/>
        <function-ref name="startOneShot" scoped="" ref="0x409d7010"/>
        <function-ref name="stop" scoped="" ref="0x409d7290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x409d1230" loc="36:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x409d1230"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402cb410"/>
            <typename><typedef-ref name="TMilli" ref="0x402cb5e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409d1878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x409d8060" loc="34:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x409d8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409d8238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x409eeb60" loc="29:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x409eeb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402cb410"/>
            <typename><typedef-ref name="TMilli" ref="0x402cb5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40031818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409ed308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x409ed708"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x409ed508"/>
        <function-ref name="overflow" scoped="" ref="0x409ed908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x409f0dc0" loc="27:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x409f0dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409ef010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x409ef2e0" loc="28:/opt/tinyos2/tinyos-2.x-src/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x409ef2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402cb410"/>
            <typename><typedef-ref name="TMilli" ref="0x402cb5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40031818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x409ee638"/>
        <function-ref name="fired" scoped="" ref="0x409efed0"/>
        <function-ref name="startAt" scoped="" ref="0x409ee2f8"/>
        <function-ref name="isRunning" scoped="" ref="0x409ee0f8"/>
        <function-ref name="getAlarm" scoped="" ref="0x409ee838"/>
        <function-ref name="start" scoped="" ref="0x409efa30"/>
        <function-ref name="stop" scoped="" ref="0x409efcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40a1f9e0" loc="26:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40a1f9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402cb410"/>
            <typename><typedef-ref name="TMilli" ref="0x402cb5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40031818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a1ede0"/>
        <function-ref name="fired" scoped="" ref="0x40a1e6a0"/>
        <function-ref name="startAt" scoped="" ref="0x40a1eaa0"/>
        <function-ref name="isRunning" scoped="" ref="0x40a1e8a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40a1d010"/>
        <function-ref name="start" scoped="" ref="0x40a1e200"/>
        <function-ref name="stop" scoped="" ref="0x40a1e4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a1f5a8" loc="25:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a1f5a8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x40288748"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x40288748"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a1f780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40a1d2c8" loc="27:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40a1d2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402cb410"/>
            <typename><typedef-ref name="TMilli" ref="0x402cb5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40031818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a1da18"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40a1de18"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40a1dc18"/>
        <function-ref name="overflow" scoped="" ref="0x40a1b048"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x40ef9668" loc="31:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40ef9668"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x40ef9840"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40ef9920"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40ef9a00"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x40ef9ae0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x40ef9bc0"/>
        <function-ref name="setControl" scoped="" ref="0x40ef9ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40efe0c0" loc="26:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40efe0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402cb410"/>
            <typename><typedef-ref name="TMilli" ref="0x402cb5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40031818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40efd418"/>
        <function-ref name="fired" scoped="" ref="0x40efecb0"/>
        <function-ref name="startAt" scoped="" ref="0x40efd0d8"/>
        <function-ref name="isRunning" scoped="" ref="0x40efeeb0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40efd618"/>
        <function-ref name="start" scoped="" ref="0x40efe810"/>
        <function-ref name="stop" scoped="" ref="0x40efeab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ec7c68" loc="25:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ec7c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ec7e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40efd8d0" loc="27:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40efd8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402cb410"/>
            <typename><typedef-ref name="TMilli" ref="0x402cb5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40031818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40efc048"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40efc448"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40efc248"/>
        <function-ref name="overflow" scoped="" ref="0x40efc648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x40ef75c8" loc="33:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x40ef75c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x40ef77a0"/>
        <function-ref name="compareBusy" scoped="" ref="0x40ef7880"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x40ef7960"/>
        <function-ref name="countBusy" scoped="" ref="0x40ef7a40"/>
        <function-ref name="getAssr" scoped="" ref="0x40ef7b20"/>
        <function-ref name="setAssr" scoped="" ref="0x40ef7c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x40ef9e90" loc="32:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40ef9e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40ef7210"/>
        <function-ref name="fired" scoped="" ref="0x40ef8998"/>
        <function-ref name="get" scoped="" ref="0x40ef84f8"/>
        <function-ref name="reset" scoped="" ref="0x40ef8b98"/>
        <function-ref name="isOn" scoped="" ref="0x40ef7410"/>
        <function-ref name="set" scoped="" ref="0x40ef86f8"/>
        <function-ref name="start" scoped="" ref="0x40ef8d98"/>
        <function-ref name="stop" scoped="" ref="0x40ef7010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40efc8c0" loc="30:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40efc8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40ef9010"/>
        <function-ref name="test" scoped="" ref="0x40efbbc8"/>
        <function-ref name="get" scoped="" ref="0x40efcf08"/>
        <function-ref name="setScale" scoped="" ref="0x40ef9210"/>
        <function-ref name="getScale" scoped="" ref="0x40ef94b0"/>
        <function-ref name="reset" scoped="" ref="0x40efb5c8"/>
        <function-ref name="overflow" scoped="" ref="0x40efb3c8"/>
        <function-ref name="isOn" scoped="" ref="0x40efbdc8"/>
        <function-ref name="set" scoped="" ref="0x40efb128"/>
        <function-ref name="start" scoped="" ref="0x40efb7c8"/>
        <function-ref name="stop" scoped="" ref="0x40efb9c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x40a27a40" loc="63:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x40a27a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40a27c18"/>
        <function-ref name="runTask" scoped="" ref="0x40a27cf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40a29320" loc="38:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40a29320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402cb410"/>
            <typename><typedef-ref name="TMilli" ref="0x402cb5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40031818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a27668"/>
        <function-ref name="fired" scoped="" ref="0x40a29f10"/>
        <function-ref name="startAt" scoped="" ref="0x40a27328"/>
        <function-ref name="isRunning" scoped="" ref="0x40a27128"/>
        <function-ref name="getAlarm" scoped="" ref="0x40a27868"/>
        <function-ref name="start" scoped="" ref="0x40a29a70"/>
        <function-ref name="stop" scoped="" ref="0x40a29d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40a1a348" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40a1a348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402cb410"/>
            <typename><typedef-ref name="TMilli" ref="0x402cb5e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a2ac48"/>
        <function-ref name="fired" scoped="" ref="0x40a2a068"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40a2a608"/>
        <function-ref name="isOneShot" scoped="" ref="0x40a2a428"/>
        <function-ref name="getdt" scoped="" ref="0x40a29048"/>
        <function-ref name="gett0" scoped="" ref="0x40a2ae28"/>
        <function-ref name="isRunning" scoped="" ref="0x40a2a248"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40a1a970"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40a2a928"/>
        <function-ref name="startOneShot" scoped="" ref="0x40a1abf0"/>
        <function-ref name="stop" scoped="" ref="0x40a1ae70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x40a6a220" loc="60:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x40a6a220"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40a6a3f8"/>
        <function-ref name="runTask" scoped="" ref="0x40a6a4d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x40a6c350" loc="38:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x40a6c350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402cb410"/>
            <typename><typedef-ref name="TMilli" ref="0x402cb5e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a6bc48"/>
        <function-ref name="fired" scoped="" ref="0x40a6b068"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40a6b608"/>
        <function-ref name="isOneShot" scoped="" ref="0x40a6b428"/>
        <function-ref name="getdt" scoped="" ref="0x40a6a048"/>
        <function-ref name="gett0" scoped="" ref="0x40a6be28"/>
        <function-ref name="isRunning" scoped="" ref="0x40a6b248"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40a6c978"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40a6b928"/>
        <function-ref name="startOneShot" scoped="" ref="0x40a6cbf8"/>
        <function-ref name="stop" scoped="" ref="0x40a6ce78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40a48338" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40a48338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402cb410"/>
            <typename><typedef-ref name="TMilli" ref="0x402cb5e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40a6ecc8"/>
        <function-ref name="fired" scoped="" ref="0x40a6e098"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40a6e668"/>
        <function-ref name="isOneShot" scoped="" ref="0x40a6e478"/>
        <function-ref name="getdt" scoped="" ref="0x40a6c0d8"/>
        <function-ref name="gett0" scoped="" ref="0x40a6eeb8"/>
        <function-ref name="isRunning" scoped="" ref="0x40a6e288"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40a48970"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40a6e998"/>
        <function-ref name="startOneShot" scoped="" ref="0x40a48c00"/>
        <function-ref name="stop" scoped="" ref="0x40a48e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40a62d00" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40a62d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402cb410"/>
            <typename><typedef-ref name="TMilli" ref="0x402cb5e0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a67370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40a67648" loc="38:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40a67648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x402cb410"/>
            <typename><typedef-ref name="TMilli" ref="0x402cb5e0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40031818"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a67d98"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40a61210"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40a61010"/>
        <function-ref name="overflow" scoped="" ref="0x40a61410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40a5ddd0" loc="41:/opt/tinyos2/tinyos-2.x-src/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40a5ddd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ab5010"/>
        <function-ref name="getPayload" scoped="" ref="0x40ab50f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ab51d0"/>
        <function-ref name="cancel" scoped="" ref="0x40ab52b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40ab5390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40ab54d0" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40ab54d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ab56a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ab5788"/>
        <function-ref name="getPayload" scoped="" ref="0x40ab5868"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ab5948"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ab5a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40ab5b68" loc="43:/opt/tinyos2/tinyos-2.x-src/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40ab5b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40ab5d40"/>
        <function-ref name="source" scoped="" ref="0x40ab5e20"/>
        <function-ref name="address" scoped="" ref="0x40ab5f00"/>
        <function-ref name="destination" scoped="" ref="0x40ab4010"/>
        <function-ref name="setSource" scoped="" ref="0x40ab40f0"/>
        <function-ref name="setDestination" scoped="" ref="0x40ab41d0"/>
        <function-ref name="type" scoped="" ref="0x40ab42b0"/>
        <function-ref name="setType" scoped="" ref="0x40ab4390"/>
        <function-ref name="isForMe" scoped="" ref="0x40ab4470"/>
        <function-ref name="setGroup" scoped="" ref="0x40ab4550"/>
        <function-ref name="localGroup" scoped="" ref="0x40ab4630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40ab4790" loc="44:/opt/tinyos2/tinyos-2.x-src/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40ab4790"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40ab4968"/>
        <function-ref name="noAck" scoped="" ref="0x40ab4a48"/>
        <function-ref name="wasAcked" scoped="" ref="0x40ab4b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40f34110" loc="36:/opt/tinyos2/tinyos-2.x-src/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40f34110"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f342e8"/>
        <function-ref name="getPayload" scoped="" ref="0x40f343c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f344a8"/>
        <function-ref name="cancel" scoped="" ref="0x40f34588"/>
        <function-ref name="sendDone" scoped="" ref="0x40f34668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x40f347d8" loc="38:/opt/tinyos2/tinyos-2.x-src/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40f347d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f349b0"/>
        <function-ref name="getPayload" scoped="" ref="0x40f34a90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f34b70"/>
        <function-ref name="cancel" scoped="" ref="0x40f34c50"/>
        <function-ref name="sendDone" scoped="" ref="0x40f34d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40f34e70" loc="39:/opt/tinyos2/tinyos-2.x-src/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f34e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f33070"/>
        <function-ref name="source" scoped="" ref="0x40f33150"/>
        <function-ref name="address" scoped="" ref="0x40f33230"/>
        <function-ref name="destination" scoped="" ref="0x40f33310"/>
        <function-ref name="setSource" scoped="" ref="0x40f333f0"/>
        <function-ref name="setDestination" scoped="" ref="0x40f334d0"/>
        <function-ref name="type" scoped="" ref="0x40f335b0"/>
        <function-ref name="setType" scoped="" ref="0x40f33690"/>
        <function-ref name="isForMe" scoped="" ref="0x40f33770"/>
        <function-ref name="setGroup" scoped="" ref="0x40f33850"/>
        <function-ref name="localGroup" scoped="" ref="0x40f33930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40a933b0" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40a933b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a93588"/>
        <function-ref name="getPayload" scoped="" ref="0x40a93668"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a93748"/>
        <function-ref name="cancel" scoped="" ref="0x40a93828"/>
        <function-ref name="sendDone" scoped="" ref="0x40a93908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40a94690" loc="40:/opt/tinyos2/tinyos-2.x-src/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40a94690"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x40339650"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a94878"/>
        <function-ref name="getPayload" scoped="" ref="0x40a94958"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a94a38"/>
        <function-ref name="cancel" scoped="" ref="0x40a94b18"/>
        <function-ref name="sendDone" scoped="" ref="0x40a94bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40a90f00" loc="38:/opt/tinyos2/tinyos-2.x-src/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40a90f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a94108"/>
        <function-ref name="getPayload" scoped="" ref="0x40a941e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a942c8"/>
        <function-ref name="cancel" scoped="" ref="0x40a943a8"/>
        <function-ref name="sendDone" scoped="" ref="0x40a94488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40ab9930" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40ab9930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ab9b08"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ab9be8"/>
        <function-ref name="getPayload" scoped="" ref="0x40ab9cc8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ab9da8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ab9e88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x40ab8030" loc="161:/opt/tinyos2/tinyos-2.x-src/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x40ab8030"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ab8208"/>
        <function-ref name="runTask" scoped="" ref="0x40ab82e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x40ab8468" loc="118:/opt/tinyos2/tinyos-2.x-src/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x40ab8468"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ab8640"/>
        <function-ref name="runTask" scoped="" ref="0x40ab8720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40a94d38" loc="41:/opt/tinyos2/tinyos-2.x-src/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40a94d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40a94f10"/>
        <function-ref name="source" scoped="" ref="0x40ab9010"/>
        <function-ref name="address" scoped="" ref="0x40ab90f0"/>
        <function-ref name="destination" scoped="" ref="0x40ab91d0"/>
        <function-ref name="setSource" scoped="" ref="0x40ab92b0"/>
        <function-ref name="setDestination" scoped="" ref="0x40ab9390"/>
        <function-ref name="type" scoped="" ref="0x40ab9470"/>
        <function-ref name="setType" scoped="" ref="0x40ab9550"/>
        <function-ref name="isForMe" scoped="" ref="0x40ab9630"/>
        <function-ref name="setGroup" scoped="" ref="0x40ab9710"/>
        <function-ref name="localGroup" scoped="" ref="0x40ab97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40c74868" loc="25:./AES/AFWA_AESC.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40c74868"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40c74a40"/>
        <function-ref name="stopDone" scoped="" ref="0x40c74b20"/>
        <function-ref name="start" scoped="" ref="0x40c74c00"/>
        <function-ref name="stop" scoped="" ref="0x40c74ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AFWA_AESI" ref="0x40c74e20" loc="26:./AES/AFWA_AESC.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AFWA_AESI" scoped="" ref="0x40c74e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AFWA_AESI"/>
      </instance>
      <interface-functions>
        <function-ref name="AFWAenc" scoped="" ref="0x40c73010"/>
        <function-ref name="AFWAdec" scoped="" ref="0x40c730f0"/>
        <function-ref name="AFWAsetTransmitMode" scoped="" ref="0x40c731d0"/>
        <function-ref name="updateKeyDone" scoped="" ref="0x40c732b0"/>
        <function-ref name="AFWAsend" scoped="" ref="0x40c73390"/>
        <function-ref name="AFWAsendDone" scoped="" ref="0x40c73470"/>
        <function-ref name="AFWAgetKeySize" scoped="" ref="0x40c73550"/>
        <function-ref name="AFWAsetReceiveMode" scoped="" ref="0x40c73630"/>
        <function-ref name="AFWAupdateKey" scoped="" ref="0x40c73710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40f45740" loc="32:./AES/AFWA_AESP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AFWA_AESP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40f45740"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40f45918"/>
        <function-ref name="stopDone" scoped="" ref="0x40f459f8"/>
        <function-ref name="start" scoped="" ref="0x40f45ad8"/>
        <function-ref name="stop" scoped="" ref="0x40f45bb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OmacI" ref="0x40f44e38" loc="40:./AES/AFWA_AESP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AFWA_AESP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OmacI" scoped="" ref="0x40f44e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="OmacI"/>
      </instance>
      <interface-functions>
        <function-ref name="truncateTag" scoped="" ref="0x40f42050"/>
        <function-ref name="integrityCheck" scoped="" ref="0x40f42130"/>
        <function-ref name="cbcmacGenerate" scoped="" ref="0x40f42210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40f447a0" loc="38:./AES/AFWA_AESP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AFWA_AESP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40f447a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f44978"/>
        <function-ref name="getPayload" scoped="" ref="0x40f44a58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f44b38"/>
        <function-ref name="cancel" scoped="" ref="0x40f44c18"/>
        <function-ref name="sendDone" scoped="" ref="0x40f44cf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AFWA_AESI" ref="0x40f45cf8" loc="33:./AES/AFWA_AESP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AFWA_AESP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AFWA_AESI" scoped="" ref="0x40f45cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AFWA_AESI"/>
      </instance>
      <interface-functions>
        <function-ref name="AFWAenc" scoped="" ref="0x40f45ed0"/>
        <function-ref name="AFWAdec" scoped="" ref="0x40f44010"/>
        <function-ref name="AFWAsetTransmitMode" scoped="" ref="0x40f440f0"/>
        <function-ref name="updateKeyDone" scoped="" ref="0x40f441d0"/>
        <function-ref name="AFWAsend" scoped="" ref="0x40f442b0"/>
        <function-ref name="AFWAsendDone" scoped="" ref="0x40f44390"/>
        <function-ref name="AFWAgetKeySize" scoped="" ref="0x40f44470"/>
        <function-ref name="AFWAsetReceiveMode" scoped="" ref="0x40f44550"/>
        <function-ref name="AFWAupdateKey" scoped="" ref="0x40f44630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40f45428" loc="31:./AES/AFWA_AESP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AFWA_AESP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40f45428"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f45600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CcmI" ref="0x40f42748" loc="42:./AES/AFWA_AESP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AFWA_AESP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CcmI" scoped="" ref="0x40f42748"/></type-interface>
      <instance>
        <interfacedef-ref qname="CcmI"/>
      </instance>
      <interface-functions>
        <function-ref name="AESccm_auth" scoped="" ref="0x40f42920"/>
        <function-ref name="truncateTag" scoped="" ref="0x40f42a00"/>
        <function-ref name="integrityCheck" scoped="" ref="0x40f42ae0"/>
        <function-ref name="AESccm_nonce" scoped="" ref="0x40f42bc0"/>
        <function-ref name="AESccm_encrypt" scoped="" ref="0x40f42ca0"/>
        <function-ref name="AESccm_decrypt" scoped="" ref="0x40f42d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtrI" ref="0x40f42350" loc="41:./AES/AFWA_AESP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AFWA_AESP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtrI" scoped="" ref="0x40f42350"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtrI"/>
      </instance>
      <interface-functions>
        <function-ref name="AESctr_decrypt" scoped="" ref="0x40f42528"/>
        <function-ref name="AESctr_encrypt" scoped="" ref="0x40f42608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40f42ec0" loc="43:./AES/AFWA_AESP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AFWA_AESP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40f42ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40f410c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40f411a0"/>
        <function-ref name="led1On" scoped="" ref="0x40f41280"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40f41360"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40f41440"/>
        <function-ref name="get" scoped="" ref="0x40f41520"/>
        <function-ref name="led1Off" scoped="" ref="0x40f41600"/>
        <function-ref name="led0On" scoped="" ref="0x40f41980"/>
        <function-ref name="set" scoped="" ref="0x40f417c0"/>
        <function-ref name="led2On" scoped="" ref="0x40f416e0"/>
        <function-ref name="led2Off" scoped="" ref="0x40f418a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40f40e78" loc="41:/opt/tinyos2/tinyos-2.x-src/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40f40e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f3f070"/>
        <function-ref name="getPayload" scoped="" ref="0x40f3f150"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f3f230"/>
        <function-ref name="cancel" scoped="" ref="0x40f3f310"/>
        <function-ref name="sendDone" scoped="" ref="0x40f3f3f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40f3f530" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f3f530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f3f708"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f3f7e8"/>
        <function-ref name="getPayload" scoped="" ref="0x40f3f8c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f3f9a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f3fa88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40f3fbc8" loc="43:/opt/tinyos2/tinyos-2.x-src/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f3fbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f3fda0"/>
        <function-ref name="source" scoped="" ref="0x40f3fe80"/>
        <function-ref name="address" scoped="" ref="0x40f3e010"/>
        <function-ref name="destination" scoped="" ref="0x40f3e0f0"/>
        <function-ref name="setSource" scoped="" ref="0x40f3e1d0"/>
        <function-ref name="setDestination" scoped="" ref="0x40f3e2b0"/>
        <function-ref name="type" scoped="" ref="0x40f3e390"/>
        <function-ref name="setType" scoped="" ref="0x40f3e470"/>
        <function-ref name="isForMe" scoped="" ref="0x40f3e550"/>
        <function-ref name="setGroup" scoped="" ref="0x40f3e630"/>
        <function-ref name="localGroup" scoped="" ref="0x40f3e710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40f3e870" loc="44:/opt/tinyos2/tinyos-2.x-src/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40f3e870"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40f3ea48"/>
        <function-ref name="noAck" scoped="" ref="0x40f3eb28"/>
        <function-ref name="wasAcked" scoped="" ref="0x40f3ec08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41075af8" loc="36:/opt/tinyos2/tinyos-2.x-src/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41075af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41075cd0"/>
        <function-ref name="getPayload" scoped="" ref="0x41075db0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41075e90"/>
        <function-ref name="cancel" scoped="" ref="0x41071010"/>
        <function-ref name="sendDone" scoped="" ref="0x410710f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41071260" loc="38:/opt/tinyos2/tinyos-2.x-src/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41071260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41071438"/>
        <function-ref name="getPayload" scoped="" ref="0x41071518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410715f8"/>
        <function-ref name="cancel" scoped="" ref="0x410716d8"/>
        <function-ref name="sendDone" scoped="" ref="0x410717b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x410718f8" loc="39:/opt/tinyos2/tinyos-2.x-src/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x410718f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41071ad0"/>
        <function-ref name="source" scoped="" ref="0x41071bb0"/>
        <function-ref name="address" scoped="" ref="0x41071c90"/>
        <function-ref name="destination" scoped="" ref="0x41071d70"/>
        <function-ref name="setSource" scoped="" ref="0x41071e50"/>
        <function-ref name="setDestination" scoped="" ref="0x41070010"/>
        <function-ref name="type" scoped="" ref="0x410700f0"/>
        <function-ref name="setType" scoped="" ref="0x410701d0"/>
        <function-ref name="isForMe" scoped="" ref="0x410702b0"/>
        <function-ref name="setGroup" scoped="" ref="0x41070390"/>
        <function-ref name="localGroup" scoped="" ref="0x41070470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OmacI" ref="0x40f3dc08" loc="17:./AES/OmacP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.OmacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="OmacI" scoped="" ref="0x40f3dc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="OmacI"/>
      </instance>
      <interface-functions>
        <function-ref name="truncateTag" scoped="" ref="0x40f3dde0"/>
        <function-ref name="integrityCheck" scoped="" ref="0x40f3dec0"/>
        <function-ref name="cbcmacGenerate" scoped="" ref="0x40f3c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AFWA_AESI" ref="0x40f3c170" loc="19:./AES/OmacP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.OmacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AFWA_AESI" scoped="" ref="0x40f3c170"/></type-interface>
      <instance>
        <interfacedef-ref qname="AFWA_AESI"/>
      </instance>
      <interface-functions>
        <function-ref name="AFWAenc" scoped="" ref="0x40f3c348"/>
        <function-ref name="AFWAdec" scoped="" ref="0x40f3c428"/>
        <function-ref name="AFWAsetTransmitMode" scoped="" ref="0x40f3c508"/>
        <function-ref name="updateKeyDone" scoped="" ref="0x40f3c5e8"/>
        <function-ref name="AFWAsend" scoped="" ref="0x40f3c6c8"/>
        <function-ref name="AFWAsendDone" scoped="" ref="0x40f3c7a8"/>
        <function-ref name="AFWAgetKeySize" scoped="" ref="0x40f3c888"/>
        <function-ref name="AFWAsetReceiveMode" scoped="" ref="0x40f3c968"/>
        <function-ref name="AFWAupdateKey" scoped="" ref="0x40f3ca48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AFWA_AESI" ref="0x40f3bec8" loc="19:./AES/CCMP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.CCMP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AFWA_AESI" scoped="" ref="0x40f3bec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AFWA_AESI"/>
      </instance>
      <interface-functions>
        <function-ref name="AFWAenc" scoped="" ref="0x40f3a0c0"/>
        <function-ref name="AFWAdec" scoped="" ref="0x40f3a1a0"/>
        <function-ref name="AFWAsetTransmitMode" scoped="" ref="0x40f3a280"/>
        <function-ref name="updateKeyDone" scoped="" ref="0x40f3a360"/>
        <function-ref name="AFWAsend" scoped="" ref="0x40f3a440"/>
        <function-ref name="AFWAsendDone" scoped="" ref="0x40f3a520"/>
        <function-ref name="AFWAgetKeySize" scoped="" ref="0x40f3a600"/>
        <function-ref name="AFWAsetReceiveMode" scoped="" ref="0x40f3a6e0"/>
        <function-ref name="AFWAupdateKey" scoped="" ref="0x40f3a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CcmI" ref="0x40f3b730" loc="17:./AES/CCMP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.CCMP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CcmI" scoped="" ref="0x40f3b730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CcmI"/>
      </instance>
      <interface-functions>
        <function-ref name="AESccm_auth" scoped="" ref="0x40f3b908"/>
        <function-ref name="truncateTag" scoped="" ref="0x40f3b9e8"/>
        <function-ref name="integrityCheck" scoped="" ref="0x40f3bac8"/>
        <function-ref name="AESccm_nonce" scoped="" ref="0x40f3bba8"/>
        <function-ref name="AESccm_encrypt" scoped="" ref="0x40f3bc88"/>
        <function-ref name="AESccm_decrypt" scoped="" ref="0x40f3bd68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AFWA_AESI" ref="0x40f39968" loc="11:./AES/CTRP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.CTRP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AFWA_AESI" scoped="" ref="0x40f39968"/></type-interface>
      <instance>
        <interfacedef-ref qname="AFWA_AESI"/>
      </instance>
      <interface-functions>
        <function-ref name="AFWAenc" scoped="" ref="0x40f39b40"/>
        <function-ref name="AFWAdec" scoped="" ref="0x40f39c20"/>
        <function-ref name="AFWAsetTransmitMode" scoped="" ref="0x40f39d00"/>
        <function-ref name="updateKeyDone" scoped="" ref="0x40f39de0"/>
        <function-ref name="AFWAsend" scoped="" ref="0x40f39ec0"/>
        <function-ref name="AFWAsendDone" scoped="" ref="0x40f38010"/>
        <function-ref name="AFWAgetKeySize" scoped="" ref="0x40f380f0"/>
        <function-ref name="AFWAsetReceiveMode" scoped="" ref="0x40f381d0"/>
        <function-ref name="AFWAupdateKey" scoped="" ref="0x40f382b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtrI" ref="0x40f39550" loc="10:./AES/CTRP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.CTRP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtrI" scoped="" ref="0x40f39550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtrI"/>
      </instance>
      <interface-functions>
        <function-ref name="AESctr_decrypt" scoped="" ref="0x40f39728"/>
        <function-ref name="AESctr_encrypt" scoped="" ref="0x40f39808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40f38410" loc="12:./AES/CTRP.nc">
      <component-ref qname="OscilloscopeAppC.AFWA_AESC.CTRP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40f38410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40f385e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40f386c8"/>
        <function-ref name="led1On" scoped="" ref="0x40f387a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40f38888"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40f38968"/>
        <function-ref name="get" scoped="" ref="0x40f38a48"/>
        <function-ref name="led1Off" scoped="" ref="0x40f38b28"/>
        <function-ref name="led0On" scoped="" ref="0x40f38ea8"/>
        <function-ref name="set" scoped="" ref="0x40f38ce8"/>
        <function-ref name="led2On" scoped="" ref="0x40f38c08"/>
        <function-ref name="led2Off" scoped="" ref="0x40f38dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40c71d70" loc="38:/opt/tinyos2/tinyos-2.x-src/tos/system/AMReceiverC.nc">
      <component-ref qname="OscilloscopeAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40c71d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c70010"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c700f0"/>
        <function-ref name="getPayload" scoped="" ref="0x40c701d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c702b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c70390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40c71898" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/system/AMReceiverC.nc">
      <component-ref qname="OscilloscopeAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40c71898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="payloadLength" scoped="" ref="0x40c71a70"/>
        <function-ref name="receive" scoped="" ref="0x40c71b50"/>
        <function-ref name="getPayload" scoped="" ref="0x40c71c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40c704d0" loc="39:/opt/tinyos2/tinyos-2.x-src/tos/system/AMReceiverC.nc">
      <component-ref qname="OscilloscopeAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40c704d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40c706a8"/>
        <function-ref name="source" scoped="" ref="0x40c70788"/>
        <function-ref name="address" scoped="" ref="0x40c70868"/>
        <function-ref name="destination" scoped="" ref="0x40c70948"/>
        <function-ref name="setSource" scoped="" ref="0x40c70a28"/>
        <function-ref name="setDestination" scoped="" ref="0x40c70b08"/>
        <function-ref name="type" scoped="" ref="0x40c70be8"/>
        <function-ref name="setType" scoped="" ref="0x40c70cc8"/>
        <function-ref name="isForMe" scoped="" ref="0x40c70da8"/>
        <function-ref name="setGroup" scoped="" ref="0x40c70e88"/>
        <function-ref name="localGroup" scoped="" ref="0x40c6c010"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Boot" loc="39:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Boot.nc">
      <documentation loc="39:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10;</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x40316c00" loc="49:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="47:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMSend.nc">
      <documentation loc="47:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMSend.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.5 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40343440" loc="69:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMSend.nc">
        <documentation loc="49:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403399f8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40344908" loc="69:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403399f8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40344ab8" loc="69:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40344c40" loc="69:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40342e30" loc="125:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMSend.nc">
        <documentation loc="115:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.&#10;</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; The length of this region is maxPayloadLength(). This command&#10; behaves similarly to &#60;tt>Packet.getPayload&#60;/tt> (minus the&#10; length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40342b18" loc="125:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x403427d0" loc="112:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMSend.nc">
        <documentation loc="102:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40343b70" loc="85:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMSend.nc">
        <documentation loc="71:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40343788" loc="85:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40342380" loc="99:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMSend.nc">
        <documentation loc="87:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40343eb8" loc="99:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40342068" loc="99:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="66:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/SplitControl.nc">
      <documentation loc="66:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x4031cb78" loc="92:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/SplitControl.nc">
        <documentation loc="85:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10;</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4031c8d8" loc="92:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x4031b890" loc="117:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/SplitControl.nc">
        <documentation loc="111:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.&#10;&#10;</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4031b640" loc="117:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4031c5b8" loc="83:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/SplitControl.nc">
        <documentation loc="68:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents. </short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x4031b320" loc="109:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/SplitControl.nc">
        <documentation loc="94:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents. </short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="AFWA_AESI" loc="29:./AES/Interfaces/AFWA_AESI.nc">
      <documentation loc="29:./AES/Interfaces/AFWA_AESI.nc">
        <short>&#10; Description          :  &#10;                         &#10;&#10;&#10;</short>
      </documentation>
      <function command="" provided="0" name="AFWAenc" ref="0x4035ede8" loc="48:./AES/Interfaces/AFWA_AESI.nc">
        <interfacedef-ref qname="AFWA_AESI"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="plaintext" ref="0x4035ec80" loc="48:./AES/Interfaces/AFWA_AESI.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="AFWAdec" ref="0x40365438" loc="49:./AES/Interfaces/AFWA_AESI.nc">
        <interfacedef-ref qname="AFWA_AESI"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="plaintext" ref="0x40365140" loc="49:./AES/Interfaces/AFWA_AESI.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x403652c8" loc="49:./AES/Interfaces/AFWA_AESI.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="AFWAsetTransmitMode" ref="0x4035e308" loc="44:./AES/Interfaces/AFWA_AESI.nc">
        <interfacedef-ref qname="AFWA_AESI"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ctrl0" ref="0x4035e010" loc="44:./AES/Interfaces/AFWA_AESI.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
            </type-int>
          </variable>
          <variable name="len" ref="0x4035e198" loc="44:./AES/Interfaces/AFWA_AESI.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="updateKeyDone" ref="0x4035fc10" loc="40:./AES/Interfaces/AFWA_AESI.nc">
        <interfacedef-ref qname="AFWA_AESI"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x4035faa8" loc="40:./AES/Interfaces/AFWA_AESI.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="AFWAsend" ref="0x40365c18" loc="53:./AES/Interfaces/AFWA_AESI.nc">
        <interfacedef-ref qname="AFWA_AESI"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40365768" loc="53:./AES/Interfaces/AFWA_AESI.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40365918" loc="53:./AES/Interfaces/AFWA_AESI.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40365aa0" loc="53:./AES/Interfaces/AFWA_AESI.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="AFWAsendDone" ref="0x40363308" loc="54:./AES/Interfaces/AFWA_AESI.nc">
        <interfacedef-ref qname="AFWA_AESI"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40363010" loc="54:./AES/Interfaces/AFWA_AESI.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40363198" loc="54:./AES/Interfaces/AFWA_AESI.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="AFWAgetKeySize" ref="0x40363608" loc="59:./AES/Interfaces/AFWA_AESI.nc">
        <interfacedef-ref qname="AFWA_AESI"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="AFWAsetReceiveMode" ref="0x4035e938" loc="45:./AES/Interfaces/AFWA_AESI.nc">
        <interfacedef-ref qname="AFWA_AESI"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ctrl0" ref="0x4035e640" loc="45:./AES/Interfaces/AFWA_AESI.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
            </type-int>
          </variable>
          <variable name="len" ref="0x4035e7c8" loc="45:./AES/Interfaces/AFWA_AESI.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="AFWAupdateKey" ref="0x4035f768" loc="34:./AES/Interfaces/AFWA_AESI.nc">
        <interfacedef-ref qname="AFWA_AESI"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x4035f468" loc="34:./AES/Interfaces/AFWA_AESI.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="KeySize_in_bits" ref="0x4035f5f8" loc="34:./AES/Interfaces/AFWA_AESI.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="45:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Receive.nc">
      <function command="" provided="0" name="payloadLength" ref="0x4033e440" loc="89:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Receive.nc">
        <documentation loc="81:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Receive.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This call is identical&#10; to &#60;TT>Packet.payloadLength&#60;/TT>, and is included in Receive as a&#10; convenience.&#10;&#10; @param  msg      the packet&#10; @return          the length of the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4033e1c0" loc="89:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0x40340618" loc="67:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Receive.nc">
        <documentation loc="47:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  msg      the receied packet&#10; @param  payload  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return          a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
              <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40341d68" loc="67:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x40341f08" loc="67:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x403400b0" loc="67:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40340e60" loc="79:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Receive.nc">
        <documentation loc="69:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Receive.nc">
          <short>&#10; Return point to a protocol's payload region in a packet. </short>
          <long>&#10; Return point to a protocol's payload region in a packet.  If len&#10; is not NULL, getPayload will return the length of the payload in&#10; it. This call is identical to &#60;TT>Packet.getPayload&#60;/TT>, and is&#10; included in Receive as a convenience.&#10;&#10; @param  msg      the packet&#10; @param  len      a pointer to where to store the payload length&#10; @return          a pointer to the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40340960" loc="79:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40340b08" loc="79:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Leds.nc">
      <documentation loc="40:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Leds.nc">
        <short>&#10; Constants for manipulating LEDs.&#10;&#10;</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x40355010" loc="50:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x403553e8" loc="56:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1On" ref="0x40355758" loc="61:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x40355ea0" loc="72:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x40353978" loc="89:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10;</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x40353ec0" loc="106:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x40355ac8" loc="66:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x403525b8" loc="123:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask. </short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x40352218" loc="123:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x4034ec38" loc="45:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2On" ref="0x40353230" loc="78:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x403535a0" loc="83:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="50:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMPacket.nc">
      <documentation loc="50:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x4035b8d8" loc="166:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMPacket.nc">
        <documentation loc="153:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param amsg the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x40339820"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4035b590" loc="166:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x40357ac8" loc="77:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMPacket.nc">
        <documentation loc="69:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.&#10;</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param amsg  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403399f8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40357848" loc="77:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x40358ef8" loc="57:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMPacket.nc">
        <documentation loc="52:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.&#10;</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403399f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="destination" ref="0x403574f8" loc="67:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMPacket.nc">
        <documentation loc="59:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.&#10;</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param amsg    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403399f8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40357268" loc="67:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x40356d00" loc="110:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMPacket.nc">
        <documentation loc="94:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet. </short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  amsg   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403399f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40356710" loc="110:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x403568a0" loc="110:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403399f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x403563c8" loc="92:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMPacket.nc">
        <documentation loc="79:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet. </short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  amsg   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403399f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40357e10" loc="92:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40356010" loc="92:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403399f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x4035c9e0" loc="136:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMPacket.nc">
        <documentation loc="127:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.&#10;</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  amsg   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x40339650"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4035c798" loc="136:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x4035b240" loc="151:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet. </short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  amsg    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x40339650"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4035cd20" loc="151:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x4035cea8" loc="151:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x40339650"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x4035c450" loc="125:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMPacket.nc">
        <documentation loc="112:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  amsg   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4035c068" loc="125:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x4035a060" loc="176:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMPacket.nc">
        <documentation loc="168:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param amsg the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x40339820"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4035bc20" loc="176:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x4035bdb0" loc="176:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x40339820"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x4035a410" loc="184:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMPacket.nc">
        <documentation loc="178:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.&#10;&#10;</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x40339820"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Timer.nc">
      <documentation loc="42:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40347ab8" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40347ab8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x4034c9a0" loc="125:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Timer.nc">
        <documentation loc="121:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.&#10;</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40031818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x40346db8" loc="72:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Timer.nc">
        <documentation loc="69:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x4034dde8" loc="103:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Timer.nc">
        <documentation loc="89:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40031818"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40031818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x4034d858" loc="103:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40031818"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x4034d9e8" loc="103:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40031818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x4034d530" loc="87:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Timer.nc">
        <documentation loc="83:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.&#10;</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getdt" ref="0x4034b1c8" loc="140:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Timer.nc">
        <documentation loc="135:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40031818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="gett0" ref="0x4034cde0" loc="133:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Timer.nc">
        <documentation loc="127:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40031818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x4034d1a0" loc="81:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x403461a8" loc="53:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Timer.nc">
        <documentation loc="45:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40031818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40347ec8" loc="53:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40031818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x4034c648" loc="118:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Timer.nc">
        <documentation loc="105:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40031818"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40031818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x4034c120" loc="118:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40031818"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x4034c2b0" loc="118:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40031818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x40346778" loc="62:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Timer.nc">
        <documentation loc="55:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40031818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x403464d0" loc="62:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40031818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40346a80" loc="67:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Timer.nc">
        <documentation loc="64:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="40:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Init.nc">
      <documentation loc="40:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Init.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.5 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x4037b308" loc="51:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="26:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x403883f0" loc="60:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40031818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x40388198" loc="60:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40031818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x40382e78" loc="31:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.&#10;</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x4037f460" loc="39:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10;</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40031818"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40031818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x4037f1e8" loc="39:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40031818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x4037fa38" loc="46:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10;</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40031818"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40031818"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x4037f7b8" loc="46:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40031818"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x4037fe20" loc="53:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10;</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/GeneralIO.nc">
      <documentation loc="27:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/GeneralIO.nc">
        <short>&#10;</short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x40398328" loc="33:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isInput" ref="0x40398640" loc="34:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="toggle" ref="0x4038fc40" loc="31:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x40398c78" loc="36:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x40398010" loc="32:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x40398958" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x4038f620" loc="29:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="clr" ref="0x4038f930" loc="30:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Scheduler.nc">
      <documentation loc="41:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.&#10;&#10;</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x4028ce08" loc="46:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x4028f628" loc="61:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x4028f258" loc="54:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10;</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x40297400" loc="56:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="runTask" ref="0x40297808" loc="64:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/McuSleep.nc">
      <documentation loc="57:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x402ebda8" loc="59:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep. </short>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="42:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/McuPowerOverride.nc">
        <short>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING. </short>
        <long>                                                                     tab:4&#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.5 2006/12/12 18:23:43 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x40304220" loc="54:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x402bfeb0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/McuPowerState.nc">
      <documentation loc="38:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x402ffd68" loc="44:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="44:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Packet.nc">
      <documentation loc="44:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x40470c70" loc="54:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Packet.nc">
        <documentation loc="47:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet. </short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  msg    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40470a20" loc="54:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x4047b330" loc="67:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Packet.nc">
        <documentation loc="56:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  msg    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4047b010" loc="67:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x4047aa98" loc="108:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Packet.nc">
        <documentation loc="97:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet. </short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.  If&#10; len is not NULL, getPayload will return the length of the payload&#10; in it, which is the same as the return value from&#10; payloadLength(). If a protocol does not support variable length&#10; packets, then *len is equal to maxPayloadLength().&#10;&#10; @param msg   the packet&#10; @param len   pointer to where the current payload length should be stored.&#10; @return      a pointer to the packet's data payload for this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4047a540" loc="108:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4047a6e8" loc="108:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4047a1f8" loc="95:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Packet.nc">
        <documentation loc="85:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x4047bbb0" loc="83:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Packet.nc">
        <documentation loc="69:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param msg   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4047b680" loc="83:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4047b808" loc="83:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="33:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="33:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10;</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x404763b8" loc="48:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="35:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10;</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param msg - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40476010" loc="48:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x40476a50" loc="60:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="50:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10;</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param msg - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40476720" loc="60:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x404821e8" loc="74:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="62:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10;</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param msg - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40476dc0" loc="74:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="54:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10;</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10;&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x4048e010" loc="95:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10;</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40490d18" loc="95:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x404903f0" loc="81:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10;</short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404901b0" loc="81:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x404838d8" loc="66:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10;</short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x404836a8" loc="66:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x40483350" loc="60:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10;</short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x40483128" loc="60:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x40483e30" loc="73:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet. </short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x40483c10" loc="73:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x404909b0" loc="88:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10;</short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40490768" loc="88:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="40:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x40486590" loc="56:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x404861d8" loc="56:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x40486360" loc="56:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x40486b60" loc="64:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x4002fa50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x404868f8" loc="64:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x40487e58" loc="47:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.&#10;&#10;</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x40487c68" loc="47:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x40485170" loc="72:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x40486ec8" loc="72:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/LowPowerListening.nc">
      <documentation loc="41:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10;</short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getLocalSleepInterval" ref="0x4048c760" loc="58:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/LowPowerListening.nc">
        <documentation loc="55:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/LowPowerListening.nc">
          <short>&#10;</short>
          <long>&#10; @return the local node's sleep interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getRxDutyCycle" ref="0x40497be8" loc="112:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/LowPowerListening.nc">
        <documentation loc="108:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/LowPowerListening.nc">
          <short>&#10;</short>
          <long>&#10; @return the destination node's duty cycle configured in this message&#10;     in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40497a08" loc="112:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sleepIntervalToDutyCycle" ref="0x404968b8" loc="128:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/LowPowerListening.nc">
        <documentation loc="122:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10; in units of [percentage*100]&#10;</short>
          <long>&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10; in units of [percentage*100]&#10; @param sleepInterval The sleep interval in units of [ms]&#10; @return The duty cycle in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepInterval" ref="0x40496620" loc="128:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalDutyCycle" ref="0x4048b198" loc="81:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/LowPowerListening.nc">
        <documentation loc="78:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/LowPowerListening.nc">
          <short>&#10;</short>
          <long>&#10; @return this node's radio duty cycle rate, in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setRxSleepInterval" ref="0x4048b958" loc="90:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/LowPowerListening.nc">
        <documentation loc="84:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx sleep interval.&#10;</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx sleep interval.&#10; @param msg Pointer to the message that will be sent&#10; @param sleepInterval The receiving node's sleep interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4048b4e8" loc="90:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="sleepIntervalMs" ref="0x4048b680" loc="90:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalDutyCycle" ref="0x4048cdf0" loc="76:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/LowPowerListening.nc">
        <documentation loc="60:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this node's radio duty cycle rate, in units of [percentage*100].&#10;</short>
          <long>&#10; Set this node's radio duty cycle rate, in units of [percentage*100].&#10; For example, to get a 0.05% duty cycle,&#10; &#60;code>&#10;   call LowPowerListening.setDutyCycle(5);&#10; &#60;/code>&#10;&#10; For a 100% duty cycle (always on),&#10; &#60;code>&#10;   call LowPowerListening.setDutyCycle(10000);&#10; &#60;/code>&#10;&#10; This is the equivalent of setting the local sleep interval explicitly.&#10; &#10; @param dutyCycle The duty cycle percentage, in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0x4048ca98" loc="76:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRxDutyCycle" ref="0x404976b0" loc="106:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/LowPowerListening.nc">
        <documentation loc="97:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx duty cycle rate.&#10;</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx duty cycle rate.&#10; Duty cycle is in units of [percentage*100], i.e. 0.25% duty cycle = 25.&#10; &#10; @param msg Pointer to the message that will be sent&#10; @param dutyCycle The duty cycle of the receiving mote, in units of &#10;     [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404971d8" loc="106:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dutyCycle" ref="0x40497370" loc="106:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dutyCycleToSleepInterval" ref="0x404962d0" loc="120:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/LowPowerListening.nc">
        <documentation loc="114:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Convert a duty cycle, in units of [percentage*100], to&#10; the sleep interval of the mote in milliseconds&#10;</short>
          <long>&#10; Convert a duty cycle, in units of [percentage*100], to&#10; the sleep interval of the mote in milliseconds&#10; @param dutyCycle The duty cycle in units of [percentage*100]&#10; @return The equivalent sleep interval, in units of [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0x40496010" loc="120:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRxSleepInterval" ref="0x4048be78" loc="95:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/LowPowerListening.nc">
        <documentation loc="92:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/LowPowerListening.nc">
          <short>&#10;</short>
          <long>&#10; @return the destination node's sleep interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4048bcb8" loc="95:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalSleepInterval" ref="0x4048c410" loc="53:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/LowPowerListening.nc">
        <documentation loc="43:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio sleep interval, in milliseconds.&#10;</short>
          <long>&#10; Set this this node's radio sleep interval, in milliseconds.&#10; Once every interval, the node will sleep and perform an Rx check &#10; on the radio.  Setting the sleep interval to 0 will keep the radio&#10; always on.&#10;&#10; This is the equivalent of setting the local duty cycle rate.&#10;&#10; @param sleepIntervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepIntervalMs" ref="0x4048c108" loc="53:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/PacketLink.nc">
      <documentation loc="37:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/PacketLink.nc">
        <short>&#10;</short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x40493a38" loc="63:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/PacketLink.nc">
        <documentation loc="60:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/PacketLink.nc">
          <short>&#10;</short>
          <long>&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40493880" loc="63:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x40494900" loc="46:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10;</short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param msg&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40494500" loc="46:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x40494698" loc="46:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x40493528" loc="58:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/PacketLink.nc">
          <short> &#10;</short>
          <long> &#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40493370" loc="58:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x40493018" loc="53:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10;</short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40494c48" loc="53:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x40494de0" loc="53:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x40493f28" loc="68:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/PacketLink.nc">
        <documentation loc="65:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/PacketLink.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40493d88" loc="68:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="44:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Send.nc">
      <documentation loc="44:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Send.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.5 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x404a59d0" loc="64:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Send.nc">
        <documentation loc="46:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   msg     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404a5338" loc="64:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404a54c0" loc="64:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x404a2518" loc="114:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Send.nc">
        <documentation loc="104:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.&#10;</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; The length of this region is maxPayloadLength(). This command&#10; behaves similarly to &#60;tt>Packet.getPayload&#60;/tt> (minus the&#10; length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param   msg    the packet&#10; @return         a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404a21f8" loc="114:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x404a3e98" loc="101:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="cancel" ref="0x404a3250" loc="78:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Send.nc">
        <documentation loc="66:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   msg    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404a5d18" loc="78:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x404a3a48" loc="89:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Send.nc">
        <documentation loc="80:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param msg   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404a3598" loc="89:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x404a3720" loc="89:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="44:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="44:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2007/07/06 18:09:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x404a84f0" loc="90:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="84:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10;</short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x404a80b8" loc="90:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x404a8248" loc="90:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x404a9d68" loc="82:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="79:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x404a99f8" loc="77:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10;</short>
          <long>&#10; @param on TRUE to turn address recognition on, FALSE to turn it off&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x404a9840" loc="77:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x404acd20" loc="53:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x404acbb8" loc="53:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x404aad08" loc="65:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x404aaba0" loc="65:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x404aa520" loc="59:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x404aa3b8" loc="59:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x404a8be8" loc="101:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="98:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x404a9518" loc="71:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x404a93b0" loc="71:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x404a8888" loc="96:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="92:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x404aa878" loc="64:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="61:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sync" ref="0x404ac898" loc="52:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="46:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x404aa098" loc="58:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="55:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x404a9088" loc="70:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="67:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.&#10;</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getHeader" ref="0x404a0b78" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10;</short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:11" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x40319da0"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x40320720"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404a09a8" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x4049f108" loc="47:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="44:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10;</short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:9" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x40320bf0"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x4031f560"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404a0ef8" loc="47:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="36:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="36:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x404b2378" loc="48:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="45:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10;</short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403399f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="changed" ref="0x404b2a20" loc="58:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="55:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.&#10;</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x404b26d0" loc="53:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="50:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10;</short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x40339820"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x404b2010" loc="43:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="38:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10;</short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x40339820"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403399f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x404a1c10" loc="43:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x40339820"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x404a1da0" loc="43:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403399f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="42:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x404ef250" loc="51:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10;</short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x404f0e70" loc="51:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x404ef010" loc="51:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x404efb70" loc="65:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.&#10;&#10;</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="modify" ref="0x404eebe0" loc="84:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x404ee5e0" loc="84:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x404ee788" loc="84:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404ee910" loc="84:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x404ee2a0" loc="73:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10;</short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x404efed8" loc="73:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x404ee088" loc="73:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x404ef7c8" loc="58:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10;</short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x404ef590" loc="58:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="29:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Random.nc">
      <documentation loc="29:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10;</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x404f8058" loc="41:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Random.nc">
        <documentation loc="37:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number. &#10;</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="rand32" ref="0x404e9c88" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Random.nc">
        <documentation loc="31:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number. &#10;</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40031818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="65:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/StdControl.nc">
      <documentation loc="65:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x404f2d80" loc="74:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/StdControl.nc">
        <documentation loc="67:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.&#10;&#10;</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x404f1210" loc="84:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/StdControl.nc">
        <documentation loc="76:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10;</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="42:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x404e7238" loc="71:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x404e5090" loc="97:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.&#10;&#10;</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x404e7cb0" loc="90:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.&#10;&#10;</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x404e8730" loc="51:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x404e8e18" loc="63:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.&#10;&#10;</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x404e7590" loc="76:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x404e7930" loc="83:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.&#10;&#10;</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x404e8a80" loc="56:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="67:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Resource.nc">
      <documentation loc="67:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources. </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2007/04/15 20:05:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x404ea630" loc="110:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Resource.nc">
        <documentation loc="94:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.  &#10;&#10;</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request 	  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x404ebca0" loc="87:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Resource.nc">
        <documentation loc="80:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="request" ref="0x404eb870" loc="78:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Resource.nc">
        <documentation loc="68:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="granted" ref="0x404ea010" loc="92:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Resource.nc">
        <documentation loc="89:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x404eaa38" loc="118:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Resource.nc">
        <documentation loc="112:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/State.nc">
      <documentation loc="38:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10;</short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x404f4ed0" loc="71:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/State.nc">
        <documentation loc="68:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x404f4348" loc="56:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/State.nc">
        <documentation loc="53:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isState" ref="0x404f4b90" loc="66:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/State.nc">
        <documentation loc="63:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/State.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x404f49e0" loc="66:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x404f46a0" loc="61:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/State.nc">
        <documentation loc="58:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/State.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="requestState" ref="0x404f5a58" loc="45:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/State.nc">
        <documentation loc="40:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10;</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x404f5818" loc="45:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x404f4010" loc="51:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/State.nc">
        <documentation loc="47:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x404f5da0" loc="51:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Read.nc">
      <documentation loc="49:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x40521b00" loc="49:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40521b00"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x40530010" loc="55:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.&#10; &#10;</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="readDone" ref="0x405306e0" loc="63:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().&#10;&#10;</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40521b00"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40530330" loc="63:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x405304b8" loc="63:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40521b00"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="39:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="39:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x40549770" loc="47:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="41:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.&#10;&#10;</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x40319c10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40549550" loc="47:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40549cd8" loc="55:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.&#10; &#10;</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x40319c10"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40549ac0" loc="55:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Alarm.nc">
      <documentation loc="45:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10;</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40537e08" loc="45:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40537e08"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40537f20" loc="45:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40537f20"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40534d20" loc="98:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.&#10;</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40537f20"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x40536ce8" loc="67:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="startAt" ref="0x405349a8" loc="92:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40537f20"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40537f20"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40534480" loc="92:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40537f20"/></type-var>
          </variable>
          <variable name="dt" ref="0x40534610" loc="92:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40537f20"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40534140" loc="77:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x40533170" loc="105:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10;</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40537f20"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="start" ref="0x405365f8" loc="55:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40537f20"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40536360" loc="55:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40537f20"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405369b0" loc="62:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="36:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="36:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.&#10;</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x40544548" loc="45:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="38:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x40319c10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="41:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x4053be30" loc="52:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x40319c10"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x4053b868" loc="52:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x4053ba10" loc="52:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x4053bb98" loc="52:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x4053a750" loc="63:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x40319c10"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x4053a188" loc="63:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x4053a330" loc="63:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x4053a4b8" loc="63:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="32:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="32:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/GpioInterrupt.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.4 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x4053d4b0" loc="57:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="52:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.&#10;&#10;</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disable" ref="0x4053d108" loc="50:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10;</short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x4053ed10" loc="43:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x4053e9e8" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="34:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="33:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="33:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10;</short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x405a0e48" loc="49:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="48:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short> Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x402e5d38"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x402e4010"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x405a1df0" loc="41:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x402e0260"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x402e0490"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x405a1c88" loc="41:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x402e0260"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x402e0490"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x405a0638" loc="45:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short> Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x402e6c20"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x402e6e50"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x405a2de0" loc="36:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="35:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short> Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x402dd598"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x402dd7c8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x405a0af0" loc="46:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x402e6c20"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x402e6e50"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x405a0988" loc="46:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x402e6c20"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x402e6e50"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x405b1320" loc="50:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x402e5d38"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x402e4010"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x405b11b8" loc="50:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x402e5d38"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x402e4010"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x405a1470" loc="38:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x402df2b8"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x402df4e8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x405a1140" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x402e0260"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x402e0490"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x405a1930" loc="40:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x402dd598"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x402dd7c8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x405a17c8" loc="40:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x402dd598"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x402dd7c8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x405a02e0" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x402df2b8"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x402df4e8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x405a0178" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x402df2b8"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x402df4e8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="31:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="31:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.&#10;</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x405a4e58" loc="31:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405a4e58"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x405ac350" loc="79:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="75:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.&#10;</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x405ac168" loc="79:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x405ada80" loc="67:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10;</short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x405ae2e8" loc="38:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="34:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.&#10;</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405a4e58"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="captured" ref="0x405aed38" loc="51:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="47:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.&#10;</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405a4e58"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x405aeb58" loc="51:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405a4e58"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x405ad088" loc="55:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="54:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0x405ade08" loc="73:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10;</short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x405ae810" loc="44:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="40:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.&#10;</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405a4e58"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x405ae628" loc="44:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405a4e58"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x405ad3b8" loc="58:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="57:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x405ad6e8" loc="61:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="60:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="32:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.&#10;</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x405abdd8" loc="32:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405abdd8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x405b9828" loc="65:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10;</short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x405baac0" loc="49:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x405ba270" loc="39:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.&#10;</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405abdd8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="reset" ref="0x405badf8" loc="53:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0x405b9bb0" loc="71:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10;</short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x405ba790" loc="45:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.&#10;</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405abdd8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x405ba5b0" loc="45:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405abdd8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x405b9160" loc="56:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x405b9490" loc="59:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="46:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.  &#10;</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40598d50" loc="46:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40598d50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x405a8e40" loc="89:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="test" ref="0x405a8788" loc="78:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10;</short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="get" ref="0x405951c8" loc="52:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.&#10;</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40598d50"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setScale" ref="0x405a6370" loc="95:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.&#10;</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x405a6198" loc="95:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x405a6708" loc="101:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.&#10;</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="reset" ref="0x40595d48" loc="66:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40595a10" loc="61:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOn" ref="0x405a8b18" loc="84:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10;</short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="set" ref="0x405956c8" loc="58:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.&#10;</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40598d50"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40595508" loc="58:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40598d50"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x405a80b8" loc="69:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x405a83e8" loc="72:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts. </short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="33:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="33:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10;</short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x405c1430" loc="36:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="35:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short> Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x402d33c0"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x402d35f0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x405c04d0" loc="44:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="43:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short> Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x402da250"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x402da480"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x405c1c40" loc="40:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="39:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short> Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x402d6f60"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x402d51a8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x405c0178" loc="41:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x402d6f60"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x402d51a8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x405c0010" loc="41:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x402d6f60"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x402d51a8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x405c0988" loc="45:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x402da250"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x402da480"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x405c0820" loc="45:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x402da250"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x402da480"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x405c18e8" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x402d33c0"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x402d35f0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x405c1780" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x402d33c0"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x402d35f0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="15:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10;</short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x405cd760" loc="38:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10;</short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x405cdb58" loc="44:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10;</short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x405cd368" loc="32:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x405cb010" loc="50:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10;</short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x405bcad8" loc="21:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10;</short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x402d2cc0"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x402d2ef0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x405cd020" loc="27:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10;</short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x402d2cc0"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x402d2ef0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x405bce18" loc="27:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x402d2cc0"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x402d2ef0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Counter.nc">
      <documentation loc="46:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10;</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40684eb8" loc="46:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40684eb8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40683010" loc="46:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40683010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x406834e0" loc="53:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40683010"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x40683c40" loc="65:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.&#10;</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x40683900" loc="60:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits. </short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40681028" loc="71:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed. </short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/GpioCapture.nc">
      <documentation loc="35:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/GpioCapture.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.5 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x406dd170" loc="43:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disable" ref="0x406dd9d8" loc="55:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/GpioCapture.nc">
        <documentation loc="52:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.&#10;</short>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="captured" ref="0x406dd6a8" loc="50:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/GpioCapture.nc">
        <documentation loc="45:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.&#10;&#10;</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x406dd4b8" loc="50:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x406c8e30" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/GpioCapture.nc">
        <documentation loc="37:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.&#10;&#10;</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="30:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="30:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10;</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x406e1d08" loc="45:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="42:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="fired" ref="0x406dfa10" loc="64:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="61:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="disable" ref="0x406e19b0" loc="40:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="edge" ref="0x406df6d0" loc="59:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="54:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.&#10;</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x406df458" loc="59:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x406e1660" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="32:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getValue" ref="0x406df118" loc="52:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="47:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10;</short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="36:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="36:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10;</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x406f9010" loc="41:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="38:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="17:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip. </short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x40737d18" loc="24:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released. </short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x407360e8" loc="31:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus. </short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x40736510" loc="39:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10;</short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="40:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10;</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x407452e0" loc="62:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40746e10" loc="62:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40745010" loc="62:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x40744c38" loc="91:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.&#10;&#10;</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x407446b8" loc="91:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40744840" loc="91:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x407449c8" loc="91:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40744358" loc="82:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x40319c10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40745f18" loc="82:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x407440b8" loc="82:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x40746aa8" loc="51:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x40319c10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40746678" loc="51:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40746800" loc="51:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40745bb0" loc="71:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.&#10;&#10;</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40745640" loc="71:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x407457c8" loc="71:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40745950" loc="71:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="43:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/SpiPacket.nc">
      <documentation loc="43:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus. </short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.4 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x407492b0" loc="59:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/SpiPacket.nc">
        <documentation loc="45:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.&#10;&#10;</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param txBuf A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param rxBuf A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x4074aab8" loc="59:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x4074ac60" loc="59:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4074adf0" loc="59:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40749e10" loc="71:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/SpiPacket.nc">
        <documentation loc="61:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.&#10;&#10;</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param txBuf The buffer used for transmission&#10; @param rxBuf The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40749610" loc="71:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x407497b8" loc="71:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40749948" loc="71:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40749ae0" loc="72:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="27:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/SpiByte.nc">
      <documentation loc="27:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/SpiByte.nc">
        <short>&#10;</short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x4074b408" loc="34:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/SpiByte.nc">
        <documentation loc="29:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10;</short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x4074b1d0" loc="34:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="61:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x407b8028" loc="69:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="68:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x407b4920" loc="109:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x407b50f0" loc="100:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x407b4dd8" loc="111:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x407b4c70" loc="111:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x4079fcc8" loc="66:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="65:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x407b5d70" loc="105:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x407b5c08" loc="105:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x407b65e8" loc="96:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x407b6480" loc="96:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x407b86d8" loc="80:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="76:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10;</short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x407b17e8" loc="125:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x407b1680" loc="125:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x407b6910" loc="97:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClock" ref="0x407b25e8" loc="114:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x407b2480" loc="114:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x407b2c30" loc="120:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x407b45f8" loc="108:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x407b4490" loc="108:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x407b1338" loc="124:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x407b55a0" loc="102:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x407b5438" loc="102:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x407b8be0" loc="86:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10;</short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x407b8a10" loc="86:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x407b6db8" loc="99:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x407b6c50" loc="99:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x407b4140" loc="106:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x407b2140" loc="112:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="getClock" ref="0x407b2908" loc="115:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x407b1010" loc="122:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x407b58c0" loc="103:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sleep" ref="0x407b8368" loc="72:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="71:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus. </short>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x407b6140" loc="92:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete. &#10;</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x407b8f20" loc="92:/opt/tinyos2/tinyos-2.x-src/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="72:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="72:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter. </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x407adde8" loc="80:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="73:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.&#10;&#10;</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="userId" ref="0x407ac228" loc="88:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="82:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.&#10; &#10;</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="65:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="65:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface. </short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x407d3ef8" loc="74:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="67:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.&#10;&#10;</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="stop" ref="0x407ea3a8" loc="84:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="76:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10;</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="36:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ResourceRequested.nc">
      <documentation loc="36:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10;</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.4 $&#10; @date $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x4080e4c8" loc="43:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ResourceRequested.nc">
        <documentation loc="37:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x4080e9a0" loc="51:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ResourceRequested.nc">
        <documentation loc="45:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="44:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="44:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it. </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x4080bce8" loc="55:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="51:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.&#10;</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="configure" ref="0x4080b910" loc="49:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="45:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.&#10;</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="35:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ResourceQueue.nc">
      <documentation loc="35:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x40820ae8" loc="69:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ResourceQueue.nc">
        <documentation loc="62:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a cleint id&#10;&#10;</short>
          <long>&#10; Enqueue a cleint id&#10;&#10; @param cleintId - the cleint id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x408099d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x408208b0" loc="69:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x408099d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x40821ab0" loc="43:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ResourceQueue.nc">
        <documentation loc="37:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.&#10;&#10;</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x40820150" loc="52:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ResourceQueue.nc">
        <documentation loc="45:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.&#10;&#10;</short>
          <long>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x408099d0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40821e08" loc="52:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x408099d0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x40820560" loc="60:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ResourceQueue.nc">
        <documentation loc="54:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the cleint id of the next resource in the queue. &#10;</short>
          <long>&#10; Retreive the cleint id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The cleint id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x408099d0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="37:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10;</short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x4089e2b8" loc="43:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10;</short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x40289b98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="RadioTimeStamping" loc="33:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/RadioTimeStamping.nc">
      <documentation loc="33:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/RadioTimeStamping.nc">
        <short>&#10; Interface for receiving time stamp information from the radio.&#10;</short>
        <long>&#10; Interface for receiving time stamp information from the radio.&#10; This information is also embedded in packet metadata.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   October 10 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="transmittedSFD" ref="0x408a1538" loc="39:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/RadioTimeStamping.nc">
        <documentation loc="35:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/RadioTimeStamping.nc">
          <short> &#10; Provides the time at which start of frame delimiter has been&#10; transmitted: units are in terms of a 32kHz clock.&#10;</short>
        </documentation>
        <interfacedef-ref qname="RadioTimeStamping"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x408a11a0" loc="39:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/RadioTimeStamping.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
            </type-int>
          </variable>
          <variable name="p_msg" ref="0x408a1350" loc="39:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/RadioTimeStamping.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedSFD" ref="0x408a1bf0" loc="50:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/RadioTimeStamping.nc">
        <documentation loc="41:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/RadioTimeStamping.nc">
          <short> &#10; Provides the time at which start of frame delimiter was received:&#10; units are in terms of a 32kHz clock. </short>
          <long> &#10; Provides the time at which start of frame delimiter was received:&#10; units are in terms of a 32kHz clock.  &#60;b>NOTE&#60;/b> that receiving&#10; a receivedSFD() event does NOT mean that a packet will be&#10; received; the transmission may stop, become corrupted, or be&#10; filtered by the physical or link layers.  The number of rxSFD&#10; events will always be great than or equal to the number of&#10; Receive message events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioTimeStamping"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x408a1880" loc="50:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/RadioTimeStamping.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="40:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="40:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10;</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x408b9068" loc="61:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="55:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.&#10;&#10;</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x408bbc68" loc="61:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x408bbe18" loc="61:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:68" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4033add8"/>
                <typename><typedef-ref name="message_t" ref="0x40341740"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x408bb930" loc="53:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="49:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
      <function command="" provided="0" name="sfd" ref="0x408bb570" loc="47:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="42:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.&#10;&#10;</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x408bb370" loc="47:/opt/tinyos2/tinyos-2.x-src/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x400312a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ParameterInit.nc">
      <documentation loc="42:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ParameterInit.nc">
        <short>&#10;</short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.5 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x40962180" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40962180"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x40962880" loc="53:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ParameterInit.nc">
        <documentation loc="44:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40962180"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x40962580" loc="53:/opt/tinyos2/tinyos-2.x-src/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40962180"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/LocalTime.nc">
      <documentation loc="42:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x409d2a70" loc="42:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x409d2a70"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x409d1010" loc="50:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/opt/tinyos2/tinyos-2.x-src/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40031818"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
      </function>
    </interfacedef>
    <interfacedef qname="OmacI" loc="24:./AES/Interfaces/OmacI.nc">
      <documentation loc="24:./AES/Interfaces/OmacI.nc">
        <short>&#10; Description          :  &#10;                         &#10;&#10;&#10;</short>
      </documentation>
      <function command="" provided="0" name="truncateTag" ref="0x40acce98" loc="27:./AES/Interfaces/OmacI.nc">
        <interfacedef-ref qname="OmacI"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mac" ref="0x40acca08" loc="27:./AES/Interfaces/OmacI.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="payloadlenB" ref="0x40accb98" loc="27:./AES/Interfaces/OmacI.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </variable>
          <variable name="tBytes" ref="0x40accd20" loc="27:./AES/Interfaces/OmacI.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="integrityCheck" ref="0x40acb698" loc="28:./AES/Interfaces/OmacI.nc">
        <interfacedef-ref qname="OmacI"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mac" ref="0x40acb1f0" loc="28:./AES/Interfaces/OmacI.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="buff" ref="0x40acb398" loc="28:./AES/Interfaces/OmacI.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="tBytes" ref="0x40acb520" loc="28:./AES/Interfaces/OmacI.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cbcmacGenerate" ref="0x40acc6c0" loc="26:./AES/Interfaces/OmacI.nc">
        <interfacedef-ref qname="OmacI"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="auth_this_msg" ref="0x40acc230" loc="26:./AES/Interfaces/OmacI.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="payloadLenB" ref="0x40acc3c0" loc="26:./AES/Interfaces/OmacI.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </variable>
          <variable name="blksize" ref="0x40acc548" loc="26:./AES/Interfaces/OmacI.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CcmI" loc="8:./AES/Interfaces/CcmI.nc">
      <function command="" provided="0" name="AESccm_auth" ref="0x40ac7e08" loc="10:./AES/Interfaces/CcmI.nc">
        <interfacedef-ref qname="CcmI"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="auth_this_msg" ref="0x40ac7970" loc="10:./AES/Interfaces/CcmI.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="payloadLenB" ref="0x40ac7b00" loc="10:./AES/Interfaces/CcmI.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </variable>
          <variable name="KeySizeB" ref="0x40ac7c90" loc="10:./AES/Interfaces/CcmI.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="truncateTag" ref="0x40ac6938" loc="12:./AES/Interfaces/CcmI.nc">
        <interfacedef-ref qname="CcmI"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mac" ref="0x40ac6640" loc="12:./AES/Interfaces/CcmI.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="tBytes" ref="0x40ac67c8" loc="12:./AES/Interfaces/CcmI.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="integrityCheck" ref="0x40ac5188" loc="13:./AES/Interfaces/CcmI.nc">
        <interfacedef-ref qname="CcmI"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mac" ref="0x40ac6c80" loc="13:./AES/Interfaces/CcmI.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="buff" ref="0x40ac6e28" loc="13:./AES/Interfaces/CcmI.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="tBytes" ref="0x40ac5010" loc="13:./AES/Interfaces/CcmI.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="AESccm_nonce" ref="0x40ac62f8" loc="11:./AES/Interfaces/CcmI.nc">
        <interfacedef-ref qname="CcmI"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="getNonce" ref="0x40ac6190" loc="11:./AES/Interfaces/CcmI.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="AESccm_encrypt" ref="0x40ac5980" loc="14:./AES/Interfaces/CcmI.nc">
        <interfacedef-ref qname="CcmI"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="in" ref="0x40ac54d0" loc="14:./AES/Interfaces/CcmI.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="payloadLenB" ref="0x40ac5660" loc="14:./AES/Interfaces/CcmI.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </variable>
          <variable name="nonce" ref="0x40ac5808" loc="14:./AES/Interfaces/CcmI.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="AESccm_decrypt" ref="0x40ac31a8" loc="15:./AES/Interfaces/CcmI.nc">
        <interfacedef-ref qname="CcmI"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="in" ref="0x40ac5cc8" loc="15:./AES/Interfaces/CcmI.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="payloadLenB" ref="0x40ac5e58" loc="15:./AES/Interfaces/CcmI.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </variable>
          <variable name="nonce" ref="0x40ac3030" loc="15:./AES/Interfaces/CcmI.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtrI" loc="8:./AES/Interfaces/CtrI.nc">
      <function command="" provided="0" name="AESctr_decrypt" ref="0x40ac86d8" loc="11:./AES/Interfaces/CtrI.nc">
        <interfacedef-ref qname="CtrI"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="in" ref="0x40ac8228" loc="11:./AES/Interfaces/CtrI.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="payloadLenB" ref="0x40ac83b8" loc="11:./AES/Interfaces/CtrI.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </variable>
          <variable name="nonce" ref="0x40ac8560" loc="11:./AES/Interfaces/CtrI.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="AESctr_encrypt" ref="0x40acaec8" loc="10:./AES/Interfaces/CtrI.nc">
        <interfacedef-ref qname="CtrI"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40293010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="in" ref="0x40acaa18" loc="10:./AES/Interfaces/CtrI.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="payloadLenB" ref="0x40acaba8" loc="10:./AES/Interfaces/CtrI.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
            </type-int>
          </variable>
          <variable name="nonce" ref="0x40acad50" loc="10:./AES/Interfaces/CtrI.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4002fcd8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
